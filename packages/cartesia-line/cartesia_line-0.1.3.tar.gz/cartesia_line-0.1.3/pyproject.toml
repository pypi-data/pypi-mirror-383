[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cartesia-line"
version = "0.1.3"
description = "Cartesia Voice Agents SDK"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Cartesia AI, Inc.", email = "support@cartesia.ai"}
]
license = {text = "Apache 2.0"}
keywords = ["voice", "agents", "ai", "cartesia"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
urls = {Repository = "https://github.com/cartesia-ai/line", Documentation = "https://docs.cartesia.ai/line/", Homepage = "https://cartesia.ai/agents"}


dependencies = [
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "fastapi>=0.115.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0,<3",
    "uvicorn>=0.35.0,<1",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-xdist==3.8.0",
    "pytest-repeat==0.9.4",
    "pre-commit",
    "ruff==0.12.8",
    "google-genai>=1.26.0,<2",
]


gemini = [
    "google-genai>=1.26.0,<2; python_version>='3.9'",
    "aiohttp>=3.12.0",
]
openai = [
    "openai>=1.70.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["line*"]

[tool.ruff]
line-length = 110
# We want to format the code with respect to Python 3.10 syntax.
# even though we support 3.9+.
target-version = 'py39'

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "C4"]
# E501: line too long (for long prompt strings)
per-file-ignores = { "examples/**/*.py" = ["E501"] }

[tool.ruff.lint.isort]
known-first-party = ["line"]
force-sort-within-sections = true
split-on-trailing-comma = true

# type checking for python 3.9 syntax.
# We only want to use this type checking for the main codebase.
# We don't want to use it for the examples.
[tool.pyright]
include = ["line/", "tests/"]
exclude = ["examples/"]
pythonVersion = "3.9"
typeCheckingMode = "off"
reportIndexIssue = true
reportGeneralTypeIssues = true
reportMissingImports = false
reportMissingModuleSource = false

# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import List
from typing_extensions import Literal

import httpx

from ..types import quote_list_params, quote_retrieve_params
from .._types import Body, Omit, Query, Headers, NotGiven, omit, not_given
from .._utils import maybe_transform, async_maybe_transform
from .._compat import cached_property
from .._resource import SyncAPIResource, AsyncAPIResource
from .._response import (
    to_raw_response_wrapper,
    to_streamed_response_wrapper,
    async_to_raw_response_wrapper,
    async_to_streamed_response_wrapper,
)
from .._base_client import make_request_options
from ..types.quote_list_response import QuoteListResponse
from ..types.quote_retrieve_response import QuoteRetrieveResponse

__all__ = ["QuoteResource", "AsyncQuoteResource"]


class QuoteResource(SyncAPIResource):
    @cached_property
    def with_raw_response(self) -> QuoteResourceWithRawResponse:
        """
        This property can be used as a prefix for any HTTP method call to return
        the raw response object instead of the parsed content.

        For more information, see https://www.github.com/brapi-dev/brapi-python#accessing-raw-response-data-eg-headers
        """
        return QuoteResourceWithRawResponse(self)

    @cached_property
    def with_streaming_response(self) -> QuoteResourceWithStreamingResponse:
        """
        An alternative to `.with_raw_response` that doesn't eagerly read the response body.

        For more information, see https://www.github.com/brapi-dev/brapi-python#with_streaming_response
        """
        return QuoteResourceWithStreamingResponse(self)

    def retrieve(
        self,
        tickers: str,
        *,
        token: str | Omit = omit,
        dividends: bool | Omit = omit,
        fundamental: bool | Omit = omit,
        interval: Literal["1m", "2m", "5m", "15m", "30m", "60m", "90m", "1h", "1d", "5d", "1wk", "1mo", "3mo"]
        | Omit = omit,
        modules: List[
            Literal[
                "summaryProfile",
                "balanceSheetHistory",
                "defaultKeyStatistics",
                "balanceSheetHistoryQuarterly",
                "incomeStatementHistory",
                "incomeStatementHistoryQuarterly",
                "financialData",
                "financialDataHistory",
                "financialDataHistoryQuarterly",
                "defaultKeyStatisticsHistory",
                "defaultKeyStatisticsHistoryQuarterly",
                "valueAddedHistory",
                "valueAddedHistoryQuarterly",
                "cashflowHistory",
                "cashflowHistoryQuarterly",
            ]
        ]
        | Omit = omit,
        range: Literal["1d", "5d", "1mo", "3mo", "6mo", "1y", "2y", "5y", "10y", "ytd", "max"] | Omit = omit,
        # Use the following arguments if you need to pass additional parameters to the API that aren't available via kwargs.
        # The extra values given here take precedence over values defined on the client or passed to this method.
        extra_headers: Headers | None = None,
        extra_query: Query | None = None,
        extra_body: Body | None = None,
        timeout: float | httpx.Timeout | None | NotGiven = not_given,
    ) -> QuoteRetrieveResponse:
        """
        Este endpoint √© a principal forma de obter informa√ß√µes detalhadas sobre um ou
        mais ativos financeiros (a√ß√µes, FIIs, ETFs, BDRs, √≠ndices) listados na B3,
        identificados pelos seus respectivos **tickers**.

        ### Funcionalidades Principais:

        - **Cota√ß√£o Atual:** Retorna o pre√ßo mais recente, varia√ß√£o di√°ria, m√°ximas,
          m√≠nimas, volume, etc.
        - **Dados Hist√≥ricos:** Permite solicitar s√©ries hist√≥ricas de pre√ßos usando os
          par√¢metros `range` e `interval`.
        - **Dados Fundamentalistas:** Opcionalmente, inclui dados fundamentalistas
          b√°sicos (P/L, LPA) com o par√¢metro `fundamental=true`.
        - **Dividendos:** Opcionalmente, inclui hist√≥rico de dividendos e JCP com
          `dividends=true`.
        - **M√≥dulos Adicionais:** Permite requisitar conjuntos de dados financeiros mais
          aprofundados atrav√©s do par√¢metro `modules` (veja detalhes abaixo).

        ### üß™ A√ß√µes de Teste (Sem Autentica√ß√£o):

        Para facilitar o desenvolvimento e teste, as seguintes **4 a√ß√µes t√™m acesso
        irrestrito** e **n√£o requerem autentica√ß√£o**:

        - **PETR4** (Petrobras PN)
        - **MGLU3** (Magazine Luiza ON)
        - **VALE3** (Vale ON)
        - **ITUB4** (Ita√∫ Unibanco PN)

        **Importante:** Voc√™ pode consultar essas a√ß√µes sem token e com acesso a todos
        os recursos (hist√≥ricos, m√≥dulos, dividendos). Por√©m, se misturar essas a√ß√µes
        com outras na mesma requisi√ß√£o, a autentica√ß√£o ser√° obrigat√≥ria.

        ### Autentica√ß√£o:

        Para **outras a√ß√µes** (al√©m das 4 de teste), √© **obrigat√≥rio** fornecer um token
        de autentica√ß√£o v√°lido, seja via query parameter `token` ou via header
        `Authorization: Bearer seu_token`.

        ### Exemplos de Requisi√ß√£o:

        **1. Cota√ß√£o simples de PETR4 e VALE3 (a√ß√µes de teste - sem token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/PETR4,VALE3"
        ```

        **2. Cota√ß√£o de MGLU3 com dados hist√≥ricos do √∫ltimo m√™s (a√ß√£o de teste - sem
        token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/MGLU3?range=1mo&interval=1d"
        ```

        **3. Cota√ß√£o de ITUB4 incluindo dividendos e dados fundamentalistas (a√ß√£o de
        teste - sem token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/ITUB4?fundamental=true&dividends=true"
        ```

        **4. Cota√ß√£o de WEGE3 com Resumo da Empresa e Balan√ßo Patrimonial Anual (via
        m√≥dulos - requer token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/WEGE3?modules=summaryProfile,balanceSheetHistory&token=SEU_TOKEN"
        ```

        **5. Exemplo de requisi√ß√£o mista (requer token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/PETR4,BBAS3?token=SEU_TOKEN"
        ```

        _Nota: Como BBAS3 n√£o √© uma a√ß√£o de teste, toda a requisi√ß√£o requer
        autentica√ß√£o, mesmo contendo PETR4._

        ### Par√¢metro `modules` (Detalhado):

        O par√¢metro `modules` √© extremamente poderoso para enriquecer a resposta com
        dados financeiros detalhados. Voc√™ pode solicitar um ou mais m√≥dulos, separados
        por v√≠rgula.

        **M√≥dulos Dispon√≠veis:**

        - `summaryProfile`: Informa√ß√µes cadastrais da empresa (endere√ßo, setor,
          descri√ß√£o do neg√≥cio, website, n√∫mero de funcion√°rios).
        - `balanceSheetHistory`: Hist√≥rico **anual** do Balan√ßo Patrimonial.
        - `balanceSheetHistoryQuarterly`: Hist√≥rico **trimestral** do Balan√ßo
          Patrimonial.
        - `defaultKeyStatistics`: Principais estat√≠sticas da empresa (Valor de Mercado,
          P/L, ROE, Dividend Yield, etc.) - **TTM (Trailing Twelve Months)**.
        - `defaultKeyStatisticsHistory`: Hist√≥rico **anual** das Principais
          Estat√≠sticas.
        - `defaultKeyStatisticsHistoryQuarterly`: Hist√≥rico **trimestral** das
          Principais Estat√≠sticas.
        - `incomeStatementHistory`: Hist√≥rico **anual** da Demonstra√ß√£o do Resultado do
          Exerc√≠cio (DRE).
        - `incomeStatementHistoryQuarterly`: Hist√≥rico **trimestral** da Demonstra√ß√£o do
          Resultado do Exerc√≠cio (DRE).
        - `financialData`: Dados financeiros selecionados (Receita, Lucro Bruto, EBITDA,
          D√≠vida L√≠quida, Fluxo de Caixa Livre, Margens) - **TTM (Trailing Twelve
          Months)**.
        - `financialDataHistory`: Hist√≥rico **anual** dos Dados Financeiros.
        - `financialDataHistoryQuarterly`: Hist√≥rico **trimestral** dos Dados
          Financeiros.
        - `valueAddedHistory`: Hist√≥rico **anual** da Demonstra√ß√£o do Valor Adicionado
          (DVA).
        - `valueAddedHistoryQuarterly`: Hist√≥rico **trimestral** da Demonstra√ß√£o do
          Valor Adicionado (DVA).
        - `cashflowHistory`: Hist√≥rico **anual** da Demonstra√ß√£o do Fluxo de Caixa
          (DFC).
        - `cashflowHistoryQuarterly`: Hist√≥rico **trimestral** da Demonstra√ß√£o do Fluxo
          de Caixa (DFC).

        **Exemplo de Uso do `modules`:**

        Para obter a cota√ß√£o de BBDC4 junto com seu DRE trimestral e Fluxo de Caixa
        anual:

        ```bash
        curl -X GET "https://brapi.dev/api/quote/BBDC4?modules=incomeStatementHistoryQuarterly,cashflowHistory&token=SEU_TOKEN"
        ```

        ### Resposta:

        A resposta √© um objeto JSON contendo a chave `results`, que √© um array. Cada
        elemento do array corresponde a um ticker solicitado e cont√©m os dados da
        cota√ß√£o e os m√≥dulos adicionais requisitados.

        - **Sucesso (200 OK):** Retorna os dados conforme solicitado.
        - **Bad Request (400 Bad Request):** Ocorre se um par√¢metro for inv√°lido (ex:
          `range=invalid`) ou se a formata√ß√£o estiver incorreta.
        - **Unauthorized (401 Unauthorized):** Token inv√°lido ou ausente.
        - **Payment Required (402 Payment Required):** Limite de requisi√ß√µes do plano
          atual excedido.
        - **Not Found (404 Not Found):** Um ou mais tickers solicitados n√£o foram
          encontrados.

        Args:
          token: **Obrigat√≥rio caso n√£o esteja adicionado como header "Authorization".** Seu
              token de autentica√ß√£o pessoal da API Brapi.

              **Formas de Envio:**

              1.  **Query Parameter:** Adicione `?token=SEU_TOKEN` ao final da URL.
              2.  **HTTP Header:** Inclua o header `Authorization: Bearer SEU_TOKEN` na sua
                  requisi√ß√£o.

              Ambos os m√©todos s√£o aceitos, mas pelo menos um deles deve ser utilizado.
              Obtenha seu token em [brapi.dev/dashboard](https://brapi.dev/dashboard).

          dividends: **Opcional.** Booleano (`true` ou `false`). Se `true`, inclui informa√ß√µes sobre
              dividendos e JCP (Juros sobre Capital Pr√≥prio) pagos historicamente pelo ativo
              na chave `dividendsData`.

          fundamental: **Opcional.** Booleano (`true` ou `false`). Se `true`, inclui dados
              fundamentalistas b√°sicos na resposta, como Pre√ßo/Lucro (P/L) e Lucro Por A√ß√£o
              (LPA).

              **Nota:** Para dados fundamentalistas mais completos, utilize o par√¢metro
              `modules`.

          interval: **Opcional.** Define a granularidade (intervalo) dos dados hist√≥ricos de pre√ßo
              (`historicalDataPrice`). Requer que `range` tamb√©m seja especificado.

              **Valores Poss√≠veis:**

              - `1m`, `2m`, `5m`, `15m`, `30m`, `60m`, `90m`, `1h`: Intervalos intraday
                (minutos/horas). **Aten√ß√£o:** Disponibilidade pode variar conforme o `range` e
                o ativo.
              - `1d`: Di√°rio (padr√£o se `range` for especificado e `interval` omitido).
              - `5d`: 5 dias.
              - `1wk`: Semanal.
              - `1mo`: Mensal.
              - `3mo`: Trimestral.

          modules: **Opcional.** Uma lista de m√≥dulos de dados adicionais, separados por v√≠rgula
              (`,`), para incluir na resposta. Permite buscar dados financeiros detalhados.

              **Exemplos:**

              - `modules=summaryProfile` (retorna perfil da empresa)
              - `modules=balanceSheetHistory,incomeStatementHistory` (retorna hist√≥rico anual
                do BP e DRE)

              Veja a descri√ß√£o principal do endpoint para a lista completa de m√≥dulos e seus
              conte√∫dos.

          range: **Opcional.** Define o per√≠odo para os dados hist√≥ricos de pre√ßo
              (`historicalDataPrice`). Se omitido, apenas a cota√ß√£o mais recente √© retornada
              (a menos que `interval` seja usado).

              **Valores Poss√≠veis:**

              - `1d`: √öltimo dia de preg√£o (intraday se `interval` for minutos/horas).
              - `5d`: √öltimos 5 dias.
              - `1mo`: √öltimo m√™s.
              - `3mo`: √öltimos 3 meses.
              - `6mo`: √öltimos 6 meses.
              - `1y`: √öltimo ano.
              - `2y`: √öltimos 2 anos.
              - `5y`: √öltimos 5 anos.
              - `10y`: √öltimos 10 anos.
              - `ytd`: Desde o in√≠cio do ano atual (Year-to-Date).
              - `max`: Todo o per√≠odo hist√≥rico dispon√≠vel.

          extra_headers: Send extra headers

          extra_query: Add additional query parameters to the request

          extra_body: Add additional JSON properties to the request

          timeout: Override the client-level default timeout for this request, in seconds
        """
        if not tickers:
            raise ValueError(f"Expected a non-empty value for `tickers` but received {tickers!r}")
        return self._get(
            f"/api/quote/{tickers}",
            options=make_request_options(
                extra_headers=extra_headers,
                extra_query=extra_query,
                extra_body=extra_body,
                timeout=timeout,
                query=maybe_transform(
                    {
                        "token": token,
                        "dividends": dividends,
                        "fundamental": fundamental,
                        "interval": interval,
                        "modules": modules,
                        "range": range,
                    },
                    quote_retrieve_params.QuoteRetrieveParams,
                ),
            ),
            cast_to=QuoteRetrieveResponse,
        )

    def list(
        self,
        *,
        token: str | Omit = omit,
        limit: int | Omit = omit,
        page: int | Omit = omit,
        search: str | Omit = omit,
        sector: Literal[
            "Retail Trade",
            "Energy Minerals",
            "Health Services",
            "Utilities",
            "Finance",
            "Consumer Services",
            "Consumer Non-Durables",
            "Non-Energy Minerals",
            "Commercial Services",
            "Distribution Services",
            "Transportation",
            "Technology Services",
            "Process Industries",
            "Communications",
            "Producer Manufacturing",
            "Miscellaneous",
            "Electronic Technology",
            "Industrial Services",
            "Health Technology",
            "Consumer Durables",
        ]
        | Omit = omit,
        sort_by: Literal["name", "close", "change", "change_abs", "volume", "market_cap_basic", "sector"] | Omit = omit,
        sort_order: Literal["asc", "desc"] | Omit = omit,
        type: Literal["stock", "fund", "bdr"] | Omit = omit,
        # Use the following arguments if you need to pass additional parameters to the API that aren't available via kwargs.
        # The extra values given here take precedence over values defined on the client or passed to this method.
        extra_headers: Headers | None = None,
        extra_query: Query | None = None,
        extra_body: Body | None = None,
        timeout: float | httpx.Timeout | None | NotGiven = not_given,
    ) -> QuoteListResponse:
        """
        Obtenha uma lista paginada de cota√ß√µes de diversos ativos (a√ß√µes, FIIs, BDRs)
        negociados na B3, com op√ß√µes avan√ßadas de busca, filtragem e ordena√ß√£o.

        ### Funcionalidades:

        - **Busca por Ticker:** Filtre por parte do ticker usando `search`.
        - **Filtragem por Tipo:** Restrinja a lista a `stock`, `fund` (FII) ou `bdr` com
          o par√¢metro `type`.
        - **Filtragem por Setor:** Selecione ativos de um setor espec√≠fico usando
          `sector`.
        - **Ordena√ß√£o:** Ordene os resultados por diversos campos (pre√ßo, varia√ß√£o,
          volume, etc.) usando `sortBy` e `sortOrder`.
        - **Pagina√ß√£o:** Controle o n√∫mero de resultados por p√°gina (`limit`) e a p√°gina
          desejada (`page`).

        ### Autentica√ß√£o:

        Requer token de autentica√ß√£o via `token` (query) ou `Authorization` (header).

        ### Exemplo de Requisi√ß√£o:

        **Listar as 10 a√ß√µes do setor Financeiro com maior volume, ordenadas de forma
        decrescente:**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/list?sector=Finance&sortBy=volume&sortOrder=desc&limit=10&page=1&token=SEU_TOKEN"
        ```

        **Buscar por ativos cujo ticker contenha 'ITUB' e ordenar por nome ascendente:**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/list?search=ITUB&sortBy=name&sortOrder=asc&token=SEU_TOKEN"
        ```

        ### Resposta:

        A resposta cont√©m a lista de `stocks` (e `indexes` relevantes), informa√ß√µes
        sobre os filtros aplicados, detalhes da pagina√ß√£o (`currentPage`, `totalPages`,
        `itemsPerPage`, `totalCount`, `hasNextPage`) e listas de setores
        (`availableSectors`) e tipos (`availableStockTypes`) dispon√≠veis para filtragem.

        Args:
          token: **Obrigat√≥rio caso n√£o esteja adicionado como header "Authorization".** Seu
              token de autentica√ß√£o pessoal da API Brapi.

              **Formas de Envio:**

              1.  **Query Parameter:** Adicione `?token=SEU_TOKEN` ao final da URL.
              2.  **HTTP Header:** Inclua o header `Authorization: Bearer SEU_TOKEN` na sua
                  requisi√ß√£o.

              Ambos os m√©todos s√£o aceitos, mas pelo menos um deles deve ser utilizado.
              Obtenha seu token em [brapi.dev/dashboard](https://brapi.dev/dashboard).

          limit: **Opcional.** N√∫mero m√°ximo de ativos a serem retornados por p√°gina. O valor
              padr√£o pode variar.

          page: **Opcional.** N√∫mero da p√°gina dos resultados a ser retornada, considerando o
              `limit` especificado. Come√ßa em 1.

          search:
              **Opcional.** Termo para buscar ativos por ticker (correspond√™ncia parcial). Ex:
              `PETR` encontrar√° `PETR4`, `PETR3`.

          sector: **Opcional.** Filtra os resultados por setor de atua√ß√£o da empresa. Utilize um
              dos valores retornados em `availableSectors`.

          sort_by: **Opcional.** Campo pelo qual os resultados ser√£o ordenados.

          sort_order: **Opcional.** Dire√ß√£o da ordena√ß√£o: `asc` (ascendente) ou `desc` (descendente).
              Requer que `sortBy` seja especificado.

          type: **Opcional.** Filtra os resultados por tipo de ativo.

          extra_headers: Send extra headers

          extra_query: Add additional query parameters to the request

          extra_body: Add additional JSON properties to the request

          timeout: Override the client-level default timeout for this request, in seconds
        """
        return self._get(
            "/api/quote/list",
            options=make_request_options(
                extra_headers=extra_headers,
                extra_query=extra_query,
                extra_body=extra_body,
                timeout=timeout,
                query=maybe_transform(
                    {
                        "token": token,
                        "limit": limit,
                        "page": page,
                        "search": search,
                        "sector": sector,
                        "sort_by": sort_by,
                        "sort_order": sort_order,
                        "type": type,
                    },
                    quote_list_params.QuoteListParams,
                ),
            ),
            cast_to=QuoteListResponse,
        )


class AsyncQuoteResource(AsyncAPIResource):
    @cached_property
    def with_raw_response(self) -> AsyncQuoteResourceWithRawResponse:
        """
        This property can be used as a prefix for any HTTP method call to return
        the raw response object instead of the parsed content.

        For more information, see https://www.github.com/brapi-dev/brapi-python#accessing-raw-response-data-eg-headers
        """
        return AsyncQuoteResourceWithRawResponse(self)

    @cached_property
    def with_streaming_response(self) -> AsyncQuoteResourceWithStreamingResponse:
        """
        An alternative to `.with_raw_response` that doesn't eagerly read the response body.

        For more information, see https://www.github.com/brapi-dev/brapi-python#with_streaming_response
        """
        return AsyncQuoteResourceWithStreamingResponse(self)

    async def retrieve(
        self,
        tickers: str,
        *,
        token: str | Omit = omit,
        dividends: bool | Omit = omit,
        fundamental: bool | Omit = omit,
        interval: Literal["1m", "2m", "5m", "15m", "30m", "60m", "90m", "1h", "1d", "5d", "1wk", "1mo", "3mo"]
        | Omit = omit,
        modules: List[
            Literal[
                "summaryProfile",
                "balanceSheetHistory",
                "defaultKeyStatistics",
                "balanceSheetHistoryQuarterly",
                "incomeStatementHistory",
                "incomeStatementHistoryQuarterly",
                "financialData",
                "financialDataHistory",
                "financialDataHistoryQuarterly",
                "defaultKeyStatisticsHistory",
                "defaultKeyStatisticsHistoryQuarterly",
                "valueAddedHistory",
                "valueAddedHistoryQuarterly",
                "cashflowHistory",
                "cashflowHistoryQuarterly",
            ]
        ]
        | Omit = omit,
        range: Literal["1d", "5d", "1mo", "3mo", "6mo", "1y", "2y", "5y", "10y", "ytd", "max"] | Omit = omit,
        # Use the following arguments if you need to pass additional parameters to the API that aren't available via kwargs.
        # The extra values given here take precedence over values defined on the client or passed to this method.
        extra_headers: Headers | None = None,
        extra_query: Query | None = None,
        extra_body: Body | None = None,
        timeout: float | httpx.Timeout | None | NotGiven = not_given,
    ) -> QuoteRetrieveResponse:
        """
        Este endpoint √© a principal forma de obter informa√ß√µes detalhadas sobre um ou
        mais ativos financeiros (a√ß√µes, FIIs, ETFs, BDRs, √≠ndices) listados na B3,
        identificados pelos seus respectivos **tickers**.

        ### Funcionalidades Principais:

        - **Cota√ß√£o Atual:** Retorna o pre√ßo mais recente, varia√ß√£o di√°ria, m√°ximas,
          m√≠nimas, volume, etc.
        - **Dados Hist√≥ricos:** Permite solicitar s√©ries hist√≥ricas de pre√ßos usando os
          par√¢metros `range` e `interval`.
        - **Dados Fundamentalistas:** Opcionalmente, inclui dados fundamentalistas
          b√°sicos (P/L, LPA) com o par√¢metro `fundamental=true`.
        - **Dividendos:** Opcionalmente, inclui hist√≥rico de dividendos e JCP com
          `dividends=true`.
        - **M√≥dulos Adicionais:** Permite requisitar conjuntos de dados financeiros mais
          aprofundados atrav√©s do par√¢metro `modules` (veja detalhes abaixo).

        ### üß™ A√ß√µes de Teste (Sem Autentica√ß√£o):

        Para facilitar o desenvolvimento e teste, as seguintes **4 a√ß√µes t√™m acesso
        irrestrito** e **n√£o requerem autentica√ß√£o**:

        - **PETR4** (Petrobras PN)
        - **MGLU3** (Magazine Luiza ON)
        - **VALE3** (Vale ON)
        - **ITUB4** (Ita√∫ Unibanco PN)

        **Importante:** Voc√™ pode consultar essas a√ß√µes sem token e com acesso a todos
        os recursos (hist√≥ricos, m√≥dulos, dividendos). Por√©m, se misturar essas a√ß√µes
        com outras na mesma requisi√ß√£o, a autentica√ß√£o ser√° obrigat√≥ria.

        ### Autentica√ß√£o:

        Para **outras a√ß√µes** (al√©m das 4 de teste), √© **obrigat√≥rio** fornecer um token
        de autentica√ß√£o v√°lido, seja via query parameter `token` ou via header
        `Authorization: Bearer seu_token`.

        ### Exemplos de Requisi√ß√£o:

        **1. Cota√ß√£o simples de PETR4 e VALE3 (a√ß√µes de teste - sem token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/PETR4,VALE3"
        ```

        **2. Cota√ß√£o de MGLU3 com dados hist√≥ricos do √∫ltimo m√™s (a√ß√£o de teste - sem
        token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/MGLU3?range=1mo&interval=1d"
        ```

        **3. Cota√ß√£o de ITUB4 incluindo dividendos e dados fundamentalistas (a√ß√£o de
        teste - sem token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/ITUB4?fundamental=true&dividends=true"
        ```

        **4. Cota√ß√£o de WEGE3 com Resumo da Empresa e Balan√ßo Patrimonial Anual (via
        m√≥dulos - requer token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/WEGE3?modules=summaryProfile,balanceSheetHistory&token=SEU_TOKEN"
        ```

        **5. Exemplo de requisi√ß√£o mista (requer token):**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/PETR4,BBAS3?token=SEU_TOKEN"
        ```

        _Nota: Como BBAS3 n√£o √© uma a√ß√£o de teste, toda a requisi√ß√£o requer
        autentica√ß√£o, mesmo contendo PETR4._

        ### Par√¢metro `modules` (Detalhado):

        O par√¢metro `modules` √© extremamente poderoso para enriquecer a resposta com
        dados financeiros detalhados. Voc√™ pode solicitar um ou mais m√≥dulos, separados
        por v√≠rgula.

        **M√≥dulos Dispon√≠veis:**

        - `summaryProfile`: Informa√ß√µes cadastrais da empresa (endere√ßo, setor,
          descri√ß√£o do neg√≥cio, website, n√∫mero de funcion√°rios).
        - `balanceSheetHistory`: Hist√≥rico **anual** do Balan√ßo Patrimonial.
        - `balanceSheetHistoryQuarterly`: Hist√≥rico **trimestral** do Balan√ßo
          Patrimonial.
        - `defaultKeyStatistics`: Principais estat√≠sticas da empresa (Valor de Mercado,
          P/L, ROE, Dividend Yield, etc.) - **TTM (Trailing Twelve Months)**.
        - `defaultKeyStatisticsHistory`: Hist√≥rico **anual** das Principais
          Estat√≠sticas.
        - `defaultKeyStatisticsHistoryQuarterly`: Hist√≥rico **trimestral** das
          Principais Estat√≠sticas.
        - `incomeStatementHistory`: Hist√≥rico **anual** da Demonstra√ß√£o do Resultado do
          Exerc√≠cio (DRE).
        - `incomeStatementHistoryQuarterly`: Hist√≥rico **trimestral** da Demonstra√ß√£o do
          Resultado do Exerc√≠cio (DRE).
        - `financialData`: Dados financeiros selecionados (Receita, Lucro Bruto, EBITDA,
          D√≠vida L√≠quida, Fluxo de Caixa Livre, Margens) - **TTM (Trailing Twelve
          Months)**.
        - `financialDataHistory`: Hist√≥rico **anual** dos Dados Financeiros.
        - `financialDataHistoryQuarterly`: Hist√≥rico **trimestral** dos Dados
          Financeiros.
        - `valueAddedHistory`: Hist√≥rico **anual** da Demonstra√ß√£o do Valor Adicionado
          (DVA).
        - `valueAddedHistoryQuarterly`: Hist√≥rico **trimestral** da Demonstra√ß√£o do
          Valor Adicionado (DVA).
        - `cashflowHistory`: Hist√≥rico **anual** da Demonstra√ß√£o do Fluxo de Caixa
          (DFC).
        - `cashflowHistoryQuarterly`: Hist√≥rico **trimestral** da Demonstra√ß√£o do Fluxo
          de Caixa (DFC).

        **Exemplo de Uso do `modules`:**

        Para obter a cota√ß√£o de BBDC4 junto com seu DRE trimestral e Fluxo de Caixa
        anual:

        ```bash
        curl -X GET "https://brapi.dev/api/quote/BBDC4?modules=incomeStatementHistoryQuarterly,cashflowHistory&token=SEU_TOKEN"
        ```

        ### Resposta:

        A resposta √© um objeto JSON contendo a chave `results`, que √© um array. Cada
        elemento do array corresponde a um ticker solicitado e cont√©m os dados da
        cota√ß√£o e os m√≥dulos adicionais requisitados.

        - **Sucesso (200 OK):** Retorna os dados conforme solicitado.
        - **Bad Request (400 Bad Request):** Ocorre se um par√¢metro for inv√°lido (ex:
          `range=invalid`) ou se a formata√ß√£o estiver incorreta.
        - **Unauthorized (401 Unauthorized):** Token inv√°lido ou ausente.
        - **Payment Required (402 Payment Required):** Limite de requisi√ß√µes do plano
          atual excedido.
        - **Not Found (404 Not Found):** Um ou mais tickers solicitados n√£o foram
          encontrados.

        Args:
          token: **Obrigat√≥rio caso n√£o esteja adicionado como header "Authorization".** Seu
              token de autentica√ß√£o pessoal da API Brapi.

              **Formas de Envio:**

              1.  **Query Parameter:** Adicione `?token=SEU_TOKEN` ao final da URL.
              2.  **HTTP Header:** Inclua o header `Authorization: Bearer SEU_TOKEN` na sua
                  requisi√ß√£o.

              Ambos os m√©todos s√£o aceitos, mas pelo menos um deles deve ser utilizado.
              Obtenha seu token em [brapi.dev/dashboard](https://brapi.dev/dashboard).

          dividends: **Opcional.** Booleano (`true` ou `false`). Se `true`, inclui informa√ß√µes sobre
              dividendos e JCP (Juros sobre Capital Pr√≥prio) pagos historicamente pelo ativo
              na chave `dividendsData`.

          fundamental: **Opcional.** Booleano (`true` ou `false`). Se `true`, inclui dados
              fundamentalistas b√°sicos na resposta, como Pre√ßo/Lucro (P/L) e Lucro Por A√ß√£o
              (LPA).

              **Nota:** Para dados fundamentalistas mais completos, utilize o par√¢metro
              `modules`.

          interval: **Opcional.** Define a granularidade (intervalo) dos dados hist√≥ricos de pre√ßo
              (`historicalDataPrice`). Requer que `range` tamb√©m seja especificado.

              **Valores Poss√≠veis:**

              - `1m`, `2m`, `5m`, `15m`, `30m`, `60m`, `90m`, `1h`: Intervalos intraday
                (minutos/horas). **Aten√ß√£o:** Disponibilidade pode variar conforme o `range` e
                o ativo.
              - `1d`: Di√°rio (padr√£o se `range` for especificado e `interval` omitido).
              - `5d`: 5 dias.
              - `1wk`: Semanal.
              - `1mo`: Mensal.
              - `3mo`: Trimestral.

          modules: **Opcional.** Uma lista de m√≥dulos de dados adicionais, separados por v√≠rgula
              (`,`), para incluir na resposta. Permite buscar dados financeiros detalhados.

              **Exemplos:**

              - `modules=summaryProfile` (retorna perfil da empresa)
              - `modules=balanceSheetHistory,incomeStatementHistory` (retorna hist√≥rico anual
                do BP e DRE)

              Veja a descri√ß√£o principal do endpoint para a lista completa de m√≥dulos e seus
              conte√∫dos.

          range: **Opcional.** Define o per√≠odo para os dados hist√≥ricos de pre√ßo
              (`historicalDataPrice`). Se omitido, apenas a cota√ß√£o mais recente √© retornada
              (a menos que `interval` seja usado).

              **Valores Poss√≠veis:**

              - `1d`: √öltimo dia de preg√£o (intraday se `interval` for minutos/horas).
              - `5d`: √öltimos 5 dias.
              - `1mo`: √öltimo m√™s.
              - `3mo`: √öltimos 3 meses.
              - `6mo`: √öltimos 6 meses.
              - `1y`: √öltimo ano.
              - `2y`: √öltimos 2 anos.
              - `5y`: √öltimos 5 anos.
              - `10y`: √öltimos 10 anos.
              - `ytd`: Desde o in√≠cio do ano atual (Year-to-Date).
              - `max`: Todo o per√≠odo hist√≥rico dispon√≠vel.

          extra_headers: Send extra headers

          extra_query: Add additional query parameters to the request

          extra_body: Add additional JSON properties to the request

          timeout: Override the client-level default timeout for this request, in seconds
        """
        if not tickers:
            raise ValueError(f"Expected a non-empty value for `tickers` but received {tickers!r}")
        return await self._get(
            f"/api/quote/{tickers}",
            options=make_request_options(
                extra_headers=extra_headers,
                extra_query=extra_query,
                extra_body=extra_body,
                timeout=timeout,
                query=await async_maybe_transform(
                    {
                        "token": token,
                        "dividends": dividends,
                        "fundamental": fundamental,
                        "interval": interval,
                        "modules": modules,
                        "range": range,
                    },
                    quote_retrieve_params.QuoteRetrieveParams,
                ),
            ),
            cast_to=QuoteRetrieveResponse,
        )

    async def list(
        self,
        *,
        token: str | Omit = omit,
        limit: int | Omit = omit,
        page: int | Omit = omit,
        search: str | Omit = omit,
        sector: Literal[
            "Retail Trade",
            "Energy Minerals",
            "Health Services",
            "Utilities",
            "Finance",
            "Consumer Services",
            "Consumer Non-Durables",
            "Non-Energy Minerals",
            "Commercial Services",
            "Distribution Services",
            "Transportation",
            "Technology Services",
            "Process Industries",
            "Communications",
            "Producer Manufacturing",
            "Miscellaneous",
            "Electronic Technology",
            "Industrial Services",
            "Health Technology",
            "Consumer Durables",
        ]
        | Omit = omit,
        sort_by: Literal["name", "close", "change", "change_abs", "volume", "market_cap_basic", "sector"] | Omit = omit,
        sort_order: Literal["asc", "desc"] | Omit = omit,
        type: Literal["stock", "fund", "bdr"] | Omit = omit,
        # Use the following arguments if you need to pass additional parameters to the API that aren't available via kwargs.
        # The extra values given here take precedence over values defined on the client or passed to this method.
        extra_headers: Headers | None = None,
        extra_query: Query | None = None,
        extra_body: Body | None = None,
        timeout: float | httpx.Timeout | None | NotGiven = not_given,
    ) -> QuoteListResponse:
        """
        Obtenha uma lista paginada de cota√ß√µes de diversos ativos (a√ß√µes, FIIs, BDRs)
        negociados na B3, com op√ß√µes avan√ßadas de busca, filtragem e ordena√ß√£o.

        ### Funcionalidades:

        - **Busca por Ticker:** Filtre por parte do ticker usando `search`.
        - **Filtragem por Tipo:** Restrinja a lista a `stock`, `fund` (FII) ou `bdr` com
          o par√¢metro `type`.
        - **Filtragem por Setor:** Selecione ativos de um setor espec√≠fico usando
          `sector`.
        - **Ordena√ß√£o:** Ordene os resultados por diversos campos (pre√ßo, varia√ß√£o,
          volume, etc.) usando `sortBy` e `sortOrder`.
        - **Pagina√ß√£o:** Controle o n√∫mero de resultados por p√°gina (`limit`) e a p√°gina
          desejada (`page`).

        ### Autentica√ß√£o:

        Requer token de autentica√ß√£o via `token` (query) ou `Authorization` (header).

        ### Exemplo de Requisi√ß√£o:

        **Listar as 10 a√ß√µes do setor Financeiro com maior volume, ordenadas de forma
        decrescente:**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/list?sector=Finance&sortBy=volume&sortOrder=desc&limit=10&page=1&token=SEU_TOKEN"
        ```

        **Buscar por ativos cujo ticker contenha 'ITUB' e ordenar por nome ascendente:**

        ```bash
        curl -X GET "https://brapi.dev/api/quote/list?search=ITUB&sortBy=name&sortOrder=asc&token=SEU_TOKEN"
        ```

        ### Resposta:

        A resposta cont√©m a lista de `stocks` (e `indexes` relevantes), informa√ß√µes
        sobre os filtros aplicados, detalhes da pagina√ß√£o (`currentPage`, `totalPages`,
        `itemsPerPage`, `totalCount`, `hasNextPage`) e listas de setores
        (`availableSectors`) e tipos (`availableStockTypes`) dispon√≠veis para filtragem.

        Args:
          token: **Obrigat√≥rio caso n√£o esteja adicionado como header "Authorization".** Seu
              token de autentica√ß√£o pessoal da API Brapi.

              **Formas de Envio:**

              1.  **Query Parameter:** Adicione `?token=SEU_TOKEN` ao final da URL.
              2.  **HTTP Header:** Inclua o header `Authorization: Bearer SEU_TOKEN` na sua
                  requisi√ß√£o.

              Ambos os m√©todos s√£o aceitos, mas pelo menos um deles deve ser utilizado.
              Obtenha seu token em [brapi.dev/dashboard](https://brapi.dev/dashboard).

          limit: **Opcional.** N√∫mero m√°ximo de ativos a serem retornados por p√°gina. O valor
              padr√£o pode variar.

          page: **Opcional.** N√∫mero da p√°gina dos resultados a ser retornada, considerando o
              `limit` especificado. Come√ßa em 1.

          search:
              **Opcional.** Termo para buscar ativos por ticker (correspond√™ncia parcial). Ex:
              `PETR` encontrar√° `PETR4`, `PETR3`.

          sector: **Opcional.** Filtra os resultados por setor de atua√ß√£o da empresa. Utilize um
              dos valores retornados em `availableSectors`.

          sort_by: **Opcional.** Campo pelo qual os resultados ser√£o ordenados.

          sort_order: **Opcional.** Dire√ß√£o da ordena√ß√£o: `asc` (ascendente) ou `desc` (descendente).
              Requer que `sortBy` seja especificado.

          type: **Opcional.** Filtra os resultados por tipo de ativo.

          extra_headers: Send extra headers

          extra_query: Add additional query parameters to the request

          extra_body: Add additional JSON properties to the request

          timeout: Override the client-level default timeout for this request, in seconds
        """
        return await self._get(
            "/api/quote/list",
            options=make_request_options(
                extra_headers=extra_headers,
                extra_query=extra_query,
                extra_body=extra_body,
                timeout=timeout,
                query=await async_maybe_transform(
                    {
                        "token": token,
                        "limit": limit,
                        "page": page,
                        "search": search,
                        "sector": sector,
                        "sort_by": sort_by,
                        "sort_order": sort_order,
                        "type": type,
                    },
                    quote_list_params.QuoteListParams,
                ),
            ),
            cast_to=QuoteListResponse,
        )


class QuoteResourceWithRawResponse:
    def __init__(self, quote: QuoteResource) -> None:
        self._quote = quote

        self.retrieve = to_raw_response_wrapper(
            quote.retrieve,
        )
        self.list = to_raw_response_wrapper(
            quote.list,
        )


class AsyncQuoteResourceWithRawResponse:
    def __init__(self, quote: AsyncQuoteResource) -> None:
        self._quote = quote

        self.retrieve = async_to_raw_response_wrapper(
            quote.retrieve,
        )
        self.list = async_to_raw_response_wrapper(
            quote.list,
        )


class QuoteResourceWithStreamingResponse:
    def __init__(self, quote: QuoteResource) -> None:
        self._quote = quote

        self.retrieve = to_streamed_response_wrapper(
            quote.retrieve,
        )
        self.list = to_streamed_response_wrapper(
            quote.list,
        )


class AsyncQuoteResourceWithStreamingResponse:
    def __init__(self, quote: AsyncQuoteResource) -> None:
        self._quote = quote

        self.retrieve = async_to_streamed_response_wrapper(
            quote.retrieve,
        )
        self.list = async_to_streamed_response_wrapper(
            quote.list,
        )

test_types:
  id: '1501'
  test_type: Aggregate_Minimum
  test_name_short: Aggregate Minimum
  test_name_long: Aggregate values per group are at or above reference
  test_description: |-
    Tests that aggregate values for each set of column values are at least the same as reference dataset
  except_message: |-
    Aggregate measure per set of column values is not at least the same as reference dataset.
  measure_uom: Mismatched measures
  measure_uom_description: null
  selection_criteria: null
  dq_score_prevalence_formula: |-
    1
  dq_score_risk_factor: '1.0'
  column_name_prompt: |-
    Aggregate Expression
  column_name_help: |-
    Specify an aggregate column expression: one of `SUM([column_name])` or `COUNT([column_name])`
  default_parm_columns: subset_condition,groupby_names,having_condition,match_schema_name,match_table_name,match_column_names,match_subset_condition,match_groupby_names,match_having_condition
  default_parm_values: null
  default_parm_prompts: |-
    Record Subset Condition,Grouping Columns,Group Subset Condition,Matching Schema Name,Matching Table Name,Matching Aggregate Expression,Matching Record Subset Condition,Matching Grouping Columns,Matching Group Subset Condition
  default_parm_help: |-
    Condition defining a subset of records in main table, written like a condition within a SQL WHERE clause - OPTIONAL|Category columns in main table separated by commas (e.g. GROUP BY columns)|Condition defining a subset of aggregate records in main table (e.g. HAVING clause) - OPTIONAL|Schema location of reference table|Reference table name|Aggregate column expression in reference table (e.g. `SUM(sales)`)|Condition defining a subset of records in reference table, written like a condition within a SQL WHERE clause - OPTIONAL|Category columns in reference table separated by commas (e.g. GROUP BY columns)|Condition defining a subset of aggregate records in reference table (e.g. HAVING clause) - OPTIONAL
  default_severity: Fail
  run_type: QUERY
  test_scope: referential
  dq_dimension: Accuracy
  health_dimension: Data Drift
  threshold_description: |-
    Expected count of group totals below aggregate value
  result_visualization: line_chart
  result_visualization_params: null
  usage_notes: |-
    This test compares sums or counts of a column rolled up to one or more category combinations, but requires a match or increase in the aggregate value, rather than an exact match, across two different tables. Both tables must be accessible at the same time. Use this to confirm that aggregate values have not dropped for any set of categories, even if some values may rise. This test is useful to compare an older and newer version of a cumulative dataset. An error here means that one or more values per category set fail to match or exceed the prior dataset. New categories or combinations are allowed (but can be restricted independently with a Combo_Match test). Both tables must be present to run this test.
  active: Y
  cat_test_conditions: []
  target_data_lookups:
  - id: '1401'
    test_id: '1501'
    test_type: Aggregate_Minimum
    sql_flavor: bigquery
    lookup_type: null
    lookup_query: |-
      SELECT *
      FROM (
        SELECT {GROUPBY_NAMES}, SUM(TOTAL) AS total, SUM(MATCH_TOTAL) AS MATCH_TOTAL
        FROM (
          SELECT {GROUPBY_NAMES}, {COLUMN_NAME_NO_QUOTES} AS total, NULL AS match_total
          FROM `{TARGET_SCHEMA}`.`{TABLE_NAME}`
          WHERE {SUBSET_CONDITION}
          GROUP BY {GROUPBY_NAMES}
          {HAVING_CONDITION}
          UNION ALL
          SELECT {MATCH_GROUPBY_NAMES}, NULL AS total, {MATCH_COLUMN_NAMES} AS match_total
          FROM {MATCH_SCHEMA_NAME}.{MATCH_TABLE_NAME}
          WHERE {MATCH_SUBSET_CONDITION}
          GROUP BY {MATCH_GROUPBY_NAMES}
          {MATCH_HAVING_CONDITION}
        ) a
        GROUP BY {GROUPBY_NAMES}
      ) s
      WHERE total < match_total OR (total IS NULL AND match_total IS NOT NULL)
      ORDER BY {GROUPBY_NAMES};
    error_type: Test Results
  - id: '1334'
    test_id: '1501'
    test_type: Aggregate_Minimum
    sql_flavor: databricks
    lookup_type: null
    lookup_query: |-
      SELECT *
      FROM ( SELECT {GROUPBY_NAMES}, SUM(TOTAL) as total, SUM(MATCH_TOTAL) as MATCH_TOTAL
               FROM
                    ( SELECT {GROUPBY_NAMES}, {COLUMN_NAME_NO_QUOTES} as total, NULL as match_total
                        FROM `{TARGET_SCHEMA}`.`{TABLE_NAME}`
                       WHERE {SUBSET_CONDITION}
                      GROUP BY {GROUPBY_NAMES}
                      {HAVING_CONDITION}
                     UNION ALL
                      SELECT {MATCH_GROUPBY_NAMES}, NULL as total, {MATCH_COLUMN_NAMES} as match_total
                        FROM {MATCH_SCHEMA_NAME}.{MATCH_TABLE_NAME}
                       WHERE {MATCH_SUBSET_CONDITION}
                      GROUP BY {MATCH_GROUPBY_NAMES}
                      {MATCH_HAVING_CONDITION} ) a
               GROUP BY {GROUPBY_NAMES} ) s
       WHERE total < match_total OR (total IS NULL AND match_total IS NOT NULL)
      ORDER BY {GROUPBY_NAMES};
    error_type: Test Results
  - id: '1251'
    test_id: '1501'
    test_type: Aggregate_Minimum
    sql_flavor: mssql
    lookup_type: null
    lookup_query: |-
      SELECT *
      FROM ( SELECT {GROUPBY_NAMES}, SUM(TOTAL) as total, SUM(MATCH_TOTAL) as MATCH_TOTAL
               FROM
                    ( SELECT {GROUPBY_NAMES}, {COLUMN_NAME_NO_QUOTES} as total, NULL as match_total
                        FROM "{TARGET_SCHEMA}"."{TABLE_NAME}"
                       WHERE {SUBSET_CONDITION}
                      GROUP BY {GROUPBY_NAMES}
                      {HAVING_CONDITION}
                     UNION ALL
                      SELECT {MATCH_GROUPBY_NAMES}, NULL as total, {MATCH_COLUMN_NAMES} as match_total
                        FROM {MATCH_SCHEMA_NAME}.{MATCH_TABLE_NAME}
                       WHERE {MATCH_SUBSET_CONDITION}
                      GROUP BY {MATCH_GROUPBY_NAMES}
                      {MATCH_HAVING_CONDITION} ) a
               GROUP BY {GROUPBY_NAMES} ) s
       WHERE total < match_total OR (total IS NULL AND match_total IS NOT NULL)
      ORDER BY {GROUPBY_NAMES};
    error_type: Test Results
  - id: '1252'
    test_id: '1501'
    test_type: Aggregate_Minimum
    sql_flavor: postgresql
    lookup_type: null
    lookup_query: |-
      SELECT *
      FROM ( SELECT {GROUPBY_NAMES}, SUM(TOTAL) as total, SUM(MATCH_TOTAL) as MATCH_TOTAL
               FROM
                    ( SELECT {GROUPBY_NAMES}, {COLUMN_NAME_NO_QUOTES} as total, NULL as match_total
                        FROM "{TARGET_SCHEMA}"."{TABLE_NAME}"
                       WHERE {SUBSET_CONDITION}
                      GROUP BY {GROUPBY_NAMES}
                      {HAVING_CONDITION}
                     UNION ALL
                      SELECT {MATCH_GROUPBY_NAMES}, NULL as total, {MATCH_COLUMN_NAMES} as match_total
                        FROM {MATCH_SCHEMA_NAME}.{MATCH_TABLE_NAME}
                       WHERE {MATCH_SUBSET_CONDITION}
                      GROUP BY {MATCH_GROUPBY_NAMES}
                      {MATCH_HAVING_CONDITION} ) a
               GROUP BY {GROUPBY_NAMES} ) s
       WHERE total < match_total OR (total IS NULL AND match_total IS NOT NULL)
      ORDER BY {GROUPBY_NAMES};
    error_type: Test Results
  - id: '1249'
    test_id: '1501'
    test_type: Aggregate_Minimum
    sql_flavor: redshift
    lookup_type: null
    lookup_query: |-
      SELECT *
      FROM ( SELECT {GROUPBY_NAMES}, SUM(TOTAL) as total, SUM(MATCH_TOTAL) as MATCH_TOTAL
               FROM
                    ( SELECT {GROUPBY_NAMES}, {COLUMN_NAME_NO_QUOTES} as total, NULL as match_total
                        FROM "{TARGET_SCHEMA}"."{TABLE_NAME}"
                       WHERE {SUBSET_CONDITION}
                      GROUP BY {GROUPBY_NAMES}
                      {HAVING_CONDITION}
                     UNION ALL
                      SELECT {MATCH_GROUPBY_NAMES}, NULL as total, {MATCH_COLUMN_NAMES} as match_total
                        FROM {MATCH_SCHEMA_NAME}.{MATCH_TABLE_NAME}
                       WHERE {MATCH_SUBSET_CONDITION}
                      GROUP BY {MATCH_GROUPBY_NAMES}
                      {MATCH_HAVING_CONDITION} ) a
               GROUP BY {GROUPBY_NAMES} ) s
       WHERE total < match_total OR (total IS NULL AND match_total IS NOT NULL)
      ORDER BY {GROUPBY_NAMES};
    error_type: Test Results
  - id: '1463'
    test_id: '1501'
    test_type: Aggregate_Minimum
    sql_flavor: redshift_spectrum
    lookup_type: null
    lookup_query: |-
      SELECT *
      FROM ( SELECT {GROUPBY_NAMES}, SUM(TOTAL) as total, SUM(MATCH_TOTAL) as MATCH_TOTAL
               FROM
                    ( SELECT {GROUPBY_NAMES}, {COLUMN_NAME_NO_QUOTES} as total, NULL as match_total
                        FROM "{TARGET_SCHEMA}"."{TABLE_NAME}"
                       WHERE {SUBSET_CONDITION}
                      GROUP BY {GROUPBY_NAMES}
                      {HAVING_CONDITION}
                     UNION ALL
                      SELECT {MATCH_GROUPBY_NAMES}, NULL as total, {MATCH_COLUMN_NAMES} as match_total
                        FROM {MATCH_SCHEMA_NAME}.{MATCH_TABLE_NAME}
                       WHERE {MATCH_SUBSET_CONDITION}
                      GROUP BY {MATCH_GROUPBY_NAMES}
                      {MATCH_HAVING_CONDITION} ) a
               GROUP BY {GROUPBY_NAMES} ) s
       WHERE total < match_total OR (total IS NULL AND match_total IS NOT NULL)
      ORDER BY {GROUPBY_NAMES};
    error_type: Test Results
  - id: '1250'
    test_id: '1501'
    test_type: Aggregate_Minimum
    sql_flavor: snowflake
    lookup_type: null
    lookup_query: |-
      SELECT *
      FROM ( SELECT {GROUPBY_NAMES}, SUM(TOTAL) as total, SUM(MATCH_TOTAL) as MATCH_TOTAL
               FROM
                    ( SELECT {GROUPBY_NAMES}, {COLUMN_NAME_NO_QUOTES} as total, NULL as match_total
                        FROM "{TARGET_SCHEMA}"."{TABLE_NAME}"
                       WHERE {SUBSET_CONDITION}
                      GROUP BY {GROUPBY_NAMES}
                      {HAVING_CONDITION}
                     UNION ALL
                      SELECT {MATCH_GROUPBY_NAMES}, NULL as total, {MATCH_COLUMN_NAMES} as match_total
                        FROM {MATCH_SCHEMA_NAME}.{MATCH_TABLE_NAME}
                       WHERE {MATCH_SUBSET_CONDITION}
                      GROUP BY {MATCH_GROUPBY_NAMES}
                      {MATCH_HAVING_CONDITION} ) a
               GROUP BY {GROUPBY_NAMES} ) s
       WHERE total < match_total OR (total IS NULL AND match_total IS NOT NULL)
      ORDER BY {GROUPBY_NAMES};
    error_type: Test Results
  test_templates:
  - id: '2502'
    test_type: Aggregate_Minimum
    sql_flavor: bigquery
    template_name: ex_aggregate_match_no_drops_generic.sql
  - id: '2402'
    test_type: Aggregate_Minimum
    sql_flavor: databricks
    template_name: ex_aggregate_match_no_drops_generic.sql
  - id: '2202'
    test_type: Aggregate_Minimum
    sql_flavor: mssql
    template_name: ex_aggregate_match_no_drops_generic.sql
  - id: '2302'
    test_type: Aggregate_Minimum
    sql_flavor: postgresql
    template_name: ex_aggregate_match_no_drops_generic.sql
  - id: '2002'
    test_type: Aggregate_Minimum
    sql_flavor: redshift
    template_name: ex_aggregate_match_no_drops_generic.sql
  - id: '2502'
    test_type: Aggregate_Minimum
    sql_flavor: redshift_spectrum
    template_name: ex_aggregate_match_no_drops_generic.sql
  - id: '2102'
    test_type: Aggregate_Minimum
    sql_flavor: snowflake
    template_name: ex_aggregate_match_no_drops_generic.sql

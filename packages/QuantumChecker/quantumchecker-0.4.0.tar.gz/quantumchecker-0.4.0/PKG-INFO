Metadata-Version: 2.4
Name: QuantumChecker
Version: 0.4.0
Summary: A package to evaluate homework submissions in Python, SQL, PowerBI, and SSIS.
Author: Qobiljon
Author-email: qobiljonkhayrullayev@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.31.0
Requires-Dist: tenacity>=8.2.3
Requires-Dist: pdf2image>=1.16.3
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: Pillow>=10.0.0
Requires-Dist: PyPDF2>=3.0.1
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

Sample usage: 
```
import asyncio
from your_evaluator_module import HomeworkEvaluator

async def main():
    evaluator = HomeworkEvaluator()
    question_content = """
Q1: What is a Python list? Explain with an example.

Q2: Write an SQL query to select all records from a table named 'students'.
"""
    answer_path = "sample_submissions/student1_answer.py"
    question_type = "python"

    result = await evaluator.evaluate_from_content(
        question_content=question_content,
        answer_path=answer_path,
        api_key="your_api_key",
        question_type=question_type
    )
    print(result)

if __name__ == "__main__":
    asyncio.run(main())
```

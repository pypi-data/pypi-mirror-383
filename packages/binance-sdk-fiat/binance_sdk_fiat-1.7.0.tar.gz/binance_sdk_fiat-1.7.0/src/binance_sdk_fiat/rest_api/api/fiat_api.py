"""
Binance Fiat REST API

OpenAPI Specification for the Binance Fiat REST API
The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

from typing import Optional, Union
from requests import Session
from binance_common.configuration import ConfigurationRestAPI
from binance_common.errors import RequiredError
from binance_common.models import ApiResponse
from binance_common.signature import Signers
from binance_common.utils import send_request

from ..models import GetFiatDepositWithdrawHistoryResponse
from ..models import GetFiatPaymentsHistoryResponse


class FiatApi:
    """API Client for FiatApi endpoints."""

    def __init__(
        self,
        configuration: ConfigurationRestAPI = None,
        session: Session = None,
        signer: Signers = None,
    ) -> None:
        self._configuration = configuration
        self._session = session
        self._signer = signer

    def get_fiat_deposit_withdraw_history(
        self,
        transaction_type: Union[str, None],
        begin_time: Optional[int] = None,
        end_time: Optional[int] = None,
        page: Optional[int] = None,
        rows: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetFiatDepositWithdrawHistoryResponse]:
        """
                Get Fiat Deposit/Withdraw History (USER_DATA)
                GET /sapi/v1/fiat/orders
                https://developers.binance.com/docs/fiat/rest-api/Get-Fiat-Deposit-Withdraw-History

                Get Fiat Deposit/Withdraw History

        * If beginTime and endTime are not sent, the recent 30-day data will be returned.

        Weight: 45000

                Args:
                    transaction_type (Union[str, None]): 0-buy,1-sell
                    begin_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    page (Optional[int] = None): default 1
                    rows (Optional[int] = None): default 100, max 500
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetFiatDepositWithdrawHistoryResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        if transaction_type is None:
            raise RequiredError(
                field="transaction_type",
                error_message="Missing required parameter 'transaction_type'",
            )

        payload = {
            "transaction_type": transaction_type,
            "begin_time": begin_time,
            "end_time": end_time,
            "page": page,
            "rows": rows,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/fiat/orders",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetFiatDepositWithdrawHistoryResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_fiat_payments_history(
        self,
        transaction_type: Union[str, None],
        begin_time: Optional[int] = None,
        end_time: Optional[int] = None,
        page: Optional[int] = None,
        rows: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetFiatPaymentsHistoryResponse]:
        """
                Get Fiat Payments History (USER_DATA)
                GET /sapi/v1/fiat/payments
                https://developers.binance.com/docs/fiat/rest-api/Get-Fiat-Payments-History

                Get Fiat Deposit/Withdraw History

        * If beginTime and endTime are not sent, the recent 30-day data will be returned.
        * paymentMethod: Only when requesting payments history for buy (transactionType=0), response contains paymentMethod representing the way of purchase. Now we have:
        * Cash Balance
        * Credit Card
        * Online Banking
        * Bank Transfer

        Weight: 1

                Args:
                    transaction_type (Union[str, None]): 0-buy,1-sell
                    begin_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    page (Optional[int] = None): default 1
                    rows (Optional[int] = None): default 100, max 500
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetFiatPaymentsHistoryResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        if transaction_type is None:
            raise RequiredError(
                field="transaction_type",
                error_message="Missing required parameter 'transaction_type'",
            )

        payload = {
            "transaction_type": transaction_type,
            "begin_time": begin_time,
            "end_time": end_time,
            "page": page,
            "rows": rows,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/fiat/payments",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetFiatPaymentsHistoryResponse,
            is_signed=True,
            signer=self._signer,
        )

[project]
name = "tgit"
version = "0.25.0"
description = "Tool for Git Interaction Temptation (tgit): An elegant CLI tool that simplifies and streamlines your Git workflow, making version control a breeze."
authors = [{ name = "Jannchie", email = "jannchie@gmail.com" }]
dependencies = [
    "rich>=13.9.4",
    "pyyaml>=6.0.2",
    "gitpython>=3.1.44",
    "openai>=1.52.0",
    "jinja2>=3.1.4",
    "questionary>=2.0.1",
    "beautifulsoup4>=4.13.3",
    "click>=8.0.0",
]
readme = { content-type = "text/markdown", file = "README.md" }
requires-python = ">= 3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Version Control",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = ["git", "tool", "changelog", "version", "commit"]
license = "MIT"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
upgrade = true
package = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["tgit"]

[project.scripts]
tgit = "tgit:cli.app"

[tool.ruff]
line-length = 140

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "PGH",
    "RUF002",
    "RUF003",
    "BLE001",
    "ERA001",
    "FIX002",
    "TD002",
    "TD003",
    "D",
    "TRY300",
    "A004",
    "FBT003",
    "COM812",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",
    "ANN",
    "UP",
    "W291",
    "W293",
    "COM812",
    "I001",
    "F401",
    "PLR2004",
    "ARG001",
    "ARG002",
    "PLR0913",
    "PT011",
    "B017",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["--strict-markers", "--disable-warnings", "-v"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["tgit"]
omit = ["*/tests/*", "*/test_*", "*/conftest.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = ["pytest>=8.4.1", "pytest-cov>=6.0.0", "ruff>=0.9.4"]

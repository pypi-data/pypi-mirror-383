[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tick-vault"
version = "0.1.0"
description = "High-performance financial tick data downloader and reader for Dukascopy Bank's historical datafeed"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = [
    "financial-data",
    "tick-data",
    "market-data",
    "dukascopy",
    "forex",
    "trading",
    "quantitative-finance",
    "algorithmic-trading"
]
authors = [
    {name = "Keyhan Kamyar", email = "keyhankamyar@gmail.com"}
]
maintainers = [
    {name = "Keyhan Kamyar", email = "keyhankamyar@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed",
]

dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.27.0",
    "pandas>=2.0.0",
    "tqdm>=4.66.0",
]

[project.urls]
Homepage = "https://github.com/keyhankamyar/tick-vault"
Documentation = "https://github.com/keyhankamyar/tick-vault#readme"
Repository = "https://github.com/keyhankamyar/tick-vault"
"Bug Tracker" = "https://github.com/keyhankamyar/tick-vault/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["tick_vault*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
tick_vault = ["py.typed"]

[tool.black]
line-length = 88
target-version = ["py311", "py312", "py313", "py314"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | \.conda
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["tick_vault"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=tick_vault",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
strict_optional = true
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "tqdm.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["tick_vault"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
]
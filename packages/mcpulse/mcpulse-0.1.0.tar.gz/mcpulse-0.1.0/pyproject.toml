[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcpulse"
version = "0.1.0"
description = "Official Python SDK for MCPulse - Analytics and observability for MCP servers"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "MCPulse Team", email = "support@mcpulse.io"},
]
keywords = [
    "mcp",
    "model-context-protocol",
    "analytics",
    "observability",
    "monitoring",
    "telemetry",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
]

dependencies = [
    "grpcio>=1.60.0",
    "grpcio-tools>=1.60.0",
    "mcp>=1.16.0",
    "protobuf>=4.25.0",
    "pytest>=8.4.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "grpcio-testing>=1.60.0",
]
mcp = [
    "mcp>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/sirrobot01/mcpulse"
Documentation = "https://docs.mcpulse.io"
Repository = "https://github.com/sirrobot01/mcpulse"
Issues = "https://github.com/sirrobot01/mcpulse/issues"

[tool.hatch.build.targets.wheel]
packages = ["mcpulse"]

[tool.hatch.build.targets.sdist]
include = [
    "mcpulse/**/*.py",
    "mcpulse/pb/**/*.py",
    "README.md",
    "LICENSE",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hatch
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | pb
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"pb/*.py" = ["E", "F", "W", "I"]  # ignore generated code

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "pb/",
    "tests/",
]

[[tool.mypy.overrides]]
module = "grpc.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google.protobuf.*"
ignore_missing_imports = true

[tool.coverage.run]
source = ["mcpulse"]
omit = [
    "*/pb/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

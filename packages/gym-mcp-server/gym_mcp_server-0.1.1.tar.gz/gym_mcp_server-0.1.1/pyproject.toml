[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gym-mcp-server"
version = "0.1.1"
description = "Expose any Gymnasium environment as an MCP server"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Haggai Shachar"}
]
keywords = ["gymnasium", "gym", "mcp", "model-context-protocol", "reinforcement-learning", "ai", "agents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "gymnasium>=0.29.0",
    "numpy>=1.21.0",
    "pillow>=8.0.0",
    "mcp>=1.0.0",
    "pygame>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "openai-agents>=0.1.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
examples = [
    "matplotlib>=3.5.0",
    "jupyter>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/haggaishachar/gym-mcp-server"
Repository = "https://github.com/haggaishachar/gym-mcp-server"
Issues = "https://github.com/haggaishachar/gym-mcp-server/issues"

[project.scripts]
gym-mcp-server = "gym_mcp_server.server:main"

[tool.hatch.build.targets.wheel]
packages = ["gym_mcp_server"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=gym_mcp_server",
    "--cov-report=term-missing",
    "--cov-report=html",
]

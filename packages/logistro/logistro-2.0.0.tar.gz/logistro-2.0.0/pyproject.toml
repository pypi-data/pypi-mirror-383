[build-system]
requires = ["setuptools", "wheel", "setuptools-git-versioning"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools-git-versioning]
enabled = true

[project]
name = "logistro"
description = "Simple wrapper over logging for a couple basic features"
dynamic = ["version"]
readme = "README.md"
license = { "file" = "LICENSE" }
requires-python = ">=3.8"
authors = [
  {name = "Andrew Pikul", email="ajpikul@gmail.com"},
  {name = "Neyberson Atencio", email="neyberatencio@gmail.com"}
  ]
maintainers = [
  {name = "Andrew Pikul", email = "ajpikul@gmail.com"},
]

[project.urls]
Homepage = "https://github.com/geopozo/logistro"
Repository = "https://github.com/geopozo/logistro"

[dependency-groups]
dev = [
    "pytest-xdist",
    "pytest>=8.3.4",
    "poethepoet>=0.30.0",
    "pyright>=1.1.406",
]

# uv doens't allow dependency groups to have separate python requirements
# it resolves everything all at once
# this group we need to require higher python
# and only resolve if explicitly asked for

#docs = [
#    "mkquixote @ git+ssh://git@github.com/geopozo/mkquixote; python_version >= '3.11'",
#    "mkdocs>=1.6.1",
#    "mkdocs-material>=9.5.49",
#]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
          "ANN", # no types
          "EM", # allow strings in raise(), despite python being ugly about it
          "TRY003", # allow long error messages inside raise()
          "D203", # No blank before class docstring (D211 = require blank line)
          "D212", # Commit message style docstring is D213, ignore D212
          "COM812", # manual says linter rule conflicts with formatter
          "ISC001", # manual says litner rule conflicts with formatter
          "RET504", # Allow else if unnecessary because more readable
          "RET505", # Allow else if unnecessary because more readable
          "RET506", # Allow else if unnecessary because more readable
          "RET507", # Allow else if unnecessary because more readable
          "RET508", # Allow else if unnecessary because more readable
          "RUF012", # We don't do typing, so no typing
          "SIM105", # Too opionated (try-except-pass)
          "PT003", # scope="function" implied but I like readability
          "G004", # I like fstrings in my log
          ]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
              "D", # ignore docstring errors
              "S101", # allow assert
              "INP001", # no need for __init__ in test directories
            ]

[tool.pytest.ini_options]
log_cli = true

[tool.poe.tasks.test]
cmd = "pytest -W error -n auto -v -rfE"
help = "Run all tests quickly"

[tool.poe.tasks.debug-test]
cmd = "pytest -W error -vvvx -rA"
help = "Run test by test, slowly, quitting after first error"

[tool.poe.tasks.filter-test]
cmd = "pytest -W error -vvvx -rA"
help = "Run any/all tests one by one with basic settings: can include filename and -k filters"

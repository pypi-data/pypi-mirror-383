name: docker-dev

"on":
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'tests/**'
      - '.pre-commit-config.yaml'
      - 'README.md'
      - 'renovate.json'
      - 'mkdocs.yaml'
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      # - name: "Set up Python"
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version-file: ".python-version"

      - name: Determine version from hatch
        id: version
        run: echo "PRETEND_VERSION=$(uvx hatch version)" >> "$GITHUB_OUTPUT"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            jwnmulder/dbus2mqtt
            ghcr.io/jwnmulder/dbus2mqtt
          tags: |
            type=raw,value=dev,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          labels: |
            org.opencontainers.image.source=https://github.com/jwnmulder/dbus2mqtt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: jwnmulder
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: jwnmulder
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile.dev
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PRETEND_VERSION=${{ steps.version.outputs.PRETEND_VERSION }}

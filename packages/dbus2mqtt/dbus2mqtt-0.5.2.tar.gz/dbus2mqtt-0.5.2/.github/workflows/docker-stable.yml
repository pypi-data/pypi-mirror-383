name: docker-stable releases

"on":
  push:
    branches:
      - main
    paths:
      - "docker/**"
  workflow_run:
    workflows: ["Publish Python Package"]
    types:
      - completed
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      versions_matrix: ${{ steps.supported_release_versions.outputs.versions_matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Determine supported release versions
        id: supported_release_versions
        run: |
          SUPPORTED_CYCLES=("0.4" "0.5" "0.6" "0.7" "0.8" "0.9" "1.0" "2.0")

          VERSIONS_JSON=$(python3 .github/scripts/release-versions.py "${SUPPORTED_CYCLES[@]}")

          # Wrap the output into matrix include
          VERSIONS_MATRIX=$(echo "$VERSIONS_JSON" | jq -c '{include: [.[] | {cycle: .cycle, version: .latestVersion, isLatestStable: .isLatestStable}]}')

          echo "VERSIONS_MATRIX=$VERSIONS_MATRIX"
          echo "versions_matrix=$VERSIONS_MATRIX" >> $GITHUB_OUTPUT
  docker:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.versions_matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            jwnmulder/dbus2mqtt
            ghcr.io/jwnmulder/dbus2mqtt
          tags: |
            type=raw,value=latest,enable=${{ matrix.isLatestStable }}
            type=pep440,pattern={{major}},value=${{ matrix.version }},enable=${{ !startsWith(matrix.version, '0.') }}
            type=pep440,pattern={{major}}.{{minor}},value=${{ matrix.version }}
            type=pep440,pattern={{major}}.{{minor}}.{{patch}},value=${{ matrix.version }}
          # type=ref,event=branch
          # type=ref,event=pr
          # type=semver,pattern={{version}},value=${{ matrix.version }}
          flavor:
            latest=false
          labels: |
            org.opencontainers.image.source=https://github.com/jwnmulder/dbus2mqtt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: jwnmulder
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: jwnmulder
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile.pypi
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DBUS2MQTT_VERSION=${{ matrix.version }}

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[project]
name = "dbus2mqtt"
dynamic = ["version"]
description = """\
    General purpose DBus to MQTT bridge \
    - expose signals, methods and properties over MQTT \
    - featuring jinja based templating, payload enrichment and MPRIS / BlueZ / Home Assistant ready examples \
    """
readme = "README.md"
license = "MIT"
keywords = ["python", "mqtt", "jinja2", "bridge", "mpris", "dbus", "home-assistant", "bluez"]
classifiers = [
    # https://pypi.org/classifiers/
    "Development Status :: 5 - Production/Stable",

    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: MIT License",
    "Topic :: Home Automation",

    # Supported Python versions
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]

requires-python = ">=3.10"

dependencies = [
    "apscheduler>=3.11.0",
    "colorlog>=6.9.0",
    "dbus-fast>=2.44.1",
    "janus>=2.0.0",
    "jinja2>=3.1.6",
    "jinja2-ansible-filters>=1.3.2",
    "jsonargparse>=4.38.0",
    "paho-mqtt>=2.1.0",
    "python-dotenv>=1.1.0",
    "pyyaml>=6.0.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "types-pyyaml>=6.0.12.20241230",
    "taskipy>=1.14.1",
    "ruff>=0.11.2",
    "pyright>=1.1.396",
    "pre-commit>=4.2.0",
    "pip>=25.0.1",
    "pytest-asyncio>=1.0.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.15",
    "mkdocs-open-in-new-tab>=1.0.8",
    "deptry>=0.23.0",
]

[project.urls]
Documentation = "https://jwnmulder.github.io/dbus2mqtt"
Source = "https://github.com/jwnmulder/dbus2mqtt"
Issues = "https://github.com/jwnmulder/dbus2mqtt/issues"

[project.scripts]
dbus2mqtt = "dbus2mqtt.main:main"

[tool.deptry.per_rule_ignores]
DEP003 = ["dbus2mqtt"]
DEP004 = ["mkdocs"]

[tool.taskipy.tasks]
lint-ruff = "ruff check"
lint-pyright = "pyright"

[tool.pytest.ini_options]
addopts = "-s"
testpaths = ["tests"]
pythonpath = "."
asyncio_default_fixture_loop_scope = "function"
asyncio_default_test_loop_scope = "function"
log_cli = true

[tool.pyright]
venvPath = "."
venv = ".venv"

typeCheckingMode = "basic"

[tool.ruff.lint]
extend-select = [

    # pycodestyle Error, Warnings
    "E",
    "W",

    # isort
    "I",

    # pep8-naming
    "N",

    # pyupgrade
    "UP"
]
ignore = [
    # line-too-long
    "E501"
]

[tool.ruff.lint.isort]
lines-between-types = 1

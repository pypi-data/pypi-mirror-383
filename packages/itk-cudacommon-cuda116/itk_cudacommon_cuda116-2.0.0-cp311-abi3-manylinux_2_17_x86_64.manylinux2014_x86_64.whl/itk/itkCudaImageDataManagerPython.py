# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _CudaCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImageDataManagerPython
else:
    import _itkCudaImageDataManagerPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkCudaImagePython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkCudaDataManagerPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython

def itkCudaImageDataManagerCICVF22_New():
    return itkCudaImageDataManagerCICVF22.New()

class itkCudaImageDataManagerCICVF22(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF22_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF22_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF22 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF22"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF22

        Create a new object of the class itkCudaImageDataManagerCICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF22 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_swigregister(itkCudaImageDataManagerCICVF22)

def itkCudaImageDataManagerCICVF23_New():
    return itkCudaImageDataManagerCICVF23.New()

class itkCudaImageDataManagerCICVF23(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF23_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF23_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF23 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF23"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF23

        Create a new object of the class itkCudaImageDataManagerCICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF23 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_swigregister(itkCudaImageDataManagerCICVF23)

def itkCudaImageDataManagerCICVF24_New():
    return itkCudaImageDataManagerCICVF24.New()

class itkCudaImageDataManagerCICVF24(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF24_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF24_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF24 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF24"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF24

        Create a new object of the class itkCudaImageDataManagerCICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF24 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_swigregister(itkCudaImageDataManagerCICVF24)

def itkCudaImageDataManagerCICVF32_New():
    return itkCudaImageDataManagerCICVF32.New()

class itkCudaImageDataManagerCICVF32(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF32_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF32_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF32 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF32"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF32

        Create a new object of the class itkCudaImageDataManagerCICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF32 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_swigregister(itkCudaImageDataManagerCICVF32)

def itkCudaImageDataManagerCICVF33_New():
    return itkCudaImageDataManagerCICVF33.New()

class itkCudaImageDataManagerCICVF33(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF33_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF33_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF33 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF33"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF33

        Create a new object of the class itkCudaImageDataManagerCICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF33 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_swigregister(itkCudaImageDataManagerCICVF33)

def itkCudaImageDataManagerCICVF34_New():
    return itkCudaImageDataManagerCICVF34.New()

class itkCudaImageDataManagerCICVF34(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF34_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF34_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF34 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF34"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF34

        Create a new object of the class itkCudaImageDataManagerCICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF34 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_swigregister(itkCudaImageDataManagerCICVF34)

def itkCudaImageDataManagerCICVF42_New():
    return itkCudaImageDataManagerCICVF42.New()

class itkCudaImageDataManagerCICVF42(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF42_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF42_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF42 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF42"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF42

        Create a new object of the class itkCudaImageDataManagerCICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF42 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_swigregister(itkCudaImageDataManagerCICVF42)

def itkCudaImageDataManagerCICVF43_New():
    return itkCudaImageDataManagerCICVF43.New()

class itkCudaImageDataManagerCICVF43(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF43_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF43_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF43 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF43"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF43

        Create a new object of the class itkCudaImageDataManagerCICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF43 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_swigregister(itkCudaImageDataManagerCICVF43)

def itkCudaImageDataManagerCICVF44_New():
    return itkCudaImageDataManagerCICVF44.New()

class itkCudaImageDataManagerCICVF44(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF44_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF44_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF44 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF44"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF44

        Create a new object of the class itkCudaImageDataManagerCICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF44 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_swigregister(itkCudaImageDataManagerCICVF44)

def itkCudaImageDataManagerCID2_New():
    return itkCudaImageDataManagerCID2.New()

class itkCudaImageDataManagerCID2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCID2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCID2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageD2 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageD2"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCID2

        Create a new object of the class itkCudaImageDataManagerCID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCID2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_swigregister(itkCudaImageDataManagerCID2)

def itkCudaImageDataManagerCID3_New():
    return itkCudaImageDataManagerCID3.New()

class itkCudaImageDataManagerCID3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCID3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCID3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageD3 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageD3"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCID3

        Create a new object of the class itkCudaImageDataManagerCID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCID3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_swigregister(itkCudaImageDataManagerCID3)

def itkCudaImageDataManagerCID4_New():
    return itkCudaImageDataManagerCID4.New()

class itkCudaImageDataManagerCID4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCID4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCID4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageD4 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageD4"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCID4

        Create a new object of the class itkCudaImageDataManagerCID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCID4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_swigregister(itkCudaImageDataManagerCID4)

def itkCudaImageDataManagerCIF2_New():
    return itkCudaImageDataManagerCIF2.New()

class itkCudaImageDataManagerCIF2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIF2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIF2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageF2 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageF2"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF2

        Create a new object of the class itkCudaImageDataManagerCIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_swigregister(itkCudaImageDataManagerCIF2)

def itkCudaImageDataManagerCIF3_New():
    return itkCudaImageDataManagerCIF3.New()

class itkCudaImageDataManagerCIF3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIF3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIF3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageF3 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageF3"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF3

        Create a new object of the class itkCudaImageDataManagerCIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_swigregister(itkCudaImageDataManagerCIF3)

def itkCudaImageDataManagerCIF4_New():
    return itkCudaImageDataManagerCIF4.New()

class itkCudaImageDataManagerCIF4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIF4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIF4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageF4 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageF4"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF4

        Create a new object of the class itkCudaImageDataManagerCIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_swigregister(itkCudaImageDataManagerCIF4)

def itkCudaImageDataManagerCISS2_New():
    return itkCudaImageDataManagerCISS2.New()

class itkCudaImageDataManagerCISS2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCISS2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCISS2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageSS2 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageSS2"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCISS2

        Create a new object of the class itkCudaImageDataManagerCISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCISS2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_swigregister(itkCudaImageDataManagerCISS2)

def itkCudaImageDataManagerCISS3_New():
    return itkCudaImageDataManagerCISS3.New()

class itkCudaImageDataManagerCISS3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCISS3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCISS3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageSS3 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageSS3"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCISS3

        Create a new object of the class itkCudaImageDataManagerCISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCISS3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_swigregister(itkCudaImageDataManagerCISS3)

def itkCudaImageDataManagerCISS4_New():
    return itkCudaImageDataManagerCISS4.New()

class itkCudaImageDataManagerCISS4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCISS4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCISS4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageSS4 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageSS4"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCISS4

        Create a new object of the class itkCudaImageDataManagerCISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCISS4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_swigregister(itkCudaImageDataManagerCISS4)

def itkCudaImageDataManagerCIUC2_New():
    return itkCudaImageDataManagerCIUC2.New()

class itkCudaImageDataManagerCIUC2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUC2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUC2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUC2 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUC2"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUC2

        Create a new object of the class itkCudaImageDataManagerCIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUC2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_swigregister(itkCudaImageDataManagerCIUC2)

def itkCudaImageDataManagerCIUC3_New():
    return itkCudaImageDataManagerCIUC3.New()

class itkCudaImageDataManagerCIUC3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUC3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUC3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUC3 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUC3"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUC3

        Create a new object of the class itkCudaImageDataManagerCIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUC3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_swigregister(itkCudaImageDataManagerCIUC3)

def itkCudaImageDataManagerCIUC4_New():
    return itkCudaImageDataManagerCIUC4.New()

class itkCudaImageDataManagerCIUC4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUC4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUC4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUC4 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUC4"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUC4

        Create a new object of the class itkCudaImageDataManagerCIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUC4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_swigregister(itkCudaImageDataManagerCIUC4)

def itkCudaImageDataManagerCIUL2_New():
    return itkCudaImageDataManagerCIUL2.New()

class itkCudaImageDataManagerCIUL2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUL2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUL2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUL2 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUL2"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUL2

        Create a new object of the class itkCudaImageDataManagerCIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUL2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_swigregister(itkCudaImageDataManagerCIUL2)

def itkCudaImageDataManagerCIUL3_New():
    return itkCudaImageDataManagerCIUL3.New()

class itkCudaImageDataManagerCIUL3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUL3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUL3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUL3 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUL3"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUL3

        Create a new object of the class itkCudaImageDataManagerCIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUL3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_swigregister(itkCudaImageDataManagerCIUL3)

def itkCudaImageDataManagerCIUL4_New():
    return itkCudaImageDataManagerCIUL4.New()

class itkCudaImageDataManagerCIUL4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUL4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUL4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUL4 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUL4"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUL4

        Create a new object of the class itkCudaImageDataManagerCIUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUL4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_swigregister(itkCudaImageDataManagerCIUL4)

def itkCudaImageDataManagerCIUS2_New():
    return itkCudaImageDataManagerCIUS2.New()

class itkCudaImageDataManagerCIUS2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUS2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUS2_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUS2 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUS2"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUS2

        Create a new object of the class itkCudaImageDataManagerCIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUS2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_swigregister(itkCudaImageDataManagerCIUS2)

def itkCudaImageDataManagerCIUS3_New():
    return itkCudaImageDataManagerCIUS3.New()

class itkCudaImageDataManagerCIUS3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUS3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUS3_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUS3 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUS3"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUS3

        Create a new object of the class itkCudaImageDataManagerCIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUS3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_swigregister(itkCudaImageDataManagerCIUS3)

def itkCudaImageDataManagerCIUS4_New():
    return itkCudaImageDataManagerCIUS4.New()

class itkCudaImageDataManagerCIUS4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIUS4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIUS4_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageUS4 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageUS4"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUS4

        Create a new object of the class itkCudaImageDataManagerCIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUS4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_swigregister(itkCudaImageDataManagerCIUS4)

def itkCudaImageDataManagerCIVF22_New():
    return itkCudaImageDataManagerCIVF22.New()

class itkCudaImageDataManagerCIVF22(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF22_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF22_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF22 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF22"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF22

        Create a new object of the class itkCudaImageDataManagerCIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF22 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_swigregister(itkCudaImageDataManagerCIVF22)

def itkCudaImageDataManagerCIVF23_New():
    return itkCudaImageDataManagerCIVF23.New()

class itkCudaImageDataManagerCIVF23(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF23_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF23_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF23 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF23"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF23

        Create a new object of the class itkCudaImageDataManagerCIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF23 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_swigregister(itkCudaImageDataManagerCIVF23)

def itkCudaImageDataManagerCIVF24_New():
    return itkCudaImageDataManagerCIVF24.New()

class itkCudaImageDataManagerCIVF24(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF24_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF24_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF24 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF24"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF24

        Create a new object of the class itkCudaImageDataManagerCIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF24 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_swigregister(itkCudaImageDataManagerCIVF24)

def itkCudaImageDataManagerCIVF32_New():
    return itkCudaImageDataManagerCIVF32.New()

class itkCudaImageDataManagerCIVF32(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF32_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF32_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF32 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF32"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF32

        Create a new object of the class itkCudaImageDataManagerCIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF32 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_swigregister(itkCudaImageDataManagerCIVF32)

def itkCudaImageDataManagerCIVF33_New():
    return itkCudaImageDataManagerCIVF33.New()

class itkCudaImageDataManagerCIVF33(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF33_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF33_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF33 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF33"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF33

        Create a new object of the class itkCudaImageDataManagerCIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF33 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_swigregister(itkCudaImageDataManagerCIVF33)

def itkCudaImageDataManagerCIVF34_New():
    return itkCudaImageDataManagerCIVF34.New()

class itkCudaImageDataManagerCIVF34(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF34_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF34_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF34 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF34"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF34

        Create a new object of the class itkCudaImageDataManagerCIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF34 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_swigregister(itkCudaImageDataManagerCIVF34)

def itkCudaImageDataManagerCIVF42_New():
    return itkCudaImageDataManagerCIVF42.New()

class itkCudaImageDataManagerCIVF42(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF42_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF42_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF42 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF42"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF42

        Create a new object of the class itkCudaImageDataManagerCIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF42 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_swigregister(itkCudaImageDataManagerCIVF42)

def itkCudaImageDataManagerCIVF43_New():
    return itkCudaImageDataManagerCIVF43.New()

class itkCudaImageDataManagerCIVF43(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF43_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF43_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF43 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF43"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF43

        Create a new object of the class itkCudaImageDataManagerCIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF43 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_swigregister(itkCudaImageDataManagerCIVF43)

def itkCudaImageDataManagerCIVF44_New():
    return itkCudaImageDataManagerCIVF44.New()

class itkCudaImageDataManagerCIVF44(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF44_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF44_Pointer"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF44 *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF44"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF44

        Create a new object of the class itkCudaImageDataManagerCIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF44 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_swigregister(itkCudaImageDataManagerCIVF44)


[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pytrafficflow"
version = "1.0.0"
description = "A Python library for traffic flow simulation with PDE models, particle-based models, and real-world data pipelines"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Tiago Monteiro", email = "tiagomonteiro0715@gmail.com"}
]
maintainers = [
    {name = "Tiago Monteiro", email = "tiagomonteiro0715@gmail.com"}
]
keywords = ["traffic", "simulation", "pde", "particle", "idm", "lwr", "transportation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "matplotlib>=3.3.0",
    "dataclasses>=0.6; python_version<'3.7'",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "isort>=5.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "nbsphinx>=0.8",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-xdist>=2.0",
]

[project.urls]
Homepage = "https://github.com/tiagomonteiro0715/pytrafficflow"
Repository = "https://github.com/tiagomonteiro0715/pytrafficflow.git"
Issues = "https://github.com/tiagomonteiro0715/pytrafficflow/issues"
Documentation = "https://pytrafficflow.readthedocs.io/"

[project.scripts]
pytrafficflow = "pytrafficflow.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["pytrafficflow*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
pytrafficflow = ["*.png", "*.jpg", "*.jpeg", "*.gif", "*.svg"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pytrafficflow"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["pytrafficflow/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=pytrafficflow",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[project]
name = "python-env-resolver"
version = "2.0.0"
description = "Type-safe environment variable handling for Python with Pydantic"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = [
    "environment",
    "config",
    "configuration",
    "pydantic",
    "settings",
    "env",
    "dotenv",
    "secrets",
    "validation",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]
dependencies = [
    "pydantic>=2.0",
    "pydantic[email]>=2.12.0",
    "python-dotenv>=1.0.0",
]

[[project.authors]]
name = "Jag Reehal"
email = "jag@jagreehal.com"

[project.urls]
Homepage = "https://github.com/jagreehal/python-env-resolver"
Documentation = "https://github.com/jagreehal/python-env-resolver#readme"
Repository = "https://github.com/jagreehal/python-env-resolver"
Issues = "https://github.com/jagreehal/python-env-resolver/issues"
Changelog = "https://github.com/jagreehal/python-env-resolver/releases"


[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.4.0",
    "mypy>=1.8.0",
]
http = [
    "httpx>=0.27",
]
aws = [
    "boto3>=1.34",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B904",  # raise from within except (intentional for cleaner error messages)
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

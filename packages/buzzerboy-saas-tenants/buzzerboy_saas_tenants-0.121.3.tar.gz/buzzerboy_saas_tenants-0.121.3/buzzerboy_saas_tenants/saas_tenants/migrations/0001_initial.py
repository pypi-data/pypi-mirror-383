# Generated by Django 4.2.9 on 2025-02-17 01:24

import buzzerboy_saas_tenants.saas_tenants.models.accounts
import buzzerboy_saas_tenants.saas_tenants.models.analytics
import buzzerboy_saas_tenants.saas_tenants.models.tenant
import buzzerboy_saas_tenants.saas_tenants.models.tenant_setting
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('desc_prefix', models.CharField(default='<i class="bg-dark"></i>', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('flag_url', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='IdentityProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('idp_metadata_url', models.URLField()),
                ('idp_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StateProvince',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=255)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas_tenants.country')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BASIC', 'Basic Plan'), ('TEAM', 'Team Plan'), ('ENTERPRISE', 'Enterprise Plan')], default='BASIC', help_text='The subscription plan these features apply to.', max_length=10, unique=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='Price of the plan', max_digits=6)),
                ('description', models.TextField(blank=True, help_text='Description of the subscription plan')),
                ('user_limit', models.IntegerField(default=5, help_text='Number of users allowed')),
                ('department_limit', models.IntegerField(default=5, help_text='Number of departments allowed')),
                ('vulnerability_limit', models.IntegerField(default=5, help_text='Number of vulnerabilities allowed')),
                ('storage_limit', models.IntegerField(default=5, help_text='Storage limit in GB')),
                ('dashboard_access', models.BooleanField(default=False, help_text='Access to dashboard')),
                ('api_access', models.BooleanField(default=False, help_text='Access to API')),
                ('advanced_support', models.BooleanField(default=False, help_text='Access to advanced support')),
            ],
        ),
        migrations.CreateModel(
            name='SupportCase',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('request_type', models.CharField(choices=[('bug', 'Bug Report'), ('feature', 'Feature Request'), ('support', 'Support Inquiry')], max_length=20)),
                ('summary', models.CharField(max_length=255)),
                ('detailed_description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved'), ('in_progress', 'In Progress')], default='pending', max_length=20)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportedLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_key', models.CharField(max_length=4)),
                ('description', models.CharField(max_length=255)),
                ('flag_pic', models.ImageField(blank=True, default='', null=True, upload_to='settings/flags')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('company_name', models.CharField(blank=True, default='*** TENANT NOT SETUP ***', max_length=255, null=True, unique=True)),
                ('subdomain', models.CharField(blank=True, max_length=25, null=True)),
                ('support_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('company_slogan', models.TextField(blank=True, default='', null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('address', models.CharField(max_length=255, null=True)),
                ('city', models.CharField(max_length=20, null=True)),
                ('postalcode', models.CharField(max_length=10, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('fax', models.CharField(blank=True, max_length=20)),
                ('primary_account_email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('primary_account_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('company_logo', models.ImageField(blank=True, default='', null=True, upload_to=buzzerboy_saas_tenants.saas_tenants.models.tenant.Tenant.upload_company_logo)),
                ('beta_features_csv', models.TextField(blank=True, null=True)),
                ('user_invite_subject', models.CharField(blank=True, max_length=100, null=True)),
                ('user_invite_template', ckeditor.fields.RichTextField(blank=True, default="Please join our team. Click on the link below to create your account. <br><br><a href='{{invite_url}}'>{{invite_url}}</a>", null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('contract_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas_tenants.contractstatus')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='saas_tenants.country')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('state_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='saas_tenants.stateprovince')),
                ('subscription_plan', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='saas_tenants.subscriptionplan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Timezone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(max_length=63, unique=True)),
                ('offset', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('has_full_access', models.BooleanField(default=False)),
                ('has_nonstaff_access', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('profile_picture', models.ImageField(blank=True, default='', null=True, upload_to=buzzerboy_saas_tenants.saas_tenants.models.accounts.UserProfile.upload_profile_file_name)),
                ('phone_number', models.CharField(blank=True, max_length=25, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('postalcode', models.CharField(blank=True, max_length=7, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('linkedin_profile', models.CharField(blank=True, max_length=100, null=True)),
                ('github_profile', models.CharField(blank=True, max_length=100, null=True)),
                ('notification_preferences', models.JSONField(blank=True, default=buzzerboy_saas_tenants.saas_tenants.models.accounts.default_notification_preferences, null=True)),
                ('privacy_settings', models.JSONField(blank=True, default=buzzerboy_saas_tenants.saas_tenants.models.accounts.default_privacy_settings, null=True)),
                ('bio', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('interests', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('skills', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('education', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('experience', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('user_token', models.TextField(blank=True, null=True)),
                ('otp_code', models.CharField(blank=True, help_text='Stores the OTP code for verification.', max_length=6, null=True)),
                ('otp_code_secret', models.CharField(blank=True, max_length=32, null=True)),
                ('otp_generated_at', models.DateTimeField(blank=True, null=True)),
                ('otp_resend_limit', models.IntegerField(default=3)),
                ('status', models.CharField(choices=[('ENABLED', 'Enabled'), ('DISABLED', 'Disabled'), ('INVITED', 'Invited')], default='DISABLED', max_length=100)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas_tenants.country')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas_tenants.supportedlanguage')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('state_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas_tenants.stateprovince')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team', to='saas_tenants.tenant')),
                ('timezone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas_tenants.timezone')),
                ('user_object', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas_tenants.usertype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantLanguages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='', max_length=255)),
                ('company_slogan', models.TextField(default='')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='saas_tenants.supportedlanguage')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_languages', to='saas_tenants.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='SupportCaseResponse',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to=buzzerboy_saas_tenants.saas_tenants.models.tenant_setting.SupportCaseResponse.upload_support_case_attachments)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='saas_tenants.supportcase')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_alerts', models.BooleanField(default=True)),
                ('promotional_messages', models.BooleanField(default=False)),
                ('user_activity', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_types', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.CharField(choices=[('immediately', 'Immediately'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='immediately', max_length=50)),
                ('enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('preferred_language', models.CharField(default='en', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_notified', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_log', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(max_length=100)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_history', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('device_token', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_channels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyAnalytics',
            fields=[
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('month', models.IntegerField(default=buzzerboy_saas_tenants.saas_tenants.models.analytics.current_month)),
                ('year', models.IntegerField(default=buzzerboy_saas_tenants.saas_tenants.models.analytics.current_year)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='saas_tenants.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invites',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('access_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='saas_tenants.usertype')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='invites', to='saas_tenants.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_templates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BillingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_contact_name', models.CharField(max_length=50, null=True)),
                ('billing_contact_address', models.CharField(max_length=50, null=True)),
                ('billing_contact_city', models.CharField(max_length=50, null=True)),
                ('billing_contact_postalcode', models.CharField(max_length=50, null=True)),
                ('billing_contact_email', models.EmailField(max_length=255, null=True)),
                ('billing_contact_telephone', models.CharField(max_length=20, null=True)),
                ('billing_contact_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_billing_country', to='saas_tenants.country')),
                ('billing_contact_state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_billing_state', to='saas_tenants.stateprovince')),
                ('tenant', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_billing', to='saas_tenants.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=255, null=True)),
                ('module', models.CharField(max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_activity_performed_by', to='saas_tenants.userprofile')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_audit_logs', to='saas_tenants.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='UserTypeAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_path', models.CharField(max_length=255)),
                ('access_key', models.CharField(max_length=20)),
                ('user_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accesses', to='saas_tenants.usertype')),
            ],
            options={
                'unique_together': {('access_key', 'user_type')},
            },
        ),
    ]

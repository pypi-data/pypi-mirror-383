[project]
name = "app-store-download-count-badge-maker"
description = "A command-line tool to create badges displaying the number of app downloads from App Store"
authors = [{ name = "nnsnodnb", email = "nnsnodnb@gmail.com" }]
requires-python = ">=3.10,<3.15"
readme = "README.md"
license = "MIT"
keywords = [
    "apple",
    "app store",
    "badge",
    "download count",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Utilities",
    "Environment :: Console",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "httpx>=0.28.0,<0.29",
    "pandas>=2.2.2,<3",
    "PyJWT[crypto]>=2.9.0,<3",
    "PyYAML>=6.0.2,<7",
    "click>=8.1.7,<9",
]
dynamic = ["version"]

[project.urls]
repository = "https://github.com/nnsnodnb/app-store-download-count-badge-maker"

[project.scripts]
app-store-download-count-badge-maker = "maker.main:cli"

[dependency-groups]
dev = [
    "mypy>=1.11.2,<2",
    "invoke>=2.2.0,<3",
    "types-pyyaml>=6.0.12.20240808,<7",
    "pytest-httpx>=0.35.0,<0.36",
    "pytest-asyncio>=1.0.0,<2",
    "pytest-mock>=3.14.0,<4",
    "ruff>=0.14.0,<0.15",
    "hatch>=1.14.2",
    "uv-dynamic-versioning>=0.11.2",
]

[tool.hatch.build.targets.sdist]
include = ["maker"]

[tool.hatch.build.targets.wheel]
include = ["maker"]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.hooks.version]
path = "maker/_version.py"
vsc = "git"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = ["E501"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests",
]

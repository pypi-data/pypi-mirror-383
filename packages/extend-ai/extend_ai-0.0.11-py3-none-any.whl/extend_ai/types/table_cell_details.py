# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class TableCellDetails(UncheckedBaseModel):
    """
    Details for table cell blocks
    """

    type: typing.Literal["table_cell_details"] = pydantic.Field(default="table_cell_details")
    """
    Indicates this is a table cell details object
    """

    row_index: typing_extensions.Annotated[int, FieldMetadata(alias="rowIndex")]
    column_index: typing_extensions.Annotated[int, FieldMetadata(alias="columnIndex")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

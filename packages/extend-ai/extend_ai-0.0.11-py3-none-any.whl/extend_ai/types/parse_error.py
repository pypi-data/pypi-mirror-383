# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .parse_error_code import ParseErrorCode


class ParseError(UncheckedBaseModel):
    code: typing.Optional[ParseErrorCode] = None
    message: typing.Optional[str] = None
    request_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="requestId")] = None
    retryable: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

[project]
name = "py-capnweb"
version = "0.4.1"
description = "Python implementation of the Cap'n Web protocol"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT OR Apache-2.0"}
authors = [
    {name = "Cap'n Web Contributors"}
]
keywords = ["rpc", "capabilities", "capnweb", "websockets", "http3"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "aiohttp>=3.9.0",
    "websockets>=12.0",
    "typing-extensions>=4.9.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-asyncio>=1.2.0",
    "cryptography>=46.0.2",
    "aioquic>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/abilian/py-capnweb"
Documentation = "https://github.com/abilian/py-capnweb#readme"
Repository = "https://github.com/abilian/py-capnweb.git"
Issues = "https://github.com/abilian/py-capnweb/issues"
Changelog = "https://github.com/abilian/py-capnweb/blob/main/CHANGES.md"

[dependency-groups]
dev = [
    "honcho>=2.0.0",
    "hypothesis>=6.100.0",
    "nox>=2025.5.1",
    "pyrefly>=0.35.0",
    "pytest-asyncio>=1.2.0",
    "pyupgrade>=3.20.0",
    "ruff>=0.13.2",
    "tox>=4.30.2",
    "ty>=0.0.1a21",
    "uv-build>=0.8.22",
    "vulture>=2.14",
]

[project.optional-dependencies]
dev = [
    "hypothesis>=6.100.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.8.0",
    "ruff>=0.1.0",
]
interop = [
    "httpx>=0.25.0",
]
webtransport = [
    "aioquic>=1.2.0",
]

[build-system]
requires = ["uv-build>=0.8.4,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "capnweb"
module-root = "src"

#
# Pytest
#
[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=capnweb",
    "--cov-report=term-missing:skip-covered",
]
markers = [
    "asyncio: mark test as an asyncio test",
]

#
# Coverage
#
[tool.coverage.run]
source = ["python/capnweb"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]


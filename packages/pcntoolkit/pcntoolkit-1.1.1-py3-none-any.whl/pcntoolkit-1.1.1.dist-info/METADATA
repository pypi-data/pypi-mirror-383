Metadata-Version: 2.4
Name: pcntoolkit
Version: 1.1.1
Summary: Predictive Clinical Neuroscience Toolkit
Author: Andre Marquand, Stijn de Boer, Seyed Mostafa Kia, Saige Rutherford, Charlotte Fraza, Barbora Rehák Bučková, Pieter Barkema, Thomas Wolfers, Mariam Zabihi, Richard Dinga, Johanna Bayer, Maarten Mennes, Hester Huijsdens, Linden Parkes, Pierre Berthet
License-Expression: GPL-3.0-only
Requires-Python: <3.13,>=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: nibabel>=5.3.1
Requires-Dist: pymc>=5.19.1
Requires-Dist: scikit-learn>=1.5.2
Requires-Dist: six>=1.16.0
Requires-Dist: scipy>=1.12
Requires-Dist: matplotlib>=3.9.2
Requires-Dist: seaborn>=0.13.2
Requires-Dist: numba>=0.60.0
Requires-Dist: nutpie>=0.13.2
Requires-Dist: joblib>=1.4.2
Requires-Dist: dill>=0.3.9
Requires-Dist: ipywidgets>=8.1.5
Requires-Dist: ipykernel>=6.29.5
Provides-Extra: dev
Requires-Dist: toml; extra == "dev"
Requires-Dist: sphinx-tabs>=3.4.7; extra == "dev"
Requires-Dist: pytest>=8.3.3; extra == "dev"
Requires-Dist: black>=24.10.0; extra == "dev"
Requires-Dist: sphinx-rtd-theme>=3.0.2; extra == "dev"
Requires-Dist: ruff>=0.8.6; extra == "dev"
Requires-Dist: pytest-cov>=6.0.0; extra == "dev"
Dynamic: license-file

# Predictive Clinical Neuroscience Toolkit
Predictive Clinical Neuroscience software toolkit (formerly nispat). 

A Python package for normative modelling, spatial statistics and pattern recognition.

# IMPORTANT 
## Deprecation warning

This is PCNtoolkit version 1.X.X, released originally in June 2025. Any scripts, models, and results created with version 0.X.X are **not compatible** with this and future versions of the toolkit. 

To use the models created with versions 0.35 and earlier, please install the appropriate version using `pip install pcntoolkit==0.35`, or replace 0.35 with your desired version. The old version of the toolbox is also still available on [GitHub](https://github.com/amarquand/PCNtoolkit/tree/v0.35).

## Installation

```bash
pip install pcntoolkit
```

## Documentation

See the [documentation](https://pcntoolkit.readthedocs.io/en/latest/) for more details.

Documentation for the earlier version of the toolbox is available [here](https://pcntoolkit.readthedocs.io/en/v0.35/)

## Example usage

```python
from pcntoolkit import {load_fcon, BLR, NormativeModel}

fcon1000 = load_fcon()

train, test = fcon1000.train_test_split()

# Create a BLR model with heteroskedastic noise
model = NormativeModel(BLR(heteroskedastic=True), 
                       inscaler='standardize', 
                       outscaler='standardize')

model.fit_predict(train, test)
```


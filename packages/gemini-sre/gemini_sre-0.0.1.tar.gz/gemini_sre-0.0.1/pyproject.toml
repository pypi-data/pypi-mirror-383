[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gemini-sre"
version = "0.0.1"
description = "Example of Production-ready Google Gemini API wrapper with SRE features"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    {name = "Giorgio C"}
]
keywords = [
    "gemini",
    "google",
    "ai",
    "llm",
    "sre",
    "reliability",
    "monitoring",
    "retry",
    "circuit-breaker",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "google-genai>=1.42.0",
    "google-cloud-monitoring>=2.27.0",
    "google-cloud-logging>=3.12.0",
    "pydantic>=2.12.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.15.1",
    "black>=23.0.0",
    "isort>=5.13.2",
    "ruff>=0.8.4",
    "mypy>=1.0.0",
    "bandit>=1.7.10",
    "pre-commit>=4.0.0",
]
dashboards = [
    "google-cloud-monitoring-dashboards>=2.18.0",
]

[project.urls]
Homepage = "https://github.com/miticojo/gemini-sre-client"
Documentation = "https://github.com/miticojo/gemini-sre-client/blob/main/README.md"
Repository = "https://github.com/miticojo/gemini-sre-client"
Issues = "https://github.com/miticojo/gemini-sre-client/issues"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.pylint.messages_control]
max-line-length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["gemini_sre"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B", "F401", "F811"]

[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101"]

[project]
name = "lightspeed-stack"
dynamic = []
description = "LLM tooling stack"
authors = []
maintainers = [
    { email = "tisnik@centrum.cz", name = "Pavel TiÅ¡novskÃ½" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: Apache Software License",
]
keywords = [
    "LLM",
    "RAG",
]
requires-python = ">=3.12,<3.14"
readme = "README.md"
dependencies = [
    "fastapi>=0.115.12",
    "uvicorn>=0.34.3",
    "kubernetes>=30.1.0",
    "llama-stack==0.2.22",
    "llama-stack-client==0.2.22",
    "rich>=14.0.0",
    "cachetools>=6.1.0",
    "prometheus-client>=0.22.1",
    "starlette>=0.47.1",
    "aiohttp>=3.12.14",
    "authlib>=1.6.0",
    "email-validator>=2.2.0",
    "openai>=1.99.9",
    "sqlalchemy>=2.0.42",
    "semver<4.0.0",
    "jsonpath-ng>=1.6.1",
    "psycopg2-binary>=2.9.10",
]
version = "0.3.0"

[project.license]
file = "LICENSE"

[project.scripts]
lightspeed-stack = "lightspeed_stack:main"

[project.urls]
Homepage = "https://github.com/lightspeed-core/lightspeed-stack"
Issues = "https://github.com/lightspeed-core/lightspeed-stack/issues"

[tool.pyright]
exclude = [
    "src/authentication/k8s.py",
]
extraPaths = [
    "./src",
]

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "src/version.py"

[tool.behave]
paths = [
    "tests/e2e/features",
]

[tool.uv]
index = [
    { name = "pytorch-cpu", url = "https://download.pytorch.org/whl/cpu", explicit = true },
]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu" },
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = [
    "src",
]
addopts = [
    "--import-mode=importlib",
]

[tool.pylint.main]
source-roots = "src"
ignore = [
    "query.py",
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "R0801",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=1.0.0",
    "pyright>=1.1.401",
    "pylint>=3.3.7",
    "pydocstyle>=6.3.0",
    "mypy>=1.16.0",
    "types-PyYAML>=6.0.2",
    "types-requests>=2.28.0",
    "ruff>=0.11.13",
    "aiosqlite",
    "behave>=1.3.0",
    "types-cachetools>=6.1.0.20250717",
    "build>=1.2.2.post1",
    "twine>=6.1.0",
    "openapi-to-md>=0.1.0b2",
    "pytest-subtests>=0.14.2",
    "bandit>=1.8.6",
]
llslibdev = [
    "matplotlib>=3.10.0",
    "pillow>=11.1.0",
    "pandas>=2.2.3",
    "scikit-learn>=1.5.2",
    "psycopg2-binary>=2.9.10",
    "tree_sitter>=0.24.0",
    "pythainlp>=3.0.10",
    "langdetect>=1.0.9",
    "emoji>=2.1.0",
    "nltk>=3.8.1",
    "litellm>=1.75.5.post1",
    "sentence-transformers>=5.0.0",
    "faiss-cpu>=1.11.0",
    "requests>=2.32.4",
    "aiosqlite>=0.21.0",
    "datasets>=3.6.0",
    "opentelemetry-sdk>=1.34.1",
    "opentelemetry-exporter-otlp>=1.34.1",
    "transformers>=4.34.0",
    "numpy==2.2.6",
    "mcp>=1.9.4",
    "torch==2.7.1",
    "trl>=0.18.2",
    "peft>=0.15.2",
    "autoevals>=0.0.129",
    "fire>=0.7.0",
    "opentelemetry-instrumentation>=0.55b0",
    "blobfile>=3.0.0",
    "psutil>=7.0.0",
]
build = [
    "build>=1.2.2.post1",
    "twine>=6.1.0",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

from __future__ import annotations


from pointblank.actions import send_slack_notification


def test_send_slack_notification_dry_run(capsys):
    send_slack_notification(
        step_msg="""ðŸš¨ *Validation Step Alert*
â€¢ Step Number: {step}
â€¢ Column: {column}
â€¢ Test Type: {type}
â€¢ Value Tested: {value}
â€¢ Severity: {level} (level {level_num})
â€¢ Brief: {autobrief}
â€¢ Details: {failure_text}
â€¢ Time: {time}""",
        summary_msg="""ðŸ“Š *Validation Summary Report*
*Overview*
â€¢ Status: {highest_severity}
â€¢ All Passed: {all_passed}
â€¢ Total Steps: {n_steps}

*Step Results*
â€¢ Passing Steps: {n_passing_steps}
â€¢ Failing Steps: {n_failing_steps}
â€¢ Warning Level: {n_warning_steps}
â€¢ Error Level: {n_error_steps}
â€¢ Critical Level: {n_critical_steps}

*Table Info*
â€¢ Table Name: {tbl_name}
â€¢ Row Count: {tbl_row_count}
â€¢ Column Count: {tbl_column_count}

*Timing*
â€¢ Duration: {validation_duration}s
â€¢ Completed: {time}""",
        debug=True,
    )

    # Capture the output and verify that "notification" was printed to the console
    captured = capsys.readouterr()
    assert "=== Step Notification Preview ===" in captured.out
    assert "â€¢ Step Number: 1" in captured.out
    assert "â€¢ Column: column_name" in captured.out
    assert "â€¢ Test Type: col_vals_gt" in captured.out
    assert "â€¢ Value Tested: 100" in captured.out
    assert "â€¢ Severity: critical (level 50)" in captured.out
    assert "â€¢ Brief: Values in column_name must be greater than 100" in captured.out
    assert "â€¢ Details: 25% of values failed this test" in captured.out
    assert "â€¢ Time: " in captured.out
    assert "=== Summary Notification Preview ===" in captured.out
    assert "â€¢ Status: critical" in captured.out
    assert "â€¢ All Passed: False" in captured.out
    assert "â€¢ Total Steps: 5" in captured.out
    assert "â€¢ Passing Steps: 3" in captured.out
    assert "â€¢ Failing Steps: 2" in captured.out
    assert "â€¢ Warning Level: 1" in captured.out
    assert "â€¢ Error Level: 0" in captured.out
    assert "â€¢ Critical Level: 1" in captured.out
    assert "â€¢ Table Name: example_table" in captured.out
    assert "â€¢ Row Count: 1000" in captured.out
    assert "â€¢ Column Count: 8" in captured.out
    assert "â€¢ Duration: 1.23s" in captured.out
    assert "â€¢ Completed: " in captured.out

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

name: CI Tests

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Java for PySpark
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: pytest unit tests
        run: |
          make test
        env:
          # Optimize PySpark for CI environment
          PYSPARK_DRIVER_MEMORY: 1g
          PYSPARK_EXECUTOR_MEMORY: 1g
          SPARK_LOCAL_IP: 127.0.0.1
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: "py${{ matrix.python-version }}"
          token: ${{ secrets.CODECOV_TOKEN }}

  release-pypi:
    name: "Release to pypi"
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: "Build Package"
        run: |
          python -m pip install build wheel
          python -m build --sdist --wheel
      - name: "Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

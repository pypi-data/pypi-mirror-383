[
    {
        "i": 1,
        "i_o": 1,
        "assertion_type": "col_vals_gt",
        "column": "a_doubled",
        "values": 0,
        "inclusive": null,
        "na_pass": false,
        "pre": "def complex_preprocessing(df):\n    \"\"\"Complex preprocessing combining multiple operations.\"\"\"\n    return (\n        df.filter(pl.col(\"a\") > 1)\n        .with_columns((pl.col(\"a\") * 2).alias(\"a_doubled\"), (pl.col(\"d\") / 10).alias(\"d_scaled\"))\n        .filter(pl.col(\"d_scaled\") > 10)\n    )",
        "segments": null,
        "thresholds": "Thresholds(warning=None, error=None, critical=None)",
        "label": null,
        "brief": null,
        "active": true,
        "all_passed": true,
        "n": 7,
        "n_passed": 7,
        "n_failed": 0,
        "f_passed": 1.0,
        "f_failed": 0.0,
        "warning": null,
        "error": null,
        "critical": null,
        "time_processed": "2025-10-02T04:16:44.706+00:00",
        "proc_duration_s": 0.00161
    },
    {
        "i": 2,
        "i_o": 2,
        "assertion_type": "col_vals_gt",
        "column": "d_scaled",
        "values": 15,
        "inclusive": null,
        "na_pass": false,
        "pre": "def complex_preprocessing(df):\n    \"\"\"Complex preprocessing combining multiple operations.\"\"\"\n    return (\n        df.filter(pl.col(\"a\") > 1)\n        .with_columns((pl.col(\"a\") * 2).alias(\"a_doubled\"), (pl.col(\"d\") / 10).alias(\"d_scaled\"))\n        .filter(pl.col(\"d_scaled\") > 10)\n    )",
        "segments": null,
        "thresholds": "Thresholds(warning=None, error=None, critical=None)",
        "label": null,
        "brief": null,
        "active": true,
        "all_passed": false,
        "n": 7,
        "n_passed": 5,
        "n_failed": 2,
        "f_passed": 0.7142857142857143,
        "f_failed": 0.2857142857142857,
        "warning": null,
        "error": null,
        "critical": null,
        "time_processed": "2025-10-02T04:16:44.708+00:00",
        "proc_duration_s": 0.001607
    }
]
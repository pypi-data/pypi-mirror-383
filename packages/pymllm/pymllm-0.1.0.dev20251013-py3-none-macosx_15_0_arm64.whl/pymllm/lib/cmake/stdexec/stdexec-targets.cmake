# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "3.0.0")
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 3.0.0...3.31)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS STDEXEC::stdexec STDEXEC::system_context)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target STDEXEC::stdexec
add_library(STDEXEC::stdexec INTERFACE IMPORTED)

set_target_properties(STDEXEC::stdexec PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_COMPILE_OPTIONS "\$<\$<COMPILE_LANG_AND_ID:CXX,GNU>:-fcoroutines>;\$<\$<COMPILE_LANG_AND_ID:CXX,GNU>:-fconcepts-diagnostics-depth=10>;\$<\$<COMPILE_LANG_AND_ID:CXX,MSVC>:/Zc:__cplusplus;/Zc:preprocessor>"
  INTERFACE_LINK_LIBRARIES "Threads::Threads"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(STDEXEC::stdexec
    INTERFACE
      FILE_SET "headers"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/exec/any_sender_of.hpp" "${_IMPORT_PREFIX}/include/exec/async_scope.hpp" "${_IMPORT_PREFIX}/include/exec/at_coroutine_exit.hpp" "${_IMPORT_PREFIX}/include/exec/create.hpp" "${_IMPORT_PREFIX}/include/exec/env.hpp" "${_IMPORT_PREFIX}/include/exec/finally.hpp" "${_IMPORT_PREFIX}/include/exec/inline_scheduler.hpp" "${_IMPORT_PREFIX}/include/exec/into_tuple.hpp" "${_IMPORT_PREFIX}/include/exec/just_from.hpp" "${_IMPORT_PREFIX}/include/exec/libdispatch_queue.hpp" "${_IMPORT_PREFIX}/include/exec/materialize.hpp" "${_IMPORT_PREFIX}/include/exec/on.hpp" "${_IMPORT_PREFIX}/include/exec/on_coro_disposition.hpp" "${_IMPORT_PREFIX}/include/exec/repeat_effect_until.hpp" "${_IMPORT_PREFIX}/include/exec/repeat_n.hpp" "${_IMPORT_PREFIX}/include/exec/reschedule.hpp" "${_IMPORT_PREFIX}/include/exec/scope.hpp" "${_IMPORT_PREFIX}/include/exec/sequence.hpp" "${_IMPORT_PREFIX}/include/exec/sequence_senders.hpp" "${_IMPORT_PREFIX}/include/exec/single_thread_context.hpp" "${_IMPORT_PREFIX}/include/exec/start_now.hpp" "${_IMPORT_PREFIX}/include/exec/static_thread_pool.hpp" "${_IMPORT_PREFIX}/include/exec/system_context.hpp" "${_IMPORT_PREFIX}/include/exec/task.hpp" "${_IMPORT_PREFIX}/include/exec/timed_scheduler.hpp" "${_IMPORT_PREFIX}/include/exec/timed_thread_scheduler.hpp" "${_IMPORT_PREFIX}/include/exec/trampoline_scheduler.hpp" "${_IMPORT_PREFIX}/include/exec/variant_sender.hpp" "${_IMPORT_PREFIX}/include/exec/when_any.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__atomic_intrusive_queue.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__atomic_ref.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__basic_sequence.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__bit_cast.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__bwos_lifo_queue.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__numa.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__system_context_default_impl.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__system_context_default_impl_entry.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__system_context_replaceability_api.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/__xorshift.hpp" "${_IMPORT_PREFIX}/include/exec/__detail/intrusive_heap.hpp" "${_IMPORT_PREFIX}/include/exec/linux/io_uring_context.hpp" "${_IMPORT_PREFIX}/include/exec/linux/memory_mapped_region.hpp" "${_IMPORT_PREFIX}/include/exec/linux/safe_file_descriptor.hpp" "${_IMPORT_PREFIX}/include/exec/linux/__detail/memory_mapped_region.hpp" "${_IMPORT_PREFIX}/include/exec/linux/__detail/safe_file_descriptor.hpp" "${_IMPORT_PREFIX}/include/exec/sequence/any_sequence_of.hpp" "${_IMPORT_PREFIX}/include/exec/sequence/empty_sequence.hpp" "${_IMPORT_PREFIX}/include/exec/sequence/ignore_all_values.hpp" "${_IMPORT_PREFIX}/include/exec/sequence/iterate.hpp" "${_IMPORT_PREFIX}/include/exec/sequence/transform_each.hpp" "${_IMPORT_PREFIX}/include/stdexec/concepts.hpp" "${_IMPORT_PREFIX}/include/stdexec/coroutine.hpp" "${_IMPORT_PREFIX}/include/stdexec/execution.hpp" "${_IMPORT_PREFIX}/include/stdexec/functional.hpp" "${_IMPORT_PREFIX}/include/stdexec/stop_token.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__as_awaitable.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__awaitable.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__basic_sender.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__bulk.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__completion_signatures.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__concepts.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__config.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__connect_awaitable.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__continues_on.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__cpo.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__debug.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__diagnostics.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__domain.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__ensure_started.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__env.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__execute.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__execution_fwd.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__force_include.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__inline_scheduler.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__into_variant.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__intrusive_mpsc_queue.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__intrusive_ptr.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__intrusive_queue.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__intrusive_slist.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__just.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__let.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__manual_lifetime.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__meta.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__on.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__operation_states.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__optional.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__ranges.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__read_env.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__receiver_adaptor.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__receiver_ref.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__receivers.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__run_loop.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__schedule_from.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__schedulers.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__scope.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__sender_adaptor_closure.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__sender_introspection.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__senders.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__senders_core.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__shared.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__spin_loop_pause.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__split.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__start_detached.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__starts_on.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__stop_token.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__stopped_as_error.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__stopped_as_optional.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__submit.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__sync_wait.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__tag_invoke.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__then.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__transfer_just.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__transform_completion_signatures.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__transform_sender.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__tuple.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__type_traits.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__upon_error.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__upon_stopped.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__utility.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__variant.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__when_all.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__with_awaitable_senders.hpp" "${_IMPORT_PREFIX}/include/stdexec/__detail/__write_env.hpp"
    INTERFACE
      FILE_SET "version_config"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/stdexec_version_config.hpp"
  )
else()
  set_property(TARGET STDEXEC::stdexec
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target STDEXEC::system_context
add_library(STDEXEC::system_context STATIC IMPORTED)

set_target_properties(STDEXEC::system_context PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_COMPILE_OPTIONS "\$<\$<COMPILE_LANG_AND_ID:CXX,MSVC>:/Zc:__cplusplus;/Zc:preprocessor>"
  INTERFACE_LINK_LIBRARIES "STDEXEC::stdexec"
)

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/stdexec-targets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)

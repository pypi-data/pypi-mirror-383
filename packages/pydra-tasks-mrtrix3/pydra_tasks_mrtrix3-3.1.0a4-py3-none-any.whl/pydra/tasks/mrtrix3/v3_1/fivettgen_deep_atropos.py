# Auto-generated by mrtrix3/app.py:print_pydra_code()

import typing
from pathlib import Path  # noqa: F401
from fileformats.generic import FsObject, File, Directory  # noqa: F401
from fileformats.vendor.mrtrix3.medimage import Tracks, ImageIn, ImageOut  # noqa: F401
from pydra.utils.typing import MultiInputObj
from pydra.compose import shell


@shell.define
class FivettGen_Deep_atropos(shell.Task["FivettGen_Deep_atropos.Outputs"]):
    """

    References
    ----------

    * Smith, R. E.; Tournier, J.-D.; Calamante, F. & Connelly, A. Anatomically-constrained tractography: Improved diffusion MRI streamlines tractography through effective use of anatomical information. NeuroImage, 2012, 62, 1924-1938

    * N.J. Tustison, P.A. Cook, A.J. Holbrook, H.J. Johnson, J. Muschelli, G.A. Devenyi, J.T. Duda, S.R. Das, N.C. Cullen, D.L. Gillen, M.A. Yassa, J.R. Stone, J.C. Gee, and B.B. Avants. The ANTsX ecosystem for quantitative biological and medical imaging. Scientific Reports, 11(1):9068 (2021), pp. 1-13.

    Tournier, J.-D.; Smith, R. E.; Raffelt, D.; Tabbara, R.; Dhollander, T.; Pietsch, M.; Christiaens, D.; Jeurissen, B.; Yeh, C.-H. & Connelly, A. MRtrix3: A fast, flexible and open software framework for medical image processing and visualisation. NeuroImage, 2019, 202, 116137

    --------------



    **Author:** Lucius S. Fekonja (lucius.fekonja[at]charite.de) and Robert E. Smith (robert.smith@florey.edu.au)

    **Copyright:** Copyright (c) 2008-2025 the MRtrix3 contributors.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.

    Covered Software is provided under this License on an "as is"
    basis, without warranty of any kind, either expressed, implied, or
    statutory, including, without limitation, warranties that the
    Covered Software is free of defects, merchantable, fit for a
    particular purpose or non-infringing.
    See the Mozilla Public License v. 2.0 for more details.

    For more details, see http://www.mrtrix.org/.

    """

    executable = ("5ttgen", "deep_atropos")

    in_file: ImageIn = shell.arg(
        position=1,
        argstr="",
        help="The input Deep Atropos segmentation image",
    )
    nocrop: bool = shell.arg(
        help="Do NOT crop the resulting 5TT image to reduce its size (keep the same dimensions as the input image)",
        argstr="-nocrop",
        default=False,
    )
    sgm_amyg_hipp: bool = shell.arg(
        help="Represent the amygdalae and hippocampi as sub-cortical grey matter in the 5TT image",
        argstr="-sgm_amyg_hipp",
        default=False,
    )
    nocleanup: bool = shell.arg(
        help="do not delete intermediate files during script execution, and do not delete scratch directory at script completion.",
        argstr="-nocleanup",
        default=False,
    )
    scratch: Directory | None = shell.arg(
        help="manually specify an existing directory in which to generate the scratch directory.",
        argstr="-scratch",
        default=None,
    )
    cont: typing.Any | None = shell.arg(
        help="continue the script from a previous execution; must provide the scratch directory path, and the name of the last successfully-generated file.",
        argstr="-cont",
        default=None,
    )
    info: bool = shell.arg(
        help="display information messages.",
        argstr="-info",
        default=False,
    )
    quiet: bool = shell.arg(
        help="do not display information messages or progress status. Alternatively, this can be achieved by setting the MRTRIX_QUIET environment variable to a non-empty string.",
        argstr="-quiet",
        default=False,
    )
    debug: bool = shell.arg(
        help="display debugging messages.",
        argstr="-debug",
        default=False,
    )
    force: bool = shell.arg(
        help="force overwrite of output files.",
        argstr="-force",
        default=False,
    )
    nthreads: int | None = shell.arg(
        help="use this number of threads in multi-threaded applications (set to 0 to disable multi-threading).",
        argstr="-nthreads",
        default=None,
    )
    config: MultiInputObj[MultiInputObj] | None = shell.arg(
        help="temporarily set the value of an MRtrix config file entry.",
        argstr="-config",
        default=None,
    )
    help: bool = shell.arg(
        help="display this information page and exit.",
        argstr="-help",
        default=False,
    )
    version: bool = shell.arg(
        help="display version information and exit.",
        argstr="-version",
        default=False,
    )
    white_stem: bool = shell.arg(
        help="Classify the brainstem as white matter",
        argstr="-white_stem",
        default=False,
    )

    class Outputs(shell.Outputs):
        out_file: ImageOut = shell.outarg(
            position=2,
            argstr="",
            help="The output 5TT image",
            path_template="out_file.mif",
        )

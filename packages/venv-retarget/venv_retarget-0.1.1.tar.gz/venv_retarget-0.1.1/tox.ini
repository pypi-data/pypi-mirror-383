# SPDX-FileCopyrightText: Peter Pentchev <roam@ringlet.net>
# SPDX-License-Identifier: BSD-2-Clause

[tox]
minversion = 4.22
envlist =
  ruff
  format
  reuse
  uvoxen-sync-check
  mypy
  unit-tests
  docs
isolated_build = True

[defs]
pyfiles =
  src/venv_retarget \
  tests/unit

[testenv:ruff]
skip_install = True
tags =
  check
  ruff
  quick
dependency_groups =
  testenv-ruff
commands =
  ruff check -- {[defs]pyfiles}

[testenv:format]
skip_install = True
tags =
  check
  quick
dependency_groups =
  testenv-ruff
commands =
  ruff check --config ruff-base.toml --select=D,I --diff -- {[defs]pyfiles}
  ruff format --config ruff-base.toml --check --diff -- {[defs]pyfiles}

[testenv:reformat]
skip_install = True
tags =
  format
  manual
dependency_groups =
  testenv-ruff
commands =
  ruff check --config ruff-base.toml --select=D,I --fix -- {[defs]pyfiles}
  ruff format --config ruff-base.toml -- {[defs]pyfiles}

[testenv:mypy]
tags =
  check
dependency_groups =
  testenv-mypy
setenv =
  MYPYPATH = {toxinidir}/stubs
commands =
  mypy {[defs]pyfiles}

[testenv:pyupgrade]
skip_install = True
tags =
  check
  manual
dependency_groups =
  testenv-pyupgrade
allowlist_externals =
  sh
commands =
  sh -c 'pyupgrade --py311-plus src/venv_retarget/*.py tests/unit/*.py'

[testenv:unit-tests]
tags =
  tests
dependency_groups =
  testenv-unit-tests
passenv =
  VENV_PYTHON
commands =
  pytest {posargs} tests/unit

[testenv:docs]
skip_install = True
tags =
  docs
dependency_groups =
  docs
commands =
  mkdocs build

[testenv:reuse]
skip_install = True
tags =
  check
  quick
dependency_groups =
  testenv-reuse
commands =
  reuse lint

[testenv:uvoxen-sync-check]
skip_install = True
tags =
  check
  quick
dependency_groups =
  testenv-uvoxen
commands =
  uvoxen req generate -g testenv-mypy -o -
  uvoxen req generate --check -g docs
  uvoxen tox generate --check

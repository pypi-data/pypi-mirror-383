"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from plex_api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PlayerTypedDict(TypedDict):
    r"""Information about the player being used for playback"""

    title: NotRequired[str]
    r"""The title of the client"""
    address: NotRequired[str]
    r"""The remote address"""
    local: NotRequired[bool]
    r"""Indicating if the client is playing from the local LAN"""
    machine_identifier: NotRequired[str]
    r"""The identifier of the client"""
    model: NotRequired[str]
    r"""The model of the client"""
    platform: NotRequired[str]
    r"""The platform of the client"""
    platform_version: NotRequired[str]
    r"""The platformVersion of the client"""
    product: NotRequired[str]
    r"""The product name of the client"""
    relayed: NotRequired[bool]
    r"""Indicating if the client is playing over a relay connection"""
    remote_public_address: NotRequired[str]
    r"""The client's public address"""
    secure: NotRequired[bool]
    r"""Indicating if the client is playing over HTTPS"""
    state: NotRequired[str]
    r"""The client's last reported state"""
    user_id: NotRequired[int]
    r"""The id of the user"""
    vendor: NotRequired[str]
    r"""The vendor of the client"""
    version: NotRequired[str]
    r"""The version of the client"""


class Player(BaseModel):
    r"""Information about the player being used for playback"""

    title: Optional[str] = None
    r"""The title of the client"""

    address: Optional[str] = None
    r"""The remote address"""

    local: Optional[bool] = None
    r"""Indicating if the client is playing from the local LAN"""

    machine_identifier: Annotated[
        Optional[str], pydantic.Field(alias="machineIdentifier")
    ] = None
    r"""The identifier of the client"""

    model: Optional[str] = None
    r"""The model of the client"""

    platform: Optional[str] = None
    r"""The platform of the client"""

    platform_version: Annotated[
        Optional[str], pydantic.Field(alias="platformVersion")
    ] = None
    r"""The platformVersion of the client"""

    product: Optional[str] = None
    r"""The product name of the client"""

    relayed: Optional[bool] = None
    r"""Indicating if the client is playing over a relay connection"""

    remote_public_address: Annotated[
        Optional[str], pydantic.Field(alias="remotePublicAddress")
    ] = None
    r"""The client's public address"""

    secure: Optional[bool] = None
    r"""Indicating if the client is playing over HTTPS"""

    state: Optional[str] = None
    r"""The client's last reported state"""

    user_id: Annotated[Optional[int], pydantic.Field(alias="userID")] = None
    r"""The id of the user"""

    vendor: Optional[str] = None
    r"""The vendor of the client"""

    version: Optional[str] = None
    r"""The version of the client"""

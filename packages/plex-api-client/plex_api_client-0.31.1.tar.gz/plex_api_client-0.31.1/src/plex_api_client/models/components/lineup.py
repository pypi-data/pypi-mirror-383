"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from plex_api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class LineupType(int, Enum):
    r"""- `-1`: N/A
    - `0`: Over the air
    - `1`: Cable
    - `2`: Satellite
    - `3`: IPTV
    - `4`: Virtual

    """

    MINUS_1 = -1
    ZERO = 0
    ONE = 1
    TWO = 2
    THREE = 3
    FOUR = 4


class LineupTypedDict(TypedDict):
    title: NotRequired[str]
    type: NotRequired[str]
    r"""The type of this object (`lineup` in this case)"""
    lineup_type: NotRequired[LineupType]
    r"""- `-1`: N/A
    - `0`: Over the air
    - `1`: Cable
    - `2`: Satellite
    - `3`: IPTV
    - `4`: Virtual

    """
    location: NotRequired[str]
    uuid: NotRequired[str]
    r"""The uuid of this lineup"""


class Lineup(BaseModel):
    title: Optional[str] = None

    type: Optional[str] = None
    r"""The type of this object (`lineup` in this case)"""

    lineup_type: Annotated[Optional[LineupType], pydantic.Field(alias="lineupType")] = (
        None
    )
    r"""- `-1`: N/A
    - `0`: Over the air
    - `1`: Cable
    - `2`: Satellite
    - `3`: IPTV
    - `4`: Virtual

    """

    location: Optional[str] = None

    uuid: Optional[str] = None
    r"""The uuid of this lineup"""

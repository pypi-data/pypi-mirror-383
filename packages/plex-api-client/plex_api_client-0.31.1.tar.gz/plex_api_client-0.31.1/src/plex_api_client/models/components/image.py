"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from plex_api_client.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class ImageType(str, Enum):
    r"""Describes both the purpose and intended presentation of the image."""

    BACKGROUND = "background"
    BANNER = "banner"
    CLEAR_LOGO = "clearLogo"
    COVER_POSTER = "coverPoster"
    SNAPSHOT = "snapshot"


class ImageTypedDict(TypedDict):
    r"""Images such as movie posters and background artwork are represented by Image elements."""

    type: NotRequired[ImageType]
    r"""Describes both the purpose and intended presentation of the image."""
    alt: NotRequired[str]
    r"""Title to use for accessibility."""
    url: NotRequired[str]
    r"""The relative path or absolute url for the image."""


class Image(BaseModel):
    r"""Images such as movie posters and background artwork are represented by Image elements."""

    type: Optional[ImageType] = None
    r"""Describes both the purpose and intended presentation of the image."""

    alt: Optional[str] = None
    r"""Title to use for accessibility."""

    url: Optional[str] = None
    r"""The relative path or absolute url for the image."""

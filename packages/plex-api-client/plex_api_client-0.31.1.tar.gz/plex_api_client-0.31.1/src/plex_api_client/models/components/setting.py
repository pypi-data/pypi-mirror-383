"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from plex_api_client.types import BaseModel
import pydantic
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class Type(str, Enum):
    r"""The type of the value of this setting"""

    BOOL = "bool"
    INT = "int"
    TEXT = "text"
    DOUBLE = "double"


DefaultTypedDict = TypeAliasType("DefaultTypedDict", Union[str, float, bool])
r"""The default value of this setting"""


Default = TypeAliasType("Default", Union[str, float, bool])
r"""The default value of this setting"""


ValueTypedDict = TypeAliasType("ValueTypedDict", Union[str, float, bool])
r"""The current value of this setting"""


Value = TypeAliasType("Value", Union[str, float, bool])
r"""The current value of this setting"""


class SettingTypedDict(TypedDict):
    r"""A configuration setting or preference"""

    type: NotRequired[Type]
    r"""The type of the value of this setting"""
    default: NotRequired[DefaultTypedDict]
    r"""The default value of this setting"""
    advanced: NotRequired[bool]
    r"""Whether the setting is considered advanced and normally hidden from the user"""
    enum_values: NotRequired[str]
    r"""The possible values for this setting if restricted. The list is `|` separated with `value:name` entries."""
    group: NotRequired[str]
    r"""The group name of this setting to aid in display of a hierarchy"""
    hidden: NotRequired[bool]
    r"""Whether the setting is hidden or not"""
    id: NotRequired[str]
    r"""The query parameter name for this setting"""
    label: NotRequired[str]
    r"""A user-friendly name for the setting"""
    summary: NotRequired[str]
    r"""A description of the setting"""
    value: NotRequired[ValueTypedDict]
    r"""The current value of this setting"""


class Setting(BaseModel):
    r"""A configuration setting or preference"""

    type: Optional[Type] = None
    r"""The type of the value of this setting"""

    default: Optional[Default] = None
    r"""The default value of this setting"""

    advanced: Optional[bool] = None
    r"""Whether the setting is considered advanced and normally hidden from the user"""

    enum_values: Annotated[Optional[str], pydantic.Field(alias="enumValues")] = None
    r"""The possible values for this setting if restricted. The list is `|` separated with `value:name` entries."""

    group: Optional[str] = None
    r"""The group name of this setting to aid in display of a hierarchy"""

    hidden: Optional[bool] = None
    r"""Whether the setting is hidden or not"""

    id: Optional[str] = None
    r"""The query parameter name for this setting"""

    label: Optional[str] = None
    r"""A user-friendly name for the setting"""

    summary: Optional[str] = None
    r"""A description of the setting"""

    value: Optional[Value] = None
    r"""The current value of this setting"""

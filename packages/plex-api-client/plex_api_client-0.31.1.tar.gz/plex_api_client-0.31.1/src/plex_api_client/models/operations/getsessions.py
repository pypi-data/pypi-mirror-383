"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from plex_api_client.models.components import (
    mediacontainerwithmetadata as components_mediacontainerwithmetadata,
)
from plex_api_client.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import NotRequired, TypedDict


class GetSessionsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    headers: Dict[str, List[str]]
    media_container_with_metadata: NotRequired[
        components_mediacontainerwithmetadata.MediaContainerWithMetadataTypedDict
    ]
    r"""OK"""


class GetSessionsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    headers: Dict[str, List[str]]

    media_container_with_metadata: Optional[
        components_mediacontainerwithmetadata.MediaContainerWithMetadata
    ] = None
    r"""OK"""

name: Sync Upstream Python Client

on:
  schedule:
    # Run daily at 00:00 UTC (8:00 AM Beijing time)
    - cron: '0 0 * * *'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/langgenius/dify.git || true
          git remote -v

      - name: Fetch upstream changes
        run: |
          git fetch upstream main
          echo "Upstream fetched successfully"

      - name: Check for changes in sdks/python-client/dify_client
        id: check_changes
        run: |
          # Get the latest commit hash of upstream sdks/python-client/dify_client
          UPSTREAM_HASH=$(git log upstream/main -1 --format="%H" -- sdks/python-client/dify_client)
          echo "Upstream commit: $UPSTREAM_HASH"

          # Check if this directory exists in our repo and get its last sync commit
          if [ -f .github/.upstream-sync-commit ]; then
            LAST_SYNC=$(cat .github/.upstream-sync-commit)
            echo "Last synced commit: $LAST_SYNC"
          else
            LAST_SYNC=""
            echo "No previous sync found"
          fi

          # Check if there are new changes
          if [ "$UPSTREAM_HASH" != "$LAST_SYNC" ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "upstream_hash=$UPSTREAM_HASH" >> $GITHUB_OUTPUT
            echo "✅ New changes detected in upstream"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No new changes in upstream"
          fi

      - name: Create sync branch
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          BRANCH_NAME="sync/upstream-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b "$BRANCH_NAME"

      - name: Copy files from upstream
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          # Create temporary directory
          mkdir -p /tmp/upstream-sync

          # Extract upstream sdks/python-client/dify_client to temp directory
          git archive upstream/main sdks/python-client/dify_client | tar -x -C /tmp/upstream-sync

          # Copy Python client files to our dify_client directory
          if [ -d "/tmp/upstream-sync/sdks/python-client/dify_client" ]; then
            echo "Copying files from upstream dify_client directory..."

            # Copy upstream files
            rsync -av --delete \
              --exclude='__pycache__' \
              --exclude='*.pyc' \
              --exclude='.pytest_cache' \
              /tmp/upstream-sync/sdks/python-client/dify_client/ \
              dify_client/

            echo "Files copied successfully"
            ls -la dify_client/
          else
            echo "❌ Error: Upstream dify_client directory not found"
            exit 1
          fi

      - name: Update sync commit record
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          mkdir -p .github
          echo "${{ steps.check_changes.outputs.upstream_hash }}" > .github/.upstream-sync-commit
          git add .github/.upstream-sync-commit

      - name: Check if there are actual file changes
        if: steps.check_changes.outputs.changes_detected == 'true'
        id: check_diff
        run: |
          git add dify_client/
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No actual file changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "✅ File changes detected"
          fi

      - name: Commit changes
        if: steps.check_changes.outputs.changes_detected == 'true' && steps.check_diff.outputs.has_changes == 'true'
        run: |
          UPSTREAM_COMMIT="${{ steps.check_changes.outputs.upstream_hash }}"
          UPSTREAM_SHORT="${UPSTREAM_COMMIT:0:7}"

          git commit -m "sync: update from upstream dify_client

          Synced from langgenius/dify@$UPSTREAM_SHORT
          Source: https://github.com/langgenius/dify/tree/$UPSTREAM_COMMIT/sdks/python-client/dify_client

          Changes:
          - Automatic sync from upstream repository
          - Updated dify_client implementation
          - See upstream commit for detailed changes"

      - name: Push branch
        if: steps.check_changes.outputs.changes_detected == 'true' && steps.check_diff.outputs.has_changes == 'true'
        run: |
          git push origin "$BRANCH_NAME"

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes_detected == 'true' && steps.check_diff.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          UPSTREAM_COMMIT="${{ steps.check_changes.outputs.upstream_hash }}"
          UPSTREAM_SHORT="${UPSTREAM_COMMIT:0:7}"

          PR_BODY=$(cat <<EOF
          ## 🔄 Upstream Sync

          This PR automatically syncs changes from the upstream Dify repository.

          ### 📦 Source
          - **Repository**: [langgenius/dify](https://github.com/langgenius/dify)
          - **Path**: \\\`sdks/python-client/dify_client\\\`
          - **Commit**: [\\\`${UPSTREAM_SHORT}\\\`](https://github.com/langgenius/dify/commit/${UPSTREAM_COMMIT})

          ### 🔍 Changes
          Please review the changes carefully to ensure:
          - ✅ No breaking changes in our customizations
          - ✅ Version number is updated if needed
          - ✅ Documentation is up to date

          ### 🤖 Automated Sync
          This PR was created automatically by the sync-upstream workflow.

          ### 📝 Checklist before merging
          - [ ] Review code changes
          - [ ] Run tests locally
          - [ ] Update version if breaking changes
          - [ ] Update CHANGELOG.md
          - [ ] Verify build succeeds

          ---
          **Generated on**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Upstream commit**: ${UPSTREAM_COMMIT}
          EOF
          )

          gh pr create \
            --title "sync: Update from upstream dify_client (${UPSTREAM_SHORT})" \
            --body "$PR_BODY" \
            --head "$BRANCH_NAME" \
            --base main \
            --label "upstream-sync" \
            --label "automated"

      - name: Summary
        if: always()
        run: |
          echo "## 📊 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check_changes.outputs.changes_detected }}" == "true" ]; then
            if [ "${{ steps.check_diff.outputs.has_changes }}" == "true" ]; then
              echo "✅ **Status**: Changes detected and PR created" >> $GITHUB_STEP_SUMMARY
              echo "🔗 **Branch**: \`$BRANCH_NAME\`" >> $GITHUB_STEP_SUMMARY
              echo "📝 **Commit**: \`${{ steps.check_changes.outputs.upstream_hash }}\`" >> $GITHUB_STEP_SUMMARY
            else
              echo "ℹ️ **Status**: Changes detected but no file differences" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "✅ **Status**: No new changes in upstream" >> $GITHUB_STEP_SUMMARY
            echo "📅 **Last check**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          fi

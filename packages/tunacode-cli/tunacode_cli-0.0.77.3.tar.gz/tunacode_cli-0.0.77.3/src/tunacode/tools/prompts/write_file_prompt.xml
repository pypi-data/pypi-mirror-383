<?xml version="1.0" encoding="UTF-8"?>
<tool_prompt>
    <description>
Writes a file to the local filesystem.

Usage:
- This tool will overwrite the existing file if there is one at the provided path.
- If this is an existing file, you MUST use the Read tool first to read the file's contents. This tool will fail if you did not read the file first.
- ALWAYS prefer editing existing files in the codebase. NEVER write new files unless explicitly required.
- NEVER proactively create documentation files (*.md) or README files. Only create documentation files if explicitly requested by the User.
- Only use emojis if the user explicitly requests it. Avoid writing emojis to files unless asked.
    </description>

    <parameters>
        <parameter name="file_path" required="true">
            <description>The absolute path to the file to write (must be absolute, not relative)</description>
            <type>string</type>
        </parameter>

        <parameter name="content" required="true">
            <description>The content to write to the file</description>
            <type>string</type>
        </parameter>
    </parameters>

    <examples>
        <example>
            <title>Write a Python file</title>
            <command>{"file_path": "/home/user/project/script.py", "content": "#!/usr/bin/env python3\nprint('Hello, World!')"}</command>
        </example>

        <example>
            <title>Write configuration file</title>
            <command>{"file_path": "/home/user/project/.env", "content": "DEBUG=true\nPORT=3000"}</command>
        </example>
    </examples>
</tool_prompt>

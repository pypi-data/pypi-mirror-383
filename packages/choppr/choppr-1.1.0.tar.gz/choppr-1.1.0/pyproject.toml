[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "choppr"
version = "1.1.0"
description = "Choppr is a plugin that is meant to reduce the size of a software's Software Bill of Materials (SBOM)."
authors = [{ name = "LMCO Open Source", email = "open.source@lmco.com" }]
requires-python = ">=3.10.0,<4"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Communications :: File Sharing",
  "Topic :: Security",
  "Topic :: Software Development :: Version Control",
  "Topic :: System :: Archiving :: Packaging",
  "Topic :: System :: Software Distribution",
  "Typing :: Typed",
]
dependencies = [
  "jmespath>=1.0.1,<2",
  "xmltodict>=0.14.0,<0.15",
  "zstandard>=0.23.0,<0.24",
  "python-debian>=1.0.0,<2",
  "typer>=0.16.0",
  "cyclonedx-python-lib>=11.1.0",
  "requests>=2.32.5",
  "pydantic-yaml>=1.6.0",
]

[project.urls]
homepage = "https://hoppr.dev/"
documentation = "https://gitlab.com/hoppr/choppr/-/wikis/home"
repository = "https://gitlab.com/hoppr/choppr"

[project.scripts]
choppr = "choppr.cli:_entrypoint"

[dependency-groups]
dev = [
  "austin-dist>=3.7.0,<4",
  "commitizen>=4.8.3",
  "flake8>=7.0.0,<8",
  "flake8-author>=2.1.0,<3",
  "flake8-dunder-all>=0.4.0,<0.5",
  "flake8-gl-codeclimate>=0.2.1,<0.3",
  "flake8-pyproject>=1.2.3,<2",
  "mypy[reports]>=1.5.1,<2",
  "mypy-gitlab-code-quality>=1.0.0,<2",
  "ruff>=0.12.4",
  "sourcery>=1.22.0,<2",
  "types-jmespath>=1.0.2.20240106,<2",
  "types-requests>=2.32.0.20240521,<3",
  "types-xmltodict>=0.13.0.3,<0.14",
  "pytest>=8.4.2",
  "pytest-cov>=6.2.1",
  "pytest-pretty>=1.3.0",
  "sortedcontainers-stubs>=2.4.3",
  "typing-json>=0.1.3",
]

[tool.uv]
cache-dir = ".cache/uv"

[[tool.uv.index]]
name = "gitlab"
url = "https://gitlab.com/api/v4/projects/56306271/packages/pypi"
publish-url = "https://gitlab.com/api/v4/projects/56306271/packages/pypi"
explicit = true

[tool.hatch.build.targets.sdist]
include = ["choppr"]

[tool.hatch.build.targets.wheel]
include = ["choppr"]

[tool.commitizen]
version_files = [
  "choppr/__init__.py:__version__",
  "pyproject.toml:version"
]
version_provider = "uv"
legacy_tag_formats = [
  "v${version}"
]
update_changelog_on_bump = true
bump_message = "chore(release): $new_version"
changelog_file = "docs/CHANGELOG.md"
changelog_merge_prerelease = true
template = "assets/templates/CHANGELOG.md.j2"
extras = { repo_url = "https://gitlab.com/hoppr/choppr" }

[tool.ruff]
fix = true
target-version = "py310"
line-length = 120
preview = true
cache-dir = ".cache/ruff"
extend-exclude = [".cache"]

[tool.ruff.format]
exclude = ["**/*.pyi"]
preview = true
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN002", # Missing type annotation for `*args`
  "ANN003", # Missing type annotation for `*kwargs`
  "COM812", # Trailing comma missing -- Recommended to be removed by Ruff team
  "D104",   # Missing docstring in public package
  "D105",   # Missing docstring in magic method
  "D106",   # Missing docstring in public nested class
  "D107",   # Missing docstring in `__init__`
  "D407",   # Missing dashed underline after section ("{name}")
  "D415",   # First line should end with a period, question mark, or exclamation point
  "G004",   # Logging statement uses f-string
  "ISC001", # Implicitly concatenated string literals on one line -- Recommended to be removed by Ruff team
  "TRY003", # Avoid specifying long messages outside the exception class
]
extend-ignore = [
  "AIR",  # Airflow
  "DJ",   # flake8-django
  "EM",   # flake8-errmsg
  "FBT",  # flake8-boolean-trap
  "NPY",  # NumPy-specific rules
  "PD",   # pandas-vet
  "SLOT", # flake8-slots
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"choppr/__init__.py" = [
  "CPY001", # Missing copyright notice at top of file
]
"choppr/plugin.py" = [
  "CPY001", # Missing copyright notice at top of file
]
"choppr/component_handlers/__init__.py" = [
  "CPY001", # Missing copyright notice at top of file
]
"choppr/types/__init__.py" = [
  "CPY001", # Missing copyright notice at top of file
]
"choppr/utils/__init__.py" = [
  "CPY001", # Missing copyright notice at top of file
]
"test/**.py" = [
  "S101",    # Use of `assert` detected
  "SLF001",  # Private member accessed
  "PLR2004", # Magic value used in comparison
  "PLC2701", # Private name import
]
"test/**/__init__.py" = [
  "CPY001", # Missing copyright notice at top of file
]

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true

[tool.ruff.lint.flake8-builtins]
builtins-allowed-modules = ["types"]

[tool.ruff.lint.flake8-copyright]
author = "Lockheed Martin Corporation"

[tool.ruff.lint.flake8-quotes]
avoid-escape = false

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2
lines-between-types = 1
no-lines-before = ["future"]
required-imports = ["from __future__ import annotations"]
known-first-party = ["choppr"]

[tool.ruff.lint.mccabe]
max-complexity = 11

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.validator", "pydantic.root_validator"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 170

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = [
  "typing.overload",
  "typing.override",
  "typing_extensions.override",
]

[tool.flake8]
require-plugins = [
  "flake8-author",
  "flake8-dunder-all",
  "flake8-gl-codeclimate",
  "flake8-pyproject",
]

select = [
  "A40",  # flake8-author
  "DALL", # flake8-dunder-all
]

exclude = [
  ".bzr",
  ".cache",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

per-file-ignores = [
  "bin/set_release_variables.py:DALL",
  "choppr/__init__.py:A40",
  "choppr/component_handlers/__init__.py:A40",
  "choppr/types/__init__.py:A40",
  "choppr/utils/__init__.py:A40",
  "test/**/__init__.py:A40",
  "test/**.py:DALL"
]

author-attribute = "required"
author-pattern = "(?i)^(?P<name>(?P<first_name>[a-zA-Z]+)(?: (?P<middle_init>[A-Z])\\.?)? (?P<last_name>[a-zA-Z]+)(?: (?P<suffix>[SJ]r|[IiVvXx]+))?) <(?P<email>(?P=first_name)(?:\\.[a-zA-Z0-9])?\\.(?P=last_name)(?:\\.[a-zA-Z0-9]+)?@lmco\\.com)>$"  # editorconfig-checker-disable-line

[tool.mypy]
cache_dir = ".cache/mypy"
cobertura_xml_report = ".cache/mypy"
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
exclude_gitignore = true
explicit_package_bases = true
follow_imports = "silent"
incremental = false
junit_xml = ".cache/mypy/mypy.xml"
namespace_packages = true
no_implicit_reexport = true
packages = ["choppr"]
plugins = ["pydantic.mypy"]
pretty = true
python_version = "3.10"
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
strict = true

[[tool.mypy.overrides]]
module = ["cvss.*"]
ignore_missing_imports = true
implicit_reexport = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
addopts = [
  "--strict-markers",
  "--cov=choppr",
  "--cov-report=term-missing",
  "--cov-report=xml:coverage.xml",
  "--cov-report=lcov:lcov.info",
  "--cov-fail-under=14",
  "--import-mode=importlib",
  "--junit-xml=test.xml",
]
console_output_style = "progress"
junit_family = "xunit2"
pythonpath = ["."]
testpaths = ["test/unit"]

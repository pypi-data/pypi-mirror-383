[project]
name = "pytera"
version = "0.1.1"
description = "A fast, Python templating engine powered by Rust's Tera library"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "un4gt", email = "mt3085570450@outlook.com" }
]
maintainers = [
    { name = "un4gt", email = "mt3085570450@outlook.com" }
]
keywords = [
    "templating",
    "tera",
    "rust",
    "pyo3",
    "jinja2",
    "django-templates",
    "web-framework",
    "html",
    "rendering",
    "fast"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: XML"
]
requires-python = ">=3.8.1"
dependencies = []

[project.urls]
Homepage = "https://github.com/PyO3Lab/pytera"
Documentation = "https://github.com/PyO3Lab/pytera#readme"
Repository = "https://github.com/PyO3Lab/pytera.git"
Issues = "https://github.com/PyO3Lab/pytera/issues"
Changelog = "https://github.com/PyO3Lab/pytera/blob/main/CHANGELOG.md"

[tool.maturin]
module-name = "pytera._core"
python-packages = ["pytera"]
python-source = "src"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[dependency-groups]
dev = [
    "maturin>=1.9.6",
    "pytest>=8.3.5",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.25.0",
]
examples = [
    "flask>=3.0.3",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "pytera._core"
ignore_missing_imports = true

[tool.coverage.run]
source = ["pytera"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

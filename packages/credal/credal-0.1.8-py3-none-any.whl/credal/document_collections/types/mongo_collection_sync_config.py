# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .mongo_source_fields_config import MongoSourceFieldsConfig


class MongoCollectionSyncConfig(UniversalBaseModel):
    sync_name: typing_extensions.Annotated[str, FieldMetadata(alias="syncName")]
    collection_name: typing_extensions.Annotated[str, FieldMetadata(alias="collectionName")]
    filter_expression: typing_extensions.Annotated[
        typing.Optional[typing.Any], FieldMetadata(alias="filterExpression")
    ] = None
    source_fields: typing_extensions.Annotated[MongoSourceFieldsConfig, FieldMetadata(alias="sourceFields")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

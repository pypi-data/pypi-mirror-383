# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .resource_type import ResourceType


class ResourceIdentifier_ExternalResourceId(UniversalBaseModel):
    type: typing.Literal["external-resource-id"] = "external-resource-id"
    external_resource_id: typing_extensions.Annotated[str, FieldMetadata(alias="externalResourceId")]
    resource_type: typing_extensions.Annotated[ResourceType, FieldMetadata(alias="resourceType")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class ResourceIdentifier_Url(UniversalBaseModel):
    type: typing.Literal["url"] = "url"
    url: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


ResourceIdentifier = typing.Union[ResourceIdentifier_ExternalResourceId, ResourceIdentifier_Url]

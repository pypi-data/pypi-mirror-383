# These bits are assembled from (largely) following the guidance here:
# https://packaging.python.org/en/latest/overview/

[build-system]
requires = ["setuptools>=61.0", "wheel","setuptools-scm==8.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nsflow"
description = "A Neuro-San powered Smart Agent Network Framework"
keywords = ["NsFlow", "NeuroSan", "agent-network"]
# This license name comes from doc recommendation here
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license
license = "LicenseRef-CognizantAcademicSource"
license-files = ["LICENSE.txt"]
requires-python = ">=3.10"
readme = "README.md"
authors = [
    { name = "Deepak" }
    ]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",

    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 4 - Beta",

    "Intended Audience :: Developers",
]

dynamic = ["version", "dependencies"]

[tool.setuptools.dynamic]
# Specify the dependencies for the library from what is given in requirements.txt
dependencies = {file = ["requirements.txt"]}

[project.scripts]
nsflow = "nsflow.run:main"  # App entry point

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
# Standard setup has source existing under /src directory.
# That's not what we tend to do.
# Ours is more of what is called a "flat-layout", so be explicit about that.
where = ["."]
# namespaces = false
# Note: package_data is not useful here for packaging up non-python files.
#       See MANIFEST.in instead.
exclude = ["tests*", "nsflow/frontend*", "coded_tools*", "registries*",
 "generated_notebooks*", "knowdocs*", "logs*", "wheels_private*"]

[tool.setuptools_scm]
fallback_version = "0.0.1"

[tool.isort]
profile = "black"
src_paths = ["coded_tools", "tests"]
line_length = 119

[tool.flake8]
extend-ignore = ["W503", "E203"]
max-line-length = 119

[tool.black]
line-length = 119
required-version = "25.1.0"

[tool.pylint]
max-line-length = 119
# Based on Google Python Style Guide
disable = [
    "C0301",  # Line too long (handled by black)
    "C0114",  # Missing module docstring (missing-module-docstring)
    # This repo contains examples that should remain independent, so we expect some level of copy/paste
    "R0801",  # Similar lines in 2 files
    "W0511",  # TODO/FIXME comments
    ]
good-names = ["i", "j", "k", "ex", "_", "id", "f", "db", "e"]
ignore-patterns = [".*checkpoint\\.py"]
ignore-paths = ["^venv/.*$", "^.*/\\.venv/.*$"]
# Google style requires docstrings
enable = [
    "useless-suppression",
]
# Google style naming conventions
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
class-naming-style = "PascalCase"
method-naming-style = "snake_case"
attr-naming-style = "snake_case"
argument-naming-style = "snake_case"
variable-naming-style = "snake_case"
inlinevar-naming-style = "snake_case"
# Additional settings
fail-under = 10.0
output-format = "colorized"
init-import = false


[project.urls]
Homepage = "https://github.com/cognizant-ai-lab/nsflow"
Repository = "https://github.com/cognizant-ai-lab/nsflow"
Documentation = "https://github.com/cognizant-ai-lab/nsflow#readme"
# If we move issue tracking to github 
# Issues = "https://github.com/cognizant-ai-lab/nsflow/issues"

# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SecretEngineArgs', 'SecretEngine']

@pulumi.input_type
class SecretEngineArgs:
    def __init__(__self__, *,
                 active_directory: Optional[pulumi.Input['SecretEngineActiveDirectoryArgs']] = None,
                 key_value: Optional[pulumi.Input['SecretEngineKeyValueArgs']] = None,
                 postgres_secret_engine: Optional[pulumi.Input['SecretEnginePostgresSecretEngineArgs']] = None):
        """
        The set of arguments for constructing a SecretEngine resource.
        :param pulumi.Input['SecretEnginePostgresSecretEngineArgs'] postgres_secret_engine: PostgresEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
        """
        if active_directory is not None:
            pulumi.set(__self__, "active_directory", active_directory)
        if key_value is not None:
            pulumi.set(__self__, "key_value", key_value)
        if postgres_secret_engine is not None:
            pulumi.set(__self__, "postgres_secret_engine", postgres_secret_engine)

    @_builtins.property
    @pulumi.getter(name="activeDirectory")
    def active_directory(self) -> Optional[pulumi.Input['SecretEngineActiveDirectoryArgs']]:
        return pulumi.get(self, "active_directory")

    @active_directory.setter
    def active_directory(self, value: Optional[pulumi.Input['SecretEngineActiveDirectoryArgs']]):
        pulumi.set(self, "active_directory", value)

    @_builtins.property
    @pulumi.getter(name="keyValue")
    def key_value(self) -> Optional[pulumi.Input['SecretEngineKeyValueArgs']]:
        return pulumi.get(self, "key_value")

    @key_value.setter
    def key_value(self, value: Optional[pulumi.Input['SecretEngineKeyValueArgs']]):
        pulumi.set(self, "key_value", value)

    @_builtins.property
    @pulumi.getter(name="postgresSecretEngine")
    def postgres_secret_engine(self) -> Optional[pulumi.Input['SecretEnginePostgresSecretEngineArgs']]:
        """
        PostgresEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
        """
        return pulumi.get(self, "postgres_secret_engine")

    @postgres_secret_engine.setter
    def postgres_secret_engine(self, value: Optional[pulumi.Input['SecretEnginePostgresSecretEngineArgs']]):
        pulumi.set(self, "postgres_secret_engine", value)


@pulumi.input_type
class _SecretEngineState:
    def __init__(__self__, *,
                 active_directory: Optional[pulumi.Input['SecretEngineActiveDirectoryArgs']] = None,
                 key_value: Optional[pulumi.Input['SecretEngineKeyValueArgs']] = None,
                 postgres_secret_engine: Optional[pulumi.Input['SecretEnginePostgresSecretEngineArgs']] = None):
        """
        Input properties used for looking up and filtering SecretEngine resources.
        :param pulumi.Input['SecretEnginePostgresSecretEngineArgs'] postgres_secret_engine: PostgresEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
        """
        if active_directory is not None:
            pulumi.set(__self__, "active_directory", active_directory)
        if key_value is not None:
            pulumi.set(__self__, "key_value", key_value)
        if postgres_secret_engine is not None:
            pulumi.set(__self__, "postgres_secret_engine", postgres_secret_engine)

    @_builtins.property
    @pulumi.getter(name="activeDirectory")
    def active_directory(self) -> Optional[pulumi.Input['SecretEngineActiveDirectoryArgs']]:
        return pulumi.get(self, "active_directory")

    @active_directory.setter
    def active_directory(self, value: Optional[pulumi.Input['SecretEngineActiveDirectoryArgs']]):
        pulumi.set(self, "active_directory", value)

    @_builtins.property
    @pulumi.getter(name="keyValue")
    def key_value(self) -> Optional[pulumi.Input['SecretEngineKeyValueArgs']]:
        return pulumi.get(self, "key_value")

    @key_value.setter
    def key_value(self, value: Optional[pulumi.Input['SecretEngineKeyValueArgs']]):
        pulumi.set(self, "key_value", value)

    @_builtins.property
    @pulumi.getter(name="postgresSecretEngine")
    def postgres_secret_engine(self) -> Optional[pulumi.Input['SecretEnginePostgresSecretEngineArgs']]:
        """
        PostgresEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
        """
        return pulumi.get(self, "postgres_secret_engine")

    @postgres_secret_engine.setter
    def postgres_secret_engine(self, value: Optional[pulumi.Input['SecretEnginePostgresSecretEngineArgs']]):
        pulumi.set(self, "postgres_secret_engine", value)


@pulumi.type_token("sdm:index/secretEngine:SecretEngine")
class SecretEngine(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 active_directory: Optional[pulumi.Input[Union['SecretEngineActiveDirectoryArgs', 'SecretEngineActiveDirectoryArgsDict']]] = None,
                 key_value: Optional[pulumi.Input[Union['SecretEngineKeyValueArgs', 'SecretEngineKeyValueArgsDict']]] = None,
                 postgres_secret_engine: Optional[pulumi.Input[Union['SecretEnginePostgresSecretEngineArgs', 'SecretEnginePostgresSecretEngineArgsDict']]] = None,
                 __props__=None):
        """
        A SecretEngine is managing secrets in SecretStores.
        This resource can be imported using the import command.

        ## Import

        A SecretEngine can be imported using the id, e.g.,

        ```sh
        $ pulumi import sdm:index/secretEngine:SecretEngine example eng-12345678
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['SecretEnginePostgresSecretEngineArgs', 'SecretEnginePostgresSecretEngineArgsDict']] postgres_secret_engine: PostgresEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SecretEngineArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        A SecretEngine is managing secrets in SecretStores.
        This resource can be imported using the import command.

        ## Import

        A SecretEngine can be imported using the id, e.g.,

        ```sh
        $ pulumi import sdm:index/secretEngine:SecretEngine example eng-12345678
        ```

        :param str resource_name: The name of the resource.
        :param SecretEngineArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SecretEngineArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 active_directory: Optional[pulumi.Input[Union['SecretEngineActiveDirectoryArgs', 'SecretEngineActiveDirectoryArgsDict']]] = None,
                 key_value: Optional[pulumi.Input[Union['SecretEngineKeyValueArgs', 'SecretEngineKeyValueArgsDict']]] = None,
                 postgres_secret_engine: Optional[pulumi.Input[Union['SecretEnginePostgresSecretEngineArgs', 'SecretEnginePostgresSecretEngineArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SecretEngineArgs.__new__(SecretEngineArgs)

            __props__.__dict__["active_directory"] = active_directory
            __props__.__dict__["key_value"] = key_value
            __props__.__dict__["postgres_secret_engine"] = postgres_secret_engine
        super(SecretEngine, __self__).__init__(
            'sdm:index/secretEngine:SecretEngine',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            active_directory: Optional[pulumi.Input[Union['SecretEngineActiveDirectoryArgs', 'SecretEngineActiveDirectoryArgsDict']]] = None,
            key_value: Optional[pulumi.Input[Union['SecretEngineKeyValueArgs', 'SecretEngineKeyValueArgsDict']]] = None,
            postgres_secret_engine: Optional[pulumi.Input[Union['SecretEnginePostgresSecretEngineArgs', 'SecretEnginePostgresSecretEngineArgsDict']]] = None) -> 'SecretEngine':
        """
        Get an existing SecretEngine resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['SecretEnginePostgresSecretEngineArgs', 'SecretEnginePostgresSecretEngineArgsDict']] postgres_secret_engine: PostgresEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SecretEngineState.__new__(_SecretEngineState)

        __props__.__dict__["active_directory"] = active_directory
        __props__.__dict__["key_value"] = key_value
        __props__.__dict__["postgres_secret_engine"] = postgres_secret_engine
        return SecretEngine(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="activeDirectory")
    def active_directory(self) -> pulumi.Output[Optional['outputs.SecretEngineActiveDirectory']]:
        return pulumi.get(self, "active_directory")

    @_builtins.property
    @pulumi.getter(name="keyValue")
    def key_value(self) -> pulumi.Output[Optional['outputs.SecretEngineKeyValue']]:
        return pulumi.get(self, "key_value")

    @_builtins.property
    @pulumi.getter(name="postgresSecretEngine")
    def postgres_secret_engine(self) -> pulumi.Output[Optional['outputs.SecretEnginePostgresSecretEngine']]:
        """
        PostgresEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
        """
        return pulumi.get(self, "postgres_secret_engine")


# Only stuff that actually tests the engine should be here: stage 1 and 2.
name: Plugin CI

on:
  workflow_call:

jobs:
  plugin-argos:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        container:
          - jharwell/ubuntu24.04-sierra:latest

        # 2024/08/26: Test the earliest and latest supported version, to speed
        # up CI.
        python-version:
          - 3.9
          - 3.12

          # 2025-07-11 [JRH]: We only test univar things here because anything
          # greater than that doesn't test anything new in the plugin, but only
          # in the SIERRA core.
        session:
          - argos_physics_engines
          - argos_vc
          - argos_imagize
          - argos_cmdline
          - argos_stage1_univar
          - argos_stage3_univar
          - argos_stage4_univar

        # We only run a few OSX tests, because most of the ARGoS tests don't
        # rely on OS-specific things, and testing them adds marginal confidence.
        # include:
          # - container: macos-13
          #   session: argos_stage1_univar
          #   python-version: 3.12

          # - container: macos-13
          #   session: argos_stage3_univar
          #   python-version: 3.9

        exclude:
          - container: jharwell/ubuntu24.04-sierra:latest
            python-version: 3.9

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sample-project-setup
        with:
          engine: argos

      - uses: nick-fields/retry@v3
        name: Smoke tests
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: |
            uv run -p ${{ matrix.python-version }} \
            nox -s ${{ matrix.session }} -p ${{ matrix.python-version }}

      - name: Set container name
        id: container-name
        run: |
          # Replace problematic characters
          SAFE_CONTAINER=$(echo "${{ matrix.container }}" | tr '/:' '__')
          echo "safe_container=${SAFE_CONTAINER}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ci-engine-argos-${{ matrix.session }}-${{ steps.container-name.outputs.safe_container }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  plugin-ros1robot:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        python-version:
          - 3.9

        container:
          - jharwell/ubuntu20.04-sierra:latest

        session:
          - ros1robot_stage1_univar

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sample-project-setup
        with:
          engine: ros1robot
          rosdistro: noetic

      - name: Smoke tests
        run: |
          uv run -p ${{ matrix.python-version }} \
          nox -s ${{ matrix.session }} -p ${{ matrix.python-version }}

      - name: Set container name
        id: container-name
        run: |
          # Replace problematic characters
          SAFE_CONTAINER=$(echo "${{ matrix.container }}" | tr '/:' '__')
          echo "safe_container=${SAFE_CONTAINER}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ci-engine-ros1robot-${{ matrix.session }}-${{ steps.container-name.outputs.safe_container }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  plugin-ros1gazebo:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        # You CANNOT use python 3.9 with ubuntu 20.04 with ROS, because 3.9 is
        # the system python and things just don't work otherwise...
        python-version:
          - 3.9

        session:
          - ros1gazebo_stage1_univar

        container:
          - jharwell/ubuntu20.04-sierra:latest


    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sample-project-setup
        with:
          engine: ros1gazebo
          rosdistro: noetic

      - name: Smoke tests
        run: |
          uv run -p ${{ matrix.python-version }} \
          nox -s ${{ matrix.session }} -p ${{ matrix.python-version }}

      - name: Set container name
        id: container-name
        run: |
          # Replace problematic characters
          SAFE_CONTAINER=$(echo "${{ matrix.container }}" | tr '/:' '__')
          echo "safe_container=${SAFE_CONTAINER}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ci-engine-ros1gazebo-${{ matrix.session }}-${{ steps.container-name.outputs.safe_container }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  plugin-jsonsim:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        python-version:
          - 3.12

        session:
          - jsonsim_stage1_univar
          - jsonsim_stage3_univar
          - jsonsim_stage4_univar

        container:
          - jharwell/ubuntu24.04-sierra:latest


    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sample-project-setup
      - name: Smoke tests
        run: |
          uv run -p ${{ matrix.python-version }} \
          nox -p ${{ matrix.python-version }} -s ${{ matrix.session }}

      - name: Set container name
        id: container-name
        run: |
          # Replace problematic characters
          SAFE_CONTAINER=$(echo "${{ matrix.container }}" | tr '/:' '__')
          echo "safe_container=${SAFE_CONTAINER}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ci-engine-jsonsim-${{ matrix.session }}-${{ steps.container-name.outputs.safe_container }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error


  plugin-exec-env-2404:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
      # 2025-09-11 [JRH]: Volumes to mount must be passed as options so they can
      # be mounted rw;  specifying in the 'volumes' field mounts them ro, which
      # doesn't work for slurm.
      options: --privileged --cgroupns=host --cpus 2 -v /sys/fs/cgroup:/sys/fs/cgroup:rw -v /run/dbus:/run/dbus
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        python-version:
          - 3.12

        session:
          - execenv_hpc-3.12(engine='engine.argos', env='hpc.local')
          - execenv_hpc-3.12(engine='engine.argos', env='hpc.adhoc')
          - execenv_hpc-3.12(engine='engine.argos', env='hpc.slurm')
          - execenv_hpc-3.12(engine='engine.argos', env='hpc.pbs')
          - execenv_hpc-3.12(engine='plugins.jsonsim', env='hpc.local')
          - execenv_hpc-3.12(engine='plugins.jsonsim', env='hpc.adhoc')
          - execenv_hpc-3.12(engine='plugins.jsonsim', env='hpc.slurm')
          - execenv_hpc-3.12(engine='plugins.jsonsim', env='hpc.pbs')
          - execenv_prefectserver

        container:
          - jharwell/ubuntu24.04-sierra:latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sample-project-setup
        with:
          engine: argos

      - uses: ./.github/actions/sample-project-setup
        with:
          engine: jsonsim


      - name: Smoke tests (slurm)
        if: ${{ contains(matrix.session, 'slurm') }}
        run: |
          uv sync -p ${{ matrix.python-version }} --group dev

          # No idea why this is needed, but slurm doesn't start without it.
          mkdir -p /sys/fs/cgroup/system.slice/system.slice/localhost_slurmstepd.scope

          # This sort of mocks what systemctl does when starting slurm NOT in a
          # container.
          slurmctld -D &
          sleep 5
          slurmd -D &
          sleep 5

          scontrol update nodename=localhost state=DOWN reason=initial;
          scontrol update nodename=localhost state=IDLE;

          uv run -p ${{ matrix.python-version }} nox -s "${{ matrix.session }}" -p ${{ matrix.python-version }}


      - name: Smoke Tests (not slurm)
        if: ${{ !contains(matrix.session, 'slurm') }}
        run: |
          uv run -p ${{ matrix.python-version }} \
          nox -s "${{ matrix.session }}" -p ${{ matrix.python-version }}

      - name: Set container name
        id: container-name
        run: |
          # Replace problematic characters
          SAFE_CONTAINER=$(echo "${{ matrix.container }}" | tr '/:' '__')
          echo "safe_container=${SAFE_CONTAINER}" >> $GITHUB_OUTPUT

      - name: Set session name
        id: session-name
        run: |
          # Replace problematic characters
          SAFE_SESSION=$(echo "${{ matrix.session }}" | tr "/:(),' " '______')
          echo "safe_session=${SAFE_SESSION}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ci-exec-env-${{ steps.session-name.outputs.safe_session }}-${{ steps.container-name.outputs.safe_container }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error


  plugin-exec-env-2004:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        python-version:
          - 3.9

        session:
          - execenv_hpc-3.9(engine='engine.ros1gazebo', env='hpc.local')
          - execenv_hpc-3.9(engine='engine.ros1gazebo', env='hpc.adhoc')
        container:
          - jharwell/ubuntu20.04-sierra:latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sample-project-setup
        with:
          engine: ros1gazebo

      - name: Smoke Tests
        run: |
          source $HOME/.local/setup.bash
          uv sync -p ${{ matrix.python-version }} --group dev
          uv pip install -p ${{ matrix.python-version }} \
              pysip \
              numpy \
              matplotlib \
              pyyaml \
              psutil \
              defusedxml \
              pyparsing \
              pydev \
              pyopengl \
              opencv-python \
              catkin_tools
          source .venv/bin/activate
          uv run -p ${{ matrix.python-version }} \
              nox -s "${{ matrix.session }}" -p ${{ matrix.python-version }}


      - name: Set container name
        id: container-name
        run: |
          # Replace problematic characters
          SAFE_CONTAINER=$(echo "${{ matrix.container }}" | tr '/:' '__')
          echo "safe_container=${SAFE_CONTAINER}" >> $GITHUB_OUTPUT

      - name: Set session name
        id: session-name
        run: |
          # Replace problematic characters
          SAFE_SESSION=$(echo "${{ matrix.session }}" | tr "/:(),' " '______')
          echo "safe_session=${SAFE_SESSION}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ci-exec-env-${{ steps.session-name.outputs.safe_session }}-${{ steps.container-name.outputs.safe_container }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error


  plugin-proc:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        python-version:
          - 3.12

        session:
          - compression_sanity
          - modelrunner_sanity
          - graphs_backend

        container:
          - jharwell/ubuntu24.04-sierra:latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sample-project-setup
      - name: Smoke tests
        run: |
          uv run -p ${{ matrix.python-version }} \
          nox -p ${{ matrix.python-version }} -s ${{ matrix.session }}

      - name: Set container name
        id: container-name
        run: |
          # Replace problematic characters
          SAFE_CONTAINER=$(echo "${{ matrix.container }}" | tr '/:' '__')
          echo "safe_container=${SAFE_CONTAINER}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ci-proc-${{ matrix.session }}-${{ steps.container-name.outputs.safe_container }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

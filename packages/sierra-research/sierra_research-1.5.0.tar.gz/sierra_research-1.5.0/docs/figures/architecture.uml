@startuml

' Basic configuration
!theme cyborg
skinparam defaultTextAlignment center
skinparam shadowing false
skinparam RoundCorner 10
skinparam ArrowColor #black
skinparam BackgroundColor #white
skinparam stateFontSize 48
skinparam linetype ortho
skinparam stateBorderThickness 8
skinparam stateFontStyle bold
hide empty description
skinparam stateFontColor #black

' Title configuration
skinparam titleBorderThickness 8
skinparam titleFontSize 48
skinparam titleFontColor #black
skinparam titleBorderColor #white
   skinparam defaultTextAlignment center

title SIERRA Overview and Architecture

' Pipeline
state "Pipeline" as pipeline


' Labels for rows
state "Stage\nInputs" as stage_inputs #lightcyan
state "Stage\nOutputs" as stage_outputs #skyblue
state "Active\nPlugins" as plugins #Lightcoral
state "Active\nComputing\nresources" as resources #Cornflowerblue


' Stage 1
state "1. Generate\nExperimental\nInputs" as stage1  {
   state "Experiment\nInput\nTemplate" as input1 #lightcyan
   state "Experiment\nInput\nFiles" as output1 #skyblue {
      state " .xml,.json,\n.launch,...  " as plugins1 #lightcoral
      }
   state " " as plugin1 #white ##white {
      state "Engine" as engine1 #lightcoral
      state "Execution\nenvironment" as exec_env1 #lightcoral
      state "Experiment\ninput format" as expdef1 #lightcoral

     engine1 -[hidden]d-> exec_env1
     exec_env1 -[hidden]d-> expdef1
   }
   state "Host\nmachine\n" as resources1 #Cornflowerblue
   }

' Stage 2
state "2. Execute\nExperiments\n" as stage2  {
   state "Experiment\nInput Files" as input2 #lightcyan {
   state "  .xml,.json,\n.launch,...  " as plugins_in2 #lightcoral
   }
   state "Experimental\nOutputs" as output2 #skyblue {
      state ".csv,.arrow,..." as plugins_out2 #lightcoral
   }
   state " " as plugin2 #white ##white {
      state "Engine" as engine2 #lightcoral
      state "Execution\nenvironment" as exec_env2 #lightcoral

     engine2 -[hidden]d-> exec_env2
   }
   state "Host machine,\nHPC cluster,\nReal robots,..." as resources2  #Cornflowerblue
}

' Stage 3
state "3. Process\nExperiment\nOutputs" as stage3  {
   state "Experiment\nOutputs" as input3 #lightcyan {
      state ".csv,.arrow,..." as plugins_in3 #lightcoral
   }
   state "Processed\nExperiment\nOutputs" as output3 #skyblue {
      state ".csv,.arrow,\nimages,..." as plugins_out3 #lightcoral
   }

   state " " as plugin3 #white ##white {
      state "Engine" as engine3 #lightcoral
      state "Processor set" as proc_set3 #lightcoral
      state "Storage" as storage3 #lightcoral

      engine3 -[hidden]d-> proc_set3
      proc_set3 -[hidden]d-> storage3
   }
   state "Host\nmachine\n" as resources3 #Cornflowerblue
}

' Stage 4
state "4. Generate\nProducts\n" as stage4  {
   state "Processed\nExperiment\nOutputs" as input4 #lightcyan {
      state ".csv,.arrow,\nimages,..." as plugins_in4 #lightcoral
   }
   state "Products" as output4 #skyblue {
      state "Graphs, videos\n(.png,.mp4,...)" as subblob4 #lightcoral
   }
   state " "  as plugin4 #white ##white {
   top to bottom direction
      state "Engine" as engine4 #lightcoral
      state "Product\ngenerator\nset" as products4 #lightcoral
      state "Storage" as storage4 #lightcoral

      engine4 -[hidden]d-> products4
      products4 -[hidden]d-> storage4
   }
   state "Host\nmachine\n" as resources4 #Cornflowerblue
}

' Stage 5
state "5. Compare\nProducts\n" as stage5  {
   state "Products" as input5 #lightcyan {
      state "Graphs (.png,...)" as plugins_in5 #lightcoral
   }
   state "Product\nComparisons" as output5 #skyblue {
      state "Graphs (.png,...)" as final_outputs #lightcoral
   }
   state " " as plugin5 #white ##white {
      state "Engine" as engine5 #lightcoral
      state "Comparator set" as comparator5 #lightcoral
      state "Storage" as storage5 #lightcoral

     engine5 -[hidden]d-> comparator5
     comparator5 -[hidden]d-> storage5
   }


state "Host\nmachine\n" as resources5 #Cornflowerblue
}

' Stages horizontal layout
pipeline -right-> stage1
stage1 -right-> stage2
stage2 -right-> stage3
stage3 -right-> stage4
stage4 -right-> stage5

' Vertical flows for each stage
top to bottom direction
input1 --> output1
output1 -[hidden]-> plugin1
plugin1 -[hidden]-> resources1
input2 --> output2
output2 -[hidden]-> plugin2
plugin2 -[hidden]-> resources2
input3 --> output3
output3 -[hidden]-> plugin3
plugin3 -[hidden]-> resources3
input4 --> output4
output4 -[hidden]-> plugin4
plugin4 -[hidden]-> resources4
input5 --> output5
output5 -[hidden]-> plugin5
plugin5 -[hidden]-> resources5

' Connect the categories
pipeline -[hidden]d-> stage_inputs
stage_inputs --> stage_outputs
stage_outputs -[hidden]d-> plugins
plugins -[hidden]d-> resources

' Pipeline connection
pipeline -[hidden]d->stage_inputs
stage_inputs -[hidden]r->input1

' Layout hints
stage1 -[hidden]d-> input1
stage2 -[hidden]d-> input2
stage3 -[hidden]d-> input3
stage4 -[hidden]d-> input4
stage5 -[hidden]d-> input5

@enduml

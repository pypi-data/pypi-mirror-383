# Generated by Django 5.2.5 on 2025-09-11 19:07

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy', models.CharField(choices=[('restart_always', '始终重启')], default='restart_always', max_length=20, verbose_name='守护策略')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='描述')),
                ('enable', models.BooleanField(default=True, verbose_name='启用')),
                ('interval', models.IntegerField(default=60, verbose_name='检测间隔(秒), 修改后重启生效')),
                ('last_check', models.DateTimeField(blank=True, null=True, verbose_name='上次检测时间')),
                ('last_action', models.CharField(blank=True, max_length=255, null=True, verbose_name='上次操作说明')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Scrapy Guardian',
                'verbose_name_plural': 'Scrapy Guardian',
                'db_table': 'scrapy_guardian',
            },
        ),
        migrations.CreateModel(
            name='GuardianLock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default', max_length=50, unique=True, verbose_name='锁名字')),
                ('echo', models.IntegerField(default=0, verbose_name='运行轮次')),
                ('guard_interval', models.IntegerField(default=10, verbose_name='监控周期(秒)')),
                ('locked_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='锁创建时间')),
                ('heartbeat', models.DateTimeField(default=datetime.datetime.now, verbose_name='上一次心跳')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Scrapy Guardian Lock',
                'verbose_name_plural': 'Scrapy Guardian Lock',
                'db_table': 'scrapy_guardian_lock',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(blank=True, max_length=200, null=True, verbose_name='版本')),
                ('job_id', models.CharField(max_length=255, verbose_name='任务ID')),
                ('job_md5', models.CharField(max_length=32, unique=True, verbose_name='md5(job)')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('log_url', models.CharField(blank=True, max_length=255, null=True)),
                ('items_url', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('running', '运行中'), ('finished', '已结束'), ('pending', '启动中')], max_length=20, verbose_name='状态')),
                ('pid', models.IntegerField(blank=True, null=True, verbose_name='进程ID')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Scrapy Job',
                'verbose_name_plural': 'Scrapy Job',
                'db_table': 'scrapy_job',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='节点名称')),
                ('ip', models.GenericIPAddressField(verbose_name='IP地址')),
                ('port', models.IntegerField(blank=True, default=6800, null=True)),
                ('ssl', models.BooleanField(default=False, verbose_name='是否启用SSL')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='描述')),
                ('auth', models.BooleanField(default=False, verbose_name='是否需要认证')),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Scrapyd Node',
                'verbose_name_plural': 'Scrapyd Node',
                'db_table': 'scrapyd_node',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='SpiderRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='爬虫名称')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='描述')),
                ('kwargs', models.JSONField(blank=True, default=dict, null=True, verbose_name='Scrapy自定义参数(对组内所有爬虫生效)')),
                ('settings', models.JSONField(blank=True, default=dict, null=True, verbose_name='Scrapy自定义设置(对组内所有爬虫生效)')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Spider Registry',
                'verbose_name_plural': 'Spider Registry',
                'db_table': 'scrapy_spider_registry',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobInfoLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.JSONField(blank=True, null=True, verbose_name='详情')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('job', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='logs', to='django_scrapyd_manager.job', verbose_name='Job')),
            ],
            options={
                'verbose_name': 'Scrapy Job Info',
                'verbose_name_plural': 'Scrapy Job Info',
                'db_table': 'scrapy_job_info_log',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='node',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='jobs', to='django_scrapyd_manager.node', verbose_name='节点'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='项目名')),
                ('sync_mode', models.CharField(choices=[('auto', '自动'), ('sync', '同步'), ('none', '无')], default='auto', max_length=10, verbose_name='同步模式')),
                ('scrapyd_exists', models.BooleanField(default=False, verbose_name='在Scrapyd中存在')),
                ('sync_status', models.CharField(choices=[('pending', '待同步'), ('success', '成功'), ('failed', '失败')], default='pending', max_length=10, verbose_name='同步状态')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('node', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='django_scrapyd_manager.node', verbose_name='节点')),
            ],
            options={
                'verbose_name': 'Scrapy Project',
                'verbose_name_plural': 'Scrapy Project',
                'db_table': 'scrapy_project',
                'unique_together': {('node', 'name')},
            },
        ),
        migrations.AddField(
            model_name='job',
            name='project',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='jobs', to='django_scrapyd_manager.project', verbose_name='项目'),
        ),
        migrations.CreateModel(
            name='ProjectVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=255, verbose_name='版本')),
                ('is_spider_synced', models.BooleanField(default=False, verbose_name='是否已同步当前版本爬虫')),
                ('egg_file', models.FileField(blank=True, null=True, upload_to='eggs/', verbose_name='Egg 文件')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='描述')),
                ('sync_mode', models.CharField(choices=[('auto', '自动'), ('sync', '同步'), ('none', '无')], default='auto', max_length=10, verbose_name='同步模式')),
                ('scrapyd_exists', models.BooleanField(default=False, verbose_name='在Scrapyd中存在')),
                ('sync_status', models.CharField(choices=[('pending', '待同步'), ('success', '成功'), ('failed', '失败')], default='pending', max_length=10, verbose_name='同步状态')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('project', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='django_scrapyd_manager.project', verbose_name='项目')),
            ],
            options={
                'verbose_name': 'Scrapy Project Version',
                'verbose_name_plural': 'Scrapy Project Version',
                'db_table': 'scrapy_project_version',
                'ordering': ['-version'],
                'unique_together': {('project', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Spider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='爬虫名称')),
                ('kwargs', models.JSONField(blank=True, default=dict, null=True, verbose_name='Scrapy自定义参数(对组内所有爬虫生效)')),
                ('settings', models.JSONField(blank=True, default=dict, null=True, verbose_name='Scrapy自定义设置(对组内所有爬虫生效)')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='spiders', to='django_scrapyd_manager.projectversion', verbose_name='版本')),
                ('registry', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='version_spiders', to='django_scrapyd_manager.spiderregistry', to_field='name', verbose_name='全局爬虫')),
            ],
            options={
                'verbose_name': 'Scrapy Spider',
                'verbose_name_plural': 'Scrapy Spider',
                'db_table': 'scrapy_spider',
                'ordering': ['-version', 'name'],
                'unique_together': {('version', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SpiderGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='任务组名称')),
                ('kwargs', models.JSONField(blank=True, default=dict, null=True, verbose_name='Scrapy自定义参数kwargs(对组内所有爬虫生效)')),
                ('settings', models.JSONField(blank=True, default=dict, null=True, verbose_name='Scrapy自定义设置settings(对组内所有爬虫生效)')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='任务组描述')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('node', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='django_scrapyd_manager.node', verbose_name='节点')),
                ('project', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='django_scrapyd_manager.project', verbose_name='项目')),
                ('version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_scrapyd_manager.projectversion', verbose_name='版本')),
                ('spiders', models.ManyToManyField(db_constraint=False, related_name='spiders', to='django_scrapyd_manager.spiderregistry', verbose_name='爬虫')),
            ],
            options={
                'verbose_name': 'Scrapy Spider Group',
                'verbose_name_plural': 'Scrapy Spider Group',
                'db_table': 'scrapy_spider_group',
            },
        ),
        migrations.CreateModel(
            name='GuardianLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spider_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='爬虫名')),
                ('action', models.CharField(choices=[('publish_version', '发布项目'), ('start_spider', '启动爬虫')], max_length=100, verbose_name='执行动作')),
                ('reason', models.CharField(blank=True, max_length=200, null=True, verbose_name='原因')),
                ('success', models.BooleanField(default=True, verbose_name='成功')),
                ('message', models.TextField(blank=True, null=True, verbose_name='详细日志')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('guardian', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='django_scrapyd_manager.guardian', verbose_name='守护任务')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_scrapyd_manager.node', verbose_name='节点')),
                ('spider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='django_scrapyd_manager.spider', verbose_name='爬虫')),
                ('group', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='django_scrapyd_manager.spidergroup', verbose_name='关联爬虫组')),
            ],
            options={
                'verbose_name': 'Scrapy Guardian Log',
                'verbose_name_plural': 'Scrapy Guardian Log',
                'db_table': 'scrapy_guardian_log',
                'ordering': ['-create_time'],
            },
        ),
        migrations.AddField(
            model_name='guardian',
            name='spider_group',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_scrapyd_manager.spidergroup', verbose_name='爬虫组'),
        ),
        migrations.AddField(
            model_name='job',
            name='spider',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='jobs', to='django_scrapyd_manager.spiderregistry', verbose_name='爬虫'),
        ),
    ]

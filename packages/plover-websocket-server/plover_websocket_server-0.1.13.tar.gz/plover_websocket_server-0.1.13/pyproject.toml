[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "plover_websocket_server"
version = "0.1.13"
description = "A server for exposing Plover engine events and functionality"
authors = [{name = "Daniel de Souza", email = "daniel@cosmicdna.co.uk"}]
requires-python = ">=3.8"
license = "GPL-3.0-or-later"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Plugins",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["plover plover_plugin websocket steno stenography"]
dependencies = [
    "plover>=4.0.0.dev8",
    "aiohttp",
    "aiohttp_middlewares",
    "jsonpickle",
    "nacl_middleware",
    "PySide6"
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/CosmicDNA/plover-websocket-server.git"

[project.entry-points."plover.extension"]
plover_websocket_server = "plover_websocket_server.manager:EngineServerManager"

[tool.setuptools]
zip-safe = true
packages = [
    "plover_websocket_server",
    "plover_websocket_server.websocket",
]
include-package-data = false


[project.optional-dependencies]
test = [
    "pytest"
]

dev = [
    "plover_websocket_server[test]", # Includes all dependencies from the 'test' group,
    "pre-commit", # For managing pre-commit hooks
    "build",
    "bump-my-version",
    "twine",
    "ruff",
]

[tool.ruff]
line-length = 149
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (F), pycodestyle (E, W), isort (I)
# Enable many common Pylint (PL), flake8-bugbear (B), flake8-comprehensions (C4), etc. rules
select = [
    "F", "E", "W", "I", "N", "D", # Core flake8, isort, pep8-naming, pydocstyle
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C4", # flake8-comprehensions
    "T20", # flake8-print (T201 for print, T203 for pprint)
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
    # "PL", # Pylint
    # "TRY", # tryceratops
]
ignore = [
    # Ignore common missing docstring errors for now
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D107",  # Missing docstring in `__init__`
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring closing quotes should be on a separate line
    "D401",  # First line of docstring should be in imperative mood
    "N803",  # Function name should be lowercase
    "N806",  # Variable in function should be lowercase
]
# mccabe (cyclomatic complexity)
# mccabe.max-complexity = 10 # Default is 10, adjust as needed

[tool.ruff.format]
quote-style = "double" # Black default
indent-style = "space"
skip-magic-trailing-comma = false # Black default
line-ending = "auto"

# coding: utf-8

"""
    aind-sharepoint-service

     ## aind-sharepoint-service  Service to pull data from Sharepoint.  

    The version of the OpenAPI document: 0.1.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_sharepoint_service_client.models.nsb2019_list import NSB2019List

class TestNSB2019List(unittest.TestCase):
    """NSB2019List unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NSB2019List:
        """Test NSB2019List
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NSB2019List`
        """
        model = NSB2019List()
        if include_optional:
            return NSB2019List(
                age_x0020_at_x0020_injection = '',
                ap2nd_inj = '',
                author_id = 56,
                breg2_lamb = '',
                cage = '',
                color_tag = '',
                com_after1st_inj = 'Bleeding',
                com_after2nd_inj = 'Bleeding',
                com_coplanar = 'Mild',
                com_damage = 'Mild',
                com_during1st_inj = 'Bleeding',
                com_during2nd_inj = 'Bleeding',
                com_durotomy = 'Complete',
                com_sinusbleed = 'Mild',
                com_swelling = 'Mild',
                com_window = 'Anterior',
                compliance_asset_id = '',
                contusion = 'Mild',
                craniotomy_type = 'Frontal Window 3mm',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date1st_injection = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date2nd_injection = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_x0020_of_x0020_birth = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_x0020_of_x0020_surgery = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_range_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_range_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dv2nd_inj = '',
                editor_id = 56,
                end_x0020_of_x0020_week = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                exudate_x0020_severity = 'Mild',
                eye_x0020_affected = 'Both',
                eye_x0020_issue = 'Cloud/Possibly Blind',
                fiber_implant1 = True,
                fiber_implant1_dv = '',
                fiber_implant2 = True,
                fiber_implant2_dv = '',
                field30 = '',
                field50 = '',
                first_inj_recovery = 1.337,
                first_injection_iso_duration = '',
                first_injection_weight_after = '',
                first_injection_weight_befor = '',
                first_round_ionto_issue = 'N/A',
                headpost_type = 'AI Straight Headbar',
                hemisphere2nd_inj = 'Left',
                hp_x0020_a_x002f_p = '',
                hp_x0020_diameter = '',
                hp_durotomy = 'No',
                hp_x0020__x0026__x0020_inj = '',
                hp_iso_level = '0.25',
                hp_loc = 'Center',
                hp_x0020_m_x002f_l = '',
                hp_perf = 'Left',
                hp_prev_inject = 'No',
                hp_recovery = 1.337,
                x0031_hp_x0020_requestor_x0020_ = '',
                hp_requestor_comments_plaintext = '',
                hp_surgeon_comments = '',
                hp_work_station = 'Select...',
                iacuc_x0020_protocol_x0020__x002 = '2001',
                id = 56,
                implant_id_coverslip_type = 'Custom Implant (add details in comments section)',
                inj1_alternating_time = '',
                inj1_angle_v2 = '',
                inj1_current = '',
                inj1_lenghtof_time = '',
                inj1_round = 'NA',
                inj1_storage_location = '',
                inj1_type = 'Iontophoresis',
                inj1_virus_strain_rt = '',
                inj1_vol = '',
                inj1angle0 = '0 degrees',
                inj1volperdepth = '',
                inj2_alternating_time = '',
                inj2_angle_v2 = '',
                inj2_current = '',
                inj2_lenghtof_time = '',
                inj2_round = 'NA',
                inj2_storage_location = '',
                inj2_type = 'Iontophoresis',
                inj2_virus_strain_rt = '',
                inj2_vol = '',
                inj2angle0 = '0 degrees',
                inj2volperdepth = '',
                ionto_number_hpinj = 'Ionto #1',
                ionto_number_inj1 = 'Ionto #1',
                ionto_number_inj2 = 'Ionto #1',
                iso_x0020_on = 1.337,
                issue = 'Exudate',
                lab_tracks_x0020_group = '',
                lab_tracks_x0020_id = '',
                lab_tracks_x0020_requestor = '',
                lims_x0020_required = 'No',
                light_x0020_cycle = 'Normal (6am to 8pm)',
                lim_staskflow1 = 'AIND Ephys (Passive Behavior)',
                lims_x0020_link = '',
                lims_x0020_project_x0020_code = 'aind-discovery',
                long1st_round_inj_cmts = '',
                long2nd_rnd_inj_cmts = '',
                long_requestor_comments = '',
                long_surgeon_comments = '',
                ml2nd_inj = '',
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                nanoject_number_inj10 = 'N/A',
                nanoject_number_inj2 = 'N/A',
                nd_roung_injection_comments = '',
                pedigree_name = '',
                procedure = 'Custom',
                project_x0020_id_x0020__x0028_te = 'CAM-C506',
                ret_setting0 = 'Off',
                ret_setting1 = 'Off',
                round1_inj_isolevel = '0.25',
                round2_inj_isolevel = '0.25',
                scabbing = 'Mild',
                second_inj_recover = 1.337,
                second_injection_iso_duration = '',
                second_injection_weight_after = '',
                second_injection_weight_before = '',
                second_round_ionto_issue = 'N/A',
                sex = 'Female',
                st_round_injection_comments = '',
                start_x0020_of_x0020_week = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                surgery_status = 'Injection Pending',
                title = '',
                touch_x0020_up_x0020__x0020_comp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                touch_x0020_up_x0020_status = 'Complete',
                touch_x0020_up_x0020_weight_x002 = '',
                ui_version_string = '',
                virus_x0020_a_x002f_p = '',
                virus_x0020_d_x002f_v = '',
                virus_x0020_hemisphere = 'Left',
                virus_x0020_m_x002f_l = '',
                weight_x0020_after_x0020_surgery = '',
                weight_x0020_before_x0020_surger = '',
                work_station1st_injection = 'Select...',
                work_station2nd_injection = 'Select...'
            )
        else:
            return NSB2019List(
        )
        """

    def testNSB2019List(self):
        """Test NSB2019List"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

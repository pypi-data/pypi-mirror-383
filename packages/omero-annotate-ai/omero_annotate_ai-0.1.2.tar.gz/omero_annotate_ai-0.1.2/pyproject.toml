[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "omero-annotate-ai"
version = "0.1.2"
description = "OMERO integration for AI-powered image annotation and segmentation workflows"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Maarten Paul", email = "m.w.paul@lumc.nl"},
]
maintainers = [
    {name = "Maarten Paul", email = "m.w.paul@lumc.nl"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Environment :: Console",
    "Environment :: Other Environment",
]
keywords = ["omero", "microscopy", "segmentation", "ai", "annotation", "sam", "micro-sam"]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0,<2.0",
    "pandas>=1.3.0",
    "imageio>=2.9.0",
    "zarr>=2.10.0",
    "dask>=2021.6.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "ipywidgets>=7.6.0",
    "keyring>=23.0.0",
    "ezomero>=3.1.0", 
    "ipykernel", 
    "pixi-kernel>=0.6.6,<0.7", 
    "opencv-python",
]

[project.optional-dependencies]
microsam = [
    "napari>=0.4.15",
    # Note: micro-sam is conda-only, install with: conda install -c conda-forge micro-sam
    # or use: pixi install (recommended for full environment)
]

dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.9",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.7.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-section-index>=0.3.8",
    "mkdocs-autorefs>=0.5.0",
    "griffe-pydantic>=1.1.7",
]
all = [
    "napari>=0.4.15",
    # Note: micro-sam must be installed via conda
    # conda install -c conda-forge micro-sam
    # or use: pixi install (recommended)
]

[project.urls]
Homepage = "https://github.com/Leiden-Cell-Observatory/omero_annotate_ai"
Repository = "https://github.com/Leiden-Cell-Observatory/omero_annotate_ai.git"
Issues = "https://github.com/Leiden-Cell-Observatory/omero_annotate_ai/issues"
Documentation = "https://github.com/Leiden-Cell-Observatory/omero_annotate_ai#readme"
Changelog = "https://github.com/Leiden-Cell-Observatory/omero_annotate_ai/releases"

[tool.setuptools.packages.find]
where = ["src"]
include = ["omero_annotate_ai*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=omero_annotate_ai --cov-report=html --cov-report=term-missing"

# Pixi configuration
[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "win-64", "osx-64", "osx-arm64"]

#[tool.pixi.system-requirements]
#cuda = "12.8"

# Default environment - minimal user installation
[tool.pixi.dependencies]
python = "3.11.*"
micro_sam = ">=1.6.1,<2"
jupyter = ">=1.1.1,<2"
napari = ">=0.6.2,<0.7"
zeroc-ice = ">=3.6.4,<3.7"
kornia = "<0.7"
ipykernel = ">=6.30.1,<7"
pip = ">=25.2,<26"
numpy = ">=1.21.0,<2.0"
pytorch = ">=2.7.1,<3"
stackview = ">=0.18.0,<0.19"
hf-xet = "<1.1.9"

# Development feature
[tool.pixi.feature.dev.dependencies]
pytest = ">=8.4.1,<9"
pytest-cov = ">=6.2.1,<7"
pytest-mock = ">=3.14.1,<4"
flake8 = ">=7.3.0,<8"
black = ">=25.1.0,<26"
isort = ">=6.0.1,<7"

# Documentation feature
[tool.pixi.feature.docs.dependencies]
mkdocs = ">=1.5.3"
mkdocs-material = ">=9.5.9"
mkdocstrings = ">=0.24.0"
mkdocstrings-python = ">=1.7.0"
mkdocs-gen-files = ">=0.5.0"
mkdocs-literate-nav = ">=0.6.1"
mkdocs-section-index = ">=0.3.8"
mkdocs-autorefs = ">=0.5.0"
griffe-pydantic = ">=1.1.7"

[tool.pixi.feature.dev.pypi-dependencies]
build = "*"
twine = "*"

# Environment definitions
[tool.pixi.environments]
default = []
dev = ["dev"]
docs = ["docs"]
dev-docs = ["dev", "docs"]

[tool.pixi.pypi-dependencies]
omero-annotate-ai = { path = ".", editable = true }

[tool.pixi.tasks]
# Testing
test = {cmd = "pytest tests/ -v"}
test-unit = {cmd = "pytest tests/ -v -m \"not (omero or integration or docker)\""}
test-cov = { cmd = "pytest tests/ --cov=omero_annotate_ai --cov-report=xml" }

# Code quality
lint = { cmd = "flake8 src/omero_annotate_ai && black --check src/omero_annotate_ai && isort --check-only src/omero_annotate_ai" }
format = { cmd = "black src/omero_annotate_ai && isort src/omero_annotate_ai" }

# Documentation
docs-serve = {cmd = "mkdocs serve"}
docs-build = {cmd = "mkdocs build"}

# Development
start-omero = {cmd = "cd tests && docker-compose up -d"}
stop-omero = {cmd = "cd tests && docker-compose down -v"}
build = { cmd = "python -m build" }
clean = {cmd = "rm -rf build/ dist/ *.egg-info/ && find . -type d -name __pycache__ -exec rm -rf {} + && find . -type f -name \"*.pyc\" -delete"}

[dependency-groups]
docs = ["mkdocs-glightbox>=0.5.1,<0.6"]

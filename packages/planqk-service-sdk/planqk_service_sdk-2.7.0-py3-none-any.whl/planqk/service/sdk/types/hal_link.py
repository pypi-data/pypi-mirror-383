# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class HalLink(UncheckedBaseModel):
    href: typing.Optional[str] = pydantic.Field(default=None)
    """
    The URL of the link
    """

    templated: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the link is templated (optional)
    """

    type: typing.Optional[str] = pydantic.Field(default=None)
    """
    The media type of the link (optional)
    """

    deprecation: typing.Optional[str] = pydantic.Field(default=None)
    """
    A URL that provides further information about the deprecation of the link (optional)
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the link (optional)
    """

    profile: typing.Optional[str] = pydantic.Field(default=None)
    """
    A URL that provides further information about the profile of the link (optional)
    """

    title: typing.Optional[str] = pydantic.Field(default=None)
    """
    The title of the link (optional)
    """

    hreflang: typing.Optional[str] = pydantic.Field(default=None)
    """
    The language of the link's target resource (optional)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

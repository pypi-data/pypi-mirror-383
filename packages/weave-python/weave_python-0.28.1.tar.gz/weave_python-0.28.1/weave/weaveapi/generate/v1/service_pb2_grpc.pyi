"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import weaveapi.generate.v1.service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(
    collections.abc.AsyncIterator[_T],
    collections.abc.Iterator[_T],
    metaclass=abc.ABCMeta,
): ...
class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class GenerateStub:
    def __init__(
        self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]
    ) -> None: ...
    CreateSyntheticDataset: grpc.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.CreateSyntheticDatasetRequest,
        weaveapi.generate.v1.service_pb2.CreateSyntheticDatasetResponse,
    ]

    GetSyntheticDataset: grpc.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.GetSyntheticDatasetRequest,
        weaveapi.generate.v1.service_pb2.GetSyntheticDatasetResponse,
    ]

    ListSyntheticDatasets: grpc.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.ListSyntheticDatasetsRequest,
        weaveapi.generate.v1.service_pb2.ListSyntheticDatasetsResponse,
    ]

    DeleteSyntheticDataset: grpc.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.DeleteSyntheticDatasetRequest,
        weaveapi.generate.v1.service_pb2.DeleteSyntheticDatasetResponse,
    ]

class GenerateAsyncStub:
    CreateSyntheticDataset: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.CreateSyntheticDatasetRequest,
        weaveapi.generate.v1.service_pb2.CreateSyntheticDatasetResponse,
    ]

    GetSyntheticDataset: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.GetSyntheticDatasetRequest,
        weaveapi.generate.v1.service_pb2.GetSyntheticDatasetResponse,
    ]

    ListSyntheticDatasets: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.ListSyntheticDatasetsRequest,
        weaveapi.generate.v1.service_pb2.ListSyntheticDatasetsResponse,
    ]

    DeleteSyntheticDataset: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.generate.v1.service_pb2.DeleteSyntheticDatasetRequest,
        weaveapi.generate.v1.service_pb2.DeleteSyntheticDatasetResponse,
    ]

class GenerateServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateSyntheticDataset(
        self,
        request: weaveapi.generate.v1.service_pb2.CreateSyntheticDatasetRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.generate.v1.service_pb2.CreateSyntheticDatasetResponse,
        collections.abc.Awaitable[
            weaveapi.generate.v1.service_pb2.CreateSyntheticDatasetResponse
        ],
    ]: ...
    @abc.abstractmethod
    def GetSyntheticDataset(
        self,
        request: weaveapi.generate.v1.service_pb2.GetSyntheticDatasetRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.generate.v1.service_pb2.GetSyntheticDatasetResponse,
        collections.abc.Awaitable[
            weaveapi.generate.v1.service_pb2.GetSyntheticDatasetResponse
        ],
    ]: ...
    @abc.abstractmethod
    def ListSyntheticDatasets(
        self,
        request: weaveapi.generate.v1.service_pb2.ListSyntheticDatasetsRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.generate.v1.service_pb2.ListSyntheticDatasetsResponse,
        collections.abc.Awaitable[
            weaveapi.generate.v1.service_pb2.ListSyntheticDatasetsResponse
        ],
    ]: ...
    @abc.abstractmethod
    def DeleteSyntheticDataset(
        self,
        request: weaveapi.generate.v1.service_pb2.DeleteSyntheticDatasetRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.generate.v1.service_pb2.DeleteSyntheticDatasetResponse,
        collections.abc.Awaitable[
            weaveapi.generate.v1.service_pb2.DeleteSyntheticDatasetResponse
        ],
    ]: ...

def add_GenerateServicer_to_server(
    servicer: GenerateServicer, server: typing.Union[grpc.Server, grpc.aio.Server]
) -> None: ...

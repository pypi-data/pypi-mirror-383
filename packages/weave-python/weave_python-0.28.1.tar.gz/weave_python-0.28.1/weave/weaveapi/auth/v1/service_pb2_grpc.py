# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from weaveapi.auth.v1 import service_pb2 as weaveapi_dot_auth_dot_v1_dot_service__pb2


class AuthStub(object):
    """Auth handles authentication and user management
    OAuth endpoints (provider-agnostic)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitiateOAuth = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/InitiateOAuth",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.InitiateOAuthRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.InitiateOAuthResponse.FromString,
            _registered_method=True,
        )
        self.HandleOAuthCallback = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/HandleOAuthCallback",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.HandleOAuthCallbackRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.HandleOAuthCallbackResponse.FromString,
            _registered_method=True,
        )
        self.GetOAuthProviders = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/GetOAuthProviders",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetOAuthProvidersRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetOAuthProvidersResponse.FromString,
            _registered_method=True,
        )
        self.LinkOAuthProvider = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/LinkOAuthProvider",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.LinkOAuthProviderRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.LinkOAuthProviderResponse.FromString,
            _registered_method=True,
        )
        self.UnlinkOAuthProvider = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/UnlinkOAuthProvider",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UnlinkOAuthProviderRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UnlinkOAuthProviderResponse.FromString,
            _registered_method=True,
        )
        self.RefreshToken = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/RefreshToken",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RefreshTokenRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RefreshTokenResponse.FromString,
            _registered_method=True,
        )
        self.RevokeToken = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/RevokeToken",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeTokenRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeTokenResponse.FromString,
            _registered_method=True,
        )
        self.ValidateToken = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/ValidateToken",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateTokenRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateTokenResponse.FromString,
            _registered_method=True,
        )
        self.GetCurrentUser = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/GetCurrentUser",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetCurrentUserRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetCurrentUserResponse.FromString,
            _registered_method=True,
        )
        self.UpdateUser = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/UpdateUser",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateUserRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateUserResponse.FromString,
            _registered_method=True,
        )
        self.DeleteUser = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/DeleteUser",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.DeleteUserRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.DeleteUserResponse.FromString,
            _registered_method=True,
        )
        self.ListAPIKeys = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/ListAPIKeys",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListAPIKeysRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListAPIKeysResponse.FromString,
            _registered_method=True,
        )
        self.CreateAPIKey = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/CreateAPIKey",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.CreateAPIKeyRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.CreateAPIKeyResponse.FromString,
            _registered_method=True,
        )
        self.GetAPIKey = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/GetAPIKey",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetAPIKeyRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetAPIKeyResponse.FromString,
            _registered_method=True,
        )
        self.UpdateAPIKey = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/UpdateAPIKey",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateAPIKeyRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateAPIKeyResponse.FromString,
            _registered_method=True,
        )
        self.RevokeAPIKey = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/RevokeAPIKey",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAPIKeyRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAPIKeyResponse.FromString,
            _registered_method=True,
        )
        self.ValidateAPIKey = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/ValidateAPIKey",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateAPIKeyRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateAPIKeyResponse.FromString,
            _registered_method=True,
        )
        self.GetUsageStats = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/GetUsageStats",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetUsageStatsRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetUsageStatsResponse.FromString,
            _registered_method=True,
        )
        self.GetRateLimitStatus = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/GetRateLimitStatus",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetRateLimitStatusRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetRateLimitStatusResponse.FromString,
            _registered_method=True,
        )
        self.ListSessions = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/ListSessions",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListSessionsRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListSessionsResponse.FromString,
            _registered_method=True,
        )
        self.RevokeSession = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/RevokeSession",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeSessionRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeSessionResponse.FromString,
            _registered_method=True,
        )
        self.RevokeAllSessions = channel.unary_unary(
            "/weaveapi.auth.v1.Auth/RevokeAllSessions",
            request_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAllSessionsRequest.SerializeToString,
            response_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAllSessionsResponse.FromString,
            _registered_method=True,
        )


class AuthServicer(object):
    """Auth handles authentication and user management
    OAuth endpoints (provider-agnostic)
    """

    def InitiateOAuth(self, request, context):
        """Initiate OAuth flow for any supported provider"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def HandleOAuthCallback(self, request, context):
        """Handle OAuth callback from any provider"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOAuthProviders(self, request, context):
        """Get list of supported OAuth providers"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def LinkOAuthProvider(self, request, context):
        """Link additional OAuth provider to existing account"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UnlinkOAuthProvider(self, request, context):
        """Unlink OAuth provider from account"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RefreshToken(self, request, context):
        """Token management

        Refresh access token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RevokeToken(self, request, context):
        """Revoke refresh token (logout)"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ValidateToken(self, request, context):
        """Validate access token"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetCurrentUser(self, request, context):
        """User management

        Get current user profile
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateUser(self, request, context):
        """Update user profile"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteUser(self, request, context):
        """Delete user account"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListAPIKeys(self, request, context):
        """API Key management

        List user's API keys
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateAPIKey(self, request, context):
        """Create new API key"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetAPIKey(self, request, context):
        """Get API key details"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateAPIKey(self, request, context):
        """Update API key (rename, etc)"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RevokeAPIKey(self, request, context):
        """Revoke API key"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ValidateAPIKey(self, request, context):
        """Validate API key (for internal use)"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUsageStats(self, request, context):
        """Usage and limits

        Get user's API usage statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRateLimitStatus(self, request, context):
        """Get rate limit status"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListSessions(self, request, context):
        """Session management

        List active sessions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RevokeSession(self, request, context):
        """Revoke a specific session"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RevokeAllSessions(self, request, context):
        """Revoke all sessions except current"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_AuthServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "InitiateOAuth": grpc.unary_unary_rpc_method_handler(
            servicer.InitiateOAuth,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.InitiateOAuthRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.InitiateOAuthResponse.SerializeToString,
        ),
        "HandleOAuthCallback": grpc.unary_unary_rpc_method_handler(
            servicer.HandleOAuthCallback,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.HandleOAuthCallbackRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.HandleOAuthCallbackResponse.SerializeToString,
        ),
        "GetOAuthProviders": grpc.unary_unary_rpc_method_handler(
            servicer.GetOAuthProviders,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetOAuthProvidersRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetOAuthProvidersResponse.SerializeToString,
        ),
        "LinkOAuthProvider": grpc.unary_unary_rpc_method_handler(
            servicer.LinkOAuthProvider,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.LinkOAuthProviderRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.LinkOAuthProviderResponse.SerializeToString,
        ),
        "UnlinkOAuthProvider": grpc.unary_unary_rpc_method_handler(
            servicer.UnlinkOAuthProvider,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UnlinkOAuthProviderRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UnlinkOAuthProviderResponse.SerializeToString,
        ),
        "RefreshToken": grpc.unary_unary_rpc_method_handler(
            servicer.RefreshToken,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RefreshTokenRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RefreshTokenResponse.SerializeToString,
        ),
        "RevokeToken": grpc.unary_unary_rpc_method_handler(
            servicer.RevokeToken,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeTokenRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeTokenResponse.SerializeToString,
        ),
        "ValidateToken": grpc.unary_unary_rpc_method_handler(
            servicer.ValidateToken,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateTokenRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateTokenResponse.SerializeToString,
        ),
        "GetCurrentUser": grpc.unary_unary_rpc_method_handler(
            servicer.GetCurrentUser,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetCurrentUserRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetCurrentUserResponse.SerializeToString,
        ),
        "UpdateUser": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUser,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateUserRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateUserResponse.SerializeToString,
        ),
        "DeleteUser": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUser,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.DeleteUserRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.DeleteUserResponse.SerializeToString,
        ),
        "ListAPIKeys": grpc.unary_unary_rpc_method_handler(
            servicer.ListAPIKeys,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListAPIKeysRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListAPIKeysResponse.SerializeToString,
        ),
        "CreateAPIKey": grpc.unary_unary_rpc_method_handler(
            servicer.CreateAPIKey,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.CreateAPIKeyRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.CreateAPIKeyResponse.SerializeToString,
        ),
        "GetAPIKey": grpc.unary_unary_rpc_method_handler(
            servicer.GetAPIKey,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetAPIKeyRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetAPIKeyResponse.SerializeToString,
        ),
        "UpdateAPIKey": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateAPIKey,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateAPIKeyRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateAPIKeyResponse.SerializeToString,
        ),
        "RevokeAPIKey": grpc.unary_unary_rpc_method_handler(
            servicer.RevokeAPIKey,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAPIKeyRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAPIKeyResponse.SerializeToString,
        ),
        "ValidateAPIKey": grpc.unary_unary_rpc_method_handler(
            servicer.ValidateAPIKey,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateAPIKeyRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateAPIKeyResponse.SerializeToString,
        ),
        "GetUsageStats": grpc.unary_unary_rpc_method_handler(
            servicer.GetUsageStats,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetUsageStatsRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetUsageStatsResponse.SerializeToString,
        ),
        "GetRateLimitStatus": grpc.unary_unary_rpc_method_handler(
            servicer.GetRateLimitStatus,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetRateLimitStatusRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.GetRateLimitStatusResponse.SerializeToString,
        ),
        "ListSessions": grpc.unary_unary_rpc_method_handler(
            servicer.ListSessions,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListSessionsRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.ListSessionsResponse.SerializeToString,
        ),
        "RevokeSession": grpc.unary_unary_rpc_method_handler(
            servicer.RevokeSession,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeSessionRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeSessionResponse.SerializeToString,
        ),
        "RevokeAllSessions": grpc.unary_unary_rpc_method_handler(
            servicer.RevokeAllSessions,
            request_deserializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAllSessionsRequest.FromString,
            response_serializer=weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAllSessionsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "weaveapi.auth.v1.Auth", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("weaveapi.auth.v1.Auth", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class Auth(object):
    """Auth handles authentication and user management
    OAuth endpoints (provider-agnostic)
    """

    @staticmethod
    def InitiateOAuth(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/InitiateOAuth",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.InitiateOAuthRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.InitiateOAuthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def HandleOAuthCallback(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/HandleOAuthCallback",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.HandleOAuthCallbackRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.HandleOAuthCallbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetOAuthProviders(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/GetOAuthProviders",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetOAuthProvidersRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetOAuthProvidersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def LinkOAuthProvider(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/LinkOAuthProvider",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.LinkOAuthProviderRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.LinkOAuthProviderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UnlinkOAuthProvider(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/UnlinkOAuthProvider",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.UnlinkOAuthProviderRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.UnlinkOAuthProviderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RefreshToken(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/RefreshToken",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RefreshTokenRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RefreshTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RevokeToken(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/RevokeToken",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeTokenRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ValidateToken(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/ValidateToken",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateTokenRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetCurrentUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/GetCurrentUser",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetCurrentUserRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetCurrentUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/UpdateUser",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateUserRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/DeleteUser",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.DeleteUserRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.DeleteUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListAPIKeys(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/ListAPIKeys",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ListAPIKeysRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ListAPIKeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateAPIKey(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/CreateAPIKey",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.CreateAPIKeyRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.CreateAPIKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetAPIKey(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/GetAPIKey",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetAPIKeyRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetAPIKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateAPIKey(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/UpdateAPIKey",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateAPIKeyRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.UpdateAPIKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RevokeAPIKey(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/RevokeAPIKey",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAPIKeyRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAPIKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ValidateAPIKey(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/ValidateAPIKey",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateAPIKeyRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ValidateAPIKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetUsageStats(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/GetUsageStats",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetUsageStatsRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetUsageStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetRateLimitStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/GetRateLimitStatus",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetRateLimitStatusRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.GetRateLimitStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListSessions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/ListSessions",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ListSessionsRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.ListSessionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RevokeSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/RevokeSession",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeSessionRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RevokeAllSessions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.auth.v1.Auth/RevokeAllSessions",
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAllSessionsRequest.SerializeToString,
            weaveapi_dot_auth_dot_v1_dot_service__pb2.RevokeAllSessionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

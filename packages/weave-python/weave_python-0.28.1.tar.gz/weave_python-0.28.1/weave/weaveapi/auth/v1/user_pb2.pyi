"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class User(google.protobuf.message.Message):
    """User model"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    FULL_NAME_FIELD_NUMBER: builtins.int
    AVATAR_URL_FIELD_NUMBER: builtins.int
    OAUTH_ACCOUNTS_FIELD_NUMBER: builtins.int
    PRIMARY_PROVIDER_FIELD_NUMBER: builtins.int
    SUBSCRIPTION_FIELD_NUMBER: builtins.int
    ACCOUNT_STATUS_FIELD_NUMBER: builtins.int
    EMAIL_VERIFIED_FIELD_NUMBER: builtins.int
    LAST_LOGIN_AT_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    PREFERENCES_FIELD_NUMBER: builtins.int
    id: builtins.str
    email: builtins.str
    username: builtins.str
    """Primary username (from primary provider)"""
    full_name: builtins.str
    avatar_url: builtins.str
    primary_provider: builtins.str
    """github, google, microsoft, etc."""
    account_status: builtins.str
    """Account status
    active, suspended, deleted
    """
    email_verified: builtins.bool
    @property
    def oauth_accounts(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___OAuthAccount
    ]:
        """OAuth provider accounts"""

    @property
    def subscription(self) -> global___SubscriptionInfo:
        """Subscription info"""

    @property
    def last_login_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Metadata"""

    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def preferences(self) -> global___UserPreferences:
        """Preferences"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        email: builtins.str = ...,
        username: builtins.str = ...,
        full_name: builtins.str = ...,
        avatar_url: builtins.str = ...,
        oauth_accounts: collections.abc.Iterable[global___OAuthAccount] | None = ...,
        primary_provider: builtins.str = ...,
        subscription: global___SubscriptionInfo | None = ...,
        account_status: builtins.str = ...,
        email_verified: builtins.bool = ...,
        last_login_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        preferences: global___UserPreferences | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "created_at",
            b"created_at",
            "last_login_at",
            b"last_login_at",
            "preferences",
            b"preferences",
            "subscription",
            b"subscription",
            "updated_at",
            b"updated_at",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "account_status",
            b"account_status",
            "avatar_url",
            b"avatar_url",
            "created_at",
            b"created_at",
            "email",
            b"email",
            "email_verified",
            b"email_verified",
            "full_name",
            b"full_name",
            "id",
            b"id",
            "last_login_at",
            b"last_login_at",
            "oauth_accounts",
            b"oauth_accounts",
            "preferences",
            b"preferences",
            "primary_provider",
            b"primary_provider",
            "subscription",
            b"subscription",
            "updated_at",
            b"updated_at",
            "username",
            b"username",
        ],
    ) -> None: ...

global___User = User

@typing.final
class OAuthAccount(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self, field_name: typing.Literal["key", b"key", "value", b"value"]
        ) -> None: ...

    PROVIDER_FIELD_NUMBER: builtins.int
    PROVIDER_USER_ID_FIELD_NUMBER: builtins.int
    PROVIDER_USERNAME_FIELD_NUMBER: builtins.int
    PROVIDER_EMAIL_FIELD_NUMBER: builtins.int
    ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    REFRESH_TOKEN_FIELD_NUMBER: builtins.int
    TOKEN_EXPIRES_AT_FIELD_NUMBER: builtins.int
    LINKED_AT_FIELD_NUMBER: builtins.int
    LAST_USED_AT_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    provider: builtins.str
    """github, google, microsoft, gitlab"""
    provider_user_id: builtins.str
    """ID from the OAuth provider"""
    provider_username: builtins.str
    """Username from the OAuth provider"""
    provider_email: builtins.str
    """Email from the OAuth provider"""
    access_token: builtins.str
    """Encrypted OAuth access token"""
    refresh_token: builtins.str
    """Encrypted OAuth refresh token"""
    @property
    def token_expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def linked_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def last_used_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def metadata(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Provider-specific data"""

    def __init__(
        self,
        *,
        provider: builtins.str = ...,
        provider_user_id: builtins.str = ...,
        provider_username: builtins.str = ...,
        provider_email: builtins.str = ...,
        access_token: builtins.str = ...,
        refresh_token: builtins.str = ...,
        token_expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        linked_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_used_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        metadata: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "last_used_at",
            b"last_used_at",
            "linked_at",
            b"linked_at",
            "token_expires_at",
            b"token_expires_at",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "access_token",
            b"access_token",
            "last_used_at",
            b"last_used_at",
            "linked_at",
            b"linked_at",
            "metadata",
            b"metadata",
            "provider",
            b"provider",
            "provider_email",
            b"provider_email",
            "provider_user_id",
            b"provider_user_id",
            "provider_username",
            b"provider_username",
            "refresh_token",
            b"refresh_token",
            "token_expires_at",
            b"token_expires_at",
        ],
    ) -> None: ...

global___OAuthAccount = OAuthAccount

@typing.final
class OAuthProvider(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    ICON_URL_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    SUPPORTED_SCOPES_FIELD_NUMBER: builtins.int
    DEFAULT_SCOPE_FIELD_NUMBER: builtins.int
    SUPPORTS_REFRESH_FIELD_NUMBER: builtins.int
    SUPPORTS_PKCE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """github, google, microsoft, gitlab"""
    display_name: builtins.str
    """GitHub, Google, Microsoft, GitLab"""
    icon_url: builtins.str
    enabled: builtins.bool
    default_scope: builtins.str
    supports_refresh: builtins.bool
    supports_pkce: builtins.bool
    """Proof Key for Code Exchange"""
    @property
    def supported_scopes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        display_name: builtins.str = ...,
        icon_url: builtins.str = ...,
        enabled: builtins.bool = ...,
        supported_scopes: collections.abc.Iterable[builtins.str] | None = ...,
        default_scope: builtins.str = ...,
        supports_refresh: builtins.bool = ...,
        supports_pkce: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "default_scope",
            b"default_scope",
            "display_name",
            b"display_name",
            "enabled",
            b"enabled",
            "icon_url",
            b"icon_url",
            "name",
            b"name",
            "supported_scopes",
            b"supported_scopes",
            "supports_pkce",
            b"supports_pkce",
            "supports_refresh",
            b"supports_refresh",
        ],
    ) -> None: ...

global___OAuthProvider = OAuthProvider

@typing.final
class SubscriptionInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    TIER_FIELD_NUMBER: builtins.int
    STRIPE_CUSTOMER_ID_FIELD_NUMBER: builtins.int
    STRIPE_SUBSCRIPTION_ID_FIELD_NUMBER: builtins.int
    STARTED_AT_FIELD_NUMBER: builtins.int
    ENDS_AT_FIELD_NUMBER: builtins.int
    CANCELLED_AT_FIELD_NUMBER: builtins.int
    AUTO_RENEW_FIELD_NUMBER: builtins.int
    PAYMENT_METHOD_LAST4_FIELD_NUMBER: builtins.int
    PAYMENT_METHOD_BRAND_FIELD_NUMBER: builtins.int
    status: builtins.str
    """free, active, cancelled, past_due"""
    tier: builtins.str
    """free, pro"""
    stripe_customer_id: builtins.str
    stripe_subscription_id: builtins.str
    auto_renew: builtins.bool
    payment_method_last4: builtins.str
    payment_method_brand: builtins.str
    @property
    def started_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def ends_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def cancelled_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        status: builtins.str = ...,
        tier: builtins.str = ...,
        stripe_customer_id: builtins.str = ...,
        stripe_subscription_id: builtins.str = ...,
        started_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        ends_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        cancelled_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        auto_renew: builtins.bool = ...,
        payment_method_last4: builtins.str = ...,
        payment_method_brand: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "cancelled_at",
            b"cancelled_at",
            "ends_at",
            b"ends_at",
            "started_at",
            b"started_at",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "auto_renew",
            b"auto_renew",
            "cancelled_at",
            b"cancelled_at",
            "ends_at",
            b"ends_at",
            "payment_method_brand",
            b"payment_method_brand",
            "payment_method_last4",
            b"payment_method_last4",
            "started_at",
            b"started_at",
            "status",
            b"status",
            "stripe_customer_id",
            b"stripe_customer_id",
            "stripe_subscription_id",
            b"stripe_subscription_id",
            "tier",
            b"tier",
        ],
    ) -> None: ...

global___SubscriptionInfo = SubscriptionInfo

@typing.final
class UserPreferences(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EMAIL_NOTIFICATIONS_FIELD_NUMBER: builtins.int
    WEBHOOK_NOTIFICATIONS_FIELD_NUMBER: builtins.int
    WEBHOOK_URL_FIELD_NUMBER: builtins.int
    WEBHOOK_SECRET_FIELD_NUMBER: builtins.int
    WATCHED_MODELS_FIELD_NUMBER: builtins.int
    WATCHED_PROVIDERS_FIELD_NUMBER: builtins.int
    TIMEZONE_FIELD_NUMBER: builtins.int
    DATE_FORMAT_FIELD_NUMBER: builtins.int
    email_notifications: builtins.bool
    webhook_notifications: builtins.bool
    webhook_url: builtins.str
    webhook_secret: builtins.str
    timezone: builtins.str
    date_format: builtins.str
    @property
    def watched_models(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Model slugs to watch for updates"""

    @property
    def watched_providers(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Provider slugs to watch"""

    def __init__(
        self,
        *,
        email_notifications: builtins.bool = ...,
        webhook_notifications: builtins.bool = ...,
        webhook_url: builtins.str = ...,
        webhook_secret: builtins.str = ...,
        watched_models: collections.abc.Iterable[builtins.str] | None = ...,
        watched_providers: collections.abc.Iterable[builtins.str] | None = ...,
        timezone: builtins.str = ...,
        date_format: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "date_format",
            b"date_format",
            "email_notifications",
            b"email_notifications",
            "timezone",
            b"timezone",
            "watched_models",
            b"watched_models",
            "watched_providers",
            b"watched_providers",
            "webhook_notifications",
            b"webhook_notifications",
            "webhook_secret",
            b"webhook_secret",
            "webhook_url",
            b"webhook_url",
        ],
    ) -> None: ...

global___UserPreferences = UserPreferences

@typing.final
class APIKey(google.protobuf.message.Message):
    """API Key model"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    KEY_PREFIX_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    ALLOWED_ENDPOINTS_FIELD_NUMBER: builtins.int
    ALLOWED_IPS_FIELD_NUMBER: builtins.int
    LAST_USED_AT_FIELD_NUMBER: builtins.int
    REQUEST_COUNT_FIELD_NUMBER: builtins.int
    TOTAL_TOKENS_FIELD_NUMBER: builtins.int
    IS_ACTIVE_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    id: builtins.str
    user_id: builtins.str
    key_prefix: builtins.str
    """First 10 chars for identification"""
    name: builtins.str
    description: builtins.str
    request_count: builtins.int
    total_tokens: builtins.int
    is_active: builtins.bool
    """Status"""
    @property
    def scopes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Permissions
        read, write, admin
        """

    @property
    def allowed_endpoints(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Specific endpoints if restricted"""

    @property
    def allowed_ips(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """IP whitelist"""

    @property
    def last_used_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Usage"""

    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Metadata"""

    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        user_id: builtins.str = ...,
        key_prefix: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        scopes: collections.abc.Iterable[builtins.str] | None = ...,
        allowed_endpoints: collections.abc.Iterable[builtins.str] | None = ...,
        allowed_ips: collections.abc.Iterable[builtins.str] | None = ...,
        last_used_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        request_count: builtins.int = ...,
        total_tokens: builtins.int = ...,
        is_active: builtins.bool = ...,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "created_at",
            b"created_at",
            "expires_at",
            b"expires_at",
            "last_used_at",
            b"last_used_at",
            "updated_at",
            b"updated_at",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "allowed_endpoints",
            b"allowed_endpoints",
            "allowed_ips",
            b"allowed_ips",
            "created_at",
            b"created_at",
            "description",
            b"description",
            "expires_at",
            b"expires_at",
            "id",
            b"id",
            "is_active",
            b"is_active",
            "key_prefix",
            b"key_prefix",
            "last_used_at",
            b"last_used_at",
            "name",
            b"name",
            "request_count",
            b"request_count",
            "scopes",
            b"scopes",
            "total_tokens",
            b"total_tokens",
            "updated_at",
            b"updated_at",
            "user_id",
            b"user_id",
        ],
    ) -> None: ...

global___APIKey = APIKey

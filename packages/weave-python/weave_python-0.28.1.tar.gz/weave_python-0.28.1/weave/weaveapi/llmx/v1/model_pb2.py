# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: weaveapi/llmx/v1/model.proto
# Protobuf Python Version: 6.32.0
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC, 6, 32, 0, "", "weaveapi/llmx/v1/model.proto"
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x1cweaveapi/llmx/v1/model.proto\x12\x10weaveapi.llmx.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#weaveapi/llmx/v1/architecture.proto\x1a#weaveapi/llmx/v1/capabilities.proto\x1a\x1eweaveapi/llmx/v1/pricing.proto"\x92\x0c\n\x05Model\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n\x0bprovider_id\x18\x02 \x01(\tR\nproviderId\x12#\n\rprovider_slug\x18\x03 \x01(\tR\x0cproviderSlug\x12#\n\rprovider_name\x18\x04 \x01(\tR\x0cproviderName\x12\x19\n\x08model_id\x18\x05 \x01(\tR\x07modelId\x12\x12\n\x04slug\x18\x06 \x01(\tR\x04slug\x12\x12\n\x04name\x18\x07 \x01(\tR\x04name\x12!\n\x0c\x64isplay_name\x18\x08 \x01(\tR\x0b\x64isplayName\x12 \n\x0b\x64\x65scription\x18\t \x01(\tR\x0b\x64\x65scription\x12\x18\n\x07version\x18\n \x01(\tR\x07version\x12=\n\x0crelease_date\x18\x0b \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0breleaseDate\x12L\n\x14training_data_cutoff\x18\x0c \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x12trainingDataCutoff\x12\x45\n\x10\x64\x65precation_date\x18\r \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0f\x64\x65precationDate\x12@\n\x0c\x63\x61pabilities\x18\x0e \x03(\x0b\x32\x1c.weaveapi.llmx.v1.CapabilityR\x0c\x63\x61pabilities\x12M\n\x0e\x63lassification\x18\x0f \x01(\x0b\x32%.weaveapi.llmx.v1.ModelClassificationR\x0e\x63lassification\x12\x44\n\x0bperformance\x18\x10 \x01(\x0b\x32".weaveapi.llmx.v1.ModelPerformanceR\x0bperformance\x12\x33\n\x06tokens\x18\x11 \x01(\x0b\x32\x1b.weaveapi.llmx.v1.TokenInfoR\x06tokens\x12\x33\n\x07pricing\x18\x12 \x01(\x0b\x32\x19.weaveapi.llmx.v1.PricingR\x07pricing\x12\x45\n\rconfiguration\x18\x13 \x01(\x0b\x32\x1f.weaveapi.llmx.v1.ConfigurationR\rconfiguration\x12=\n\x0b\x61pi_details\x18\x14 \x01(\x0b\x32\x1c.weaveapi.llmx.v1.APIDetailsR\napiDetails\x12\x42\n\x0c\x61vailability\x18\x15 \x01(\x0b\x32\x1e.weaveapi.llmx.v1.AvailabilityR\x0c\x61vailability\x12\x42\n\x0c\x61rchitecture\x18\x16 \x01(\x0b\x32\x1e.weaveapi.llmx.v1.ArchitectureR\x0c\x61rchitecture\x12\x36\n\x08training\x18\x17 \x01(\x0b\x32\x1a.weaveapi.llmx.v1.TrainingR\x08training\x12\x30\n\x06safety\x18\x18 \x01(\x0b\x32\x18.weaveapi.llmx.v1.SafetyR\x06safety\x12\x39\n\tlicensing\x18\x19 \x01(\x0b\x32\x1b.weaveapi.llmx.v1.LicensingR\tlicensing\x12I\n\x0ftechnical_specs\x18\x1a \x01(\x0b\x32 .weaveapi.llmx.v1.TechnicalSpecsR\x0etechnicalSpecs\x12\x42\n\x0flast_scraped_at\x18\x1b \x01(\x0b\x32\x1a.google.protobuf.TimestampR\rlastScrapedAt\x12!\n\x0c\x64\x61ta_sources\x18\x1c \x03(\tR\x0b\x64\x61taSources\x12\x1b\n\tis_active\x18\x1d \x01(\x08R\x08isActive\x12#\n\ris_deprecated\x18\x1e \x01(\x08R\x0cisDeprecated\x12\x30\n\x14replacement_model_id\x18\x1f \x01(\tR\x12replacementModelId"\xca\x01\n\x13ModelClassification\x12\x1d\n\nmodel_type\x18\x01 \x01(\tR\tmodelType\x12"\n\x0c\x61rchitecture\x18\x02 \x01(\tR\x0c\x61rchitecture\x12\'\n\x0fparameter_count\x18\x03 \x01(\x03R\x0eparameterCount\x12$\n\x0eis_open_source\x18\x04 \x01(\x08R\x0cisOpenSource\x12!\n\x0clicense_type\x18\x05 \x01(\tR\x0blicenseType"\xf1\x02\n\x10ModelPerformance\x12\'\n\x0freasoning_score\x18\x01 \x01(\x01R\x0ereasoningScore\x12!\n\x0c\x63oding_score\x18\x02 \x01(\x01R\x0b\x63odingScore\x12%\n\x0e\x63reative_score\x18\x03 \x01(\x01R\rcreativeScore\x12#\n\rfactual_score\x18\x04 \x01(\x01R\x0c\x66\x61\x63tualScore\x12\x1d\n\nmath_score\x18\x05 \x01(\x01R\tmathScore\x12\x62\n\x10\x62\x65nchmark_scores\x18\x06 \x03(\x0b\x32\x37.weaveapi.llmx.v1.ModelPerformance.BenchmarkScoresEntryR\x0f\x62\x65nchmarkScores\x1a\x42\n\x14\x42\x65nchmarkScoresEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x01R\x05value:\x02\x38\x01"\xa8\x01\n\tTokenInfo\x12%\n\x0e\x63ontext_window\x18\x01 \x01(\x05R\rcontextWindow\x12*\n\x11max_output_tokens\x18\x02 \x01(\x05R\x0fmaxOutputTokens\x12\x1c\n\ttokenizer\x18\x03 \x01(\tR\ttokenizer\x12*\n\x11tokens_per_second\x18\x04 \x01(\x05R\x0ftokensPerSecond"\xca\x01\n\rConfiguration\x12\'\n\x0ftemperature_min\x18\x01 \x01(\x01R\x0etemperatureMin\x12\'\n\x0ftemperature_max\x18\x02 \x01(\x01R\x0etemperatureMax\x12/\n\x13temperature_default\x18\x03 \x01(\x01R\x12temperatureDefault\x12\x1a\n\ttop_p_min\x18\x04 \x01(\x01R\x07topPMin\x12\x1a\n\ttop_p_max\x18\x05 \x01(\x01R\x07topPMax"\x8e\x01\n\nAPIDetails\x12\x1a\n\x08\x65ndpoint\x18\x01 \x01(\tR\x08\x65ndpoint\x12\x18\n\x07version\x18\x02 \x01(\tR\x07version\x12$\n\x0erate_limit_rpm\x18\x03 \x01(\x05R\x0crateLimitRpm\x12$\n\x0erate_limit_tpm\x18\x04 \x01(\x05R\x0crateLimitTpm"F\n\x0c\x41vailability\x12\x18\n\x07regions\x18\x01 \x03(\tR\x07regions\x12\x1c\n\tplatforms\x18\x02 \x03(\tR\tplatformsB\xba\x01\n\x14\x63om.weaveapi.llmx.v1B\nModelProtoP\x01Z4github.com/weave-labs/weave-go/weaveapi/llmx/v1;llmx\xa2\x02\x03WLX\xaa\x02\x10Weaveapi.Llmx.V1\xca\x02\x10Weaveapi\\Llmx\\V1\xe2\x02\x1cWeaveapi\\Llmx\\V1\\GPBMetadata\xea\x02\x12Weaveapi::Llmx::V1b\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "weaveapi.llmx.v1.model_pb2", _globals
)
if not _descriptor._USE_C_DESCRIPTORS:
    _globals["DESCRIPTOR"]._loaded_options = None
    _globals[
        "DESCRIPTOR"
    ]._serialized_options = b"\n\024com.weaveapi.llmx.v1B\nModelProtoP\001Z4github.com/weave-labs/weave-go/weaveapi/llmx/v1;llmx\242\002\003WLX\252\002\020Weaveapi.Llmx.V1\312\002\020Weaveapi\\Llmx\\V1\342\002\034Weaveapi\\Llmx\\V1\\GPBMetadata\352\002\022Weaveapi::Llmx::V1"
    _globals["_MODELPERFORMANCE_BENCHMARKSCORESENTRY"]._loaded_options = None
    _globals["_MODELPERFORMANCE_BENCHMARKSCORESENTRY"]._serialized_options = b"8\001"
    _globals["_MODEL"]._serialized_start = 190
    _globals["_MODEL"]._serialized_end = 1744
    _globals["_MODELCLASSIFICATION"]._serialized_start = 1747
    _globals["_MODELCLASSIFICATION"]._serialized_end = 1949
    _globals["_MODELPERFORMANCE"]._serialized_start = 1952
    _globals["_MODELPERFORMANCE"]._serialized_end = 2321
    _globals["_MODELPERFORMANCE_BENCHMARKSCORESENTRY"]._serialized_start = 2255
    _globals["_MODELPERFORMANCE_BENCHMARKSCORESENTRY"]._serialized_end = 2321
    _globals["_TOKENINFO"]._serialized_start = 2324
    _globals["_TOKENINFO"]._serialized_end = 2492
    _globals["_CONFIGURATION"]._serialized_start = 2495
    _globals["_CONFIGURATION"]._serialized_end = 2697
    _globals["_APIDETAILS"]._serialized_start = 2700
    _globals["_APIDETAILS"]._serialized_end = 2842
    _globals["_AVAILABILITY"]._serialized_start = 2844
    _globals["_AVAILABILITY"]._serialized_end = 2914
# @@protoc_insertion_point(module_scope)

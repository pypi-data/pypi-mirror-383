"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import weaveapi.llmx.v1.service_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(
    collections.abc.AsyncIterator[_T],
    collections.abc.Iterator[_T],
    metaclass=abc.ABCMeta,
): ...
class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class LlmXStub:
    def __init__(
        self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]
    ) -> None: ...
    ListProviders: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.ListProvidersRequest,
        weaveapi.llmx.v1.service_pb2.ListProvidersResponse,
    ]

    GetProvider: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetProviderRequest,
        weaveapi.llmx.v1.service_pb2.GetProviderResponse,
    ]

    ListModels: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.ListModelsRequest,
        weaveapi.llmx.v1.service_pb2.ListModelsResponse,
    ]

    GetModel: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetModelRequest,
        weaveapi.llmx.v1.service_pb2.GetModelResponse,
    ]

    SearchModels: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.SearchModelsRequest,
        weaveapi.llmx.v1.service_pb2.SearchModelsResponse,
    ]

    CompareModels: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.CompareModelsRequest,
        weaveapi.llmx.v1.service_pb2.CompareModelsResponse,
    ]

    GetModelPriceHistory: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetModelPriceHistoryRequest,
        weaveapi.llmx.v1.service_pb2.GetModelPriceHistoryResponse,
    ]

    GetModelChanges: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetModelChangesRequest,
        weaveapi.llmx.v1.service_pb2.GetModelChangesResponse,
    ]

    GetTrendingModels: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetTrendingModelsRequest,
        weaveapi.llmx.v1.service_pb2.GetTrendingModelsResponse,
    ]

    GetRecentUpdates: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetRecentUpdatesRequest,
        weaveapi.llmx.v1.service_pb2.GetRecentUpdatesResponse,
    ]

    ExportData: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.ExportDataRequest,
        weaveapi.llmx.v1.service_pb2.ExportDataResponse,
    ]

    GetStatistics: grpc.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetStatisticsRequest,
        weaveapi.llmx.v1.service_pb2.GetStatisticsResponse,
    ]

class LlmXAsyncStub:
    ListProviders: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.ListProvidersRequest,
        weaveapi.llmx.v1.service_pb2.ListProvidersResponse,
    ]

    GetProvider: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetProviderRequest,
        weaveapi.llmx.v1.service_pb2.GetProviderResponse,
    ]

    ListModels: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.ListModelsRequest,
        weaveapi.llmx.v1.service_pb2.ListModelsResponse,
    ]

    GetModel: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetModelRequest,
        weaveapi.llmx.v1.service_pb2.GetModelResponse,
    ]

    SearchModels: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.SearchModelsRequest,
        weaveapi.llmx.v1.service_pb2.SearchModelsResponse,
    ]

    CompareModels: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.CompareModelsRequest,
        weaveapi.llmx.v1.service_pb2.CompareModelsResponse,
    ]

    GetModelPriceHistory: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetModelPriceHistoryRequest,
        weaveapi.llmx.v1.service_pb2.GetModelPriceHistoryResponse,
    ]

    GetModelChanges: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetModelChangesRequest,
        weaveapi.llmx.v1.service_pb2.GetModelChangesResponse,
    ]

    GetTrendingModels: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetTrendingModelsRequest,
        weaveapi.llmx.v1.service_pb2.GetTrendingModelsResponse,
    ]

    GetRecentUpdates: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetRecentUpdatesRequest,
        weaveapi.llmx.v1.service_pb2.GetRecentUpdatesResponse,
    ]

    ExportData: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.ExportDataRequest,
        weaveapi.llmx.v1.service_pb2.ExportDataResponse,
    ]

    GetStatistics: grpc.aio.UnaryUnaryMultiCallable[
        weaveapi.llmx.v1.service_pb2.GetStatisticsRequest,
        weaveapi.llmx.v1.service_pb2.GetStatisticsResponse,
    ]

class LlmXServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ListProviders(
        self,
        request: weaveapi.llmx.v1.service_pb2.ListProvidersRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.ListProvidersResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.ListProvidersResponse],
    ]: ...
    @abc.abstractmethod
    def GetProvider(
        self,
        request: weaveapi.llmx.v1.service_pb2.GetProviderRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.GetProviderResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.GetProviderResponse],
    ]: ...
    @abc.abstractmethod
    def ListModels(
        self,
        request: weaveapi.llmx.v1.service_pb2.ListModelsRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.ListModelsResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.ListModelsResponse],
    ]: ...
    @abc.abstractmethod
    def GetModel(
        self,
        request: weaveapi.llmx.v1.service_pb2.GetModelRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.GetModelResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.GetModelResponse],
    ]: ...
    @abc.abstractmethod
    def SearchModels(
        self,
        request: weaveapi.llmx.v1.service_pb2.SearchModelsRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.SearchModelsResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.SearchModelsResponse],
    ]: ...
    @abc.abstractmethod
    def CompareModels(
        self,
        request: weaveapi.llmx.v1.service_pb2.CompareModelsRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.CompareModelsResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.CompareModelsResponse],
    ]: ...
    @abc.abstractmethod
    def GetModelPriceHistory(
        self,
        request: weaveapi.llmx.v1.service_pb2.GetModelPriceHistoryRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.GetModelPriceHistoryResponse,
        collections.abc.Awaitable[
            weaveapi.llmx.v1.service_pb2.GetModelPriceHistoryResponse
        ],
    ]: ...
    @abc.abstractmethod
    def GetModelChanges(
        self,
        request: weaveapi.llmx.v1.service_pb2.GetModelChangesRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.GetModelChangesResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.GetModelChangesResponse],
    ]: ...
    @abc.abstractmethod
    def GetTrendingModels(
        self,
        request: weaveapi.llmx.v1.service_pb2.GetTrendingModelsRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.GetTrendingModelsResponse,
        collections.abc.Awaitable[
            weaveapi.llmx.v1.service_pb2.GetTrendingModelsResponse
        ],
    ]: ...
    @abc.abstractmethod
    def GetRecentUpdates(
        self,
        request: weaveapi.llmx.v1.service_pb2.GetRecentUpdatesRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.GetRecentUpdatesResponse,
        collections.abc.Awaitable[
            weaveapi.llmx.v1.service_pb2.GetRecentUpdatesResponse
        ],
    ]: ...
    @abc.abstractmethod
    def ExportData(
        self,
        request: weaveapi.llmx.v1.service_pb2.ExportDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.ExportDataResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.ExportDataResponse],
    ]: ...
    @abc.abstractmethod
    def GetStatistics(
        self,
        request: weaveapi.llmx.v1.service_pb2.GetStatisticsRequest,
        context: _ServicerContext,
    ) -> typing.Union[
        weaveapi.llmx.v1.service_pb2.GetStatisticsResponse,
        collections.abc.Awaitable[weaveapi.llmx.v1.service_pb2.GetStatisticsResponse],
    ]: ...

def add_LlmXServicer_to_server(
    servicer: LlmXServicer, server: typing.Union[grpc.Server, grpc.aio.Server]
) -> None: ...

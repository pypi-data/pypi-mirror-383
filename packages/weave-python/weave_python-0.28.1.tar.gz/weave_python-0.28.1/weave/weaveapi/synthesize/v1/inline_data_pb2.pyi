"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DataFormat:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DataFormatEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DataFormat.ValueType],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DATA_FORMAT_UNSPECIFIED: _DataFormat.ValueType  # 0
    DATA_FORMAT_CSV: _DataFormat.ValueType  # 1
    DATA_FORMAT_JSON: _DataFormat.ValueType  # 2
    DATA_FORMAT_PARQUET: _DataFormat.ValueType  # 3
    DATA_FORMAT_AVRO: _DataFormat.ValueType  # 4
    DATA_FORMAT_ORC: _DataFormat.ValueType  # 5

class DataFormat(_DataFormat, metaclass=_DataFormatEnumTypeWrapper):
    """DataFormat specifies the format of the inline data"""

DATA_FORMAT_UNSPECIFIED: DataFormat.ValueType  # 0
DATA_FORMAT_CSV: DataFormat.ValueType  # 1
DATA_FORMAT_JSON: DataFormat.ValueType  # 2
DATA_FORMAT_PARQUET: DataFormat.ValueType  # 3
DATA_FORMAT_AVRO: DataFormat.ValueType  # 4
DATA_FORMAT_ORC: DataFormat.ValueType  # 5
global___DataFormat = DataFormat

@typing.final
class InlineData(google.protobuf.message.Message):
    """Inline represents data sent directly in the request. This is used for
    small datasets that are sent directly in the request body. Please use
    with caution as this can cause issues with large datasets.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FORMAT_FIELD_NUMBER: builtins.int
    CONTENTS_FIELD_NUMBER: builtins.int
    format: global___DataFormat.ValueType
    """Format of the inline data"""
    contents: builtins.bytes
    """The content of the inline data"""
    def __init__(
        self,
        *,
        format: global___DataFormat.ValueType = ...,
        contents: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["contents", b"contents", "format", b"format"]
    ) -> None: ...

global___InlineData = InlineData

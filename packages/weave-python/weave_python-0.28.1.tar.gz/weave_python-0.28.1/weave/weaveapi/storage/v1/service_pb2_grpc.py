# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from weaveapi.storage.v1 import (
    service_pb2 as weaveapi_dot_storage_dot_v1_dot_service__pb2,
)


class StorageStub(object):
    """Storage provides CRUD operations for managing storage configurations"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStorage = channel.unary_unary(
            "/weaveapi.storage.v1.Storage/CreateStorage",
            request_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.CreateStorageRequest.SerializeToString,
            response_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.CreateStorageResponse.FromString,
            _registered_method=True,
        )
        self.GetStorage = channel.unary_unary(
            "/weaveapi.storage.v1.Storage/GetStorage",
            request_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.GetStorageRequest.SerializeToString,
            response_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.GetStorageResponse.FromString,
            _registered_method=True,
        )
        self.ListStorages = channel.unary_unary(
            "/weaveapi.storage.v1.Storage/ListStorages",
            request_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.ListStoragesRequest.SerializeToString,
            response_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.ListStoragesResponse.FromString,
            _registered_method=True,
        )
        self.UpdateStorage = channel.unary_unary(
            "/weaveapi.storage.v1.Storage/UpdateStorage",
            request_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.UpdateStorageRequest.SerializeToString,
            response_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.UpdateStorageResponse.FromString,
            _registered_method=True,
        )
        self.DeleteStorage = channel.unary_unary(
            "/weaveapi.storage.v1.Storage/DeleteStorage",
            request_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.DeleteStorageRequest.SerializeToString,
            response_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.DeleteStorageResponse.FromString,
            _registered_method=True,
        )
        self.TestStorageConnection = channel.unary_unary(
            "/weaveapi.storage.v1.Storage/TestStorageConnection",
            request_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.TestStorageConnectionRequest.SerializeToString,
            response_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.TestStorageConnectionResponse.FromString,
            _registered_method=True,
        )


class StorageServicer(object):
    """Storage provides CRUD operations for managing storage configurations"""

    def CreateStorage(self, request, context):
        """CreateStorage creates a new storage configuration"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetStorage(self, request, context):
        """GetStorage retrieves a storage configuration by ID"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListStorages(self, request, context):
        """ListStorages retrieves all storage configurations with optional filtering"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateStorage(self, request, context):
        """UpdateStorage updates an existing storage configuration"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteStorage(self, request, context):
        """DeleteStorage deletes a storage configuration by ID"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TestStorageConnection(self, request, context):
        """TestStorageConnection tests the connection to a storage"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_StorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateStorage": grpc.unary_unary_rpc_method_handler(
            servicer.CreateStorage,
            request_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.CreateStorageRequest.FromString,
            response_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.CreateStorageResponse.SerializeToString,
        ),
        "GetStorage": grpc.unary_unary_rpc_method_handler(
            servicer.GetStorage,
            request_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.GetStorageRequest.FromString,
            response_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.GetStorageResponse.SerializeToString,
        ),
        "ListStorages": grpc.unary_unary_rpc_method_handler(
            servicer.ListStorages,
            request_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.ListStoragesRequest.FromString,
            response_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.ListStoragesResponse.SerializeToString,
        ),
        "UpdateStorage": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateStorage,
            request_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.UpdateStorageRequest.FromString,
            response_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.UpdateStorageResponse.SerializeToString,
        ),
        "DeleteStorage": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteStorage,
            request_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.DeleteStorageRequest.FromString,
            response_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.DeleteStorageResponse.SerializeToString,
        ),
        "TestStorageConnection": grpc.unary_unary_rpc_method_handler(
            servicer.TestStorageConnection,
            request_deserializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.TestStorageConnectionRequest.FromString,
            response_serializer=weaveapi_dot_storage_dot_v1_dot_service__pb2.TestStorageConnectionResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "weaveapi.storage.v1.Storage", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "weaveapi.storage.v1.Storage", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class Storage(object):
    """Storage provides CRUD operations for managing storage configurations"""

    @staticmethod
    def CreateStorage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.storage.v1.Storage/CreateStorage",
            weaveapi_dot_storage_dot_v1_dot_service__pb2.CreateStorageRequest.SerializeToString,
            weaveapi_dot_storage_dot_v1_dot_service__pb2.CreateStorageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetStorage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.storage.v1.Storage/GetStorage",
            weaveapi_dot_storage_dot_v1_dot_service__pb2.GetStorageRequest.SerializeToString,
            weaveapi_dot_storage_dot_v1_dot_service__pb2.GetStorageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListStorages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.storage.v1.Storage/ListStorages",
            weaveapi_dot_storage_dot_v1_dot_service__pb2.ListStoragesRequest.SerializeToString,
            weaveapi_dot_storage_dot_v1_dot_service__pb2.ListStoragesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateStorage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.storage.v1.Storage/UpdateStorage",
            weaveapi_dot_storage_dot_v1_dot_service__pb2.UpdateStorageRequest.SerializeToString,
            weaveapi_dot_storage_dot_v1_dot_service__pb2.UpdateStorageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteStorage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.storage.v1.Storage/DeleteStorage",
            weaveapi_dot_storage_dot_v1_dot_service__pb2.DeleteStorageRequest.SerializeToString,
            weaveapi_dot_storage_dot_v1_dot_service__pb2.DeleteStorageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def TestStorageConnection(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/weaveapi.storage.v1.Storage/TestStorageConnection",
            weaveapi_dot_storage_dot_v1_dot_service__pb2.TestStorageConnectionRequest.SerializeToString,
            weaveapi_dot_storage_dot_v1_dot_service__pb2.TestStorageConnectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

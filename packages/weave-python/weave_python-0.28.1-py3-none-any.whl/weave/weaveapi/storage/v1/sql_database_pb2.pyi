"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class SqlDatabase(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TABLES_FIELD_NUMBER: builtins.int
    MYSQL_FIELD_NUMBER: builtins.int
    POSTGRES_FIELD_NUMBER: builtins.int
    SQL_SERVER_FIELD_NUMBER: builtins.int
    ORACLE_FIELD_NUMBER: builtins.int
    MARIADB_FIELD_NUMBER: builtins.int
    SNOWFLAKE_FIELD_NUMBER: builtins.int
    BIG_QUERY_FIELD_NUMBER: builtins.int
    DATABRICKS_FIELD_NUMBER: builtins.int
    @property
    def tables(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]: ...
    @property
    def mysql(self) -> global___Mysql: ...
    @property
    def postgres(self) -> global___Postgres: ...
    @property
    def sql_server(self) -> global___SqlServer: ...
    @property
    def oracle(self) -> global___Oracle: ...
    @property
    def mariadb(self) -> global___MariaDB: ...
    @property
    def snowflake(self) -> global___Snowflake: ...
    @property
    def big_query(self) -> global___BigQuery: ...
    @property
    def databricks(self) -> global___Databricks: ...
    def __init__(
        self,
        *,
        tables: collections.abc.Iterable[builtins.str] | None = ...,
        mysql: global___Mysql | None = ...,
        postgres: global___Postgres | None = ...,
        sql_server: global___SqlServer | None = ...,
        oracle: global___Oracle | None = ...,
        mariadb: global___MariaDB | None = ...,
        snowflake: global___Snowflake | None = ...,
        big_query: global___BigQuery | None = ...,
        databricks: global___Databricks | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "big_query",
            b"big_query",
            "databricks",
            b"databricks",
            "mariadb",
            b"mariadb",
            "mysql",
            b"mysql",
            "oracle",
            b"oracle",
            "postgres",
            b"postgres",
            "relational_database",
            b"relational_database",
            "snowflake",
            b"snowflake",
            "sql_server",
            b"sql_server",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "big_query",
            b"big_query",
            "databricks",
            b"databricks",
            "mariadb",
            b"mariadb",
            "mysql",
            b"mysql",
            "oracle",
            b"oracle",
            "postgres",
            b"postgres",
            "relational_database",
            b"relational_database",
            "snowflake",
            b"snowflake",
            "sql_server",
            b"sql_server",
            "tables",
            b"tables",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["relational_database", b"relational_database"]
    ) -> (
        typing.Literal[
            "mysql",
            "postgres",
            "sql_server",
            "oracle",
            "mariadb",
            "snowflake",
            "big_query",
            "databricks",
        ]
        | None
    ): ...

global___SqlDatabase = SqlDatabase

@typing.final
class Mysql(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    SSL_ENABLED_FIELD_NUMBER: builtins.int
    host: builtins.str
    port: builtins.int
    database: builtins.str
    username: builtins.str
    password: builtins.str
    ssl_enabled: builtins.bool
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        port: builtins.int = ...,
        database: builtins.str = ...,
        username: builtins.str = ...,
        password: builtins.str = ...,
        ssl_enabled: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "database",
            b"database",
            "host",
            b"host",
            "password",
            b"password",
            "port",
            b"port",
            "ssl_enabled",
            b"ssl_enabled",
            "username",
            b"username",
        ],
    ) -> None: ...

global___Mysql = Mysql

@typing.final
class Postgres(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    SSL_ENABLED_FIELD_NUMBER: builtins.int
    host: builtins.str
    port: builtins.int
    database: builtins.str
    username: builtins.str
    password: builtins.str
    ssl_enabled: builtins.bool
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        port: builtins.int = ...,
        database: builtins.str = ...,
        username: builtins.str = ...,
        password: builtins.str = ...,
        ssl_enabled: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "database",
            b"database",
            "host",
            b"host",
            "password",
            b"password",
            "port",
            b"port",
            "ssl_enabled",
            b"ssl_enabled",
            "username",
            b"username",
        ],
    ) -> None: ...

global___Postgres = Postgres

@typing.final
class SqlServer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    ENCRYPT_CONNECTION_FIELD_NUMBER: builtins.int
    host: builtins.str
    port: builtins.int
    database: builtins.str
    username: builtins.str
    password: builtins.str
    encrypt_connection: builtins.bool
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        port: builtins.int = ...,
        database: builtins.str = ...,
        username: builtins.str = ...,
        password: builtins.str = ...,
        encrypt_connection: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "database",
            b"database",
            "encrypt_connection",
            b"encrypt_connection",
            "host",
            b"host",
            "password",
            b"password",
            "port",
            b"port",
            "username",
            b"username",
        ],
    ) -> None: ...

global___SqlServer = SqlServer

@typing.final
class Oracle(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_STRING_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    connection_string: builtins.str
    username: builtins.str
    password: builtins.str
    def __init__(
        self,
        *,
        connection_string: builtins.str = ...,
        username: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "connection_string",
            b"connection_string",
            "password",
            b"password",
            "username",
            b"username",
        ],
    ) -> None: ...

global___Oracle = Oracle

@typing.final
class MariaDB(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    SSL_ENABLED_FIELD_NUMBER: builtins.int
    host: builtins.str
    port: builtins.int
    database: builtins.str
    username: builtins.str
    password: builtins.str
    ssl_enabled: builtins.bool
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        port: builtins.int = ...,
        database: builtins.str = ...,
        username: builtins.str = ...,
        password: builtins.str = ...,
        ssl_enabled: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "database",
            b"database",
            "host",
            b"host",
            "password",
            b"password",
            "port",
            b"port",
            "ssl_enabled",
            b"ssl_enabled",
            "username",
            b"username",
        ],
    ) -> None: ...

global___MariaDB = MariaDB

@typing.final
class Snowflake(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_FIELD_NUMBER: builtins.int
    WAREHOUSE_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    account: builtins.str
    warehouse: builtins.str
    database: builtins.str
    schema: builtins.str
    role: builtins.str
    username: builtins.str
    password: builtins.str
    def __init__(
        self,
        *,
        account: builtins.str = ...,
        warehouse: builtins.str = ...,
        database: builtins.str = ...,
        schema: builtins.str = ...,
        role: builtins.str = ...,
        username: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "account",
            b"account",
            "database",
            b"database",
            "password",
            b"password",
            "role",
            b"role",
            "schema",
            b"schema",
            "username",
            b"username",
            "warehouse",
            b"warehouse",
        ],
    ) -> None: ...

global___Snowflake = Snowflake

@typing.final
class BigQuery(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_JSON_FIELD_NUMBER: builtins.int
    USE_APPLICATION_DEFAULT_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    dataset: builtins.str
    service_account_json: builtins.str
    use_application_default: builtins.bool
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        dataset: builtins.str = ...,
        service_account_json: builtins.str = ...,
        use_application_default: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "auth",
            b"auth",
            "service_account_json",
            b"service_account_json",
            "use_application_default",
            b"use_application_default",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "auth",
            b"auth",
            "dataset",
            b"dataset",
            "project_id",
            b"project_id",
            "service_account_json",
            b"service_account_json",
            "use_application_default",
            b"use_application_default",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["auth", b"auth"]
    ) -> typing.Literal["service_account_json", "use_application_default"] | None: ...

global___BigQuery = BigQuery

@typing.final
class Databricks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    HTTP_PATH_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    host: builtins.str
    http_path: builtins.str
    token: builtins.str
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        http_path: builtins.str = ...,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "host", b"host", "http_path", b"http_path", "token", b"token"
        ],
    ) -> None: ...

global___Databricks = Databricks

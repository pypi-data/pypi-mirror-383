{% include base_sphinx_config %}

import os

{%- if html_theme %}

html_theme = {{ html_theme | repr }}
{%- endif %}
html_theme_options = {
    "hide_toc": True,
    "sidebar_hide_name": True,
}

{% if "myst_parser" in extensions %}
myst_enable_extensions = [
    "attrs_inline",
    "attrs_block",
    "colon_fence",
    "dollarmath",
]
{% endif %}

latex_engine = "xelatex"

latex_preamble = r"""
\pagenumbering{gobble}
\setcounter{secnumdepth}{-1}
"""

latex_elements = {
    "papersize": "a4paper",
    "pointsize": "8pt",
    "maketitle": "",
    "makeindex": "",
    "printindex": "",
    "tableofcontents": "",
    "preamble": latex_preamble,
    "sphinxsetup": "hmargin={2cm, 2cm}, vmargin={2cm, 2cm}",
}

latex_documents = [
    ("index", "index.tex", "mdsphinx", "mdsphinx", "howto"),
]

confluence_publish = True
confluence_publish_dryrun = bool(os.environ.get("CONFLUENCE_PUBLISH_DRYRUN", "1") in {"1", "true", "True"})

confluence_server_url = os.environ.get("CONFLUENCE_SERVER_URL", "https://example.atlassian.net/wiki").rstrip("/")

# noinspection PyBroadException
try:
    import netrc

    nc = netrc.netrc()
    confluence_server_user, _, confluence_api_token = nc.authenticators(confluence_server_url)
except Exception:
    confluence_server_user, confluence_api_token = "", ""

confluence_server_url = confluence_server_url.rstrip("/") + "/"

confluence_space_key = os.environ.get("CONFLUENCE_SPACE_KEY", "~MySpace")
confluence_parent_page = os.environ.get("CONFLUENCE_PARENT_PAGE", "ParentPage")

confluence_use_index = False
confluence_publish_postfix = " ({hash:.5})"

confluence_remove_title = False
confluence_title_overrides = {
    "index": "{{ inp_path_name }}",
}

confluence_code_block_theme = "Midnight"

def setup(app):
    def on_config_inited(*args, **kwargs):
        print("")
        print("confluence_publish:", confluence_publish)
        print("confluence_publish_dryrun:", confluence_publish_dryrun)
        print("confluence_server_user:", confluence_server_user if confluence_server_user else "EMPTY")
        print("confluence_api_token:", "*****" if confluence_api_token else "EMPTY")
        print("confluence_server_url:", confluence_server_url)
        print("confluence_space_key:", confluence_space_key)
        print("confluence_parent_page:", confluence_parent_page)

    app.connect('config-inited', on_config_inited)


[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "decoyable"
version = "1.2.2"
description = "Next-Generation Active Cyber Defense Platform - Find secrets, vulnerabilities, and attack patterns in your code"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "Kolerr Lab", email = "lab.kolerr@kolerr.com" }
]
maintainers = [
    { name = "Kolerr Lab", email = "lab.kolerr@kolerr.com" }
]
keywords = ["security", "scanning", "vulnerabilities", "secrets", "SAST", "cybersecurity", "honeypot", "AI", "defense"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking :: Monitoring",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "jinja2>=3.1.2",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-decouple>=3.8",
    "requests>=2.31.0",
    "click>=8.1.7",
    "rich>=13.7.0",
    "pyyaml>=6.0.1",
    "cryptography>=41.0.7",
    "bandit>=1.7.6",
    "safety>=2.3.5",
    "pip-audit>=2.7.0",
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "docker>=6.1.3",
    "celery>=5.3.0",
    "redis>=4.5.0",
    "psutil>=5.9.0",
    "aiokafka>=0.8.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "aiosqlite>=0.19.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0"
]
[project.urls]
Homepage = "https://github.com/Kolerr-Lab/supper-decoyable"
Documentation = "https://github.com/Kolerr-Lab/supper-decoyable/wiki"
Repository = "https://github.com/Kolerr-Lab/supper-decoyable.git"
Issues = "https://github.com/Kolerr-Lab/supper-decoyable/issues"
Changelog = "https://github.com/Kolerr-Lab/supper-decoyable/blob/main/CHANGELOG.md"

[project.scripts]
decoyable = "decoyable.core.main:main"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
known_first_party = ["decoyable"]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
show_error_codes = true
files = ["decoyable", "main.py", "tests"]
ignore_errors = true

[tool.ruff]
target-version = "py38"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["decoyable"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "PLR2004"]
"__init__.py" = ["F401"]

[tool.setuptools.packages.find]
include = ["decoyable*"]

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-ra -q --strict-markers --strict-config --cov=decoyable --cov-report=term-missing --cov-report=xml"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "security: Security related tests",
]

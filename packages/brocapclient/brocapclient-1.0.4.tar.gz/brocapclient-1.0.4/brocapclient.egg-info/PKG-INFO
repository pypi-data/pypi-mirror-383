Metadata-Version: 2.4
Name: brocapclient
Version: 1.0.4
Summary: Official python client library for https://docs.brocapgpt.com captcha recognition service.
Author: dev@brocapgpt.com
Author-email: dev@brocapgpt.com
License: MIT
Keywords: captcha 
				hcaptcha
				funcaptcha
                foxcaptcha
				python3
				python-library
				brocapgpt
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: AsyncIO
Classifier: Operating System :: Unix
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: MacOS
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohappyeyeballs==2.4.4; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: aiohttp==3.11.10; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: aiosignal==1.3.1; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: annotated-types==0.7.0; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: async-timeout==5.0.1; python_version >= "3.9" and python_version <= "3.11"
Requires-Dist: attrs==24.2.0; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: frozenlist==1.5.0; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: idna==3.10; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: multidict==6.1.0; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: propcache==0.2.1; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: pydantic-core==2.27.1; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: pydantic==2.10.3; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: typing-extensions==4.12.2; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: yarl==1.18.3; python_version >= "3.9" and python_version <= "3.13"
Requires-Dist: aiohttp==3.7.4; python_version >= "3.6" and python_version <= "3.8"
Requires-Dist: pydantic==2.10.3; python_version >= "3.8" and python_version < "3.9"
Requires-Dist: pydantic==2.5.3; python_version >= "3.7" and python_version < "3.8"
Requires-Dist: pydantic==2.1.*; python_version < "3.7"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

## BroCapClient
Official python client library for [brocapgpt](https://docs.brocapgpt.com/) captcha recognition service

## Installation
```bash
python3 -m pip install brocapclient
```

## Usage

```python
import asyncio

from brocapclient.requests import HcaptchaRequest, FuncaptchaRequest, FoxcaptchaRequest
from brocapclient import BroCapGptClient, ClientOptions

client_options = ClientOptions(api_key=<YOUR_API_KEY>)
brocap_client = BroCapGptClient(options=client_options)

async def solve_captcha(request):
    return await brocap_client.solve_captcha(request)

# Hcaptcha request example
hcaptcha_request = HcaptchaRequest(
    websiteUrl="https://example.com/",
    websiteKey="d391ffb1-bc91-4ef8-a45a-2e2213af091b",
    userAgent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36",
)

responses = asyncio.run(solve_captcha(hcaptcha_request))

# Funcaptcha request example
funcaptcha_request = FuncaptchaRequest(
    websiteUrl="http://mywebsite.com/",
    websiteKey="69A21A01-CC7B-B9C6-0F9A-E7FA06677FFC",
    userAgent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36",
)

responses = asyncio.run(solve_captcha(funcaptcha_request))

# Foxcaptcha request example
foxcaptcha_request = FoxcaptchaRequest(
    websiteUrl="https://example.com/",
    websiteKey="sk_bo5o532TDv2Jey4fibTVChVS8z-cRdCE",
    userAgent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36",
)

responses = asyncio.run(solve_captcha(foxcaptcha_request))
```

### Supported captcha recognition requests:
- [FunCaptcha](https://docs.brocapgpt.com/docs/captchas/funcaptcha-task/)
- [HCaptcha](https://docs.brocapgpt.com/docs/captchas/hcaptcha-task)
- [CaptchaFox](https://docs.brocapgpt.com/docs/captchas/captchafox-task)


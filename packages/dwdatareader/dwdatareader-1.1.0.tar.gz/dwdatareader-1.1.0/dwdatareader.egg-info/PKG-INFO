Metadata-Version: 2.4
Name: dwdatareader
Version: 1.1.0
Summary: Python module to interact with Dewesoft DWDataReaderLib shared library
Home-page: https://github.com/costerwi/dwdatareader/
Download-URL: https://github.com/costerwi/dwdatareader/tarball/master
Author: Carl Osterwisch
Author-email: costerwi@gmail.com
License: MIT
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Development Status :: 4 - Beta
License-File: LICENSE
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: download-url
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: summary

dwdatareader
============

.. image:: https://ci.appveyor.com/api/projects/status/a2qssrmuepbx224i/branch/master?svg=true
   :alt: DWDataReader build status on Appveyor
   :target: https://ci.appveyor.com/project/costerwi/dwdatareader/branch/master

DEWESoft produces hardware and software for test measurement, data aquisition, 
and storage. Data files are stored with the extension .d7d or .dxd in a proprietary
format. DEWESoft provides a free Windows application (DewesoftX) to work with the data
and a free shared library for developers.

This is a Python module to interact with the DEWESoft DWDataReaderLib shared library, which can be downloaded from https://dewesoft.com/download/developer-downloads.

Installation
------------

The module is available on https://pypi.python.org/pypi/dwdatareader so all
one needs to do is:

::

    pip install dwdatareader

Example usage
-------------

Scripts like the following may be run from the command line or, more
interactively, from `Jupyter Notebook <http://jupyter.org>`_

You can work with a `live Binder example here <https://mybinder.org/v2/gh/costerwi/dwdatareader/master?labpath=dwdatareader_example.ipynb>`_.

.. code:: python

    import dwdatareader as dw
    with dw.DWFile('myfile.d7d') as f:
        print(f.info)
        ch1 = f['chname1'].series()
        ch1.plot()
        for ch in f.values():
            print(ch.name, ch.series().mean())


Contribute
----------

Bug reports and pull requests should be directed to the project home on
`Github <http://github.com/costerwi/dwdatareader>`_

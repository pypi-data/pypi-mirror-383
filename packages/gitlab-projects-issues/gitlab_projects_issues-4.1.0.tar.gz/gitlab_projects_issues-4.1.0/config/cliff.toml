# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# template for the changelog footer
header = """# Changelog"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% raw %}\n{% endraw %}\
{% if version %}\
    <a name="{{version}}"></a>
    {% if previous.version %}\
        ## [{{ version }}](<REPO>/compare/{{ previous.version }}...{{ version }}) ({{ timestamp | date(format="%Y-%m-%d") }})
    {% else %}\
        ## [{{ version }}](<REPO>/commits/{{ version }}) ({{ timestamp | date(format="%Y-%m-%d") }})
    {% endif %}\
{% else %}\
    ## [Development](<REPO>/commits/main) ({{ commits | last | get(key='committer') | get(key='timestamp')  | date(format="%Y-%m-%d") }})
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        - {% if commit.breaking %}**🚨 BREAKING CHANGE 🚨 |** {% endif %}\
            **{{commit.scope}}:** \
            {{ commit.message }} \
            ([{{ commit.id | truncate(length=7, end="") }}](<REPO>/commit/{{ commit.id }}))
    {%- endfor -%}
    {% raw %}\n{% endraw %}\
    {%- for commit in commits %}
        {%- if commit.scope -%}
        {% else -%}
            - {% if commit.breaking %}**🚨 BREAKING CHANGE 🚨 |** {% endif %}\
                {{ commit.message }} \
                ([{{ commit.id | truncate(length=7, end="") }}](<REPO>/commit/{{ commit.id }}))
        {% endif -%}
    {% endfor -%}
{% endfor -%}
{% raw %}\n{% endraw %}\
"""
# template for the changelog footer
footer = """"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
  { pattern = '<REPO>', replace = "https://gitlab.com/RadianDevCore/tools/gitlab-projects-issues" }, # replace repository URL
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^security", group = "<!-- 01 -->🛡️ Security" },
  { body = ".*security",   group = "<!-- 01 -->🛡️ Security" },
  { message = "^feat",     group = "<!-- 02 -->✨ Features" },
  { message = "^fix",      group = "<!-- 03 -->🐛 Bug Fixes" },
  { message = "^refactor", group = "<!-- 04 -->🚜 Code Refactoring" },
  { message = "^docs\\(changelog\\)", skip = true },
  { message = "^doc",      group = "<!-- 05 -->📚 Documentation" },
  { message = "^perf",     group = "<!-- 06 -->⚡ Performance Improvements" },
  { message = "^style",    group = "<!-- 07 -->🎨 Styling" },
  { message = "^test",     group = "<!-- 08 -->🧪 Test" },
  { message = "^chore",    group = "<!-- 09 -->⚙️ Cleanups" },
  { message = "^ci",       group = "<!-- 10 -->🚀 CI" },
  { message = "^build",    group = "<!-- 11 -->📦 Build" },
  { message = "^revert",   group = "<!-- 12 -->◀️ Revert" },
  { message = "^wip",      group = "<!-- 13 -->🚧 WIP" },
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# regex for matching git tags
# tag_pattern = "[0-9].*"
# regex for skipping tags
# skip_tags = ""
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
# limit the number of commits included in the changelog.
# limit_commits = 42

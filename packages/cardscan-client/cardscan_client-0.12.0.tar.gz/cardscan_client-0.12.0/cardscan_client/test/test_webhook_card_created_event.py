# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API Clients.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cardscan_client.models.webhook_card_created_event import WebhookCardCreatedEvent

class TestWebhookCardCreatedEvent(unittest.TestCase):
    """WebhookCardCreatedEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookCardCreatedEvent:
        """Test WebhookCardCreatedEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookCardCreatedEvent`
        """
        model = WebhookCardCreatedEvent()
        if include_optional:
            return WebhookCardCreatedEvent(
                card_id = '',
                configuration = cardscan_client.models.webhook_card_completed_event_configuration.WebhookCardCompletedEvent_configuration(
                    enable_backside_scan = True, 
                    enable_livescan = True, 
                    enable_payer_match = True, ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                session_id = '',
                type = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_id = ''
            )
        else:
            return WebhookCardCreatedEvent(
                card_id = '',
                configuration = cardscan_client.models.webhook_card_completed_event_configuration.WebhookCardCompletedEvent_configuration(
                    enable_backside_scan = True, 
                    enable_livescan = True, 
                    enable_payer_match = True, ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                session_id = '',
                type = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_id = '',
        )
        """

    def testWebhookCardCreatedEvent(self):
        """Test WebhookCardCreatedEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

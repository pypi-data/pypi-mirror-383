# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API Clients.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cardscan_client.models.eligibility_api_response import EligibilityApiResponse

class TestEligibilityApiResponse(unittest.TestCase):
    """EligibilityApiResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EligibilityApiResponse:
        """Test EligibilityApiResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EligibilityApiResponse`
        """
        model = EligibilityApiResponse()
        if include_optional:
            return EligibilityApiResponse(
                eligibility_id = '',
                state = 'completed',
                card_id = '',
                eligibility_request = cardscan_client.models.eligibility_api_response_eligibility_request.EligibilityApiResponse_eligibility_request(
                    control_number = '', 
                    trading_partner_service_id = '', 
                    provider = cardscan_client.models.eligibility_api_response_eligibility_request_provider.EligibilityApiResponse_eligibility_request_provider(
                        first_name = '', 
                        last_name = '', 
                        organization_name = '', 
                        npi = '', ), 
                    subscriber = cardscan_client.models.eligibility_api_response_eligibility_request_subscriber.EligibilityApiResponse_eligibility_request_subscriber(
                        first_name = '', 
                        last_name = '', 
                        member_id = '', 
                        date_of_birth = '', ), ),
                eligibility_response = { },
                eligibility_summarized_response = cardscan_client.models.eligibility_summarized_response.EligibilitySummarizedResponse(
                    errors = [
                        cardscan_client.models.eligibility_error.EligibilityError(
                            field = '', 
                            code = '', 
                            description = '', 
                            followup_action = '', 
                            location = '', 
                            possible_resolutions = '', )
                        ], 
                    subscriber_details = cardscan_client.models.subscriber_details.SubscriberDetails(
                        member_id = '', 
                        first_name = '', 
                        last_name = '', 
                        middle_name = '', 
                        gender = '', 
                        address = cardscan_client.models.address.Address(
                            address1 = '123 address1', 
                            address2 = '', 
                            city = 'city1', 
                            state = 'wa', 
                            postal_code = '981010000', ), 
                        date_of_birth = '', ), 
                    payer_details = cardscan_client.models.payer_details.PayerDetails(
                        payer_name = '', 
                        payer_url = '', ), 
                    plan_details = cardscan_client.models.plan_details.PlanDetails(
                        plan_number = '', 
                        group_name = '', 
                        group_number = '', 
                        plan_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        plan_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        plan_eligibility_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        plan_eligibility_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        plan_name = '', 
                        plan_active = True, ), 
                    coverage_summary = cardscan_client.models.coverage_summary.CoverageSummary(
                        individual_deductible_in_network = cardscan_client.models.deductible.Deductible(
                            total_amount = '', 
                            remaining_amount = '', ), 
                        individual_deductible_out_network = cardscan_client.models.deductible.Deductible(
                            total_amount = '', 
                            remaining_amount = '', ), 
                        individual_oop_in_network = cardscan_client.models.oop.OOP(
                            total_amount = '', 
                            remaining_amount = '', ), 
                        individual_oop_out_network = cardscan_client.models.oop.OOP(
                            total_amount = '', 
                            remaining_amount = '', ), 
                        family_deductible_in_network = , 
                        family_deductible_out_network = , 
                        family_oop_in_network = , 
                        family_oop_out_network = , 
                        co_insurance_in_network = cardscan_client.models.co_insurance.CoInsurance(
                            amount = '', ), 
                        co_insurance_out_network = cardscan_client.models.co_insurance.CoInsurance(
                            amount = '', ), 
                        co_payment_out_network = cardscan_client.models.co_payment.CoPayment(
                            amount = '', ), 
                        co_payment_in_network = cardscan_client.models.co_payment.CoPayment(
                            amount = '', ), ), 
                    abortion = cardscan_client.models.service.Service(
                        service_code = '', ), 
                    acupuncture = cardscan_client.models.service.Service(
                        service_code = '', ), 
                    adjunctive_dental_services = , 
                    aids = , 
                    air_transportation = , 
                    alcoholism = , 
                    allergy = , 
                    allergy_testing = , 
                    alternate_method_dialysis = , 
                    ambulatory_service_center_facility = , 
                    anesthesia = , 
                    anesthesiologist = , 
                    audiology_exam = , 
                    blood_charges = , 
                    brand_name_prescription_drug = , 
                    brand_name_prescription_drug_formulary = , 
                    brand_name_prescription_drug_non_formulary = , 
                    burn_care = , 
                    cabulance = , 
                    cancer = , 
                    cardiac = , 
                    cardiac_rehabilitation = , 
                    case_management = , 
                    chemotherapy = , 
                    chiropractic = , 
                    chiropractic_office_visits = , 
                    chronic_renal_disease_crd_equipment = , 
                    cognitive_therapy = , 
                    consultation = , 
                    coronary_care = , 
                    day_care_psychiatric = , 
                    dental_accident = , 
                    dental_care = , 
                    dental_crowns = , 
                    dermatology = , 
                    diabetic_supplies = , 
                    diagnostic_dental = , 
                    diagnostic_lab = , 
                    diagnostic_medical = , 
                    diagnostic_x_ray = , 
                    dialysis = , 
                    donor_procedures = , 
                    drug_addiction = , 
                    durable_medical_equipment = , 
                    durable_medical_equipment_purchase = , 
                    durable_medical_equipment_rental = , 
                    emergency_room = , 
                    endocrine = , 
                    endodontics = , 
                    experimental_drug_therapy = , 
                    eye = , 
                    eyewear_and_eyewear_accessories = , 
                    family_planning = , 
                    flu_vaccination = , 
                    frames = , 
                    free_standing_prescription_drug = , 
                    gastrointestinal = , 
                    general_benefits = , 
                    generic_prescription_drug = , 
                    generic_prescription_drug_formulary = , 
                    generic_prescription_drug_non_formulary = , 
                    gynecological = , 
                    home_health_care = , 
                    home_health_prescriptions = , 
                    home_health_visits = , 
                    hospice = , 
                    hospital_inpatient = , 
                    hospital_ambulatory_surgical = , 
                    hospital_emergency_accident = , 
                    hospital_emergency_medical = , 
                    hospital_outpatient = , 
                    hospital_room_and_board = , 
                    immunizations = , 
                    in_vitro_fertilization = , 
                    independent_medical_evaluation = , 
                    infertility = , 
                    inhalation_therapy = , 
                    intensive_care = , 
                    invasive_procedures = , 
                    lenses = , 
                    licensed_ambulance = , 
                    long_term_care = , 
                    lymphatic = , 
                    mail_order_prescription_drug = , 
                    mail_order_prescription_drug_brand_name = , 
                    mail_order_prescription_drug_generic = , 
                    major_medical = , 
                    mammogram_high_risk_patient = , 
                    mammogram_low_risk_patient = , 
                    massage_therapy = , 
                    maternity = , 
                    maxillofacial_prosthetics = , 
                    medical_care = , 
                    medically_related_transportation = , 
                    mental_health = , 
                    mental_health_facility_inpatient = , 
                    mental_health_facility_outpatient = , 
                    mental_health_provider_inpatient = , 
                    mental_health_provider_outpatient = , 
                    mri_cat_scan = , 
                    neonatal_intensive_care = , 
                    neurology = , 
                    newborn_care = , 
                    nonmedically_necessary_physical = , 
                    nursery = , 
                    obstetrical = , 
                    obstetrical_gynecological = , 
                    occupational_therapy = , 
                    oncology = , 
                    oral_surgery = , 
                    orthodontics = , 
                    orthopedic = , 
                    other_medical = , 
                    otological_exam = , 
                    partial_hospitalization_psychiatric = , 
                    pathology = , 
                    pediatric = , 
                    periodontics = , 
                    pharmacy = , 
                    physical_medicine = , 
                    physical_therapy = , 
                    physician_visit_office_sick = , 
                    physician_visit_office_well = , 
                    plan_waiting_period = , 
                    pneumonia_vaccine = , 
                    podiatry = , 
                    podiatry_nursing_home_visits = , 
                    podiatry_office_visits = , 
                    pre_admission_testing = , 
                    private_duty_nursing = , 
                    private_duty_nursing_home = , 
                    private_duty_nursing_inpatient = , 
                    professional_physician = , 
                    professional_physician_visit_home = , 
                    professional_physician_visit_inpatient = , 
                    professional_physician_visit_nursing_home = , 
                    office_visit = , 
                    professional_physician_visit_outpatient = , 
                    professional_physician_visit_skilled_nursing = , 
                    prosthetic_device = , 
                    prosthodontics = , 
                    psychiatric = , 
                    psychiatric_inpatient = , 
                    psychiatric_outpatient = , 
                    psychiatric_room_and_board = , 
                    psychotherapy = , 
                    pulmonary = , 
                    pulmonary_rehabilitation = , 
                    radiation_therapy = , 
                    rehabilitation = , 
                    rehabilitation_inpatient = , 
                    rehabilitation_outpatient = , 
                    rehabilitation_room_and_board = , 
                    renal = , 
                    renal_supplies_in_the_home = , 
                    residential_psychiatric_treatment = , 
                    respite_care = , 
                    restorative = , 
                    routine_preventive_dental = , 
                    routine_exam_use_for_routine_vision_exam_only = , 
                    routine_physical = , 
                    screening_laboratory = , 
                    screening_x_ray = , 
                    second_surgical_opinion = , 
                    skilled_nursing_care = , 
                    skilled_nursing_care_room_and_board = , 
                    skin = , 
                    smoking_cessation = , 
                    social_work = , 
                    speech_therapy = , 
                    substance_abuse = , 
                    substance_abuse_facility_inpatient = , 
                    substance_abuse_facility_outpatient = , 
                    substance_abuse_provider_inpatient = , 
                    substance_abuse_provider_outpatient = , 
                    surgical = , 
                    surgical_assistance = , 
                    surgical_benefits_facility = , 
                    surgical_benefits_professional_physician = , 
                    third_surgical_opinion = , 
                    transitional_care = , 
                    transitional_nursery_care = , 
                    transplants = , 
                    urgent_care = , 
                    used_durable_medical_equipment = , 
                    vision = , 
                    well_baby_care = , ),
                error = cardscan_client.models.model_error.ModelError(
                    message = '', 
                    type = '', 
                    code = '', 
                    error = '', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return EligibilityApiResponse(
                eligibility_id = '',
                state = 'completed',
                card_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testEligibilityApiResponse(self):
        """Test EligibilityApiResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

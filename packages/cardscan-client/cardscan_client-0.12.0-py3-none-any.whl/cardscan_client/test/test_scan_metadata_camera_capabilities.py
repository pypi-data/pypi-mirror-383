# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API Clients.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cardscan_client.models.scan_metadata_camera_capabilities import ScanMetadataCameraCapabilities

class TestScanMetadataCameraCapabilities(unittest.TestCase):
    """ScanMetadataCameraCapabilities unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScanMetadataCameraCapabilities:
        """Test ScanMetadataCameraCapabilities
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScanMetadataCameraCapabilities`
        """
        model = ScanMetadataCameraCapabilities()
        if include_optional:
            return ScanMetadataCameraCapabilities(
                aspect_ratio = cardscan_client.models.scan_metadata_camera_capabilities_aspect_ratio.ScanMetadata_cameraCapabilities_aspectRatio(
                    max = 1.337, 
                    min = 1.337, ),
                device_id = '',
                facing_mode = [
                    ''
                    ],
                frame_rate = cardscan_client.models.scan_metadata_camera_capabilities_aspect_ratio.ScanMetadata_cameraCapabilities_aspectRatio(
                    max = 1.337, 
                    min = 1.337, ),
                group_id = '',
                height = cardscan_client.models.scan_metadata_camera_capabilities_aspect_ratio.ScanMetadata_cameraCapabilities_aspectRatio(
                    max = 1.337, 
                    min = 1.337, ),
                resize_mode = [
                    ''
                    ],
                width = cardscan_client.models.scan_metadata_camera_capabilities_aspect_ratio.ScanMetadata_cameraCapabilities_aspectRatio(
                    max = 1.337, 
                    min = 1.337, )
            )
        else:
            return ScanMetadataCameraCapabilities(
        )
        """

    def testScanMetadataCameraCapabilities(self):
        """Test ScanMetadataCameraCapabilities"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API Clients.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cardscan_client.models.webhook_eligibility_completed_event import WebhookEligibilityCompletedEvent

class TestWebhookEligibilityCompletedEvent(unittest.TestCase):
    """WebhookEligibilityCompletedEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookEligibilityCompletedEvent:
        """Test WebhookEligibilityCompletedEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookEligibilityCompletedEvent`
        """
        model = WebhookEligibilityCompletedEvent()
        if include_optional:
            return WebhookEligibilityCompletedEvent(
                eligibility_id = '',
                card_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                session_id = '',
                type = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_id = ''
            )
        else:
            return WebhookEligibilityCompletedEvent(
                eligibility_id = '',
                card_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                session_id = '',
                type = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_id = '',
        )
        """

    def testWebhookEligibilityCompletedEvent(self):
        """Test WebhookEligibilityCompletedEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

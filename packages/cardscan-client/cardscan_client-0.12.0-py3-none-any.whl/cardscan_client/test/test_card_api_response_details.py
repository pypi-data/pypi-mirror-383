# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API Clients.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cardscan_client.models.card_api_response_details import CardApiResponseDetails

class TestCardApiResponseDetails(unittest.TestCase):
    """CardApiResponseDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CardApiResponseDetails:
        """Test CardApiResponseDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CardApiResponseDetails`
        """
        model = CardApiResponseDetails()
        if include_optional:
            return CardApiResponseDetails(
                group_number = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                member_number = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                payer_name = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                rx_bin = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                rx_pcn = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                member_name = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                dependent_names = [
                    cardscan_client.models.match_score.MatchScore(
                        value = '', 
                        scores = [
                            ''
                            ], )
                    ],
                plan_name = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                plan_id = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                card_specific_id = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                client_name = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                payer_id = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                plan_details = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                rx_id = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                rx_issuer = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                rx_plan = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                start_date = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                employer = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                medicare_medicaid_id = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                member_dob = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                member_gender = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                member_id_prefix = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                member_id_suffix = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                part_a_effective_date = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                part_b_effective_date = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                pharmacy_benefit_manager = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], ),
                plan_type = cardscan_client.models.match_score.MatchScore(
                    value = '', 
                    scores = [
                        ''
                        ], )
            )
        else:
            return CardApiResponseDetails(
        )
        """

    def testCardApiResponseDetails(self):
        """Test CardApiResponseDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

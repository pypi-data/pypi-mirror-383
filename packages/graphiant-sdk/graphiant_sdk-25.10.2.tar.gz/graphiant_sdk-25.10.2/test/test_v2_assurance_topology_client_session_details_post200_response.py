# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v2_assurance_topology_client_session_details_post200_response import V2AssuranceTopologyClientSessionDetailsPost200Response

class TestV2AssuranceTopologyClientSessionDetailsPost200Response(unittest.TestCase):
    """V2AssuranceTopologyClientSessionDetailsPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2AssuranceTopologyClientSessionDetailsPost200Response:
        """Test V2AssuranceTopologyClientSessionDetailsPost200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2AssuranceTopologyClientSessionDetailsPost200Response`
        """
        model = V2AssuranceTopologyClientSessionDetailsPost200Response()
        if include_optional:
            return V2AssuranceTopologyClientSessionDetailsPost200Response(
                session = graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session._v2_assurance_topology_client_session_details_post_200_response_session(
                    app_name = 'example string', 
                    bucket = 'ENUM_VALUE', 
                    client_endpoint = graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session_client_endpoint._v2_assurance_topology_client_session_details_post_200_response_session_clientEndpoint(
                        circuits = [
                            'example string'
                            ], 
                        edges = [
                            graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_edges_inner._v2_assurance_flow_summary_post_200_response_clientEndpoint_edges_inner(
                                device_id = 1234567891011, 
                                device_name = 'example string', )
                            ], 
                        is_gateway = True, 
                        jitter = graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_jitter._v2_assurance_flow_summary_post_200_response_clientEndpoint_jitter(
                            avg = 12.34, 
                            max = 12.34, 
                            min = 12.34, ), 
                        latency = graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_jitter._v2_assurance_flow_summary_post_200_response_clientEndpoint_jitter(
                            avg = 12.34, 
                            max = 12.34, 
                            min = 12.34, ), 
                        loss = , 
                        site = graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_site._v2_assurance_flow_summary_post_200_response_clientEndpoint_site(
                            region_id = 123, 
                            site_id = 1234567891011, 
                            site_name = 'example string', ), 
                        total_downlink_usage = 1234567891011, 
                        total_uplink_usage = 1234567891011, ), 
                    client_flex_algo = 'example string', 
                    client_ip = 'example string', 
                    client_links = [
                        graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session_client_links_inner._v2_assurance_topology_client_session_details_post_200_response_session_clientLinks_inner(
                            circuit_name = 'example string', 
                            pop_name = 'example string', )
                        ], 
                    first_seen_ts = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                        nanos = 123, 
                        seconds = 1234567891011, ), 
                    lan_segment = [
                        'example string'
                        ], 
                    last_seen_ts = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                        nanos = 123, 
                        seconds = 1234567891011, ), 
                    local_dia_links = [
                        graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session_local_dia_links_inner._v2_assurance_topology_client_session_details_post_200_response_session_localDiaLinks_inner(
                            circuit_name = 'example string', )
                        ], 
                    pop_links = [
                        graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session_pop_links_inner._v2_assurance_topology_client_session_details_post_200_response_session_popLinks_inner(
                            first_pop_name = 'example string', 
                            second_pop_name = 'example string', )
                        ], 
                    remote_dia_links = [
                        graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session_local_dia_links_inner._v2_assurance_topology_client_session_details_post_200_response_session_localDiaLinks_inner(
                            circuit_name = 'example string', )
                        ], 
                    risk_status = 'ENUM_VALUE', 
                    server_endpoint = graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session_client_endpoint._v2_assurance_topology_client_session_details_post_200_response_session_clientEndpoint(
                        is_gateway = True, 
                        total_downlink_usage = 1234567891011, 
                        total_uplink_usage = 1234567891011, ), 
                    server_flex_algos = [
                        'example string'
                        ], 
                    server_ip = 'example string', 
                    server_links = [
                        graphiant_sdk.models._v2_assurance_topology_client_session_details_post_200_response_session_client_links_inner._v2_assurance_topology_client_session_details_post_200_response_session_clientLinks_inner(
                            circuit_name = 'example string', 
                            pop_name = 'example string', )
                        ], 
                    server_port = 123, 
                    session_id = 'example string', 
                    sla = 'ENUM_VALUE', 
                    sla_class = 'example string', )
            )
        else:
            return V2AssuranceTopologyClientSessionDetailsPost200Response(
        )
        """

    def testV2AssuranceTopologyClientSessionDetailsPost200Response(self):
        """Test V2AssuranceTopologyClientSessionDetailsPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_diagnostic_ping_pause_resume_post_request import V1DiagnosticPingPauseResumePostRequest

class TestV1DiagnosticPingPauseResumePostRequest(unittest.TestCase):
    """V1DiagnosticPingPauseResumePostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DiagnosticPingPauseResumePostRequest:
        """Test V1DiagnosticPingPauseResumePostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DiagnosticPingPauseResumePostRequest`
        """
        model = V1DiagnosticPingPauseResumePostRequest()
        if include_optional:
            return V1DiagnosticPingPauseResumePostRequest(
                device_id = 10000000,
                params = graphiant_sdk.models._v1_diagnostic_ping_pause_resume_post_request_params._v1_diagnostic_ping_pause_resume_post_request_params(
                    dest_address = '172.1.1.1', 
                    hop_stats_count = 10, 
                    interface = 'ethernet1/0', 
                    payload_size = 64, 
                    port = 443, 
                    probe_count = 4, 
                    src_address = '10.1.1.1', 
                    tos = 0, 
                    vrf_name = 'finance', ),
                token = 'example string',
                transport_type = 'ENUM_VALUE'
            )
        else:
            return V1DiagnosticPingPauseResumePostRequest(
        )
        """

    def testV1DiagnosticPingPauseResumePostRequest(self):
        """Test V1DiagnosticPingPauseResumePostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

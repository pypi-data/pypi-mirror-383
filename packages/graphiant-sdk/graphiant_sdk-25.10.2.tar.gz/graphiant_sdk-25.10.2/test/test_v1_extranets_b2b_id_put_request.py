# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_extranets_b2b_id_put_request import V1ExtranetsB2bIdPutRequest

class TestV1ExtranetsB2bIdPutRequest(unittest.TestCase):
    """V1ExtranetsB2bIdPutRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ExtranetsB2bIdPutRequest:
        """Test V1ExtranetsB2bIdPutRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ExtranetsB2bIdPutRequest`
        """
        model = V1ExtranetsB2bIdPutRequest()
        if include_optional:
            return V1ExtranetsB2bIdPutRequest(
                policy = graphiant_sdk.models._v1_extranets_b2b_post_request_policy._v1_extranets_b2b_post_request_policy(
                    nat_pools = [
                        'example string'
                        ], 
                    profiles = [
                        graphiant_sdk.models._v1_extranets_b2b_post_request_policy_profiles_inner._v1_extranets_b2b_post_request_policy_profiles_inner(
                            ports = [
                                123
                                ], 
                            protocol = 123, )
                        ], 
                    service_lan_segment = 1234567891011, 
                    service_prefixes = [
                        'example string'
                        ], 
                    sites = [
                        graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner._v1_extranets_b2b_consumer_post_request_siteInformation_inner(
                            bw_allocation_site_lists = 123, 
                            bw_allocation_sites = 123, 
                            policer_site_lists = graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner_policer_site_lists._v1_extranets_b2b_consumer_post_request_siteInformation_inner_policerSiteLists(
                                burst_size = 123, 
                                bw = 123, ), 
                            policer_sites = graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner_policer_site_lists._v1_extranets_b2b_consumer_post_request_siteInformation_inner_policerSiteLists(
                                burst_size = 123, 
                                bw = 123, ), 
                            site_lists = [
                                1234567891011
                                ], )
                        ], 
                    sla = graphiant_sdk.models._v1_extranets_b2b_post_request_policy_sla._v1_extranets_b2b_post_request_policy_sla(
                        backup_circuit = 'ENUM_VALUE', 
                        class = 'ENUM_VALUE', 
                        primary_circuit = 'ENUM_VALUE', ), 
                    type = 'ENUM_VALUE', )
            )
        else:
            return V1ExtranetsB2bIdPutRequest(
        )
        """

    def testV1ExtranetsB2bIdPutRequest(self):
        """Test V1ExtranetsB2bIdPutRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_sites_post_request_site import V1SitesPostRequestSite

class TestV1SitesPostRequestSite(unittest.TestCase):
    """V1SitesPostRequestSite unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1SitesPostRequestSite:
        """Test V1SitesPostRequestSite
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1SitesPostRequestSite`
        """
        model = V1SitesPostRequestSite()
        if include_optional:
            return V1SitesPostRequestSite(
                global_prefix_set_ops = {
                    'key' : 'ENUM_VALUE'
                    },
                ipfix_exporter_ops = {
                    'key' : 'ENUM_VALUE'
                    },
                ipfix_exporter_ops_v2 = {
                    'key' : graphiant_sdk.models._v1_global_config_site_post_request_ipfix_exporter_ops_v2_value._v1_global_config_site_post_request_ipfixExporterOpsV2_value(
                        interface = graphiant_sdk.models._v1_global_config_patch_request_routing_policies_value_policy_statements_value_statement_matches_value_match_source_interface._v1_global_config_patch_request_routingPolicies_value_policy_statements_value_statement_matches_value_match_sourceInterface(), 
                        operation = 'ENUM_VALUE', )
                    },
                location = graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_location._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_location(
                    address_line1 = 'example string', 
                    address_line2 = 'example string', 
                    city = 'example string', 
                    country = 'example string', 
                    country_code = 'example string', 
                    latitude = 123.45, 
                    longitude = 123.45, 
                    notes = 'example string', 
                    province_code = 'example string', 
                    state = 'example string', 
                    state_code = 'example string', ),
                name = 'example string',
                notes = 'example string',
                prefix_set_ops = {
                    'key' : 'ENUM_VALUE'
                    },
                route_tag = graphiant_sdk.models._v1_global_config_patch_request_routing_policies_value_policy_statements_value_statement_matches_value_match_route_tag_entry._v1_global_config_patch_request_routingPolicies_value_policy_statements_value_statement_matches_value_match_routeTag_entry(
                    level_one = 'example string', 
                    level_two = 'example string', 
                    level_zero = 'example string', ),
                routing_policy_ops = {
                    'key' : 'ENUM_VALUE'
                    },
                snmp_ops = {
                    'key' : 'ENUM_VALUE'
                    },
                syslog_server_ops = {
                    'key' : 'ENUM_VALUE'
                    },
                syslog_server_ops_v2 = {
                    'key' : graphiant_sdk.models._v1_global_config_site_post_request_ipfix_exporter_ops_v2_value._v1_global_config_site_post_request_ipfixExporterOpsV2_value(
                        interface = graphiant_sdk.models._v1_global_config_patch_request_routing_policies_value_policy_statements_value_statement_matches_value_match_source_interface._v1_global_config_patch_request_routingPolicies_value_policy_statements_value_statement_matches_value_match_sourceInterface(), 
                        operation = 'ENUM_VALUE', )
                    },
                traffic_policy_ops = {
                    'key' : 'ENUM_VALUE'
                    }
            )
        else:
            return V1SitesPostRequestSite(
        )
        """

    def testV1SitesPostRequestSite(self):
        """Test V1SitesPostRequestSite"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

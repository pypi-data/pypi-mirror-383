# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_diagnostic_speedtest_post_request import V1DiagnosticSpeedtestPostRequest

class TestV1DiagnosticSpeedtestPostRequest(unittest.TestCase):
    """V1DiagnosticSpeedtestPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DiagnosticSpeedtestPostRequest:
        """Test V1DiagnosticSpeedtestPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DiagnosticSpeedtestPostRequest`
        """
        model = V1DiagnosticSpeedtestPostRequest()
        if include_optional:
            return V1DiagnosticSpeedtestPostRequest(
                device_id = 30000000555,
                params = graphiant_sdk.models._v1_diagnostic_speedtest_post_request_params._v1_diagnostic_speedtest_post_request_params(
                    provider = 'ookla', 
                    server_id = '234123', 
                    target = graphiant_sdk.models._v1_diagnostic_packetcapture_start_post_request_target._v1_diagnostic_packetcapture_start_post_request_target(
                        interface = 'ethernet1/0', 
                        vrf_name = 'isp-red', ), 
                    token = 'example string', )
            )
        else:
            return V1DiagnosticSpeedtestPostRequest(
        )
        """

    def testV1DiagnosticSpeedtestPostRequest(self):
        """Test V1DiagnosticSpeedtestPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_apps_visualization_post200_response_apps_visualization_inner_circuit_map_value import V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue

class TestV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue(unittest.TestCase):
    """V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue:
        """Test V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue`
        """
        model = V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue()
        if include_optional:
            return V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue(
                name = 'example string',
                sla_class = 'ENUM_VALUE',
                stats = graphiant_sdk.models._v1_apps_visualization_post_200_response_apps_visualization_inner_circuit_map_value_stats._v1_apps_visualization_post_200_response_appsVisualization_inner_circuitMap_value_stats(
                    health_avg = 'ENUM_VALUE', 
                    jitter = 123.45, 
                    latency = 123.45, 
                    loss = 12.34, 
                    mos = 12.34, 
                    status = 'ENUM_VALUE', ),
                usage = 123.45,
                usage_pct = 12.34
            )
        else:
            return V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue(
        )
        """

    def testV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue(self):
        """Test V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

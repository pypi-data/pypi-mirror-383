# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_global_config_patch_request_traffic_policies_zone_firewalls_value import V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue

class TestV1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue(unittest.TestCase):
    """V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue:
        """Test V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue`
        """
        model = V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue()
        if include_optional:
            return V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue(
                zone_firewall = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_zone_firewalls_value_zone_firewall._v1_global_config_patch_request_trafficPolicies_zoneFirewalls_value_zoneFirewall(
                    ip = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_zone_firewalls_value_zone_firewall_ip._v1_global_config_patch_request_trafficPolicies_zoneFirewalls_value_zoneFirewall_ip(
                        block_land_attacks = True, 
                        session_limit = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_zone_firewalls_value_zone_firewall_ip_session_limit._v1_global_config_patch_request_trafficPolicies_zoneFirewalls_value_zoneFirewall_ip_sessionLimit(
                            limit = 123, ), 
                        urpf = 'ENUM_VALUE', ), 
                    udp = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_zone_firewalls_value_zone_firewall_udp._v1_global_config_patch_request_trafficPolicies_zoneFirewalls_value_zoneFirewall_udp(
                        unidirectional_flow_limit = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_zone_firewalls_value_zone_firewall_ip_session_limit._v1_global_config_patch_request_trafficPolicies_zoneFirewalls_value_zoneFirewall_ip_sessionLimit(
                            limit = 123, ), ), )
            )
        else:
            return V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue(
        )
        """

    def testV1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue(self):
        """Test V1GlobalConfigPatchRequestTrafficPoliciesZoneFirewallsValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

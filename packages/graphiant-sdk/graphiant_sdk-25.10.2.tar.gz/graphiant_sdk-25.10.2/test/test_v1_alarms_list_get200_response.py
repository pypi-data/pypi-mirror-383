# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_alarms_list_get200_response import V1AlarmsListGet200Response

class TestV1AlarmsListGet200Response(unittest.TestCase):
    """V1AlarmsListGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1AlarmsListGet200Response:
        """Test V1AlarmsListGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1AlarmsListGet200Response`
        """
        model = V1AlarmsListGet200Response()
        if include_optional:
            return V1AlarmsListGet200Response(
                alarms = [
                    graphiant_sdk.models._v1_alarms_list_get_200_response_alarms_inner._v1_alarms_list_get_200_response_alarms_inner(
                        acknowledged_by = '8a2ec658-f25b-11ec-b939-0242ac120002', 
                        alarm_id = 10000, 
                        alarm_type_id = 'graphnos-systemd:systemd-unit-state-change', 
                        alarm_type_qualifier = 'example string', 
                        alt_component = 'example string', 
                        boot_id = '8a2ec658-f25b-11ec-b939-0242ac120002', 
                        component = 'graphnos-ntp-mgr.service', 
                        created = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                            nanos = 123, 
                            seconds = 1234567891011, ), 
                        description = 'Unit is now active', 
                        is_cleared = False, 
                        is_resolved = False, 
                        last_changed = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                            nanos = 123, 
                            seconds = 1234567891011, ), 
                        last_raised = , 
                        perceived_severity = 'warning', 
                        resolved_by = '8a2ec658-f25b-11ec-b939-0242ac120002', 
                        sequence_number = 10, 
                        where = 'edge-32', )
                    ]
            )
        else:
            return V1AlarmsListGet200Response(
        )
        """

    def testV1AlarmsListGet200Response(self):
        """Test V1AlarmsListGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_edges_summary_get200_response import V1EdgesSummaryGet200Response

class TestV1EdgesSummaryGet200Response(unittest.TestCase):
    """V1EdgesSummaryGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1EdgesSummaryGet200Response:
        """Test V1EdgesSummaryGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1EdgesSummaryGet200Response`
        """
        model = V1EdgesSummaryGet200Response()
        if include_optional:
            return V1EdgesSummaryGet200Response(
                edges_summary = [
                    graphiant_sdk.models._v1_edges_hardware_assigned_get_200_response_edges_summary_inner._v1_edges_hardware_assigned_get_200_response_edgesSummary_inner(
                        assigned_on = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                            nanos = 123, 
                            seconds = 1234567891011, ), 
                        device_id = 1234567891011, 
                        discovered_location = 'example string', 
                        enterprise_id = 1234567891011, 
                        enterprise_name = 'example string', 
                        first_appeared_on = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                            nanos = 123, 
                            seconds = 1234567891011, ), 
                        hostname = 'example string', 
                        ip_detected = 'example string', 
                        is_hardware = True, 
                        is_new = True, 
                        is_requested = True, 
                        last_booted_at = , 
                        location = graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_location._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_location(
                            address_line1 = 'example string', 
                            address_line2 = 'example string', 
                            city = 'example string', 
                            country = 'example string', 
                            country_code = 'example string', 
                            latitude = 123.45, 
                            longitude = 123.45, 
                            notes = 'example string', 
                            province_code = 'example string', 
                            state = 'example string', 
                            state_code = 'example string', ), 
                        model = 'example string', 
                        override_region = 'example string', 
                        parent_enterprise_name = 'example string', 
                        portal_status = 'ENUM_VALUE', 
                        region = 'example string', 
                        role = 'ENUM_VALUE', 
                        serial_num = 'example string', 
                        site = 'example string', 
                        site_id = 1234567891011, 
                        stale = True, 
                        status = 'ENUM_VALUE', 
                        sw_name = 'example string', 
                        sw_version = 'example string', 
                        tt_conn_count = 123, 
                        upgrade_summary = graphiant_sdk.models._v1_edges_hardware_assigned_get_200_response_edges_summary_inner_upgrade_summary._v1_edges_hardware_assigned_get_200_response_edgesSummary_inner_upgradeSummary(
                            device_id = 1234567891011, 
                            last_discovered_ts = , 
                            last_upgrade_ts = , 
                            running_version = graphiant_sdk.models._v1_edges_hardware_assigned_get_200_response_edges_summary_inner_upgrade_summary_running_version._v1_edges_hardware_assigned_get_200_response_edgesSummary_inner_upgradeSummary_runningVersion(
                                name = 'example string', 
                                release = 'ENUM_VALUE', 
                                version = 'example string', ), 
                            schedule = graphiant_sdk.models._v1_edges_hardware_assigned_get_200_response_edges_summary_inner_upgrade_summary_schedule._v1_edges_hardware_assigned_get_200_response_edgesSummary_inner_upgradeSummary_schedule(
                                action = 'ENUM_VALUE', 
                                device_id = 1234567891011, 
                                download_progress = 123, 
                                failure_reason = 'example string', 
                                state = 'ENUM_VALUE', 
                                ts = , 
                                version = graphiant_sdk.models._v1_edges_hardware_assigned_get_200_response_edges_summary_inner_upgrade_summary_running_version._v1_edges_hardware_assigned_get_200_response_edgesSummary_inner_upgradeSummary_runningVersion(
                                    name = 'example string', 
                                    release = 'ENUM_VALUE', ), ), 
                            status = 'ENUM_VALUE', ), )
                    ],
                is_new_count = 123
            )
        else:
            return V1EdgesSummaryGet200Response(
        )
        """

    def testV1EdgesSummaryGet200Response(self):
        """Test V1EdgesSummaryGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_global_config_patch_request_global_prefix_sets_value import V1GlobalConfigPatchRequestGlobalPrefixSetsValue

class TestV1GlobalConfigPatchRequestGlobalPrefixSetsValue(unittest.TestCase):
    """V1GlobalConfigPatchRequestGlobalPrefixSetsValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1GlobalConfigPatchRequestGlobalPrefixSetsValue:
        """Test V1GlobalConfigPatchRequestGlobalPrefixSetsValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1GlobalConfigPatchRequestGlobalPrefixSetsValue`
        """
        model = V1GlobalConfigPatchRequestGlobalPrefixSetsValue()
        if include_optional:
            return V1GlobalConfigPatchRequestGlobalPrefixSetsValue(
                prefix_set = graphiant_sdk.models._v1_global_config_patch_request_global_prefix_sets_value_prefix_set._v1_global_config_patch_request_globalPrefixSets_value_prefixSet(
                    description = 'example string', 
                    entries = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_global_prefix_sets_value_prefix_set_entries_value._v1_global_config_patch_request_globalPrefixSets_value_prefixSet_entries_value(
                            entry = graphiant_sdk.models._v1_global_config_patch_request_global_prefix_sets_value_prefix_set_entries_value_entry._v1_global_config_patch_request_globalPrefixSets_value_prefixSet_entries_value_entry(
                                ip_prefix = 'example string', 
                                mask_lower = 123, 
                                mask_upper = 123, 
                                seq = 123, ), )
                        }, 
                    global_id = 1234567891011, 
                    is_global_sync = True, 
                    mode = 'ENUM_VALUE', 
                    name = 'example string', )
            )
        else:
            return V1GlobalConfigPatchRequestGlobalPrefixSetsValue(
        )
        """

    def testV1GlobalConfigPatchRequestGlobalPrefixSetsValue(self):
        """Test V1GlobalConfigPatchRequestGlobalPrefixSetsValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

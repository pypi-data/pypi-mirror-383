# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_devices_device_id_config_put_request_core_interfaces_value_interface_interface_type_wan_gw_gw import V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw

class TestV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw(unittest.TestCase):
    """V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw:
        """Test V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw`
        """
        model = V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw()
        if include_optional:
            return V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw(
                address = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_engine_endpoints_value_engine_endpoint_addresses_value._v1_global_config_patch_request_snmps_value_config_engineEndpoints_value_engineEndpoint_addresses_value(),
                dhcp = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_gw_gw_dhcp._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_gw_gw_dhcp(
                    dhcp_client = True, 
                    dhcp_relay = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_gw_gw_dhcp_dhcp_relay._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_gw_gw_dhcp_dhcpRelay(
                        relay_servers = [
                            'example string'
                            ], ), ),
                vrrp = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_interface_type_wan_gw_gw_vrrp._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_interfaceType_wan_gw_gw_vrrp(
                    group = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_interface_type_wan_gw_gw_vrrp_group._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_interfaceType_wan_gw_gw_vrrp_group(
                        accept_mode = True, 
                        allow_inter_operability = True, 
                        description = 'example string', 
                        enabled = True, 
                        preempt = True, 
                        priority = 123, 
                        tracked_interfaces = [
                            None
                            ], 
                        virtual_ip = 'example string', 
                        virtual_router_id = 123, ), )
            )
        else:
            return V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw(
        )
        """

    def testV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw(self):
        """Test V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

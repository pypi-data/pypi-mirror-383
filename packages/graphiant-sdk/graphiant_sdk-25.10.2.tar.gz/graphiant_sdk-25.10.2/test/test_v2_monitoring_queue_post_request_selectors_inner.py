# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v2_monitoring_queue_post_request_selectors_inner import V2MonitoringQueuePostRequestSelectorsInner

class TestV2MonitoringQueuePostRequestSelectorsInner(unittest.TestCase):
    """V2MonitoringQueuePostRequestSelectorsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2MonitoringQueuePostRequestSelectorsInner:
        """Test V2MonitoringQueuePostRequestSelectorsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2MonitoringQueuePostRequestSelectorsInner`
        """
        model = V2MonitoringQueuePostRequestSelectorsInner()
        if include_optional:
            return V2MonitoringQueuePostRequestSelectorsInner(
                group_name = 'example string',
                interface_name = 'example string',
                sla_class = 'ENUM_VALUE',
                type = 'ENUM_VALUE'
            )
        else:
            return V2MonitoringQueuePostRequestSelectorsInner(
        )
        """

    def testV2MonitoringQueuePostRequestSelectorsInner(self):
        """Test V2MonitoringQueuePostRequestSelectorsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

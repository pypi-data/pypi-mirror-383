# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_extranets_get200_response_policies_inner_branches_excluded_devices_inner_circuits_inner_bgp_neighbors_inner import V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner

class TestV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner(unittest.TestCase):
    """V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner:
        """Test V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner`
        """
        model = V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner()
        if include_optional:
            return V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner(
                address_families = [
                    graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_circuits_inner_bgp_neighbors_inner_address_families_inner._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_circuits_inner_bgpNeighbors_inner_addressFamilies_inner(
                        address_family = 'ENUM_VALUE', 
                        id = 1234567891011, 
                        inbound_policy = 'example string', 
                        outbound_policy = 'example string', )
                    ],
                allow_as_in = 123,
                as_override = True,
                bfd = graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_circuits_inner_bgp_neighbors_inner_bfd._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_circuits_inner_bgpNeighbors_inner_bfd(
                    enabled = True, 
                    minimum_interval = 123, 
                    multiplier = 123, ),
                bfd_neighbor = graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_circuits_inner_bgp_neighbors_inner_bfd_neighbor._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_circuits_inner_bgpNeighbors_inner_bfdNeighbor(
                    desired_minimum_tx_interval = 123, 
                    if_index = 123, 
                    interface = 'example string', 
                    last_updated = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                        nanos = 123, 
                        seconds = 1234567891011, ), 
                    local_diag = 'ENUM_VALUE', 
                    peer_address = 'example string', 
                    remote_diag = 'ENUM_VALUE', 
                    required_minimum_rx_interval = 123, 
                    segment_name = 'example string', 
                    source_address = 'example string', 
                    state = 'ENUM_VALUE', 
                    time_in_state = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                        nanos = 123, 
                        seconds = 1234567891011, ), 
                    up = True, ),
                bgp_type = 'ENUM_VALUE',
                default_originate = 'ENUM_VALUE',
                enabled = True,
                hold_timer = 123,
                id = 1234567891011,
                keepalive_timer = 123,
                local_address = 'example string',
                local_interface = 'example string',
                max_prefix = 10000,
                md5_password = 'example string',
                multi_hop = 5,
                peer_asn = 123,
                remote_address = 'example string',
                remove_private_as = True,
                send_community = False,
                state = 'ENUM_VALUE',
                time_since_last_oper_change = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                    nanos = 123, 
                    seconds = 1234567891011, ),
                up = True
            )
        else:
            return V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner(
        )
        """

    def testV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner(self):
        """Test V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerCircuitsInnerBgpNeighborsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

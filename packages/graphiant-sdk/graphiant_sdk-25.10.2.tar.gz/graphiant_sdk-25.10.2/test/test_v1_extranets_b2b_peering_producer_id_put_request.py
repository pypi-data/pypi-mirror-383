# coding: utf-8

"""
    Graphiant APIs

    Graphiant API documentation.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_extranets_b2b_peering_producer_id_put_request import V1ExtranetsB2bPeeringProducerIdPutRequest

class TestV1ExtranetsB2bPeeringProducerIdPutRequest(unittest.TestCase):
    """V1ExtranetsB2bPeeringProducerIdPutRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ExtranetsB2bPeeringProducerIdPutRequest:
        """Test V1ExtranetsB2bPeeringProducerIdPutRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ExtranetsB2bPeeringProducerIdPutRequest`
        """
        model = V1ExtranetsB2bPeeringProducerIdPutRequest()
        if include_optional:
            return V1ExtranetsB2bPeeringProducerIdPutRequest(
                policy = graphiant_sdk.models._v1_extranets_b2b_peering_producer_post_request_policy._v1_extranets_b2b_peering_producer_post_request_policy(
                    description = 'example string', 
                    prefix_tags = [
                        graphiant_sdk.models._v1_extranets_b2b_peering_match_service_to_customer_put_request_service_service_prefixes_inner._v1_extranets_b2b_peering_match_service_to_customer_put_request_service_servicePrefixes_inner(
                            prefix = 'example string', 
                            tag = 'example string', )
                        ], 
                    service_lan_segment = 1234567891011, 
                    site = [
                        graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner._v1_extranets_b2b_consumer_post_request_siteInformation_inner(
                            bw_allocation_site_lists = 123, 
                            bw_allocation_sites = 123, 
                            policer_site_lists = graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner_policer_site_lists._v1_extranets_b2b_consumer_post_request_siteInformation_inner_policerSiteLists(
                                burst_size = 123, 
                                bw = 123, ), 
                            policer_sites = graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner_policer_site_lists._v1_extranets_b2b_consumer_post_request_siteInformation_inner_policerSiteLists(
                                burst_size = 123, 
                                bw = 123, ), 
                            site_lists = [
                                1234567891011
                                ], 
                            sites = [
                                1234567891011
                                ], )
                        ], 
                    type = 'ENUM_VALUE', )
            )
        else:
            return V1ExtranetsB2bPeeringProducerIdPutRequest(
        )
        """

    def testV1ExtranetsB2bPeeringProducerIdPutRequest(self):
        """Test V1ExtranetsB2bPeeringProducerIdPutRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

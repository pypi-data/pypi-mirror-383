# coding: utf-8

"""
    Graphiant APIs

    Graphiant API documentation.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_global_site_lists_get200_response_entries_inner import V1GlobalSiteListsGet200ResponseEntriesInner

class TestV1GlobalSiteListsGet200ResponseEntriesInner(unittest.TestCase):
    """V1GlobalSiteListsGet200ResponseEntriesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1GlobalSiteListsGet200ResponseEntriesInner:
        """Test V1GlobalSiteListsGet200ResponseEntriesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1GlobalSiteListsGet200ResponseEntriesInner`
        """
        model = V1GlobalSiteListsGet200ResponseEntriesInner()
        if include_optional:
            return V1GlobalSiteListsGet200ResponseEntriesInner(
                created_at = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                    nanos = 123, 
                    seconds = 1234567891011, ),
                description = 'example string',
                edge_references = 123,
                id = 1234567891011,
                name = 'example string',
                policy_references = 123,
                site_list_references = 123
            )
        else:
            return V1GlobalSiteListsGet200ResponseEntriesInner(
        )
        """

    def testV1GlobalSiteListsGet200ResponseEntriesInner(self):
        """Test V1GlobalSiteListsGet200ResponseEntriesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

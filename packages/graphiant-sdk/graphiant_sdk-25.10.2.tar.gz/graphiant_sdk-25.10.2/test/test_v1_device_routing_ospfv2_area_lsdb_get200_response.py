# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_device_routing_ospfv2_area_lsdb_get200_response import V1DeviceRoutingOspfv2AreaLsdbGet200Response

class TestV1DeviceRoutingOspfv2AreaLsdbGet200Response(unittest.TestCase):
    """V1DeviceRoutingOspfv2AreaLsdbGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DeviceRoutingOspfv2AreaLsdbGet200Response:
        """Test V1DeviceRoutingOspfv2AreaLsdbGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DeviceRoutingOspfv2AreaLsdbGet200Response`
        """
        model = V1DeviceRoutingOspfv2AreaLsdbGet200Response()
        if include_optional:
            return V1DeviceRoutingOspfv2AreaLsdbGet200Response(
                lsas = [
                    graphiant_sdk.models._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner(
                        advertising_router = '172.121.12.34', 
                        age = 3242342, 
                        asexternal_lsa = graphiant_sdk.models._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_asexternal_lsa._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_asexternalLsa(
                            forwarding_address = 'example string', 
                            metric = 123, 
                            metric_type = 'example string', 
                            network_mask = 123, 
                            tag = 123, 
                            tos_metric = graphiant_sdk.models._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_asexternal_lsa_tos_metric._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_asexternalLsa_tosMetric(
                                tos = 123, ), ), 
                        checksum = 2343232, 
                        length = 123132, 
                        link_id = '143.12.1.5', 
                        network_lsa = graphiant_sdk.models._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_network_lsa._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_networkLsa(
                            attached_routers = [
                                'example string'
                                ], 
                            network_mask = 123, ), 
                        router_lsa = graphiant_sdk.models._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_router_lsa._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_routerLsa(
                            links = [
                                graphiant_sdk.models._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_router_lsa_links_inner._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_routerLsa_links_inner(
                                    link_data = 'example string', 
                                    link_id = 'example string', 
                                    link_type = 'example string', 
                                    metric = 123, )
                                ], ), 
                        sequence_number = '0x80000001', 
                        summary_lsa = graphiant_sdk.models._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_summary_lsa._v1_device_routing_ospfv2_area_lsdb_get_200_response_lsas_inner_summaryLsa(
                            network_mask = 123, ), 
                        type = 'Router', )
                    ],
                page_info = graphiant_sdk.models._v1_nat_entries__device_id__get_200_response_page_info._v1_nat_entries__deviceId__get_200_response_pageInfo(
                    current_page = 1, 
                    end_cursor = 'xxxxxxy', 
                    has_next_page = False, 
                    has_prev_page = True, 
                    start_cursor = 'xxxxxx', 
                    total_pages = 4, 
                    total_records = 400, ),
                token = 'xxxxxxxxx'
            )
        else:
            return V1DeviceRoutingOspfv2AreaLsdbGet200Response(
        )
        """

    def testV1DeviceRoutingOspfv2AreaLsdbGet200Response(self):
        """Test V1DeviceRoutingOspfv2AreaLsdbGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

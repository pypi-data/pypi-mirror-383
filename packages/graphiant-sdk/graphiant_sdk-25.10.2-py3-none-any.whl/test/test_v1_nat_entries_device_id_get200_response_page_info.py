# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_nat_entries_device_id_get200_response_page_info import V1NatEntriesDeviceIdGet200ResponsePageInfo

class TestV1NatEntriesDeviceIdGet200ResponsePageInfo(unittest.TestCase):
    """V1NatEntriesDeviceIdGet200ResponsePageInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1NatEntriesDeviceIdGet200ResponsePageInfo:
        """Test V1NatEntriesDeviceIdGet200ResponsePageInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1NatEntriesDeviceIdGet200ResponsePageInfo`
        """
        model = V1NatEntriesDeviceIdGet200ResponsePageInfo()
        if include_optional:
            return V1NatEntriesDeviceIdGet200ResponsePageInfo(
                current_page = 1,
                end_cursor = 'xxxxxxy',
                has_next_page = False,
                has_prev_page = True,
                start_cursor = 'xxxxxx',
                total_pages = 4,
                total_records = 400
            )
        else:
            return V1NatEntriesDeviceIdGet200ResponsePageInfo(
        )
        """

    def testV1NatEntriesDeviceIdGet200ResponsePageInfo(self):
        """Test V1NatEntriesDeviceIdGet200ResponsePageInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

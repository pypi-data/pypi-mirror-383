# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_devices_device_id_connectivity_get200_response import V1DevicesDeviceIdConnectivityGet200Response

class TestV1DevicesDeviceIdConnectivityGet200Response(unittest.TestCase):
    """V1DevicesDeviceIdConnectivityGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DevicesDeviceIdConnectivityGet200Response:
        """Test V1DevicesDeviceIdConnectivityGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DevicesDeviceIdConnectivityGet200Response`
        """
        model = V1DevicesDeviceIdConnectivityGet200Response()
        if include_optional:
            return V1DevicesDeviceIdConnectivityGet200Response(
                edges = [
                    graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_edges_added_inner._v1_flows_topology_post_200_response_networkTopology_inner_delta_edgesAdded_inner(
                        a = 123, 
                        b = 123, 
                        connections = graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_edges_added_inner_connections._v1_flows_topology_post_200_response_networkTopology_inner_delta_edgesAdded_inner_connections(
                            control_connection = [
                                graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_edges_added_inner_connections_control_connection_inner._v1_flows_topology_post_200_response_networkTopology_inner_delta_edgesAdded_inner_connections_controlConnection_inner(
                                    dest_ip = 'example string', 
                                    dest_port = 123, 
                                    last_established_time = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                                        nanos = 123, 
                                        seconds = 1234567891011, ), 
                                    quality = 'ENUM_VALUE', 
                                    source_ip = 'example string', 
                                    source_port = 123, )
                                ], 
                            core_connection = [
                                graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_edges_added_inner_connections_control_connection_inner._v1_flows_topology_post_200_response_networkTopology_inner_delta_edgesAdded_inner_connections_controlConnection_inner(
                                    dest_ip = 'example string', 
                                    dest_port = 123, 
                                    quality = 'ENUM_VALUE', 
                                    source_ip = 'example string', 
                                    source_port = 123, )
                                ], 
                            management_connection = [
                                
                                ], ), 
                        quality = 'ENUM_VALUE', )
                    ],
                nodes = [
                    graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_nodes_added_inner._v1_flows_topology_post_200_response_networkTopology_inner_delta_nodesAdded_inner(
                        connections = graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_edges_added_inner_connections._v1_flows_topology_post_200_response_networkTopology_inner_delta_edgesAdded_inner_connections(
                            control_connection = [
                                graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_edges_added_inner_connections_control_connection_inner._v1_flows_topology_post_200_response_networkTopology_inner_delta_edgesAdded_inner_connections_controlConnection_inner(
                                    dest_ip = 'example string', 
                                    dest_port = 123, 
                                    last_established_time = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                                        nanos = 123, 
                                        seconds = 1234567891011, ), 
                                    quality = 'ENUM_VALUE', 
                                    source_ip = 'example string', 
                                    source_port = 123, )
                                ], 
                            core_connection = [
                                graphiant_sdk.models._v1_flows_topology_post_200_response_network_topology_inner_delta_edges_added_inner_connections_control_connection_inner._v1_flows_topology_post_200_response_networkTopology_inner_delta_edgesAdded_inner_connections_controlConnection_inner(
                                    dest_ip = 'example string', 
                                    dest_port = 123, 
                                    quality = 'ENUM_VALUE', 
                                    source_ip = 'example string', 
                                    source_port = 123, )
                                ], 
                            management_connection = [
                                
                                ], ), 
                        id = 123, 
                        name = 'example string', 
                        override_region = 'example string', 
                        region = 'example string', 
                        type = 'example string', )
                    ]
            )
        else:
            return V1DevicesDeviceIdConnectivityGet200Response(
        )
        """

    def testV1DevicesDeviceIdConnectivityGet200Response(self):
        """Test V1DevicesDeviceIdConnectivityGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_extranets_get200_response_policies_inner_branches_excluded_devices_inner_ipsec_tunnels_inner import V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner

class TestV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner(unittest.TestCase):
    """V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner:
        """Test V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner`
        """
        model = V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner()
        if include_optional:
            return V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner(
                bgp = graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_ipsec_tunnels_inner_bgp._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_ipsecTunnels_inner_bgp(
                    address_families = [
                        graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_circuits_inner_bgp_neighbors_inner_address_families_inner._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_circuits_inner_bgpNeighbors_inner_addressFamilies_inner(
                            address_family = 'ENUM_VALUE', 
                            id = 1234567891011, 
                            inbound_policy = 'example string', 
                            outbound_policy = 'example string', )
                        ], 
                    hold_timer = 123, 
                    keepalive_timer = 123, 
                    md5_password = 'example string', 
                    peer_asn = 123, 
                    send_community = True, ),
                destination_address = 'example string',
                ike_initiator = True,
                ipsec_label = 'ENUM_VALUE',
                lan = 'example string',
                local_address_v4 = 'example string',
                local_address_v6 = 'example string',
                local_circuit = 'example string',
                local_ike_peer_identity = 'example string',
                mtu = 123,
                name = 'example string',
                preshared_key = 'example string',
                remote_address_v4 = 'example string',
                remote_address_v6 = 'example string',
                remote_ike_peer_identity = 'example string',
                static = graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_ipsec_tunnels_inner_static._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_ipsecTunnels_inner_static(
                    destination_prefix = [
                        'example string'
                        ], ),
                tcp_mss = 123,
                vpn_profile = 'example string'
            )
        else:
            return V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner(
        )
        """

    def testV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner(self):
        """Test V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerIpsecTunnelsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

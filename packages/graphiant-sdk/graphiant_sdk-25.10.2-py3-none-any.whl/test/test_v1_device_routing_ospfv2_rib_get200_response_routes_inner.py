# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_device_routing_ospfv2_rib_get200_response_routes_inner import V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner

class TestV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner(unittest.TestCase):
    """V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner:
        """Test V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner`
        """
        model = V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner()
        if include_optional:
            return V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner(
                ip_prefix = '131.1.0.0/16',
                path = [
                    graphiant_sdk.models._v1_device_routing_ospfv2_rib_get_200_response_routes_inner_path_inner._v1_device_routing_ospfv2_rib_get_200_response_routes_inner_path_inner(
                        egress_interface = 'ATTInterface', 
                        last_modified = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                            nanos = 123, 
                            seconds = 1234567891011, ), 
                        metric = 120, 
                        next_hop = '10.1.1.1', 
                        tag = 12312, 
                        type = 'internal or external', )
                    ]
            )
        else:
            return V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner(
        )
        """

    def testV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner(self):
        """Test V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

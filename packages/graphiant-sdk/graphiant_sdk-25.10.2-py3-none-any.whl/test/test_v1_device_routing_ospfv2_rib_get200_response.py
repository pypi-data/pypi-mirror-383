# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_device_routing_ospfv2_rib_get200_response import V1DeviceRoutingOspfv2RibGet200Response

class TestV1DeviceRoutingOspfv2RibGet200Response(unittest.TestCase):
    """V1DeviceRoutingOspfv2RibGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DeviceRoutingOspfv2RibGet200Response:
        """Test V1DeviceRoutingOspfv2RibGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DeviceRoutingOspfv2RibGet200Response`
        """
        model = V1DeviceRoutingOspfv2RibGet200Response()
        if include_optional:
            return V1DeviceRoutingOspfv2RibGet200Response(
                page_info = graphiant_sdk.models._v1_nat_entries__device_id__get_200_response_page_info._v1_nat_entries__deviceId__get_200_response_pageInfo(
                    current_page = 1, 
                    end_cursor = 'xxxxxxy', 
                    has_next_page = False, 
                    has_prev_page = True, 
                    start_cursor = 'xxxxxx', 
                    total_pages = 4, 
                    total_records = 400, ),
                routes = [
                    graphiant_sdk.models._v1_device_routing_ospfv2_rib_get_200_response_routes_inner._v1_device_routing_ospfv2_rib_get_200_response_routes_inner(
                        ip_prefix = '131.1.0.0/16', 
                        path = [
                            graphiant_sdk.models._v1_device_routing_ospfv2_rib_get_200_response_routes_inner_path_inner._v1_device_routing_ospfv2_rib_get_200_response_routes_inner_path_inner(
                                egress_interface = 'ATTInterface', 
                                last_modified = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                                    nanos = 123, 
                                    seconds = 1234567891011, ), 
                                metric = 120, 
                                next_hop = '10.1.1.1', 
                                tag = 12312, 
                                type = 'internal or external', )
                            ], )
                    ],
                token = 'xxxxxxxxx'
            )
        else:
            return V1DeviceRoutingOspfv2RibGet200Response(
        )
        """

    def testV1DeviceRoutingOspfv2RibGet200Response(self):
        """Test V1DeviceRoutingOspfv2RibGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

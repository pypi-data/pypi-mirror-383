# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_diagnostic_ping_pause_resume_post204_response import V1DiagnosticPingPauseResumePost204Response

class TestV1DiagnosticPingPauseResumePost204Response(unittest.TestCase):
    """V1DiagnosticPingPauseResumePost204Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DiagnosticPingPauseResumePost204Response:
        """Test V1DiagnosticPingPauseResumePost204Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DiagnosticPingPauseResumePost204Response`
        """
        model = V1DiagnosticPingPauseResumePost204Response()
        if include_optional:
            return V1DiagnosticPingPauseResumePost204Response(
                result = graphiant_sdk.models._v1_diagnostic_ping_pause_resume_post_204_response_result._v1_diagnostic_ping_pause_resume_post_204_response_result(
                    ping_result = graphiant_sdk.models._v1_diagnostic_ping_pause_resume_post_204_response_result_ping_result._v1_diagnostic_ping_pause_resume_post_204_response_result_pingResult(
                        avg_loss = 64, 
                        avg_time = 3, 
                        completed_time = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                            nanos = 123, 
                            seconds = 1234567891011, ), 
                        max_time = 10, 
                        min_time = 5, 
                        result = 'Success', ), 
                    route_info = graphiant_sdk.models._v1_diagnostic_ping_pause_resume_post_204_response_result_route_info._v1_diagnostic_ping_pause_resume_post_204_response_result_routeInfo(
                        nexthop_address = '1213:1::6451', 
                        outgoing_interface = 'Ethernet0/1', 
                        prefix = '1213:1::6451', ), 
                    trace_result = graphiant_sdk.models._v1_diagnostic_ping_pause_resume_post_204_response_result_trace_result._v1_diagnostic_ping_pause_resume_post_204_response_result_traceResult(
                        hops = [
                            graphiant_sdk.models._v1_diagnostic_ping_pause_resume_post_204_response_result_trace_result_hops_inner._v1_diagnostic_ping_pause_resume_post_204_response_result_traceResult_hops_inner(
                                host_address = '1213:1::6451', 
                                path_mtu = 1500, 
                                round_trip_time = 10, 
                                stats = graphiant_sdk.models._v1_diagnostic_ping_pause_resume_post_204_response_result_trace_result_hops_inner_stats._v1_diagnostic_ping_pause_resume_post_204_response_result_traceResult_hops_inner_stats(
                                    avg_time = 3, 
                                    max_time = 10, 
                                    min_time = 5, 
                                    rx_packets = 10, 
                                    std_dev_time = 3, 
                                    tx_packets = 10, ), )
                            ], 
                        max_latency = 10, 
                        max_latency_host = 'A123:3242::1111', 
                        max_path_mtu = 1500, 
                        min_path_mtu = 1000, 
                        result = 'Failed', 
                        stopped_time = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                            nanos = 123, 
                            seconds = 1234567891011, ), ), ),
                token = 'example string'
            )
        else:
            return V1DiagnosticPingPauseResumePost204Response(
        )
        """

    def testV1DiagnosticPingPauseResumePost204Response(self):
        """Test V1DiagnosticPingPauseResumePost204Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

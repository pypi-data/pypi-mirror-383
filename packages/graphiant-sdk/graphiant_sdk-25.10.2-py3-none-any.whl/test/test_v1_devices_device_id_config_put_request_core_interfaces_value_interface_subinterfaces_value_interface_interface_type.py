# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_devices_device_id_config_put_request_core_interfaces_value_interface_subinterfaces_value_interface_interface_type import V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType

class TestV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType(unittest.TestCase):
    """V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType:
        """Test V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType`
        """
        model = V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType()
        if include_optional:
            return V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType(
                core_neighbor = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_core_neighbor._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_coreNeighbor(
                    cost = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_core_neighbor_cost._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_coreNeighbor_Cost(
                        dynamic = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_core_neighbor_cost_dynamic._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_coreNeighbor_Cost_dynamic(
                            bandwidth = 123, 
                            latency = 123, ), 
                        static = 123, ), 
                    ospf_cost = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_core_neighbor_cost._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_coreNeighbor_Cost(
                        static = 123, ), 
                    peer_hostname = 'example string', 
                    type = 'ENUM_VALUE', ),
                core_to_core_tunnel = graphiant_sdk.models.core_to_core_tunnel.coreToCoreTunnel(),
                default = graphiant_sdk.models.default.default(),
                gateway_neighbor = graphiant_sdk.models._v1_account_mfa_get_200_response._v1_account_mfa_get_200_response(
                    type = 'ENUM_VALUE', ),
                wan = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_subinterfaces_value_interface_interface_type_wan._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_subinterfaces_value_interface_interfaceType_wan(
                    gw = graphiant_sdk.models._v1_devices__device_id__config_put_request_core_interfaces_value_interface_subinterfaces_value_interface_interface_type_wan_gw._v1_devices__deviceId__config_put_request_core_interfaces_value_interface_subinterfaces_value_interface_interfaceType_wan_gw(), 
                    type = 'ENUM_VALUE', 
                    vrf_name = 'example string', ),
                wan_management = graphiant_sdk.models.wan_management.wanManagement()
            )
        else:
            return V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType(
        )
        """

    def testV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType(self):
        """Test V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_extranets_get200_response_policies_inner_branches_excluded_devices_inner_traffic_policy_security_rulesets_inner_rules_inner import V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner

class TestV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner(unittest.TestCase):
    """V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner:
        """Test V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner`
        """
        model = V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner()
        if include_optional:
            return V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner(
                action = 'ENUM_VALUE',
                description = 'example string',
                downlink_burst_rate = 123,
                downlink_policer_rate = 123,
                id = 1234567891011,
                index = 123,
                logging = True,
                match = graphiant_sdk.models._v1_extranets_get_200_response_policies_inner_branches_excluded_devices_inner_traffic_policy_security_rulesets_inner_rules_inner_match._v1_extranets_get_200_response_policies_inner_branches_excludedDevices_inner_trafficPolicy_securityRulesets_inner_rules_inner_match(
                    application = 'example string', 
                    destination_network = 'example string', 
                    destination_port = 123, 
                    destination_port_range = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_security_rulesets_value_ruleset_rules_value_rule_match_destination_port_range._v1_global_config_patch_request_trafficPolicies_securityRulesets_value_ruleset_rules_value_rule_match_destinationPortRange(
                        lower = 123, 
                        upper = 123, ), 
                    domain_category_ids = [
                        1234567891011
                        ], 
                    dscp = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_security_rulesets_value_ruleset_rules_value_rule_match_dscp_match._v1_global_config_patch_request_trafficPolicies_securityRulesets_value_ruleset_rules_value_rule_match_dscp_match(
                        code_point = 123, ), 
                    icmp_type = 123, 
                    ip_protocol = 'ENUM_VALUE', 
                    protocol = 'ENUM_VALUE', 
                    source_network = 'example string', 
                    source_port = 123, 
                    source_port_range = graphiant_sdk.models._v1_global_config_patch_request_traffic_policies_security_rulesets_value_ruleset_rules_value_rule_match_destination_port_range._v1_global_config_patch_request_trafficPolicies_securityRulesets_value_ruleset_rules_value_rule_match_destinationPortRange(
                        lower = 123, 
                        upper = 123, ), ),
                name = 'example string',
                seq = 123,
                uplink_burst_rate = 123,
                uplink_policer_rate = 123
            )
        else:
            return V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner(
        )
        """

    def testV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner(self):
        """Test V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerTrafficPolicySecurityRulesetsInnerRulesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v2_device_device_id_topology_post200_response_nodes_inner_circuit_info_inner import V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner

class TestV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner(unittest.TestCase):
    """V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner:
        """Test V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner`
        """
        model = V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner()
        if include_optional:
            return V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner(
                average_downlink_utilization = 123.45,
                average_uplink_utilization = 123.45,
                circuit_carrier = 'example string',
                circuit_name = 'example string',
                current_downlink_utilization = 123.45,
                current_uplink_utilization = 123.45,
                device_id = 1234567891011,
                interface_name = 'example string',
                jitter = 12345678910,
                label = 'ENUM_VALUE',
                last_resort = True,
                latency = 12345678910,
                loss = 12.34,
                qoe = 12.34,
                quality = 'ENUM_VALUE'
            )
        else:
            return V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner(
        )
        """

    def testV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner(self):
        """Test V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

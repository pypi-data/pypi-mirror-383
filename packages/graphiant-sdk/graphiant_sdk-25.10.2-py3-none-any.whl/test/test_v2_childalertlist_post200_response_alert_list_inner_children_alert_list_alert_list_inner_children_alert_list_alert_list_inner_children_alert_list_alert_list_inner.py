# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v2_childalertlist_post200_response_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list_alert_list_inner import V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner

class TestV2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner(unittest.TestCase):
    """V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner:
        """Test V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner`
        """
        model = V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner()
        if include_optional:
            return V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner(
                acknowledged_list = [
                    'example string'
                    ],
                acknowledgement_reason = 'example string',
                alert_body = 'example string',
                alert_id = 'example string',
                allow_listed = True,
                children_alert_list = graphiant_sdk.models._v2_childalertlist_post_200_response_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list._v2_childalertlist_post_200_response_alertList_inner_childrenAlertList_alertList_inner_childrenAlertList_alertList_inner_childrenAlertList_alertList_inner_childrenAlertList(
                    alert_list = [
                        graphiant_sdk.models._v2_childalertlist_post_200_response_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list_alert_list_inner_children_alert_list_alert_list_inner._v2_childalertlist_post_200_response_alertList_inner_childrenAlertList_alertList_inner_childrenAlertList_alertList_inner_childrenAlertList_alertList_inner_childrenAlertList_alertList_inner(
                            acknowledged_list = [
                                'example string'
                                ], 
                            acknowledgement_reason = 'example string', 
                            alert_body = 'example string', 
                            alert_id = 'example string', 
                            allow_listed = True, 
                            descendant_present = True, 
                            device_id = 'example string', 
                            end_time = 12345678910, 
                            enterprise_id = 'example string', 
                            entity = 'example string', 
                            interface_name = 'example string', 
                            mute_listed = True, 
                            notification_created = True, 
                            occurrences = 12345678910, 
                            peer_device_id = 'example string', 
                            peer_interface_name = 'example string', 
                            peer_name = 'example string', 
                            plane = 'ENUM_VALUE', 
                            reason = 'example string', 
                            recommendation = 'example string', 
                            rule_id = 'example string', 
                            severity = 'Low', 
                            site_id = 'example string', 
                            start_time = 12345678910, 
                            status = 'ENUM_VALUE', 
                            troubleshooting_disabled_reason = 'example string', 
                            troubleshooting_enabled = True, 
                            tunnel_interface_name = 'example string', 
                            type = 'example string', )
                        ], ),
                descendant_present = True,
                device_id = 'example string',
                end_time = 12345678910,
                enterprise_id = 'example string',
                entity = 'example string',
                interface_name = 'example string',
                mute_listed = True,
                notification_created = True,
                occurrences = 12345678910,
                peer_device_id = 'example string',
                peer_interface_name = 'example string',
                peer_name = 'example string',
                plane = 'ENUM_VALUE',
                reason = 'example string',
                recommendation = 'example string',
                rule_id = 'example string',
                severity = 'Low',
                site_id = 'example string',
                start_time = 12345678910,
                status = 'ENUM_VALUE',
                troubleshooting_disabled_reason = 'example string',
                troubleshooting_enabled = True,
                tunnel_interface_name = 'example string',
                type = 'example string'
            )
        else:
            return V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner(
        )
        """

    def testV2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner(self):
        """Test V2ChildalertlistPost200ResponseAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInnerChildrenAlertListAlertListInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

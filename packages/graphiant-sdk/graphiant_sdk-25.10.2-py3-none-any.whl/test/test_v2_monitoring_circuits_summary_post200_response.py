# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v2_monitoring_circuits_summary_post200_response import V2MonitoringCircuitsSummaryPost200Response

class TestV2MonitoringCircuitsSummaryPost200Response(unittest.TestCase):
    """V2MonitoringCircuitsSummaryPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2MonitoringCircuitsSummaryPost200Response:
        """Test V2MonitoringCircuitsSummaryPost200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2MonitoringCircuitsSummaryPost200Response`
        """
        model = V2MonitoringCircuitsSummaryPost200Response()
        if include_optional:
            return V2MonitoringCircuitsSummaryPost200Response(
                circuit_summaries = [
                    graphiant_sdk.models._v2_monitoring_circuits_summary_post_200_response_circuit_summaries_inner._v2_monitoring_circuits_summary_post_200_response_circuitSummaries_inner(
                        average_delay = 12.34, 
                        average_jitter = 12.34, 
                        average_link_down_speed_kbps = 12.34, 
                        average_link_up_speed_kbps = 12.34, 
                        average_loss = 12.34, 
                        avg_mos = 12.34, 
                        circuit_name = 'example string', 
                        config_link_down_speed_mbps = 123, 
                        config_link_up_speed_mbps = 123, 
                        connection_status = 'ENUM_VALUE', 
                        current_link_down_speed_kbps = 12.34, 
                        current_link_up_speed_kbps = 12.34, 
                        delay = 12345678910, 
                        jitter = 12345678910, 
                        last_resort = True, 
                        loss = 12.34, 
                        max_delay = 12.34, 
                        max_jitter = 12.34, 
                        max_loss = 12.34, 
                        max_mos = 12.34, 
                        min_delay = 12.34, 
                        min_jitter = 12.34, 
                        min_loss = 12.34, 
                        min_mos = 12.34, 
                        mos = 12.34, )
                    ]
            )
        else:
            return V2MonitoringCircuitsSummaryPost200Response(
        )
        """

    def testV2MonitoringCircuitsSummaryPost200Response(self):
        """Test V2MonitoringCircuitsSummaryPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_extranet_b2b_monitoring_peering_service_service_overtime_consumption_post_request import V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest

class TestV1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest(unittest.TestCase):
    """V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest:
        """Test V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest`
        """
        model = V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest()
        if include_optional:
            return V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest(
                id = 1234567891011,
                is_b2_b = True,
                is_provider = True,
                site_id = 1234567891011,
                time_window = graphiant_sdk.models._v2_notificationlist_post_request_time_window._v2_notificationlist_post_request_timeWindow(
                    bucket_size_sec = 123, 
                    old_ts = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                        nanos = 123, 
                        seconds = 1234567891011, ), 
                    recent_ts = graphiant_sdk.models._v1_alarm_history_get_200_response_history_inner_time._v1_alarm_history_get_200_response_history_inner_time(
                        nanos = 123, 
                        seconds = 1234567891011, ), ),
                vrf_id = 1234567891011
            )
        else:
            return V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest(
        )
        """

    def testV1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest(self):
        """Test V1ExtranetB2bMonitoringPeeringServiceServiceOvertimeConsumptionPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

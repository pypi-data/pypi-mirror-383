# coding: utf-8

"""
    Graphiant APIs

    Graphiant API documentation.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_extranets_b2b_peering_consumer_customer_id_consumer_details_get200_response import V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response

class TestV1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response(unittest.TestCase):
    """V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response:
        """Test V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response`
        """
        model = V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response()
        if include_optional:
            return V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response(
                consumer_id = 1234567891011,
                consumer_name = 'example string',
                emails = [
                    'example string'
                    ],
                global_object_device_summaries = {
                    'key' : graphiant_sdk.models._v1_extranets_b2b_post_request_policy_global_object_device_summaries_value._v1_extranets_b2b_post_request_policy_globalObjectDeviceSummaries_value(
                        routing_policies = [
                            graphiant_sdk.models._v1_extranets_b2b_post_request_policy_global_object_device_summaries_value_routing_policies_inner._v1_extranets_b2b_post_request_policy_globalObjectDeviceSummaries_value_routingPolicies_inner(
                                attach_point = 'ENUM_VALUE', 
                                id = 1234567891011, 
                                ip_version = 123, 
                                name = 'example string', 
                                num_attached_devices = 123, 
                                num_attached_sites = 123, 
                                num_failures = 123, 
                                num_in_sync_devices = 123, 
                                num_override_devices = 123, 
                                num_policies = 123, 
                                num_prefixes = 123, 
                                num_rules = 123, 
                                num_statements = 123, 
                                traffic_policy_type = 'ENUM_VALUE', )
                            ], )
                    },
                global_object_summaries = {
                    'key' : graphiant_sdk.models._v1_extranets_b2b_post_request_policy_global_object_device_summaries_value._v1_extranets_b2b_post_request_policy_globalObjectDeviceSummaries_value(
                        routing_policies = [
                            graphiant_sdk.models._v1_extranets_b2b_post_request_policy_global_object_device_summaries_value_routing_policies_inner._v1_extranets_b2b_post_request_policy_globalObjectDeviceSummaries_value_routingPolicies_inner(
                                attach_point = 'ENUM_VALUE', 
                                id = 1234567891011, 
                                ip_version = 123, 
                                name = 'example string', 
                                num_attached_devices = 123, 
                                num_attached_sites = 123, 
                                num_failures = 123, 
                                num_in_sync_devices = 123, 
                                num_override_devices = 123, 
                                num_policies = 123, 
                                num_prefixes = 123, 
                                num_rules = 123, 
                                num_statements = 123, 
                                traffic_policy_type = 'ENUM_VALUE', )
                            ], )
                    },
                ipsec_tunnel_config = [
                    graphiant_sdk.models._v1_extranets_b2b_peering_consumer__customer_id__consumer_details_get_200_response_ipsec_tunnel_config_inner._v1_extranets_b2b_peering_consumer__customerId__consumer_details_get_200_response_ipsecTunnelConfig_inner(
                        bgp_graphiant_asn = 123, 
                        bgp_local_asn = 123, 
                        bgp_neighbor_hold_time = 123, 
                        bgp_neighbor_ipv4 = 'example string', 
                        bgp_neighbor_ipv6 = 'example string', 
                        dpd_interval = 123, 
                        dpd_retries = 123, 
                        graphiant_destination_ip = 'example string', 
                        graphiant_ike_id = 'example string', 
                        graphiant_outer_tunnel_ip = 'example string', 
                        graphiant_tunnel_ip = 'example string', 
                        graphiant_tunnel_ipv6 = 'example string', 
                        ike_authentication_algorithm = 'example string', 
                        ike_authentication_method = 'example string', 
                        ike_dh_algorithm = 'example string', 
                        ike_encryption_algorithm = 'example string', 
                        ike_lifetime = 'example string', 
                        ike_preshared_key = 'example string', 
                        ike_version = 123, 
                        ipsec_authentication_algorithm = 'example string', 
                        ipsec_encryption_algorithm = 'example string', 
                        ipsec_extended_sequence_number = True, 
                        ipsec_lifetime = 'example string', 
                        ipsec_mode = 'example string', 
                        ipsec_pfs_algorithm = 'example string', 
                        ipsec_protocol = 'example string', 
                        local_ike_id = 'example string', 
                        local_outer_tunnel_ip = 'example string', 
                        local_tunnel_ip = 'example string', 
                        local_tunnel_ipv6 = 'example string', 
                        tcp_mss = 123, 
                        tunnel_mtu = 123, )
                    ],
                match_details = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__customer_id__consumer_details_get_200_response_match_details._v1_extranets_b2b_peering_consumer__customerId__consumer_details_get_200_response_matchDetails(
                    consumer_prefixes = [
                        'example string'
                        ], 
                    customer = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__customer_id__consumer_details_get_200_response_match_details_customer._v1_extranets_b2b_peering_consumer__customerId__consumer_details_get_200_response_matchDetails_customer(
                        company_name = 'example string', 
                        emails = [
                            'example string'
                            ], 
                        id = 1234567891011, 
                        num_sites = 123, ), 
                    service = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__customer_id__consumer_details_get_200_response_match_details_service._v1_extranets_b2b_peering_consumer__customerId__consumer_details_get_200_response_matchDetails_service(
                        company_name = 'example string', 
                        contact_email = [
                            'example string'
                            ], 
                        description = 'example string', 
                        id = 1234567891011, 
                        service_name = 'example string', ), 
                    service_prefixes = [
                        graphiant_sdk.models._v1_extranets_b2b_peering_consumer__customer_id__consumer_details_get_200_response_match_details_service_prefixes_inner._v1_extranets_b2b_peering_consumer__customerId__consumer_details_get_200_response_matchDetails_servicePrefixes_inner(
                            customer_translated_prefix = 'example string', 
                            prefix = 'example string', 
                            tag = 'example string', )
                        ], ),
                peer_type = 'ENUM_VALUE',
                policy = [
                    graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_policy_inner._v1_extranets_b2b_peering_consumer__matchId__post_request_policy_inner(
                        consumer_prefixes = [
                            'example string'
                            ], 
                        lan_segment = 1234567891011, )
                    ],
                site_information = [
                    graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner._v1_extranets_b2b_consumer_post_request_siteInformation_inner(
                        bw_allocation_site_lists = 123, 
                        bw_allocation_sites = 123, 
                        policer_site_lists = graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner_policer_site_lists._v1_extranets_b2b_consumer_post_request_siteInformation_inner_policerSiteLists(
                            burst_size = 123, 
                            bw = 123, ), 
                        policer_sites = graphiant_sdk.models._v1_extranets_b2b_consumer_post_request_site_information_inner_policer_site_lists._v1_extranets_b2b_consumer_post_request_siteInformation_inner_policerSiteLists(
                            burst_size = 123, 
                            bw = 123, ), 
                        site_lists = [
                            1234567891011
                            ], 
                        sites = [
                            1234567891011
                            ], )
                    ],
                site_to_site_vpn = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn(
                    emails = [
                        'example string'
                        ], 
                    ipsec_gateway_details = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails(
                        destination_address = 'example string', 
                        ike_initiator = True, 
                        mtu = 123, 
                        name = 'example string', 
                        remote_ike_peer_identity = 'example string', 
                        routing = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_routing._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_routing(
                            bgp = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_routing_bgp._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_routing_bgp(
                                address_families = {
                                    'key' : graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_routing_bgp_address_families_value._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_routing_bgp_addressFamilies_value(
                                        family = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_routing_bgp_address_families_value_family._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_routing_bgp_addressFamilies_value_family(
                                            address_family = 'ENUM_VALUE', 
                                            inbound_policy = graphiant_sdk.models._v1_global_config_patch_request_routing_policies_value_policy_statements_value_statement_actions_value_action_call_policy._v1_global_config_patch_request_routingPolicies_value_policy_statements_value_statement_actions_value_action_callPolicy(
                                                policy = 'example string', ), 
                                            outbound_policy = graphiant_sdk.models._v1_global_config_patch_request_routing_policies_value_policy_statements_value_statement_actions_value_action_call_policy._v1_global_config_patch_request_routingPolicies_value_policy_statements_value_statement_actions_value_action_callPolicy(
                                                policy = 'example string', ), ), )
                                    }, 
                                hold_timer = 123, 
                                keepalive_timer = 123, 
                                md5_password = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_routing_bgp_md5_password._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_routing_bgp_md5Password(), 
                                peer_asn = 123, 
                                send_community = True, ), 
                            static = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_routing_static._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_routing_static(
                                destination_prefix = [
                                    'example string'
                                    ], ), ), 
                        tcp_mss = 123, 
                        tunnel1 = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_tunnel1._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_tunnel1(
                            inside_ipv4_cidr = 'example string', 
                            inside_ipv6_cidr = 'example string', 
                            local_ike_peer_identity = 'example string', 
                            psk = 'example string', ), 
                        tunnel2 = graphiant_sdk.models._v1_extranets_b2b_peering_consumer__match_id__post_request_site_to_site_vpn_ipsec_gateway_details_tunnel1._v1_extranets_b2b_peering_consumer__matchId__post_request_siteToSiteVpn_ipsecGatewayDetails_tunnel1(
                            inside_ipv4_cidr = 'example string', 
                            inside_ipv6_cidr = 'example string', 
                            local_ike_peer_identity = 'example string', 
                            psk = 'example string', ), 
                        vpn_profile = 'example string', ), 
                    region_id = 123, ),
                status = 'ENUM_VALUE'
            )
        else:
            return V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response(
        )
        """

    def testV1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response(self):
        """Test V1ExtranetsB2bPeeringConsumerCustomerIdConsumerDetailsGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

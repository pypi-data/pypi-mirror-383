# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v1_global_config_patch_request_snmps_value import V1GlobalConfigPatchRequestSnmpsValue

class TestV1GlobalConfigPatchRequestSnmpsValue(unittest.TestCase):
    """V1GlobalConfigPatchRequestSnmpsValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1GlobalConfigPatchRequestSnmpsValue:
        """Test V1GlobalConfigPatchRequestSnmpsValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1GlobalConfigPatchRequestSnmpsValue`
        """
        model = V1GlobalConfigPatchRequestSnmpsValue()
        if include_optional:
            return V1GlobalConfigPatchRequestSnmpsValue(
                config = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config._v1_global_config_patch_request_snmps_value_config(
                    communities = {
                        'key' : graphiant_sdk.models._v1_portal_apikeys_post_request._v1_portal_apikeys_post_request(
                            name = 'example string', )
                        }, 
                    engine_authen_traps = True, 
                    engine_enabled = True, 
                    engine_endpoints = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_engine_endpoints_value._v1_global_config_patch_request_snmps_value_config_engineEndpoints_value(
                            engine_endpoint = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_engine_endpoints_value_engine_endpoint._v1_global_config_patch_request_snmps_value_config_engineEndpoints_value_engineEndpoint(
                                addresses = {
                                    'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_engine_endpoints_value_engine_endpoint_addresses_value._v1_global_config_patch_request_snmps_value_config_engineEndpoints_value_engineEndpoint_addresses_value(
                                        address = 'example string', )
                                    }, 
                                auto_ipv4 = True, 
                                auto_ipv6 = True, 
                                interface = 'example string', 
                                lan_segment = 'example string', 
                                name = 'example string', ), )
                        }, 
                    engine_high_cpu_traps = True, 
                    engine_high_memory_traps = True, 
                    engine_id_admin_octets = 'example string', 
                    engine_id_admin_text = 'example string', 
                    engine_id_ipv4 = 'example string', 
                    engine_id_ipv6 = 'example string', 
                    engine_id_mac = 'example string', 
                    engine_id_raw = 'example string', 
                    engine_local_acess_v4 = True, 
                    engine_local_acess_v6 = True, 
                    engine_user_hints = True, 
                    engine_user_validation = True, 
                    global_id = 1234567891011, 
                    is_global_sync = True, 
                    name = 'example string', 
                    notify_filter_profiles = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_notify_filter_profiles_value._v1_global_config_patch_request_snmps_value_config_notifyFilterProfiles_value(
                            notify_filter_profile = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_notify_filter_profiles_value_notify_filter_profile._v1_global_config_patch_request_snmps_value_config_notifyFilterProfiles_value_notifyFilterProfile(
                                include_exclude_list = {
                                    'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_notify_filter_profiles_value_notify_filter_profile_include_exclude_list_value._v1_global_config_patch_request_snmps_value_config_notifyFilterProfiles_value_notifyFilterProfile_includeExcludeList_value(
                                        enabled = True, )
                                    }, 
                                name = 'example string', ), )
                        }, 
                    targets = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_targets_value._v1_global_config_patch_request_snmps_value_config_targets_value(
                            target = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_targets_value_target._v1_global_config_patch_request_snmps_value_config_targets_value_target(
                                community = 'example string', 
                                lan_segment = 'example string', 
                                name = 'example string', 
                                notify_type = 'ENUM_VALUE', 
                                source_ip = 'example string', 
                                target_ip = 'example string', 
                                target_type = 'ENUM_VALUE', 
                                usm_security_level = 'ENUM_VALUE', 
                                usm_user_name = 'example string', ), )
                        }, 
                    usm_local_users = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_usm_local_users_value._v1_global_config_patch_request_snmps_value_config_usmLocalUsers_value(
                            local_user = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_usm_local_users_value_local_user._v1_global_config_patch_request_snmps_value_config_usmLocalUsers_value_localUser(
                                auth_passphrase = 'example string', 
                                auth_protocol = 'ENUM_VALUE', 
                                encryption_passphrase = 'example string', 
                                encryption_protocol = 'ENUM_VALUE', 
                                name = 'example string', ), )
                        }, 
                    usm_remote_users = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_usm_remote_users_value._v1_global_config_patch_request_snmps_value_config_usmRemoteUsers_value(
                            remote_user = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_usm_remote_users_value_remote_user._v1_global_config_patch_request_snmps_value_config_usmRemoteUsers_value_remoteUser(
                                auth_loc_key = 'example string', 
                                auth_protocol = 'ENUM_VALUE', 
                                encryption_loc_key = 'example string', 
                                encryption_protocol = 'ENUM_VALUE', 
                                name = 'example string', ), )
                        }, 
                    v2c_enabled = True, 
                    v3_enabled = True, 
                    vacm_groups = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_vacm_groups_value._v1_global_config_patch_request_snmps_value_config_vacmGroups_value(
                            group = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_vacm_groups_value_group._v1_global_config_patch_request_snmps_value_config_vacmGroups_value_group(
                                accesses = {
                                    'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_vacm_groups_value_group_accesses_value._v1_global_config_patch_request_snmps_value_config_vacmGroups_value_group_accesses_value(
                                        access = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_vacm_groups_value_group_accesses_value_access._v1_global_config_patch_request_snmps_value_config_vacmGroups_value_group_accesses_value_access(
                                            context = 'example string', 
                                            context_match = 'ENUM_VALUE', 
                                            name = 'example string', 
                                            read_view = 'example string', 
                                            security_level = 'ENUM_VALUE', 
                                            security_model = 'ENUM_VALUE', 
                                            write_view = 'example string', ), )
                                    }, 
                                members = {
                                    'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_vacm_groups_value_group_members_value._v1_global_config_patch_request_snmps_value_config_vacmGroups_value_group_members_value(
                                        member = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_vacm_groups_value_group_members_value_member._v1_global_config_patch_request_snmps_value_config_vacmGroups_value_group_members_value_member(
                                            community = 'example string', 
                                            security_model = 'ENUM_VALUE', 
                                            security_name = 'example string', 
                                            type = 'ENUM_VALUE', ), )
                                    }, 
                                name = 'example string', ), )
                        }, 
                    vacm_views = {
                        'key' : graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_vacm_views_value._v1_global_config_patch_request_snmps_value_config_vacmViews_value(
                            view = graphiant_sdk.models._v1_global_config_patch_request_snmps_value_config_notify_filter_profiles_value_notify_filter_profile._v1_global_config_patch_request_snmps_value_config_notifyFilterProfiles_value_notifyFilterProfile(
                                name = 'example string', ), )
                        }, )
            )
        else:
            return V1GlobalConfigPatchRequestSnmpsValue(
        )
        """

    def testV1GlobalConfigPatchRequestSnmpsValue(self):
        """Test V1GlobalConfigPatchRequestSnmpsValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

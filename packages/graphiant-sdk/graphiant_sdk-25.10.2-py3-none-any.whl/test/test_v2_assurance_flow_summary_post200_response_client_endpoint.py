# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from graphiant_sdk.models.v2_assurance_flow_summary_post200_response_client_endpoint import V2AssuranceFlowSummaryPost200ResponseClientEndpoint

class TestV2AssuranceFlowSummaryPost200ResponseClientEndpoint(unittest.TestCase):
    """V2AssuranceFlowSummaryPost200ResponseClientEndpoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2AssuranceFlowSummaryPost200ResponseClientEndpoint:
        """Test V2AssuranceFlowSummaryPost200ResponseClientEndpoint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2AssuranceFlowSummaryPost200ResponseClientEndpoint`
        """
        model = V2AssuranceFlowSummaryPost200ResponseClientEndpoint()
        if include_optional:
            return V2AssuranceFlowSummaryPost200ResponseClientEndpoint(
                circuits = [
                    'example string'
                    ],
                edges = [
                    graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_edges_inner._v2_assurance_flow_summary_post_200_response_clientEndpoint_edges_inner(
                        device_id = 1234567891011, 
                        device_name = 'example string', )
                    ],
                jitter = graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_jitter._v2_assurance_flow_summary_post_200_response_clientEndpoint_jitter(
                    avg = 12.34, 
                    max = 12.34, 
                    min = 12.34, ),
                latency = graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_jitter._v2_assurance_flow_summary_post_200_response_clientEndpoint_jitter(
                    avg = 12.34, 
                    max = 12.34, 
                    min = 12.34, ),
                loss = graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_jitter._v2_assurance_flow_summary_post_200_response_clientEndpoint_jitter(
                    avg = 12.34, 
                    max = 12.34, 
                    min = 12.34, ),
                site = graphiant_sdk.models._v2_assurance_flow_summary_post_200_response_client_endpoint_site._v2_assurance_flow_summary_post_200_response_clientEndpoint_site(
                    region_id = 123, 
                    site_id = 1234567891011, 
                    site_name = 'example string', ),
                total_downlink_usage = 1234567891011,
                total_uplink_usage = 1234567891011
            )
        else:
            return V2AssuranceFlowSummaryPost200ResponseClientEndpoint(
        )
        """

    def testV2AssuranceFlowSummaryPost200ResponseClientEndpoint(self):
        """Test V2AssuranceFlowSummaryPost200ResponseClientEndpoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

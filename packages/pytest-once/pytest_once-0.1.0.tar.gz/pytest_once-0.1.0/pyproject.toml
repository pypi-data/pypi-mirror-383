[project]
name = "pytest-once"
version = "0.1.0"
description = "xdist-safe 'run once' fixture decorator for pytest (setup/teardown across workers)"
authors = [{ name = "kiarina", email = "kiarinadawa@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
keywords = ["pytest", "xdist", "fixture", "testing", "concurrency", "lock"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
]
requires-python = ">=3.12"
dependencies = [
    "pytest>=8.4.0",
    "filelock>=3.19.1",
]

[project.urls]
Homepage = "https://github.com/kiarina/pytest-once"
Repository = "https://github.com/kiarina/pytest-once"
Issues = "https://github.com/kiarina/pytest-once/issues"
Changelog = "https://github.com/kiarina/pytest-once/blob/main/CHANGELOG.md"
Documentation = "https://github.com/kiarina/pytest-once/tree/main#readme"

[dependency-groups]
dev = [
    "ruff>=0.12.1",
    "mypy>=1.17.0",
]
test = [
    "pytest-xdist>=3.8.0",
    "pytest-cov>=6.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.setuptools.package-data]
pytest_once = ["py.typed"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
follow_imports = "silent"
incremental = true
strict = true

[tool.ruff]
line-length = 88
target-version = "py312"
fix = true

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["pytest_once"]

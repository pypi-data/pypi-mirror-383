# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

env:
  Python_Version: "3.11"

on:
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_python_docs:
    name: Build Python Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: Deploy-Static-Content-Pages
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod
      - uses: actions/setup-python@v6
        name: Install Python
        with:
          python-version: ${{env.Python_Version}}
      - uses: actions/setup-node@v5
        with:
          node-version: latest
      - name: Install via uv
        run: |
          pip install uv
          cd docs
          uv sync
      - name: Prepare
        shell: bash
        run: |
          set -eux
          cd docs
          mkdir build
      - name: Validate GA4_TRACKING_ID
        shell: bash
        run: |
          if [ -z "${{ secrets.GA4_TRACKING_ID }}" ]; then
            echo "Error: GA4_TRACKING_ID is not set"
            exit 1
          fi
      - name: Jupyter Book
        env:
          GA4_TRACKING_ID: ${{ secrets.GA4_TRACKING_ID }}
        run: |
          cd docs
          # Replace GA4_TRACKING_ID placeholder with actual value from secrets
          # Using | as delimiter to avoid issues with / in the GA4 ID
          sed -i "s|GA4_TRACKING_ID|${GA4_TRACKING_ID}|g" en/_config.yml
          sed -i "s|GA4_TRACKING_ID|${GA4_TRACKING_ID}|g" ja/_config.yml
          sh doc_build.sh
      - name: du -a
        shell: bash
        if: always()
        run: |
          du -a
      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME="${GITHUB_REF##refs/tags/}"
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "deploy_tag_name=deploy-${TAG_NAME}" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: HTML
          path: ./docs/_build/html
          retention-days: 30
  # Single deploy job since we're just deploying
  deploy:
    needs: build_python_docs
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: HTML
          path: ./html
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          # Upload entire repository
          path: "./html"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

Metadata-Version: 2.4
Name: pvactools
Version: 5.5.4
Summary: A cancer immunotherapy tools suite
Home-page: https://github.com/griffithlab/pVACtools
Author: Jasreet Hundal, Susanna Kiwala, Joshua McMichael, Christopher A Miller, Alexander T Wollam, Huiming Xia, Connor J Liu, Sidi Zhao, Yang-Yang Feng, Aaron P Graubert, Amber Z Wollam, Jonas Neichin, Megan Neveau, Jason Walker, William E Gillanders, Elaine R Mardis, Obi L Griffith, Malachi Griffith
Author-email: help@pvactools.org
License: BSD-3-Clause-Clear
Keywords: antigens neoantigens cancer sequencing variant variants fusion fusions
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
License-File: LICENSE
Requires-Dist: vcfpy==0.13.8
Requires-Dist: requests
Requires-Dist: PyYAML>=5.1
Requires-Dist: biopython==1.77
Requires-Dist: networkx
Requires-Dist: simanneal
Requires-Dist: pandas<2.1.0
Requires-Dist: wget
Requires-Dist: pysam
Requires-Dist: Pillow
Requires-Dist: pymp-pypi
Requires-Dist: mock
Requires-Dist: vaxrank>=1.1.0
Requires-Dist: varcode>=1.1.0
Requires-Dist: mhcnuggets==2.4.1
Requires-Dist: mhcflurry==2.0.6
Requires-Dist: testfixtures
Requires-Dist: gtfparse==2.0.1
Requires-Dist: pyfaidx>=0.7.1
Requires-Dist: fsspec<=2025.3.0
Requires-Dist: packaging
Requires-Dist: pyarrow
Requires-Dist: polars==0.16.18
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: summary

|Test Status| |Coverage Status| |Docs| |External APIs Status|

pVACtools
=========

pVACtools is a cancer immunotherapy suite consisting of the following
tools:

**pVACseq**

A cancer immunotherapy pipeline for identifying and prioritizing
neoantigens from a VCF file.

**pVACbind**

A cancer immunotherapy pipeline for identifying and prioritizing
neoantigens from a FASTA file.

**pVACfuse**

A tool for detecting neoantigens resulting from gene fusions.

**pVACsplice**

A tool for detecting neoantigens resulting from splice site variants.

**pVACvector**

A tool designed to aid specifically in the construction of DNA
vector-based cancer vaccines.

**pVACview**

An application based on R Shiny that assists users in reviewing,
exploring and prioritizing neoantigens from the results of pVACtools
processes for personalized cancer vaccine design.

Citations
---------

Jasreet Hundal , Susanna Kiwala , Joshua McMichael, Chris Miller,
Huiming Xia, Alex Wollam, Conner Liu, Sidi Zhao, Yang-Yang Feng, Aaron
Graubert, Amber Wollam, Jonas Neichin, Megan Neveau, Jason Walker,
William Gillanders, Elaine Mardis, Obi Griffith, Malachi Griffith.
pVACtools: A Computational Toolkit to Identify and Visualize Cancer
Neoantigens. Cancer Immunology Research. 2020 Mar;8(3):409-420. doi:
10.1158/2326-6066.CIR-19-0401. PMID: 31907209.

Jasreet Hundal, Susanna Kiwala, Yang-Yang Feng, Connor J. Liu, Ramaswamy
Govindan, William C. Chapman, Ravindra Uppaluri, S. Joshua Swamidass,
Obi L. Griffith, Elaine R. Mardis, and Malachi Griffith. Accounting for
proximal variants improves neoantigen prediction. Nature Genetics. 2018,
DOI: 10.1038/s41588-018-0283-9. PMID: 30510237.

Jasreet Hundal, Beatriz M. Carreno, Allegra A. Petti, Gerald P. Linette,
Obi L. Griffith, Elaine R. Mardis, and Malachi Griffith. pVAC-Seq: A
genome-guided in silico approach to identifying tumor neoantigens.
Genome Medicine. 2016, 8:11, DOI: 10.1186/s13073-016-0264-5. PMID:
26825632.

License
-------

This project is licensed under BSD 3-Clause Clear License.

Installation
------------

pVACtools is written for Linux but some users have been able to run it
successfully on Mac OS X. If you are using Windows you will need to set
up a Linux environment, for example by setting up a virtual machine.

pVACtools requires Python 3.6 or above. Before running any installation
steps, check the Python version installed on your system:

``python -V``

If you don’t have Python 3 installed, we recommend using
`Conda <https://conda.io/projects/conda/en/latest/user-guide/install/index.html>`__
to emulate a Python 3 environment. We’ve encountered problems with users
that already have Python 2.x installed when they also try to install
Python 3. The defaults will not be set correctly in that case. If you
already have Python 2.x installed we **strongly** recommmend using Conda
instead of installing Python 3 locally.

Once you have set up your Python 3 environment correctly you can use
``pip`` to install pVACtools. Make sure you have ``pip`` installed.
``pip`` is generally included in python distributions, but may need to
be upgraded before use. See the
`instructions <https://packaging.python.org/en/latest/installing/#install-pip-setuptools-and-wheel>`__
for installing or upgrading ``pip``.

After you have ``pip`` installed, type the following command on your
Terminal:

``pip install pvactools``

You can check that ``pvactools`` has been installed under the default
environment like so:

``pip show pvactools``

``pip`` will fetch and install pVACtools and its dependencies for you.
After installing, each tool of the pVACtools suite is available in its
own command line tree directly from the Terminal.

If you have an old version of pVACtools installed you might want to
consider upgrading to the latest version:

``pip install pvactools --upgrade``

Documentation
-------------

The pVACtools documentation can be found on ReadTheDocs.

Contact
-------

Bug reports or feature requests can be submitted on the pVACtools Github
page. You may also contact us by email at help@pvactools.org.

Container images
----------------

pVACtools is available as a Docker Image at DockerHub
griffithlab/pvactools.

Stable release with DOI
-----------------------

|DOI|

.. |Test Status| image:: https://github.com/griffithlab/pVACtools/actions/workflows/tests.yml/badge.svg
.. |Coverage Status| image:: https://coveralls.io/repos/github/griffithlab/pVACtools/badge.svg?branch=master
   :target: https://coveralls.io/github/griffithlab/pVACtools?branch=master
.. |Docs| image:: https://readthedocs.org/projects/pvactools/badge/?version=latest
   :target: http://pvactools.readthedocs.io/en/latest/?badge=latest
.. |External APIs Status| image:: https://github.com/griffithlab/pVACtools/actions/workflows/api_status.yml/badge.svg
.. |DOI| image:: https://zenodo.org/badge/102625109.svg
   :target: https://zenodo.org/badge/latestdoi/102625109

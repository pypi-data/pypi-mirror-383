[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf-chunk-flow"
version = "0.1.1"
description = "ETL pipeline for PDF processing with chunking and parquet storage optimized for embeddings"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Facundo Vega", email = "facundo.vega1234@gmail.com"}
]
keywords = [
    "pdf",
    "etl",
    "pipeline",
    "embeddings",
    "parquet",
    "nlp",
    "chunks",
    "rag"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing",
]

dependencies = [
    "requests>=2.31.0",
    "pypdf>=3.17.0",
    "pandas>=2.1.0",
    "pyarrow>=14.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[project.urls]
Homepage = "https://github.com/facuvegaingenieer/pdf_chunk_flow"
Documentation = "https://github.com/facuvegaingenieer/pdf_chunk_flow#readme"
Repository = "https://github.com/facuvegaingenieer/pdf_chunk_flow"
"Bug Tracker" = "https://github.com/facuvegaingenieer/pdf_chunk_flow/issues"

[project.scripts]
pdf-chunk-flow = "pdf_chunk_flow.main:MacroEtlPdfChunks"

[tool.setuptools.packages.find]
where = ["."]
include = ["pdf_chunk_flow*"]
exclude = ["tests*", "*.tests", "*.tests.*", "tests.*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=pdf_chunk_flow",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["pdf_chunk_flow"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]


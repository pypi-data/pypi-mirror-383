/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ResponseGetValue, SetConfigRequest } from '../models/index';
export interface GetValueRequest {
    name: string;
    browserId?: string | null;
}
export interface RemoveRequest {
    name: string;
    browserId?: string | null;
}
export interface SetValueRequest {
    name: string;
    setConfigRequest: SetConfigRequest;
    browserId?: string | null;
}
/**
 *
 */
export declare class ConfigApi extends runtime.BaseAPI {
    /**
     * get config value by name
     * Get Value
     */
    getValueRaw(requestParameters: GetValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseGetValue>>;
    /**
     * get config value by name
     * Get Value
     */
    getValue(requestParameters: GetValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseGetValue>;
    /**
     * Remove config value by name.
     * Remove Value
     */
    removeRaw(requestParameters: RemoveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Remove config value by name.
     * Remove Value
     */
    remove(requestParameters: RemoveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Set config value by name.
     * Set Value
     */
    setValueRaw(requestParameters: SetValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Set config value by name.
     * Set Value
     */
    setValue(requestParameters: SetValueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
}

[project]
name = "hunterMakesPy"
version = "0.3.0"
description = "Easy Python functions making making functional Python functions easier."
readme = "README.md"
requires-python = ">=3.11"
license = { 'text' = "CC-BY-NC-4.0" }
authors = [{ name = "Hunter Hogan", email = "HunterHogan@pm.me" }]
keywords = [
  "attribute loading",
  "concurrency limit",
  "configuration",
  "defensive programming",
  "dictionary merging",
  "directory creation",
  "dynamic import",
  "error propagation",
  "file system utilities",
  "input validation",
  "integer parsing",
  "module loading",
  "nested data structures",
  "package settings",
  "parameter validation",
  "pytest",
  "string extraction",
  "test utilities",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Other Audience",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Typing :: Typed",
]
urls = { Donate = "https://www.patreon.com/integrated", Homepage = "https://github.com/hunterhogan/hunterMakesPy", Issues = "https://github.com/hunterhogan/hunterMakesPy/issues", Repository = "https://github.com/hunterhogan/hunterMakesPy" }
dependencies = [
  "autoflake",
  "charset_normalizer",
  "isort",
  "more_itertools",
  "numpy",
]
optional-dependencies = { development = [
  "setuptools-scm",
], testing = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
] }

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.coverage]
report = { exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == \"__main__\":",
], ignore_errors = false }
run = { branch = true, concurrency = [
  "multiprocessing",
], data_file = "tests/coverage/.coverage", omit = [
  "tests/*",
  "hunterMakesPy/tests/*",
  "hunterMakesPy/pytestForYourUse.py",
], parallel = true, source = [
  ".",
] }

[tool.pytest.ini_options]
addopts = ["--color=auto"]
log_auto_indent = true
testpaths = ["hunterMakesPy/tests"]

[tool.setuptools]
package-data = { "*" = ["py.typed"] }
packages = { find = {  } }

[tool.updateCitation]
filenameCitationDOTcff = "CITATION.cff"
pathFilenameCitationSSOT = "citations/CITATION.cff"

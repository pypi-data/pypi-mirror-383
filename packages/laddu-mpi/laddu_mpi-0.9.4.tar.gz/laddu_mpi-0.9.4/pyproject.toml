[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "laddu-mpi"
requires-python = ">=3.7"
classifiers = [
  "Programming Language :: Rust",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dynamic = ["version", "license", "description", "readme"]
dependencies = [
  "numpy",
  "docopt-ng",
  "uproot",
  "pandas",
  "polars",
]

[project.urls]
Documentation = "https://laddu.readthedocs.io/en/stable/"

[project.scripts]
amptools-to-laddu = "laddu:convert.run"

[project.optional-dependencies]
tests = ["pytest"]
docs = ["sphinx", "sphinx-rtd-theme", "sphinx-copybutton"]

[tool.maturin]
bindings = "pyo3"
strip = true
profile = "dist-release"
sdist-include = ['../Cargo.lock']
features = ["mpi"]
manifest-path = "py-laddu-mpi/Cargo.toml"

[tool.ruff]
target-version = "py37"
indent-width = 4
line-length = 90
fix = true
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

[tool.ruff.lint]
select = [
  "ANN",    # flake8-annotations
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "D",      # flake8-docstrings
  "E",      # pycodestyle
  "EM",     # flake8-errmsg
  "F",      # pyflakes
  "FA",     # flake8-future-annotations
  "FBT001", # flake8-boolean-trap
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INT",    # flake8-gettext
  "PERF",   # perflint
  "PIE",    # flake8-pie
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "PYI",    # flake8-pyi
  "RUF",    # ruff-specific rules
  "SIM",    # flake8-simplify
  "TCH",    # flake8-type-checking
  "TD",     # flake8-todos
  "TID",    # flake8-tidy-imports
  "TRY",    # tryceratops
  "UP",     # pyupgrade
  "W",      # pycodestyle
]
ignore = [
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  # ------------------------------------------------------------------
  "ANN401", # Dynamically typed expressions (Any) are disallowed
  "E501",   # Line length regulated by formatter
  "PT011",  # pytest.raises is too broad, set match or use a more specific exception
  "PYI041", # Use float instead of int | float
  "RUF005", # Consider expression instead of concatenation
  "SIM102", # Use a single `if` statement instead of nested `if` statements
  "SIM114", # Combine `if` branches
  "TD002",  # Missing author in TODO
  "TD003",  # Missing issue link on the line following this TODO
  "TRY003", # Avoid specifying long messages outside the exception class
  "PYI021", # Avoid docstring in stub file
  "E741",   # Ambiguous variable names
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
line-ending = "auto"
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.coverage.run]
source = ["laddu"]
omit = ["tests/*", "docs/*"]
branch = true

[tool.coverage.report]
fail_under = 85
skip_covered = true
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "except ImportError",
  "if TYPE_CHECKING:",
  "from typing_extensions import ",
]

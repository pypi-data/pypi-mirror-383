# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import typing

class KMeans:
    def __new__(cls, data:typing.Sequence[typing.Sequence[builtins.float]]) -> KMeans: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...

class KMedianL1:
    def __new__(cls, data:typing.Sequence[typing.Sequence[builtins.float]]) -> KMedianL1: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...

class KMedianL2:
    def __new__(cls, data:typing.Sequence[typing.Sequence[builtins.float]]) -> KMedianL2: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...

class KMedianL2Squared:
    def __new__(cls, data:typing.Sequence[typing.Sequence[builtins.float]]) -> KMedianL2Squared: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...

class UnweightedKMedianL1:
    def __new__(cls, data:typing.Sequence[tuple[builtins.float, typing.Sequence[builtins.float]]]) -> UnweightedKMedianL1: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...

class UnweightedKMedianL2:
    def __new__(cls, data:typing.Sequence[tuple[builtins.float, typing.Sequence[builtins.float]]]) -> UnweightedKMedianL2: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...

class UnweightedKMedianL2Squared:
    def __new__(cls, data:typing.Sequence[tuple[builtins.float, typing.Sequence[builtins.float]]]) -> UnweightedKMedianL2Squared: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...

class WeightedKMeans:
    def __new__(cls, data:typing.Sequence[tuple[builtins.float, typing.Sequence[builtins.float]]]) -> WeightedKMeans: ...
    def price_of_hierarchy(self) -> builtins.float: ...
    def price_of_greedy(self) -> builtins.float: ...


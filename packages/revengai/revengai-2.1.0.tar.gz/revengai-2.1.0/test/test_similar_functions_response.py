# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.similar_functions_response import SimilarFunctionsResponse

class TestSimilarFunctionsResponse(unittest.TestCase):
    """SimilarFunctionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SimilarFunctionsResponse:
        """Test SimilarFunctionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SimilarFunctionsResponse`
        """
        model = SimilarFunctionsResponse()
        if include_optional:
            return SimilarFunctionsResponse(
                function_id = 56,
                function_name = '',
                binary_id = 56,
                binary_name = '',
                distance = 1.337,
                embedding_3d = [
                    1.337
                    ],
                embedding_1d = [
                    1.337
                    ],
                sha_256_hash = ''
            )
        else:
            return SimilarFunctionsResponse(
                function_id = 56,
                function_name = '',
                binary_id = 56,
                binary_name = '',
                distance = 1.337,
                embedding_3d = [
                    1.337
                    ],
                embedding_1d = [
                    1.337
                    ],
                sha_256_hash = '',
        )
        """

    def testSimilarFunctionsResponse(self):
        """Test SimilarFunctionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.nearest_neighbor import NearestNeighbor

class TestNearestNeighbor(unittest.TestCase):
    """NearestNeighbor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NearestNeighbor:
        """Test NearestNeighbor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NearestNeighbor`
        """
        model = NearestNeighbor()
        if include_optional:
            return NearestNeighbor(
                distance = 1.337,
                nearest_neighbor_analysis_id = 56,
                nearest_neighbor_analysis_name = '',
                nearest_neighbor_function_name = '',
                nearest_neighbor_function_name_mangled = '',
                nearest_neighbor_binary_id = 56,
                nearest_neighbor_sha_256_hash = '',
                nearest_neighbor_debug = True
            )
        else:
            return NearestNeighbor(
                distance = 1.337,
                nearest_neighbor_analysis_id = 56,
                nearest_neighbor_analysis_name = '',
                nearest_neighbor_function_name = '',
                nearest_neighbor_function_name_mangled = '',
                nearest_neighbor_binary_id = 56,
                nearest_neighbor_sha_256_hash = '',
                nearest_neighbor_debug = True,
        )
        """

    def testNearestNeighbor(self):
        """Test NearestNeighbor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

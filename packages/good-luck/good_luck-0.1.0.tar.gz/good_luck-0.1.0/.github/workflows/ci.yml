name: ci

on:
  push:
    branches: ['main', 'test-me-*']
    tags: ['v*']
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  UV_LOCKED: 1
  UV_NO_SYNC: 1

defaults:
  run:
    shell: bash

jobs:
  release:
    if: ${{ github.ref_type == 'tag' }}

    name: Release to PyPI
    runs-on: ubuntu-latest
    environment: pypi

    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Validate tag
        id: validate-tag
        run: |
          set -CETeuxo pipefail

          project_version=v$(uvx --with hatch-vcs hatchling version)
          tag=${GITHUB_REF#refs/tags/}

          [[ "$tag" == "$project_version" ]] || {
            echo "Tag $tag does not match project version $project_version"
            exit 1
          }

      - name: Build package distributions
        id: build
        run: uv build --out-dir dist

      - name: Publish package distributions
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: 'Create a GitHub release'
        uses: ncipollo/release-action@v1.18.0
        with:
          prerelease: false
          draft: false
          makeLatest: true
          tag: "${{ github.ref_name }}"
          name: "${{ github.ref_name }}"
          generateReleaseNotes: true

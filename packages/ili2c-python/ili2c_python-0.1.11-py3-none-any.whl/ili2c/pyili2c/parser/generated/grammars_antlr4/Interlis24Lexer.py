# Generated from Interlis24Lexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,45,342,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,
        2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,
        1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,22,
        1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
        1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,
        1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,
        5,38,291,8,38,10,38,12,38,294,9,38,1,39,1,39,5,39,298,8,39,10,39,
        12,39,301,9,39,1,39,1,39,1,40,4,40,306,8,40,11,40,12,40,307,1,41,
        4,41,311,8,41,11,41,12,41,312,1,41,1,41,1,42,1,42,5,42,319,8,42,
        10,42,12,42,322,9,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,5,43,331,
        8,43,10,43,12,43,334,9,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,332,
        0,45,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
        24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
        35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,1,
        0,6,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,10,10,
        13,13,34,34,1,0,48,57,3,0,9,10,13,13,32,32,2,0,10,10,13,13,348,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
        0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
        0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
        0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,
        0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
        0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,
        0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,1,91,1,
        0,0,0,3,100,1,0,0,0,5,106,1,0,0,0,7,112,1,0,0,0,9,118,1,0,0,0,11,
        128,1,0,0,0,13,135,1,0,0,0,15,144,1,0,0,0,17,155,1,0,0,0,19,165,
        1,0,0,0,21,174,1,0,0,0,23,182,1,0,0,0,25,190,1,0,0,0,27,197,1,0,
        0,0,29,209,1,0,0,0,31,213,1,0,0,0,33,221,1,0,0,0,35,224,1,0,0,0,
        37,233,1,0,0,0,39,237,1,0,0,0,41,240,1,0,0,0,43,248,1,0,0,0,45,250,
        1,0,0,0,47,252,1,0,0,0,49,254,1,0,0,0,51,256,1,0,0,0,53,258,1,0,
        0,0,55,260,1,0,0,0,57,262,1,0,0,0,59,264,1,0,0,0,61,266,1,0,0,0,
        63,269,1,0,0,0,65,271,1,0,0,0,67,274,1,0,0,0,69,279,1,0,0,0,71,281,
        1,0,0,0,73,283,1,0,0,0,75,285,1,0,0,0,77,288,1,0,0,0,79,295,1,0,
        0,0,81,305,1,0,0,0,83,310,1,0,0,0,85,316,1,0,0,0,87,325,1,0,0,0,
        89,340,1,0,0,0,91,92,5,73,0,0,92,93,5,78,0,0,93,94,5,84,0,0,94,95,
        5,69,0,0,95,96,5,82,0,0,96,97,5,76,0,0,97,98,5,73,0,0,98,99,5,83,
        0,0,99,2,1,0,0,0,100,101,5,77,0,0,101,102,5,79,0,0,102,103,5,68,
        0,0,103,104,5,69,0,0,104,105,5,76,0,0,105,4,1,0,0,0,106,107,5,84,
        0,0,107,108,5,79,0,0,108,109,5,80,0,0,109,110,5,73,0,0,110,111,5,
        67,0,0,111,6,1,0,0,0,112,113,5,67,0,0,113,114,5,76,0,0,114,115,5,
        65,0,0,115,116,5,83,0,0,116,117,5,83,0,0,117,8,1,0,0,0,118,119,5,
        83,0,0,119,120,5,84,0,0,120,121,5,82,0,0,121,122,5,85,0,0,122,123,
        5,67,0,0,123,124,5,84,0,0,124,125,5,85,0,0,125,126,5,82,0,0,126,
        127,5,69,0,0,127,10,1,0,0,0,128,129,5,68,0,0,129,130,5,79,0,0,130,
        131,5,77,0,0,131,132,5,65,0,0,132,133,5,73,0,0,133,134,5,78,0,0,
        134,12,1,0,0,0,135,136,5,70,0,0,136,137,5,85,0,0,137,138,5,78,0,
        0,138,139,5,67,0,0,139,140,5,84,0,0,140,141,5,73,0,0,141,142,5,79,
        0,0,142,143,5,78,0,0,143,14,1,0,0,0,144,145,5,67,0,0,145,146,5,79,
        0,0,146,147,5,78,0,0,147,148,5,83,0,0,148,149,5,84,0,0,149,150,5,
        82,0,0,150,151,5,65,0,0,151,152,5,73,0,0,152,153,5,78,0,0,153,154,
        5,84,0,0,154,16,1,0,0,0,155,156,5,77,0,0,156,157,5,65,0,0,157,158,
        5,78,0,0,158,159,5,68,0,0,159,160,5,65,0,0,160,161,5,84,0,0,161,
        162,5,79,0,0,162,163,5,82,0,0,163,164,5,89,0,0,164,18,1,0,0,0,165,
        166,5,65,0,0,166,167,5,66,0,0,167,168,5,83,0,0,168,169,5,84,0,0,
        169,170,5,82,0,0,170,171,5,65,0,0,171,172,5,67,0,0,172,173,5,84,
        0,0,173,20,1,0,0,0,174,175,5,73,0,0,175,176,5,77,0,0,176,177,5,80,
        0,0,177,178,5,79,0,0,178,179,5,82,0,0,179,180,5,84,0,0,180,181,5,
        83,0,0,181,22,1,0,0,0,182,183,5,69,0,0,183,184,5,88,0,0,184,185,
        5,84,0,0,185,186,5,69,0,0,186,187,5,78,0,0,187,188,5,68,0,0,188,
        189,5,83,0,0,189,24,1,0,0,0,190,191,5,85,0,0,191,192,5,78,0,0,192,
        193,5,73,0,0,193,194,5,81,0,0,194,195,5,85,0,0,195,196,5,69,0,0,
        196,26,1,0,0,0,197,198,5,65,0,0,198,199,5,83,0,0,199,200,5,83,0,
        0,200,201,5,79,0,0,201,202,5,67,0,0,202,203,5,73,0,0,203,204,5,65,
        0,0,204,205,5,84,0,0,205,206,5,73,0,0,206,207,5,79,0,0,207,208,5,
        78,0,0,208,28,1,0,0,0,209,210,5,66,0,0,210,211,5,65,0,0,211,212,
        5,71,0,0,212,30,1,0,0,0,213,214,5,68,0,0,214,215,5,69,0,0,215,216,
        5,80,0,0,216,217,5,69,0,0,217,218,5,78,0,0,218,219,5,68,0,0,219,
        220,5,83,0,0,220,32,1,0,0,0,221,222,5,79,0,0,222,223,5,78,0,0,223,
        34,1,0,0,0,224,225,5,69,0,0,225,226,5,88,0,0,226,227,5,84,0,0,227,
        228,5,69,0,0,228,229,5,82,0,0,229,230,5,78,0,0,230,231,5,65,0,0,
        231,232,5,76,0,0,232,36,1,0,0,0,233,234,5,69,0,0,234,235,5,78,0,
        0,235,236,5,68,0,0,236,38,1,0,0,0,237,238,5,65,0,0,238,239,5,84,
        0,0,239,40,1,0,0,0,240,241,5,86,0,0,241,242,5,69,0,0,242,243,5,82,
        0,0,243,244,5,83,0,0,244,245,5,73,0,0,245,246,5,79,0,0,246,247,5,
        78,0,0,247,42,1,0,0,0,248,249,5,61,0,0,249,44,1,0,0,0,250,251,5,
        59,0,0,251,46,1,0,0,0,252,253,5,58,0,0,253,48,1,0,0,0,254,255,5,
        46,0,0,255,50,1,0,0,0,256,257,5,40,0,0,257,52,1,0,0,0,258,259,5,
        41,0,0,259,54,1,0,0,0,260,261,5,44,0,0,261,56,1,0,0,0,262,263,5,
        91,0,0,263,58,1,0,0,0,264,265,5,93,0,0,265,60,1,0,0,0,266,267,5,
        46,0,0,267,268,5,46,0,0,268,62,1,0,0,0,269,270,5,42,0,0,270,64,1,
        0,0,0,271,272,5,79,0,0,272,273,5,70,0,0,273,66,1,0,0,0,274,275,5,
        76,0,0,275,276,5,73,0,0,276,277,5,83,0,0,277,278,5,84,0,0,278,68,
        1,0,0,0,279,280,5,123,0,0,280,70,1,0,0,0,281,282,5,125,0,0,282,72,
        1,0,0,0,283,284,5,62,0,0,284,74,1,0,0,0,285,286,5,45,0,0,286,287,
        5,45,0,0,287,76,1,0,0,0,288,292,7,0,0,0,289,291,7,1,0,0,290,289,
        1,0,0,0,291,294,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,78,1,
        0,0,0,294,292,1,0,0,0,295,299,5,34,0,0,296,298,8,2,0,0,297,296,1,
        0,0,0,298,301,1,0,0,0,299,297,1,0,0,0,299,300,1,0,0,0,300,302,1,
        0,0,0,301,299,1,0,0,0,302,303,5,34,0,0,303,80,1,0,0,0,304,306,7,
        3,0,0,305,304,1,0,0,0,306,307,1,0,0,0,307,305,1,0,0,0,307,308,1,
        0,0,0,308,82,1,0,0,0,309,311,7,4,0,0,310,309,1,0,0,0,311,312,1,0,
        0,0,312,310,1,0,0,0,312,313,1,0,0,0,313,314,1,0,0,0,314,315,6,41,
        0,0,315,84,1,0,0,0,316,320,5,33,0,0,317,319,8,5,0,0,318,317,1,0,
        0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,1,0,0,0,321,323,1,0,
        0,0,322,320,1,0,0,0,323,324,6,42,0,0,324,86,1,0,0,0,325,326,5,47,
        0,0,326,327,5,42,0,0,327,332,1,0,0,0,328,331,9,0,0,0,329,331,7,5,
        0,0,330,328,1,0,0,0,330,329,1,0,0,0,331,334,1,0,0,0,332,333,1,0,
        0,0,332,330,1,0,0,0,333,335,1,0,0,0,334,332,1,0,0,0,335,336,5,42,
        0,0,336,337,5,47,0,0,337,338,1,0,0,0,338,339,6,43,0,0,339,88,1,0,
        0,0,340,341,9,0,0,0,341,90,1,0,0,0,8,0,292,299,307,312,320,330,332,
        1,6,0,0
    ]

class Interlis24Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INTERLIS = 1
    MODEL = 2
    TOPIC = 3
    CLASS = 4
    STRUCTURE = 5
    DOMAIN = 6
    FUNCTION = 7
    CONSTRAINT = 8
    MANDATORY = 9
    ABSTRACT = 10
    IMPORTS = 11
    EXTENDS = 12
    UNIQUE = 13
    ASSOCIATION = 14
    BAG = 15
    DEPENDS = 16
    ON = 17
    EXTERNAL = 18
    END = 19
    AT = 20
    VERSION = 21
    EQUALS = 22
    SEMICOLON = 23
    COLON = 24
    DOT = 25
    LPAREN = 26
    RPAREN = 27
    COMMA = 28
    LSQUARE = 29
    RSQUARE = 30
    RANGE = 31
    STAR = 32
    OF = 33
    LIST = 34
    LBRACE = 35
    RBRACE = 36
    GT = 37
    ASSOC_ARROW = 38
    ID = 39
    STRING = 40
    NUMBER = 41
    WS = 42
    LINE_COMMENT = 43
    BLOCK_COMMENT = 44
    ANY = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'INTERLIS'", "'MODEL'", "'TOPIC'", "'CLASS'", "'STRUCTURE'", 
            "'DOMAIN'", "'FUNCTION'", "'CONSTRAINT'", "'MANDATORY'", "'ABSTRACT'", 
            "'IMPORTS'", "'EXTENDS'", "'UNIQUE'", "'ASSOCIATION'", "'BAG'", 
            "'DEPENDS'", "'ON'", "'EXTERNAL'", "'END'", "'AT'", "'VERSION'", 
            "'='", "';'", "':'", "'.'", "'('", "')'", "','", "'['", "']'", 
            "'..'", "'*'", "'OF'", "'LIST'", "'{'", "'}'", "'>'", "'--'" ]

    symbolicNames = [ "<INVALID>",
            "INTERLIS", "MODEL", "TOPIC", "CLASS", "STRUCTURE", "DOMAIN", 
            "FUNCTION", "CONSTRAINT", "MANDATORY", "ABSTRACT", "IMPORTS", 
            "EXTENDS", "UNIQUE", "ASSOCIATION", "BAG", "DEPENDS", "ON", 
            "EXTERNAL", "END", "AT", "VERSION", "EQUALS", "SEMICOLON", "COLON", 
            "DOT", "LPAREN", "RPAREN", "COMMA", "LSQUARE", "RSQUARE", "RANGE", 
            "STAR", "OF", "LIST", "LBRACE", "RBRACE", "GT", "ASSOC_ARROW", 
            "ID", "STRING", "NUMBER", "WS", "LINE_COMMENT", "BLOCK_COMMENT", 
            "ANY" ]

    ruleNames = [ "INTERLIS", "MODEL", "TOPIC", "CLASS", "STRUCTURE", "DOMAIN", 
                  "FUNCTION", "CONSTRAINT", "MANDATORY", "ABSTRACT", "IMPORTS", 
                  "EXTENDS", "UNIQUE", "ASSOCIATION", "BAG", "DEPENDS", 
                  "ON", "EXTERNAL", "END", "AT", "VERSION", "EQUALS", "SEMICOLON", 
                  "COLON", "DOT", "LPAREN", "RPAREN", "COMMA", "LSQUARE", 
                  "RSQUARE", "RANGE", "STAR", "OF", "LIST", "LBRACE", "RBRACE", 
                  "GT", "ASSOC_ARROW", "ID", "STRING", "NUMBER", "WS", "LINE_COMMENT", 
                  "BLOCK_COMMENT", "ANY" ]

    grammarFileName = "Interlis24Lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



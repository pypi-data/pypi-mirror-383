"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([["13470"],{24973:function(t,e,s){s.r(e),s.d(e,{CastManager:function(){return h},getCastManager:function(){return u}});s(46852),s(35748),s(99342),s(54323),s(95013),s(5934);var n=s(68289);let a;var i=s(14146),r=s(92698),o=s(2659);let c;class h{addEventListener(t,e){return t in this._eventListeners||(this._eventListeners[t]=[]),this._eventListeners[t].push(e),()=>{this._eventListeners[t].splice(this._eventListeners[t].indexOf(e))}}get castConnectedToOurHass(){return void 0!==this.status&&void 0!==this.auth&&this.status.connected&&(this.status.hassUrl===this.auth.data.hassUrl||i.oS&&this.status.hassUrl===r.I)}sendMessage(t){this.castSession.sendMessage(i.Oc,t)}get castState(){return this.castContext.getCastState()}get castContext(){return cast.framework.CastContext.getInstance()}get castSession(){return this.castContext.getCurrentSession()}requestSession(){return this.castContext.requestSession()}_fireEvent(t){for(const e of this._eventListeners[t]||[])e()}_receiveMessage(t){"receiver_status"===t.type&&(this.status=t,this._fireEvent("connection-changed"))}_attachMessageListener(){this.castSession.addMessageListener(i.Oc,(t,e)=>this._receiveMessage(JSON.parse(e)))}constructor(t){this._eventListeners={},this._sessionStateChanged=t=>{"SESSION_STARTED"===t.sessionState||"SESSION_RESUMED"===t.sessionState?(this.auth?(0,o.oK)(this,this.auth):this.sendMessage({type:"get_status"}),this._attachMessageListener()):"SESSION_ENDED"===t.sessionState&&(this.status=void 0,this._fireEvent("connection-changed"))},this._castStateChanged=t=>{this._fireEvent("state-changed")},this.auth=t;const e=this.castContext;e.setOptions({receiverApplicationId:i.gk,autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED}),e.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED,this._sessionStateChanged),e.addEventListener(cast.framework.CastContextEventType.CAST_STATE_CHANGED,this._castStateChanged)}}const u=t=>(c||(c=(()=>{if(a)return a;a=new Promise(t=>{window.__onGCastApiAvailable=t});const t=document.createElement("div");return t.id="cast",document.body.append(t),(0,n.kG)("https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"),a})().then(e=>{if(!e)throw new Error("No Cast API available");return new h(t)})),c)},68289:function(t,e,s){s.d(e,{Vw:function(){return r},kG:function(){return i},y6:function(){return a}});s(5934);const n=(t,e,s)=>new Promise((n,a)=>{const i=document.createElement(t);let r="src",o="body";switch(i.onload=()=>n(e),i.onerror=()=>a(e),t){case"script":i.async=!0,s&&(i.type=s);break;case"link":i.type="text/css",i.rel="stylesheet",r="href",o="head"}i[r]=e,document[o].appendChild(i)}),a=t=>n("link",t),i=t=>n("script",t),r=t=>n("script",t,"module")}}]);
//# sourceMappingURL=13470.63d4fe830298ba33.js.map
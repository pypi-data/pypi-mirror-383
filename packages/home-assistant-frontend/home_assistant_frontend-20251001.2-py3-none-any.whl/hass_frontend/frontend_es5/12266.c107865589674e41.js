"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([["12266"],{29752:function(t,a,e){e.d(a,{l:function(){return o}});e(5934);const o=async(t,a)=>{if(navigator.clipboard)try{return void(await navigator.clipboard.writeText(t))}catch(i){}const e=null!=a?a:document.body,o=document.createElement("textarea");o.value=t,e.appendChild(o),o.select(),document.execCommand("copy"),e.removeChild(o)}},56977:function(t,a,e){e.a(t,async function(t,o){try{e.r(a);e(35748),e(65315),e(37089),e(36874),e(5934),e(67579),e(1485),e(95013);var i=e(69868),s=e(84922),n=e(11991),r=e(44017),l=e(29752),h=e(17372),c=e(68940),d=e(91197),p=t([h]);h=(p.then?(await p)():p)[0];let u,b,m,_,y=t=>t;class f extends s.WF{async showDialog(t){this._params=t}closeDialog(){return this._params=void 0,(0,r.r)(this,"dialog-closed",{dialog:this.localName}),!0}showDataAsHex(t){var a;return(null!==(a=t.match(/.{2}/g))&&void 0!==a?a:[]).map(t=>`0x${t.toUpperCase()}`).join(" ")}async _copyToClipboard(){this._params&&(await(0,l.l)(JSON.stringify(this._params.entry)),(0,d.P)(this,{message:this.hass.localize("ui.common.copied_clipboard")}))}render(){return this._params?(0,s.qy)(u||(u=y` <ha-dialog open @closed="${0}" .heading="${0}"> <p> <b>${0}</b>: ${0} <br> <b>${0}</b>: ${0} <br> <b>${0}</b>: ${0} </p> <h3> ${0} </h3> <h4> ${0} </h4> <table width="100%"> <tbody> ${0} </tbody> </table> <h4>${0}</h4> <table width="100%"> <tbody> ${0} </tbody> </table> <h4> ${0} </h4> <table width="100%"> <tbody> ${0} </tbody> </table> <ha-button appearance="plain" slot="secondaryAction" @click="${0}">${0}</ha-button> </ha-dialog> `),this.closeDialog,(0,c.l)(this.hass,this.hass.localize("ui.panel.config.bluetooth.device_information")),this.hass.localize("ui.panel.config.bluetooth.address"),this._params.entry.address,this.hass.localize("ui.panel.config.bluetooth.name"),this._params.entry.name,this.hass.localize("ui.panel.config.bluetooth.source"),this._params.entry.source,this.hass.localize("ui.panel.config.bluetooth.advertisement_data"),this.hass.localize("ui.panel.config.bluetooth.manufacturer_data"),Object.entries(this._params.entry.manufacturer_data).map(([t,a])=>(0,s.qy)(b||(b=y` <tr> <td><b>${0}</b></td> <td>${0}</td> </tr> `),t,this.showDataAsHex(a))),this.hass.localize("ui.panel.config.bluetooth.service_data"),Object.entries(this._params.entry.service_data).map(([t,a])=>(0,s.qy)(m||(m=y` <tr> <td><b>${0}</b></td> <td>${0}</td> </tr> `),t,this.showDataAsHex(a))),this.hass.localize("ui.panel.config.bluetooth.service_uuids"),this._params.entry.service_uuids.map(t=>(0,s.qy)(_||(_=y` <tr> <td>${0}</td> </tr> `),t)),this._copyToClipboard,this.hass.localize("ui.panel.config.bluetooth.copy_to_clipboard")):s.s6}}(0,i.__decorate)([(0,n.MZ)({attribute:!1})],f.prototype,"hass",void 0),(0,i.__decorate)([(0,n.wk)()],f.prototype,"_params",void 0),f=(0,i.__decorate)([(0,n.EM)("dialog-bluetooth-device-info")],f),o()}catch(u){o(u)}})}}]);
//# sourceMappingURL=12266.c107865589674e41.js.map
export const __webpack_id__="35572";export const __webpack_ids__=["35572"];export const __webpack_modules__={91521:function(e,t,a){a.d(t,{JW:()=>y,OW:()=>u,PO:()=>_,VN:()=>c,XG:()=>p,eB:()=>m,gZ:()=>v,hM:()=>l,k2:()=>r,lU:()=>h,nc:()=>f,vX:()=>g,z1:()=>o});a(65315),a(837),a(84136),a(37089),a(88238),a(34536),a(16257),a(20152),a(44711),a(72108),a(77030);var s=a(77240),i=a(36322),n=a(26946),d=a(87168),o=function(e){return e.THREAD="thread",e.WIFI="wifi",e.ETHERNET="ethernet",e.UNKNOWN="unknown",e}({});const r=e=>e.auth.external?.config.canCommissionMatter,c=async e=>{if((0,n.x)(e,"thread")){const t=(await(0,d.sL)(e)).datasets.find(e=>e.preferred);if(t)return e.auth.external.fireMessage({type:"matter/commission",payload:{active_operational_dataset:(await(0,d.dy)(e,t.dataset_id)).tlv,border_agent_id:t.preferred_border_agent_id,mac_extended_address:t.preferred_extended_address,extended_pan_id:t.extended_pan_id}})}return e.auth.external.fireMessage({type:"matter/commission"})},l=(e,t)=>{let a;const n=(0,i.Ag)(e.connection,e=>{if(!a)return void(a=new Set(Object.values(e).filter(e=>e.identifiers.find(e=>"matter"===e[0])).map(e=>e.id)));const i=Object.values(e).filter(e=>e.identifiers.find(e=>"matter"===e[0])&&!a.has(e.id));i.length&&(n(),a=void 0,t?.(),(0,s.o)(`/config/devices/device/${i[0].id}`))});return()=>{n(),a=void 0}},_=(e,t)=>e.callWS({type:"matter/commission",code:t}),p=(e,t)=>e.callWS({type:"matter/commission_on_network",pin:t}),h=(e,t,a)=>e.callWS({type:"matter/set_wifi_credentials",network_name:t,password:a}),v=(e,t)=>e.callWS({type:"matter/set_thread",thread_operation_dataset:t}),m=(e,t)=>e.callWS({type:"matter/node_diagnostics",device_id:t}),u=(e,t)=>e.callWS({type:"matter/ping_node",device_id:t}),f=(e,t)=>e.callWS({type:"matter/open_commissioning_window",device_id:t}),g=(e,t,a)=>e.callWS({type:"matter/remove_matter_fabric",device_id:t,fabric_index:a}),y=(e,t)=>e.callWS({type:"matter/interview_node",device_id:t})},87168:function(e,t,a){a.d(t,{It:()=>o,W4:()=>c,dy:()=>d,l1:()=>l,rY:()=>r,sL:()=>n,wm:()=>i});class s{processEvent(e){return"router_discovered"===e.type?this.routers[e.key]=e.data:"router_removed"===e.type&&delete this.routers[e.key],Object.values(this.routers)}constructor(){this.routers={}}}const i=(e,t)=>{const a=new s;return e.connection.subscribeMessage(e=>t(a.processEvent(e)),{type:"thread/discover_routers"})},n=e=>e.callWS({type:"thread/list_datasets"}),d=(e,t)=>e.callWS({type:"thread/get_dataset_tlv",dataset_id:t}),o=(e,t,a)=>e.callWS({type:"thread/add_dataset_tlv",source:t,tlv:a}),r=(e,t)=>e.callWS({type:"thread/delete_dataset",dataset_id:t}),c=(e,t)=>e.callWS({type:"thread/set_preferred_dataset",dataset_id:t}),l=(e,t,a,s)=>e.callWS({type:"thread/set_preferred_border_agent",dataset_id:t,border_agent_id:a,extended_address:s})},26431:function(e,t,a){a.r(t),a.d(t,{HaDeviceInfoMatter:()=>c});a(65315),a(37089);var s=a(69868),i=a(84922),n=a(22019),d=(a(16520),a(91521)),o=a(40328),r=a(50809);class c extends((0,o.E)(i.WF)){willUpdate(e){super.willUpdate(e),e.has("device")&&this._fetchNodeDetails()}async _fetchNodeDetails(){if(this.device&&null===this.device.via_device_id)try{this._nodeDiagnostics=await(0,d.eB)(this.hass,this.device.id)}catch(e){this._nodeDiagnostics=void 0}}render(){return this._nodeDiagnostics?i.qy` <ha-expansion-panel .header="${this.hass.localize("ui.panel.config.matter.device_info.device_info")}"> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.node_id")}:</span> <span class="value">${this._nodeDiagnostics.node_id}</span> </div> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.network_type")}:</span> <span class="value">${this.hass.localize(`ui.panel.config.matter.network_type.${this._nodeDiagnostics.network_type}`)}</span> </div> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.node_type")}:</span> <span class="value">${this.hass.localize(`ui.panel.config.matter.node_type.${this._nodeDiagnostics.node_type}`)}</span> </div> ${this._nodeDiagnostics.network_name?i.qy` <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.network_name")}:</span> <span class="value">${this._nodeDiagnostics.network_name}</span> </div> `:i.s6} ${this._nodeDiagnostics.mac_address?i.qy` <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.mac_address")}:</span> <span class="value">${this._nodeDiagnostics.mac_address}</span> </div> `:i.s6} <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.ip_adresses")}:</span> <span class="value">${this._nodeDiagnostics.ip_adresses.map(e=>i.qy`${e}<br>`)}</span> </div> </ha-expansion-panel> `:i.s6}static get styles(){return[r.RF,i.AH`h4{margin-bottom:4px}div{word-break:break-all;margin-top:2px}.row{display:flex;justify-content:space-between;padding-bottom:4px}.value{text-align:right}ha-expansion-panel{margin:8px -16px 0;--expansion-panel-summary-padding:0 16px;--expansion-panel-content-padding:0 16px;--ha-card-border-radius:0px}`]}}(0,s.__decorate)([(0,n.MZ)({attribute:!1})],c.prototype,"hass",void 0),(0,s.__decorate)([(0,n.MZ)({attribute:!1})],c.prototype,"device",void 0),(0,s.__decorate)([(0,n.wk)()],c.prototype,"_nodeDiagnostics",void 0),c=(0,s.__decorate)([(0,n.EM)("ha-device-info-matter")],c)}};
//# sourceMappingURL=35572.7f614636ba861972.js.map
"""
    ai/h2o/securestore/v1/oauth_client.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from h2o_secure_store.gen.api_client import ApiClient, Endpoint as _Endpoint
from h2o_secure_store.gen.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from h2o_secure_store.gen.model.rpc_status import RpcStatus
from h2o_secure_store.gen.model.v1_create_secret_version_response import V1CreateSecretVersionResponse
from h2o_secure_store.gen.model.v1_get_secret_version_response import V1GetSecretVersionResponse
from h2o_secure_store.gen.model.v1_list_secret_versions_response import V1ListSecretVersionsResponse
from h2o_secure_store.gen.model.v1_reveal_secret_version_value_response import V1RevealSecretVersionValueResponse
from h2o_secure_store.gen.model.v1_secret_version import V1SecretVersion


class SecretVersionServiceApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.secret_version_service_create_secret_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1CreateSecretVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/versions',
                'operation_id': 'secret_version_service_create_secret_version',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'secret_version',
                ],
                'required': [
                    'parent',
                    'secret_version',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/secrets\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'secret_version':
                        (V1SecretVersion,),
                },
                'attribute_map': {
                    'parent': 'parent',
                },
                'location_map': {
                    'parent': 'path',
                    'secret_version': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.secret_version_service_get_secret_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1GetSecretVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name_2}',
                'operation_id': 'secret_version_service_get_secret_version',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_2',
                ],
                'required': [
                    'name_2',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_2',
                ]
            },
            root_map={
                'validations': {
                    ('name_2',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/secrets\/[^\/]+\/versions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_2':
                        (str,),
                },
                'attribute_map': {
                    'name_2': 'name_2',
                },
                'location_map': {
                    'name_2': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.secret_version_service_list_secret_versions_endpoint = _Endpoint(
            settings={
                'response_type': (V1ListSecretVersionsResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/versions',
                'operation_id': 'secret_version_service_list_secret_versions',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'page_size',
                    'page_token',
                ],
                'required': [
                    'parent',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/secrets\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'page_size':
                        (int,),
                    'page_token':
                        (str,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'page_size': 'pageSize',
                    'page_token': 'pageToken',
                },
                'location_map': {
                    'parent': 'path',
                    'page_size': 'query',
                    'page_token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.secret_version_service_reveal_secret_version_value_endpoint = _Endpoint(
            settings={
                'response_type': (V1RevealSecretVersionValueResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name}:revealValue',
                'operation_id': 'secret_version_service_reveal_secret_version_value',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'name',
                ],
                'required': [
                    'name',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name',
                ]
            },
            root_map={
                'validations': {
                    ('name',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/secrets\/[^\/]+\/versions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name':
                        (str,),
                },
                'attribute_map': {
                    'name': 'name',
                },
                'location_map': {
                    'name': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def secret_version_service_create_secret_version(
        self,
        parent,
        secret_version,
        **kwargs
    ):
        """Creates a new SecretVersion containing secret data.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.secret_version_service_create_secret_version(parent, secret_version, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Required. The resource name of the Secret to associate with the SecretVersion. Format: `workspaces/*/secrets/*`  Authorization requires the following permission on the specified resource parent: * actions/securestore/versions/CREATE
            secret_version (V1SecretVersion): Required. The SecretVersion resource to create.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1CreateSecretVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        kwargs['secret_version'] = \
            secret_version
        return self.secret_version_service_create_secret_version_endpoint.call_with_http_info(**kwargs)

    def secret_version_service_get_secret_version(
        self,
        name_2,
        **kwargs
    ):
        """Gets metadata for a SecretVersion. \"workspaces/*/secrets/*/versions/latest\" is an alias for the most recently created SecretVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.secret_version_service_get_secret_version(name_2, async_req=True)
        >>> result = thread.get()

        Args:
            name_2 (str): Required. The resource name of the SecretVersion. Format: `secrets/*/versions/*`  `secrets/*/versions/latest` is an alias for the most recently created SecretVersion.  Authorization requires the following permission on the specified resource name: * `actions/securestore/versions/GET`

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1GetSecretVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_2'] = \
            name_2
        return self.secret_version_service_get_secret_version_endpoint.call_with_http_info(**kwargs)

    def secret_version_service_list_secret_versions(
        self,
        parent,
        **kwargs
    ):
        """Lists SecretVersions. This call does not return secret data.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.secret_version_service_list_secret_versions(parent, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Required. The resource name of the Secret associated with the SecretVersions to list. Format: `workspaces/*/secrets/*`  Authorization requires the following permission on the specified resource parent: * `actions/securestore/versions/LIST`

        Keyword Args:
            page_size (int): Optional. The maximum number of results to be returned in a single page. If unspecified (or set to 0), the server decides the number of results to return. If the number is greater than 1000, it is capped at 1000.. [optional]
            page_token (str): Optional. Pagination token, returned in `ListSecretVersions.next_page_token`.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1ListSecretVersionsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        return self.secret_version_service_list_secret_versions_endpoint.call_with_http_info(**kwargs)

    def secret_version_service_reveal_secret_version_value(
        self,
        name,
        **kwargs
    ):
        """Reveals the value of a SecretVersion. This call returns the secret data. \"workspaces/*/secrets/*/versions/latest\" is an alias for the most recently created SecretVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.secret_version_service_reveal_secret_version_value(name, async_req=True)
        >>> result = thread.get()

        Args:
            name (str): Required. The resource name of the Secret to associate with the SecretVersion. Format: `workspaces/*/secrets/*/versions/*`  `workspaces/*/secrets/*/versions/latest` is an alias to the most recently created SecretVersion.  Authorization requires the following permission on the specified resource parent: * actions/securestore/versions/REVEALVALUE

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1RevealSecretVersionValueResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name'] = \
            name
        return self.secret_version_service_reveal_secret_version_value_endpoint.call_with_http_info(**kwargs)


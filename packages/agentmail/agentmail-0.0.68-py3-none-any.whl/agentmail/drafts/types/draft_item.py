# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from ...inboxes.types.inbox_id import InboxId
from ...threads.types.thread_id import ThreadId
from .draft_attachments import DraftAttachments
from .draft_bcc import DraftBcc
from .draft_cc import DraftCc
from .draft_id import DraftId
from .draft_labels import DraftLabels
from .draft_preview import DraftPreview
from .draft_send_at import DraftSendAt
from .draft_send_status import DraftSendStatus
from .draft_subject import DraftSubject
from .draft_to import DraftTo
from .draft_updated_at import DraftUpdatedAt


class DraftItem(UncheckedBaseModel):
    inbox_id: InboxId
    thread_id: ThreadId
    draft_id: DraftId
    labels: DraftLabels
    to: typing.Optional[DraftTo] = None
    cc: typing.Optional[DraftCc] = None
    bcc: typing.Optional[DraftBcc] = None
    subject: typing.Optional[DraftSubject] = None
    preview: typing.Optional[DraftPreview] = None
    attachments: typing.Optional[DraftAttachments] = None
    send_status: typing.Optional[DraftSendStatus] = None
    send_at: typing.Optional[DraftSendAt] = None
    updated_at: DraftUpdatedAt

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

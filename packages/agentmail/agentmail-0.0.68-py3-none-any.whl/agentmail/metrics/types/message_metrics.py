# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .metric_timestamp import MetricTimestamp


class MessageMetrics(UncheckedBaseModel):
    sent: typing.Optional[typing.List[MetricTimestamp]] = pydantic.Field(default=None)
    """
    Timestamps when messages were sent.
    """

    delivered: typing.Optional[typing.List[MetricTimestamp]] = pydantic.Field(default=None)
    """
    Timestamps when messages were delivered.
    """

    bounced: typing.Optional[typing.List[MetricTimestamp]] = pydantic.Field(default=None)
    """
    Timestamps when messages bounced.
    """

    delayed: typing.Optional[typing.List[MetricTimestamp]] = pydantic.Field(default=None)
    """
    Timestamps when messages were delayed.
    """

    rejected: typing.Optional[typing.List[MetricTimestamp]] = pydantic.Field(default=None)
    """
    Timestamps when messages were rejected.
    """

    complained: typing.Optional[typing.List[MetricTimestamp]] = pydantic.Field(default=None)
    """
    Timestamps when messages received complaints.
    """

    received: typing.Optional[typing.List[MetricTimestamp]] = pydantic.Field(default=None)
    """
    Timestamps when messages were received.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

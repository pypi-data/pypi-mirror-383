# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .message_html import MessageHtml
from .message_labels import MessageLabels
from .message_subject import MessageSubject
from .message_text import MessageText
from .send_message_attachments import SendMessageAttachments
from .send_message_bcc import SendMessageBcc
from .send_message_cc import SendMessageCc
from .send_message_reply_to import SendMessageReplyTo
from .send_message_to import SendMessageTo


class SendMessageRequest(UncheckedBaseModel):
    labels: typing.Optional[MessageLabels] = None
    reply_to: typing.Optional[SendMessageReplyTo] = None
    to: typing.Optional[SendMessageTo] = None
    cc: typing.Optional[SendMessageCc] = None
    bcc: typing.Optional[SendMessageBcc] = None
    subject: typing.Optional[MessageSubject] = None
    text: typing.Optional[MessageText] = None
    html: typing.Optional[MessageHtml] = None
    attachments: typing.Optional[SendMessageAttachments] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

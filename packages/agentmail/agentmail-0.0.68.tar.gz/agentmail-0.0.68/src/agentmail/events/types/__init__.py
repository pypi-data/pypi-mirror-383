# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .bounce import Bounce
    from .complaint import Complaint
    from .delivery import Delivery
    from .event_id import EventId
    from .message_bounced_event import MessageBouncedEvent
    from .message_complained_event import MessageComplainedEvent
    from .message_delivered_event import MessageDeliveredEvent
    from .message_received_event import MessageReceivedEvent
    from .message_rejected_event import MessageRejectedEvent
    from .message_sent_event import MessageSentEvent
    from .recipient import Recipient
    from .reject import Reject
    from .send import Send
    from .timestamp import Timestamp
_dynamic_imports: typing.Dict[str, str] = {
    "Bounce": ".bounce",
    "Complaint": ".complaint",
    "Delivery": ".delivery",
    "EventId": ".event_id",
    "MessageBouncedEvent": ".message_bounced_event",
    "MessageComplainedEvent": ".message_complained_event",
    "MessageDeliveredEvent": ".message_delivered_event",
    "MessageReceivedEvent": ".message_received_event",
    "MessageRejectedEvent": ".message_rejected_event",
    "MessageSentEvent": ".message_sent_event",
    "Recipient": ".recipient",
    "Reject": ".reject",
    "Send": ".send",
    "Timestamp": ".timestamp",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "Bounce",
    "Complaint",
    "Delivery",
    "EventId",
    "MessageBouncedEvent",
    "MessageComplainedEvent",
    "MessageDeliveredEvent",
    "MessageReceivedEvent",
    "MessageRejectedEvent",
    "MessageSentEvent",
    "Recipient",
    "Reject",
    "Send",
    "Timestamp",
]

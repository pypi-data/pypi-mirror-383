[tool.poetry]
name = "spot-optimizer"
version = "1.2.2"
description = "AWS EC2 spot instance optimizer"
authors = ["Amar Prakash <amar.om1994@gmail.com>"]
readme = "README.md"
repository = "https://github.com/amarlearning/spot-optimizer"
keywords = ["aws", "ec2", "spot", "optimizer"]
packages = [
    { include = "spot_optimizer" },
    { include = "spot_optimizer/resources/*.json" }
]

[tool.poetry.dependencies]
python = ">=3.9"
requests = "^2.32.3"
diskcache = "^5.6.3"
appdirs = "^1.4.4"
duckdb = "^1.1.3"
pandas = "^2.2.0"
boto3 = "^1.34.0"
urllib3 = "<2.0.0"  # Required for boto3 compatibility
tqdm = "^4.66.1"  # For progress bars

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.3.1"  # For test timeout handling
pytest-xdist = "^3.6.0"  # For parallel test execution
psutil = "^6.1.0"  # For memory monitoring in performance tests (compatible with safety)
safety = "^3.2.7"  # For security scanning
bandit = "^1.7.5"  # For security linting

[tool.poetry.group.types.dependencies]
types-requests = "^2.31.0"  # Using an older version for compatibility


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
spot-optimizer = "spot_optimizer.cli:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
    "network: marks tests that require network access",
]
timeout = 300  # 5 minute default timeout for tests
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["spot_optimizer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
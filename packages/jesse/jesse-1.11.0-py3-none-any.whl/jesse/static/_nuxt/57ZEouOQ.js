import{aK as d,aL as o,a as u,g as y,c as b,o as f,B as p,e as k,t as x,aN as m,aO as v,aP as _,bf as h,h as j,ba as w,a_ as O}from"./DClyChXX.js";const z={base:"inline-flex items-center",rounded:"rounded-md",font:"font-medium",size:{xs:"text-xs px-1.5 py-0.5",sm:"text-xs px-2 py-1",md:"text-sm px-2 py-1",lg:"text-sm px-2.5 py-1.5"},color:{white:{solid:"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-900 dark:text-white bg-white dark:bg-gray-900"},gray:{solid:"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-700 dark:text-gray-200 bg-gray-50 dark:bg-gray-800"},black:{solid:"text-white dark:text-gray-900 bg-gray-900 dark:bg-white"}},variant:{solid:"bg-{color}-500 dark:bg-{color}-400 text-white dark:text-gray-900",outline:"text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400",soft:"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400",subtle:"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400 ring-opacity-25 dark:ring-opacity-25"},default:{size:"sm",variant:"solid",color:"primary"}},a=d(o.ui.strategy,o.ui.badge,z),S=y({inheritAttrs:!1,props:{size:{type:String,default:()=>a.default.size,validator(t){return Object.keys(a.size).includes(t)}},color:{type:String,default:()=>a.default.color,validator(t){return[...o.ui.colors,...Object.keys(a.color)].includes(t)}},variant:{type:String,default:()=>a.default.variant,validator(t){return[...Object.keys(a.variant),...Object.values(a.color).flatMap(e=>Object.keys(e))].includes(t)}},label:{type:[String,Number],default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})}},setup(t){const{ui:e,attrs:i}=v("badge",_(t,"ui"),a),{size:n,rounded:s}=h({ui:e,props:t}),l=j(()=>{var c,g;const r=((g=(c=e.value.color)==null?void 0:c[t.color])==null?void 0:g[t.variant])||e.value.variant[t.variant];return w(O(e.value.base,e.value.font,s.value,e.value.size[n.value],r==null?void 0:r.replaceAll("{color}",t.color)),t.class)});return{attrs:i,badgeClass:l}}});function C(t,e,i,n,s,l){return f(),b("span",m({class:t.badgeClass},t.attrs),[p(t.$slots,"default",{},()=>[k(x(t.label),1)])],16)}const B=u(S,[["render",C]]);export{B as _};

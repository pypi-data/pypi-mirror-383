"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class V1GenericAllowanceChain(str, Enum):
    ARBITRUM = "arbitrum"
    BASE = "base"
    ETHEREUM = "ethereum"


class V1GenericAllowanceContractEnum(str, Enum):
    AAVE_V3_POOL = "AaveV3Pool"
    AERODROME_BASIC_ROUTER = "AerodromeBasicRouter"
    AERODROME_SLIPSTREAM_ROUTER = "AerodromeSlipstreamRouter"
    AERODROME_SLIPSTREAM_NONFUNGIBLE_POSITION_MANAGER = (
        "AerodromeSlipstreamNonfungiblePositionManager"
    )
    UNISWAP_V3_ROUTER = "UniswapV3Router"
    UNISWAP_V3_NFT_POSITION_MANAGER = "UniswapV3NFTPositionManager"
    MORPHO = "Morpho"
    SKY_DAI_USDS_CONVERTER = "SkyDaiUsdsConverter"
    SKY_USDC_USDS_CONVERTER = "SkyUsdcUsdsConverter"
    SKY_USDS_VAULT = "SkyUsdsVault"
    PENDLE_ROUTER = "PendleRouter"
    ODOS_ROUTER = "OdosRouter"
    ETHENA_VAULT = "EthenaVault"


V1GenericAllowanceContractUnionTypedDict = TypeAliasType(
    "V1GenericAllowanceContractUnionTypedDict",
    Union[V1GenericAllowanceContractEnum, str],
)
r"""The name or address of the contract to check allowance for."""


V1GenericAllowanceContractUnion = TypeAliasType(
    "V1GenericAllowanceContractUnion", Union[V1GenericAllowanceContractEnum, str]
)
r"""The name or address of the contract to check allowance for."""


class V1GenericAllowanceRequestTypedDict(TypedDict):
    contract: V1GenericAllowanceContractUnionTypedDict
    r"""The name or address of the contract to check allowance for."""
    chain: V1GenericAllowanceChain
    user: NotRequired[str]
    r"""The user to get the ERC20 allowance of."""
    token: str
    r"""The symbol or address of the token for which the allowance is checked."""


class V1GenericAllowanceRequest(BaseModel):
    contract: Annotated[
        V1GenericAllowanceContractUnion,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""The name or address of the contract to check allowance for."""

    chain: Annotated[
        V1GenericAllowanceChain,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = V1GenericAllowanceChain.ARBITRUM

    user: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "0x29F20a192328eF1aD35e1564aBFf4Be9C5ce5f7B"
    r"""The user to get the ERC20 allowance of."""

    token: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ] = "USDC"
    r"""The symbol or address of the token for which the allowance is checked."""

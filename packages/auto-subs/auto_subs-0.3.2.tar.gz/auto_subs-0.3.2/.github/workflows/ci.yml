name: CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:

jobs:
  quality_checks:
    name: Lint, Type Check & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Install dependencies
        run: uv pip install --system -e .[dev]

      - name: Lint with ruff
        run: uv run ruff check .

      - name: Check formatting with ruff
        run: uv run ruff format --check .

      - name: Run mypy for type checking
        run: uv run mypy .

      - name: Build package to check for errors
        run: |
          uv pip install --system build twine
          uv build
          twine check dist/*

  test:
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    needs: quality_checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13", "3.14"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Install dependencies
        run: uv pip install --system -e .[dev]

      - name: Run pytest with coverage
        run: uv run pytest --cov=auto_subs --cov-report=xml
        continue-on-error: ${{ matrix.experimental || false }}

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore

  coverage-report:
    name: Coverage Report
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all coverage reports
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-xml-*
          path: coverage-reports/
          merge-multiple: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage-reports/
          fail_ci_if_error: true

Metadata-Version: 2.4
Name: okareo
Version: 0.0.110
Summary: Python SDK for interacting with Okareo Cloud APIs
License: Apache-2.0
License-File: LICENSE
Author: Okareo
Author-email: info@okareo.com
Requires-Python: >=3.10,<3.13
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Provides-Extra: autogen
Provides-Extra: langchain
Provides-Extra: voice
Requires-Dist: aiohttp (>=3.10.0,<4.0.0)
Requires-Dist: attrs (>=23.1.0,<24.0.0)
Requires-Dist: autogen-agentchat (>=0.2.36,<0.3.0) ; extra == "autogen"
Requires-Dist: httpx (>=0.23)
Requires-Dist: langchain (>=0.0.321,<0.0.322) ; extra == "langchain"
Requires-Dist: litellm (>=1.29.5,<2.0.0) ; extra == "langchain"
Requires-Dist: nats-py (>=2.4.0,<3.0.0)
Requires-Dist: nkeys (>=0.2.0,<0.3.0)
Requires-Dist: numpy (>=1.21.0,<2.0) ; extra == "voice"
Requires-Dist: openai (>=1.20.0,<2.0.0) ; extra == "langchain"
Requires-Dist: opentelemetry-api (>=1.0.0)
Requires-Dist: opentelemetry-instrumentation (>=0.40b.0)
Requires-Dist: opentelemetry-proto (>=1.20.0)
Requires-Dist: opentelemetry-sdk (>=1.0.0)
Requires-Dist: protobuf (>=2.6.1)
Requires-Dist: pydantic (>=1.0.0)
Requires-Dist: pydoc-markdown (>=4.8.2,<5.0.0)
Requires-Dist: pynacl (>=1.5.0,<2.0.0)
Requires-Dist: python-dateutil (>=2.8.2,<3.0.0)
Requires-Dist: scipy (>=1.10.0,<2.0.0) ; extra == "voice"
Requires-Dist: tqdm (>=4.67.1,<5.0.0)
Requires-Dist: types-python-dateutil (>=2.8.19.14,<3.0.0.0)
Requires-Dist: websockets (>=15.0.1,<16.0.0) ; extra == "voice"
Project-URL: Documentation, https://docs.okareo.com/docs/getting-started/overview
Project-URL: Homepage, https://okareo.com
Project-URL: Repository, https://github.com/okareo-ai/okareo-python-sdk
Description-Content-Type: text/markdown

# Okareo Python SDK

[![PyPI](https://img.shields.io/pypi/v/okareo?style=flat-square)](https://pypi.python.org/pypi/okareo/)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/okareo?style=flat-square)](https://pypi.python.org/pypi/okareo/)
[![PyPI - License](https://img.shields.io/pypi/l/okareo?style=flat-square)](https://pypi.python.org/pypi/okareo/)

---

**PyPI**: [https://pypi.org/project/okareo/](https://pypi.org/project/okareo/)

---

Python library for interacting with Okareo Cloud APIs

## Documentation
[Getting Started, Guides, and API docs](https://docs.okareo.com/)

## Installation

1. Install the package
    ```sh
    pip install okareo
    ```
2. Get your API token from [https://app.okareo.com/](https://app.okareo.com/)
   (Note: You will need to register first.)

3. Go directly to the **"2. Create your API Token"** on the landing page in above app.

4. Set the environment variable `OKAREO_API_KEY` to your generated API token.

## Get Started Example Notebooks

Please see and run this notebook:<br>
https://github.com/okareo-ai/okareo-python-sdk/blob/main/examples/classification_eval.ipynb

See additional examples under:<br>
https://github.com/okareo-ai/okareo-python-sdk/tree/main/examples

## Using Okareo LangChain Callbacks Handler

We provide a LangChain callback handler that lets you easily integrate your current workflows with the Okareo platform.

If don't have LangChain dependencies installed in your environment, you can install the base ones (that will help you run the examples) with:
```sh
pip install okareo[langchain]
```

Integrating callbacks into your chain is as easy as importing the SDK in your module add adding the following
```
from okareo.callbacks import CallbackHandler
...
handler = CallbackHandler(mut_name="my-model", context_token="context-token")
llm = OpenAI(temperature=0.3, callbacks=[handler])

```
During the LangChain LLM runs we will collect input and output information so you can analyze it further with the Okareo toolkit.

You can also see an usage example in [./examples/langchain_callback_example.py](./examples/langchain_callback_example.py)

## Rendering Docs via `pydoc-markdown`

To render the Python SDK documentation, you can use `source/build_docs.sh` in this repository. This will do the following:

1. Install the SDK poetry environment
2. Run `pydoc-markdown` as configured in `pyproject.toml`
3. Perform postprocessing to re-order the generated sidebar file and change heading levels.

The generated docs will be found in the `docs/python-sdk` and can be rendered with [docusaurus](https://docusaurus.io/).

---

All rights reserved for Okareo Inc


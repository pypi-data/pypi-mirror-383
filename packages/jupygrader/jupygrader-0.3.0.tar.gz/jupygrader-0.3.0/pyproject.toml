[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jupygrader"
dynamic = ["version"]
description = 'Grade Jupyter notebooks with Python scripts'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["jupyter", "grading", "autograding", "autograder"]
authors = [
  { name = "Ye Joo Park", email = "subwaymatch@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
    "nbformat",
    "nbconvert",
    "nbclient",
    "ipykernel",
    "tabulate",
    "click",
    "bs4",
    "pandas",
    "numpy",
    "statsmodels",
    "plotly",
    "black",
    "requests",
    "tzlocal",
    "tqdm",
]

[project.optional-dependencies]
docs = [
    "mkdocstrings[python]",
    "mkdocs-material"
]

[project.urls]
Documentation = "https://github.com/subwaymatch/jupygrader#readme"
Source = "https://github.com/subwaymatch/jupygrader"

[project.scripts]
jupy = "jupygrader.cli:cli"

[tool.hatch.version]
path = "src/jupygrader/__about__.py"

[tool.hatch.envs.docs]
features = ["docs"]

[tool.hatch.envs.docs.scripts]
serve = "mkdocs serve"
build = "mkdocs build"
deploy = "mkdocs gh-deploy --force"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/jupygrader tests}"

# configure pytest to show all output
# without this option, pytest will only print stdout for failing tests, but not for passing tests
[tool.hatch.envs.hatch-test]
extra-args = ["-v", "-s", "--capture=no"]

[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
]

[tool.hatch.envs.test.scripts]
cov-html = "coverage html && pip freeze > htmlcov/requirements-test.txt"

[tool.coverage.run]
source_pkgs = ["jupygrader", "tests"]
branch = true
parallel = true
omit = [
  "src/jupygrader/__about__.py",
]

[tool.coverage.paths]
jupygrader = ["src/jupygrader", "*/jupygrader/src/jupygrader"]
tests = ["tests", "*/jupygrader/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]


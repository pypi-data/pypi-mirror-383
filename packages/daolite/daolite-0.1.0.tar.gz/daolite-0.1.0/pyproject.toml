[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "daolite"
version = "0.1.0"
description = "A Python package for estimating latency in Adaptive Optics Real-time Control Systems"
readme = "README.md"
requires-python = ">=3.8"
license = "GPL-3.0-or-later"
authors = [
    {name = "David Barr", email = "dave@davetbarr.com"}
]
maintainers = [
    {name = "David Barr", email = "dave@davetbarr.com"}
]
keywords = ["adaptive optics", "latency", "astronomy", "real-time control", "AO", "RTC"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=1.20.0",
    "matplotlib>=3.4.0",
    "pyyaml>=5.4.0",
    "cycler>=0.10.0",
    "regex>=2021.8.3",
    "pyqt5>=5.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "sphinx",
    "sphinx-rtd-theme",
    "black",
    "ruff",
    "isort",
    "pre-commit",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]
test = [
    "pytest",
    "pytest-cov",
]

[project.urls]
Homepage = "https://github.com/davetbarr/daolite"
Documentation = "https://daolite.readthedocs.io"
Repository = "https://github.com/davetbarr/daolite"
"Bug Tracker" = "https://github.com/davetbarr/daolite/issues"

[project.scripts]
daolite-pipeline-designer = "daolite.gui.pipeline_designer:main"
daolite-json-runner = "daolite.pipeline.json_runner:main"
daolite-centroid-agenda = "daolite.gui.centroid_agenda_tool:main"

[tool.setuptools]
packages = {find = {}}

[tool.setuptools.package-data]
daolite = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--color=yes",
    "--cov=daolite",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

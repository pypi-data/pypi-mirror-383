LINE_LENGTH: 79

**********
This function uses `foo` to process data. The `bar` parameter is optional.

Parameters
----------
arg1 : str
    Use `method_name` to access this value.
arg2 : int
    The value should be between `1` and `100`.
config : `ConfigType`
    A `Config` object for settings.

Returns
-------
dict
    A dictionary with keys `result` and `status`.
`ResultDict`
    An alternative return format with `data` field.

See Also
--------
- `other_function` : Related function
- `module.Class` : Related class

Notes
-----
When using `special_value`, ensure that `config` is set properly. The
`default_value` is `None` by default.

Examples
--------
>>> data = [{'id': 1, 'value': 10}]
>>> result = process_data(data, config={'mode': 'simple'})
>>> print(result['status'])
'success'
>>> # Use `config` parameter to customize `mode`
... # and set the `threshold` value

**********
This function uses ``foo`` to process data. The ``bar`` parameter is optional.

Parameters
----------
arg1 : str
    Use ``method_name`` to access this value.
arg2 : int
    The value should be between ``1`` and ``100``.
config : `ConfigType`
    A ``Config`` object for settings.

Returns
-------
dict
    A dictionary with keys ``result`` and ``status``.
`ResultDict`
    An alternative return format with ``data`` field.

See Also
--------
- ``other_function`` : Related function
- ``module.Class`` : Related class

Notes
-----
When using ``special_value``, ensure that ``config`` is set properly. The
``default_value`` is ``None`` by default.

Examples
--------
>>> data = [{'id': 1, 'value': 10}]
>>> result = process_data(data, config={'mode': 'simple'})
>>> print(result['status'])
'success'
>>> # Use `config` parameter to customize `mode`
... # and set the `threshold` value

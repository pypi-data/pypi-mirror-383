name: CI

on:
  push:
    branches:
      - main
    paths:
      - 'ctfbridge/**'
      - '**/*.py'
      - 'docs/**'
      - 'mkdocs.yml'
      - 'pyproject.toml'
  pull_request:
    branches:
      - main
    paths:
      - 'ctfbridge/**'
      - '**/*.py'
      - 'docs/**'
      - 'mkdocs.yml'
      - 'pyproject.toml'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
      pkg:  ${{ steps.filter.outputs.pkg }}
    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            # Python source, app logic, tests, etc.
            code:
              - 'ctfbridge/**'
              - '**/*.py'

            # Documentation sources
            docs:
              - 'docs/**'
              - 'mkdocs.yml'

            # Build / packaging metadata
            pkg:
              - 'pyproject.toml'

  lint:
    needs: changes
    if: needs.changes.outputs.code == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Ruff
        run: pip install ruff

      - name: Ruff - lint
        run: ruff check ctfbridge

      - name: Ruff - format (check-only)
        run: ruff format --check ctfbridge

  test:
    needs: changes
    if: |
      needs.changes.outputs.code == 'true' ||
      needs.changes.outputs.pkg  == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.12']

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install project + dev deps
        run: |
          pip install -e .[dev,docs]

      - name: Run pytest
        run: pytest

  docs:
    needs: changes
    if: |
      needs.changes.outputs.docs == 'true' ||
      needs.changes.outputs.code == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install docs deps
        run: pip install -e .[docs]

      - name: Build MkDocs site
        run: mkdocs build --strict

  build:
    needs: [changes, test]
    if: |
      needs.changes.outputs.code == 'true'     ||
      needs.changes.outputs.pkg  == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Build wheel / sdist
        run: |
          python -m pip install --upgrade pip build twine
          python -m build
          twine check dist/*

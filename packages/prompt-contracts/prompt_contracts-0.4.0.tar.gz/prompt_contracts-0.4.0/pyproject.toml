[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "prompt-contracts"
version = "0.4.0"
description = "Contract testing framework for LLM prompts - PCSL (Prompt Contract Specification Language)"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Philippos Melikidis"},
]
maintainers = [
    {name = "Philippos Melikidis"},
]
keywords = [
    "llm",
    "testing",
    "contracts",
    "prompt-engineering",
    "validation",
    "pcsl",
    "openai",
    "ollama",
    "quality-assurance"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]

dependencies = [
    "pyyaml>=6.0.1",
    "jsonschema>=4.0.0",
    "jsonpath-ng>=1.6.0",
    "openai>=1.0.0",
    "httpx>=0.24.0",
    "rich>=13.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
    "build>=1.0.0",
    "twine>=4.0.0",
]
all = [
    "prompt-contracts[dev]",
]

[project.scripts]
prompt-contracts = "promptcontracts.cli:main"

[project.urls]
Homepage = "https://github.com/promptcontracts/prompt-contracts"
Documentation = "https://promptcontracts.org/docs"
Repository = "https://github.com/promptcontracts/prompt-contracts"
"Bug Tracker" = "https://github.com/promptcontracts/prompt-contracts/issues"

[tool.setuptools.packages.find]
include = ["promptcontracts*"]

[tool.setuptools.package-data]
promptcontracts = ["spec/**/*.json", "spec/**/*.md"]

# Tool configurations

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__
"tests/*" = ["F401", "F811"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=promptcontracts",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "integration: marks tests as integration tests (requiring LLM)",
    "slow: marks tests as slow",
]

[tool.coverage.run]
source = ["promptcontracts"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

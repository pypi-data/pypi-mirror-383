# serializer version: 1
# name: test_examples[auth-example_basic_auth]
  '''
  
  # running: example_basic_auth
  {'authorized': True, 'user': 'user'}
  {'error': "('HTTP status client error', {'status': 401})"}
  
  '''
# ---
# name: test_examples[auth-example_bearer_auth]
  '''
  
  # running: example_bearer_auth
  {'authenticated': True, 'token': 'mytoken'}
  {'error': "('HTTP status client error', {'status': 401})"}
  
  '''
# ---
# name: test_examples[basic_client-example_base_url]
  '''
  
  # running: example_base_url
  {'status': 200, 'body': 'foobar'}
  
  '''
# ---
# name: test_examples[basic_client-example_error_for_status]
  '''
  
  # running: example_error_for_status
  {'error': "('HTTP status client error', {'status': 400})"}
  {'status': 400}
  
  '''
# ---
# name: test_examples[basic_client-example_headers]
  '''
  
  # running: example_headers
  {'X-Client': ['client_value'], 'X-Req': ['req_value'], 'X-Req2': ['req2_value'], 'User-Agent': ['ua-example/1.0']}
  
  '''
# ---
# name: test_examples[basic_client-example_read_bytes]
  '''
  
  # running: example_read_bytes
  {'status': 200, 'body': Bytes(b"\xfa\x12\xf9*\xfb\xe0\x0f\x85\x08\xd0\xe8;\xab\x9c\xf8\xce")}
  
  '''
# ---
# name: test_examples[basic_client-example_read_text]
  '''
  
  # running: example_read_text
  {'status': 200, 'text': '<h1>Unicode Demo</h1>'}
  
  '''
# ---
# name: test_examples[basic_client-example_simple_get]
  '''
  
  # running: example_simple_get
  {'args': {'q': ['pyreqwest']}, 'url': 'http://localhost:<PORT>/get?q=pyreqwest', 'status': 200}
  
  '''
# ---
# name: test_examples[basic_client-example_simple_get_sync]
  '''
  
  # running: example_simple_get_sync
  {'args': {'q': ['pyreqwest']}, 'url': 'http://localhost:<PORT>/get?q=pyreqwest'}
  
  '''
# ---
# name: test_examples[basic_client-example_url_usage]
  '''
  
  # running: example_url_usage
  {'args': {'q': ['pyreqwest']}, 'url': 'http://localhost:<PORT>/get?q=pyreqwest'}
  
  '''
# ---
# name: test_examples[cookies-example_cookie_store]
  '''
  
  # running: example_cookie_store
  {'sent_cookies': {'cookie1': 'val1'}}
  {'cookie_store': [Cookie('cookie1=val1')]}
  
  '''
# ---
# name: test_examples[cookies-example_cookies]
  '''
  
  # running: example_cookies
  {'set_cookies': {'cookie1': 'val1', 'cookie2': 'val2'}}
  {'sent_cookies': {'cookie1': 'val1', 'cookie2': 'val2'}}
  
  '''
# ---
# name: test_examples[json_usage-example_custom_json_dumps]
  '''
  
  # running: example_custom_json_dumps
  {'status': 200, 'json': {'value': 'Zm9v'}}
  
  '''
# ---
# name: test_examples[json_usage-example_custom_json_loads]
  '''
  
  # running: example_custom_json_loads
  {'status': 200, 'json': {'value': b'foo'}}
  
  '''
# ---
# name: test_examples[json_usage-example_post_json]
  '''
  
  # running: example_post_json
  {'status': 200, 'echo': {'message': 'hello'}, 'content_type': ['application/json']}
  
  '''
# ---
# name: test_examples[middleware-example_extensions]
  '''
  
  # running: example_extensions
  {'mws': [['init'], ['init_mw1']], 'extensions': {'demo_ext': 'init_mw1_mw2'}}
  
  '''
# ---
# name: test_examples[middleware-example_middleware_modify_request_body]
  '''
  
  # running: example_middleware_modify_request_body
  {'data': 'data:application/octet-stream;base64,aGVsbG9fd29ybGQ='}
  
  '''
# ---
# name: test_examples[middleware-example_middleware_modify_request_body_streamed]
  '''
  
  # running: example_middleware_modify_request_body_streamed
  {'data': 'data:application/octet-stream;base64,aGVsbG9fd29ybGRfbWlkZGxld2FyZQ=='}
  
  '''
# ---
# name: test_examples[middleware-example_middleware_override_response_builder]
  '''
  
  # running: example_middleware_override_response_builder
  {'status': 202, 'body': 'overridden'}
  
  '''
# ---
# name: test_examples[middleware-example_middleware_request_specific]
  '''
  
  # running: example_middleware_request_specific
  {'req1_args': {'mw1': ['val1'], 'mw2': ['val2']}, 'req2_args': {'mw1': ['val1']}}
  
  '''
# ---
# name: test_examples[middleware-example_multiple]
  '''
  
  # running: example_multiple
  {'order': [['1'], ['2']]}
  
  '''
# ---
# name: test_examples[middleware-example_retry_middleware]
  '''
  
  # running: example_retry_middleware
  {'url': 'http://localhost:<PORT>/delay/0', 'status': 200, 'retried': True}
  
  '''
# ---
# name: test_examples[middleware-example_retry_middleware_with_stream]
  '''
  
  # running: example_retry_middleware_with_stream
  {'data': 'hello_world', 'status': 200}
  
  '''
# ---
# name: test_examples[middleware-example_simple]
  '''
  
  # running: example_simple
  {'request_header': ['val1'], 'response_header': 'val2'}
  
  '''
# ---
# name: test_examples[multipart-example_multipart_file_upload]
  '''
  
  # running: example_multipart_file_upload
  {'form': {'description': ['demo']}, 'file': ['file-content']}
  
  '''
# ---
# name: test_examples[multipart-example_multipart_streaming_part]
  '''
  
  # running: example_multipart_streaming_part
  {'form': {'description': ['streamed']}, 'file': ['streamed-file-content']}
  
  '''
# ---
# name: test_examples[multipart-example_multipart_text]
  '''
  
  # running: example_multipart_text
  {'form': {'name': ['John'], 'email': ['john@example.com']}}
  
  '''
# ---
# name: test_examples[stream-example_stream_download]
  '''
  
  # running: example_stream_download
  {'chunks': 5, 'total_bytes': 500}
  
  '''
# ---
# name: test_examples[stream-example_stream_upload]
  '''
  
  # running: example_stream_upload
  {'status': 200, 'data': 'data:application/octet-stream;base64,cGFydC0wX3BhcnQtMV9wYXJ0LTJfcGFydC0zX3BhcnQtNF8='}
  
  '''
# ---
# name: test_examples[testing-example_basic_mocking]
  '''
  
  # running: example_basic_mocking
  {'status': 200, 'body': '{"res":42}'}
  {'status': 202, 'body': '{"res":43}'}
  
  '''
# ---
# name: test_examples[testing-example_body_matching]
  '''
  
  # running: example_body_matching
  {'status': 200, 'body': '{"res":42}'}
  {'status': 200, 'body': '{"res":43}'}
  {'status': 200, 'body': ''}
  
  '''
# ---
# name: test_examples[testing-example_custom_matcher_with_response]
  '''
  
  # running: example_custom_matcher_with_response
  {'status': 201, 'body': '{"method_was":"GET","res":42}'}
  {'status': 201, 'body': '{"method_was":"POST","res":42}'}
  {'status': 200, 'body': ''}
  
  '''
# ---
# name: test_examples[testing-example_custom_predicate_matcher]
  '''
  
  # running: example_custom_predicate_matcher
  {'status': 200, 'body': '{"res":42}'}
  {'status': 200, 'body': '{"res":42}'}
  {'status': 200, 'body': ''}
  
  '''
# ---
# name: test_examples[testing-example_matching_compatibility]
  '''
  
  # running: example_matching_compatibility
  {'status': 200, 'body': '{"res":42}'}
  {'status': 200, 'body': '{"res":43}'}
  No mock rule matched request: GET https://example.invalid/api?q=B&extra=1
  
  '''
# ---
# name: test_examples[testing-example_mock_ordering]
  '''
  
  # running: example_mock_ordering
  {'status': 200, 'body': ''}
  
  '''
# ---
# name: test_examples[testing-example_path_regex_mocking]
  '''
  
  # running: example_path_regex_mocking
  {'status': 200, 'body': '{"res":42}'}
  {'status': 200, 'body': '{"res":43}'}
  
  '''
# ---
# name: test_examples[testing-example_query_mocking]
  '''
  
  # running: example_query_mocking
  {'status': 200, 'body': '{"res":42}'}
  {'status': 200, 'body': '{"res":43}'}
  {'status': 200, 'body': '{"res":42}'}
  
  '''
# ---

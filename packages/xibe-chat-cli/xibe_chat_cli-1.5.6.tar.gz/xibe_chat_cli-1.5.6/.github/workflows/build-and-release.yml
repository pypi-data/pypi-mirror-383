name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
        
    - name: Build package
      run: python -m build
      
    - name: Check package
      run: twine check dist/*
      
    - name: Publish to PyPI
      if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: pypi-AgEIcHlwaS5vcmcCJGRmYmYyMDE1LWYxN2EtNGE3Ni1hZWJjLTRhZjExN2NlMTc2MQACKlszLCIzN2EzMGJlOC02OGM5LTRmYTQtYWYwNi02Zjc2ZDVlY2MyMDgiXQAABiAKuZZmJLxnUDuNEjJgL8pgyveL1x7MyObpVAULBAggXg
        
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## What's New
          
          ### Features
          - AI-powered text and image generation
          - Model memory system (remembers your preferences)
          - Enhanced image generation with API parameters
          - Rich terminal interface with beautiful formatting
          - Multi-line input support
          
          ### Installation
          
          **Via pip (recommended):**
          ```bash
          pip install xibe-chat-cli
          xibe-chat
          ```
          
          **Quick alias:**
          ```bash
          xibe
          ```
          
          ### Usage
          
          ```bash
          xibe-chat
          ```
          
          Then use commands like:
          - Type your message for AI chat
          - `img: your prompt` for image generation
          - `/help` for all commands
          - `/clear` to clear screen
          - `/new` for new chat session
          
          ### Full Documentation
          See [GitHub Repository](https://github.com/iotserver24/xibe-chat-cli) for complete documentation.
          
  build-executables:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyinstaller -r requirements.txt
        
    - name: Build executable
      shell: bash
      run: |
        pyinstaller --onefile --name xibe-chat ai_cli.py
        if [ "$RUNNER_OS" = "Windows" ]; then
          mv dist/xibe-chat.exe dist/xibe-chat-windows.exe
        elif [ "$RUNNER_OS" = "macOS" ]; then
          mv dist/xibe-chat dist/xibe-chat-macos
        else
          mv dist/xibe-chat dist/xibe-chat-linux
        fi
        
    - name: Upload executable
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/
        asset_name: xibe-chat-${{ matrix.os }}.zip
        asset_content_type: application/zip

[tool.poetry]
name = "AlekSIS-Core"
version = "4.1.0.dev2"
packages = [
    { include = "aleksis" }
]
readme = "README.rst"
include = [
    { path = "aleksis/**/*.mo", format = ["sdist", "wheel"] },
    { path = "aleksis/core/static/style.css", format = ["sdist", "wheel"] },
    { path = "*.rst", format = "sdist" },
    { path = "docs/*", format = "sdist" },
    { path = "docs/**/*", format = "sdist" },
    { path = "conftest.py", format = "sdist" },
    { path = "tox.ini", format = "sdist" }
]

description = "AlekSIS (School Information System) — Core"
authors = [
    "Dominik George <dominik.george@teckids.org>",
    "Julian Leucker <leuckeju@katharineum.de>",
    "mirabilos <thorsten.glaser@teckids.org>",
    "Frank Poetzsch-Heffter <p-h@katharineum.de>",
    "Tom Teichler <tom.teichler@teckids.org>",
    "Jonathan Weth <dev@jonathanweth.de>",
    "Hangzhi Yu <yuha@katharineum.de>",
    "Lloyd Meins <meinsll@katharineum.de>",
    "magicfelix <felix@felix-zauberer.de>",
    "Benedict Suska <benedict.suska@teckids.org>",
    "Lukas Weichelt <lukas.weichelt@teckids.org>",
    "Michael Bauer <michael-bauer@posteo.de>"
]
maintainers = ["Jonathan Weth <jonathan.weth@teckids.org>", "Dominik George <dominik.george@teckids.org>"]
license = "EUPL-1.2-or-later"
homepage = "https://aleksis.org"
repository = "https://edugit.org/AlekSIS/official/AlekSIS-Core"
documentation = "https://aleksis.org/AlekSIS-Core/docs/html/"
keywords = ["SIS", "education", "school", "digitisation", "school apps"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Django :: 4.1",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Topic :: Education",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "gitlab"
url = "https://edugit.org/api/v4/projects/461/packages/pypi/simple"
priority = "supplemental"
[tool.poetry.dependencies]
python = "^3.10"
Django = "^5.1"
django-any-js = "^1.1"  # Legacy
django-tables2 = "^2.1"  # Legacy
django-phonenumber-field = {version = "^8.0", extras = ["phonenumbers"]}
colour = "^0.1.5"
dynaconf = {version = "^3.1", extras = ["yaml", "toml", "ini"]}
django-auth-ldap = { version = "^5.1", optional = true }
django-maintenance-mode = "^0.22.0"
django-ipware = "^7.0"
django-impersonate = "^1.4"
psycopg = "^3.2"
psycopg-pool = "^3.2"
django_select2 = "^8.0"  # Legacy
django-yarnpkg = "^6.1.2"
django-material = "^1.6.0"  # Legacy
django-dynamic-preferences = "^1.11"
django-filter = "^25.1"
django-templated-email = "^3.0.0"
html2text = "^2025.0.0"
django-ckeditor = "^6.0.0"  # Legacy
calendarweek = "^0.5.0"
Celery = {version="^5.5", extras=["django", "redis"]}
django-celery-results = "^2.5.1"
django-celery-beat = "^2.6.0"
django-celery-email = "^3.0.0"
django-polymorphic = "^4.0.0"
django-colorfield = "^0.14.0"
django-bleach = "^3.0.0"
django-guardian = "^2.2.0"
rules = "^3.0"
django-cache-memoize = "^0.2.0"
django-haystack = "^3.3b2"
celery-haystack-ng = "^2.0"
django-dbbackup = "^4.0.0"
license-expression = "^30.0"
django-reversion = "^5.0.0"
django-favicon-plus-reloaded = "^1.2.2"  # Legacy
django-health-check = "^3.12.1"
psutil = "^7.0.0"
celery-progress = "^0.1.0"
django-prometheus = "^2.1.0"
django-model-utils = "^5.0.0"
bs4 = "^0.0.2"
django-invitations = "^2.0.0"
django-allauth = {extras = ["mfa", "socialaccount"], version = "^65.8.0"}
django-uwsgi-ng = "^2.0"
django-extensions = "^3.1.1"
ipython = "^8.0.0"
django-oauth-toolkit = "^3.0.0"
django-storages = {version = "^1.14.2", optional = true}
boto3 = {version = "^1.34.52", optional = true}
django-cleanup = "^9.0.0"
djangorestframework = "^3.12.4"
Whoosh = "^2.7.4"
django-titofisto = "^1.0.0"
haystack-redis = "^0.0.1"
python-gnupg = "^0.5.0"
sentry-sdk = {version = "^2.0.0", optional = true}
pycountry = "^24.0.0"
django-iconify = "^0.4"
customidenticon = "^0.1.5"
graphene-django = ">=3.0.0, <=3.2.2"
selenium = "^4.4.3"
django-vite = "^3.0.6"
graphene-django-cud = "^0.13.0"
django-ical = "^1.9.2"
django-recurrence = "^1.11.1"
django-timezone-field = "^7.0"
uwsgi = "^2.0.21"
tqdm = "^4.66.1"
django-pg-rrule = "^0.4.2"
libsass = "^0.23.0"
graphene-django-optimizer-reloaded = "^0.9.2"
defusedxml = "^0.7.1"
graphene-file-upload = "^1.3.0"
django-countries = "^7.6.1"
webdriver-manager = "^4.0.2"
color-contrast = "^0.1.1"
icalendar = "^6.1.0"
qrcode = "<8.3"
ppf-datamatrix = "^0.2"

[tool.poetry.extras]
ldap = ["django-auth-ldap"]
s3 = ["s3", "django-storages"]
sentry = ["sentry-sdk"]

[tool.poetry.scripts]
aleksis-admin = 'aleksis.core.__main__:aleksis_cmd'

[tool.poetry.group.dev.dependencies]
django-stubs = "^4.2"
safety = "^2.3.5"

ruff = "^0.8.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.3"
pytest-django = "^4.9"
pytest-django-testing-postgresql = "^0.2"
pytest-cov = "^6.0.0"
pytest-sugar = "^1.0.0"
selenium = "^4.27.0"
freezegun = "^1.5.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0"
sphinxcontrib-django = "^2.3.0"
sphinxcontrib-svg2pdfconverter = "^1.1.1"
sphinx-autodoc-typehints = "^1.7"
sphinx_material = "^0.0.35"
[tool.ruff]
exclude = ["migrations"]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I", "DJ", "A", "S"]
ignore = ["UP034", "UP015", "B028"]
[tool.ruff.lint.extend-per-file-ignores]
"**/*/tests/**/*.py" = ["S101", "ARG", "FBT", "PLR2004", "S311", "S105", "S107"]
[tool.ruff.lint.isort]
known-first-party = ["aleksis"]
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
django = ["django"]
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

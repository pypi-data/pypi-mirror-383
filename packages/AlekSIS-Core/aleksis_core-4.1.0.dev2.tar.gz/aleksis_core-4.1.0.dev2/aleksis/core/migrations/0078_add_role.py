# Generated by Django 5.1.7 on 2025-03-21 11:35

import aleksis.core.mixins
import colorfield.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0077_add_address_to_organisation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('managed_by_app_label', models.CharField(blank=True, editable=False, max_length=255, verbose_name='App label of app responsible for managing this instance')),
                ('extended_data', models.JSONField(default=dict, editable=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(max_length=255, unique=True, verbose_name='Short name')),
                ('reciprocal_name', models.CharField(max_length=255, unique=True, verbose_name='Reciprocal name')),
                ('fg_color', colorfield.fields.ColorField(blank=True, default='', image_field=None, max_length=25, samples=None, verbose_name='Foreground color')),
                ('bg_color', colorfield.fields.ColorField(blank=True, default='', image_field=None, max_length=25, samples=None, verbose_name='Background color')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.AddField(
            model_name='grouptype',
            name='available_roles',
            field=models.ManyToManyField(blank=True, related_name='group_types', to='core.role', verbose_name='Available roles'),
        ),
        migrations.AddField(
            model_name='persongroupthrough',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='+', to='core.role', verbose_name='Roles'),
        ),
    ]

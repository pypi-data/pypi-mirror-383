"""
    ai/h2o/engine/v1/base_types.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from h2o_engine_manager.gen.api_client import ApiClient, Endpoint as _Endpoint
from h2o_engine_manager.gen.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from h2o_engine_manager.gen.model.notebook_engine_profile_service_copy_notebook_engine_profile_request import NotebookEngineProfileServiceCopyNotebookEngineProfileRequest
from h2o_engine_manager.gen.model.required_notebook_engine_profile_resource import RequiredNotebookEngineProfileResource
from h2o_engine_manager.gen.model.rpc_status import RpcStatus
from h2o_engine_manager.gen.model.v1_copy_notebook_engine_profile_response import V1CopyNotebookEngineProfileResponse
from h2o_engine_manager.gen.model.v1_create_notebook_engine_profile_response import V1CreateNotebookEngineProfileResponse
from h2o_engine_manager.gen.model.v1_get_notebook_engine_profile_response import V1GetNotebookEngineProfileResponse
from h2o_engine_manager.gen.model.v1_list_assigned_notebook_engine_profiles_response import V1ListAssignedNotebookEngineProfilesResponse
from h2o_engine_manager.gen.model.v1_list_notebook_engine_profiles_response import V1ListNotebookEngineProfilesResponse
from h2o_engine_manager.gen.model.v1_notebook_engine_profile import V1NotebookEngineProfile
from h2o_engine_manager.gen.model.v1_update_notebook_engine_profile_response import V1UpdateNotebookEngineProfileResponse


class NotebookEngineProfileServiceApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.notebook_engine_profile_service_copy_notebook_engine_profile_endpoint = _Endpoint(
            settings={
                'response_type': (V1CopyNotebookEngineProfileResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name_2}:copy',
                'operation_id': 'notebook_engine_profile_service_copy_notebook_engine_profile',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_2',
                    'body',
                ],
                'required': [
                    'name_2',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_2',
                ]
            },
            root_map={
                'validations': {
                    ('name_2',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/notebookEngineProfiles\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_2':
                        (str,),
                    'body':
                        (NotebookEngineProfileServiceCopyNotebookEngineProfileRequest,),
                },
                'attribute_map': {
                    'name_2': 'name_2',
                },
                'location_map': {
                    'name_2': 'path',
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.notebook_engine_profile_service_create_notebook_engine_profile_endpoint = _Endpoint(
            settings={
                'response_type': (V1CreateNotebookEngineProfileResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/notebookEngineProfiles',
                'operation_id': 'notebook_engine_profile_service_create_notebook_engine_profile',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'notebook_engine_profile_id',
                    'notebook_engine_profile',
                ],
                'required': [
                    'parent',
                    'notebook_engine_profile_id',
                    'notebook_engine_profile',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'notebook_engine_profile_id':
                        (str,),
                    'notebook_engine_profile':
                        (V1NotebookEngineProfile,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'notebook_engine_profile_id': 'notebookEngineProfileId',
                },
                'location_map': {
                    'parent': 'path',
                    'notebook_engine_profile_id': 'query',
                    'notebook_engine_profile': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.notebook_engine_profile_service_delete_notebook_engine_profile_endpoint = _Endpoint(
            settings={
                'response_type': (bool, date, datetime, dict, float, int, list, str, none_type,),
                'auth': [],
                'endpoint_path': '/v1/{name_7}',
                'operation_id': 'notebook_engine_profile_service_delete_notebook_engine_profile',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_7',
                ],
                'required': [
                    'name_7',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_7',
                ]
            },
            root_map={
                'validations': {
                    ('name_7',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/notebookEngineProfiles\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_7':
                        (str,),
                },
                'attribute_map': {
                    'name_7': 'name_7',
                },
                'location_map': {
                    'name_7': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.notebook_engine_profile_service_get_notebook_engine_profile_endpoint = _Endpoint(
            settings={
                'response_type': (V1GetNotebookEngineProfileResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name_7}',
                'operation_id': 'notebook_engine_profile_service_get_notebook_engine_profile',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_7',
                ],
                'required': [
                    'name_7',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_7',
                ]
            },
            root_map={
                'validations': {
                    ('name_7',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/notebookEngineProfiles\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_7':
                        (str,),
                },
                'attribute_map': {
                    'name_7': 'name_7',
                },
                'location_map': {
                    'name_7': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.notebook_engine_profile_service_list_assigned_notebook_engine_profiles_endpoint = _Endpoint(
            settings={
                'response_type': (V1ListAssignedNotebookEngineProfilesResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/notebookEngineProfiles:listAssigned',
                'operation_id': 'notebook_engine_profile_service_list_assigned_notebook_engine_profiles',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'page_size',
                    'page_token',
                ],
                'required': [
                    'parent',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'page_size':
                        (int,),
                    'page_token':
                        (str,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'page_size': 'pageSize',
                    'page_token': 'pageToken',
                },
                'location_map': {
                    'parent': 'path',
                    'page_size': 'query',
                    'page_token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.notebook_engine_profile_service_list_notebook_engine_profiles_endpoint = _Endpoint(
            settings={
                'response_type': (V1ListNotebookEngineProfilesResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/notebookEngineProfiles',
                'operation_id': 'notebook_engine_profile_service_list_notebook_engine_profiles',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'page_size',
                    'page_token',
                ],
                'required': [
                    'parent',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'page_size':
                        (int,),
                    'page_token':
                        (str,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'page_size': 'pageSize',
                    'page_token': 'pageToken',
                },
                'location_map': {
                    'parent': 'path',
                    'page_size': 'query',
                    'page_token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.notebook_engine_profile_service_update_notebook_engine_profile_endpoint = _Endpoint(
            settings={
                'response_type': (V1UpdateNotebookEngineProfileResponse,),
                'auth': [],
                'endpoint_path': '/v1/{notebookEngineProfile.name}',
                'operation_id': 'notebook_engine_profile_service_update_notebook_engine_profile',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'notebook_engine_profile_name',
                    'update_mask',
                    'notebook_engine_profile',
                ],
                'required': [
                    'notebook_engine_profile_name',
                    'update_mask',
                    'notebook_engine_profile',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'notebook_engine_profile_name',
                ]
            },
            root_map={
                'validations': {
                    ('notebook_engine_profile_name',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/notebookEngineProfiles\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'notebook_engine_profile_name':
                        (str,),
                    'update_mask':
                        (str,),
                    'notebook_engine_profile':
                        (RequiredNotebookEngineProfileResource,),
                },
                'attribute_map': {
                    'notebook_engine_profile_name': 'notebookEngineProfile.name',
                    'update_mask': 'updateMask',
                },
                'location_map': {
                    'notebook_engine_profile_name': 'path',
                    'update_mask': 'query',
                    'notebook_engine_profile': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def notebook_engine_profile_service_copy_notebook_engine_profile(
        self,
        name_2,
        body,
        **kwargs
    ):
        """Copies an existing NotebookEngineProfile to a new NotebookEngineProfile.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_engine_profile_service_copy_notebook_engine_profile(name_2, body, async_req=True)
        >>> result = thread.get()

        Args:
            name_2 (str): Required. Source NotebookEngineProfile resource name. Format: workspaces/{workspace}/notebookEngineProfiles/{notebook_engine_profile}  Authorization may require the following permission on the profile's parent workspace: * actions/enginemanager/notebookEngineProfiles/GET
            body (NotebookEngineProfileServiceCopyNotebookEngineProfileRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1CopyNotebookEngineProfileResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_2'] = \
            name_2
        kwargs['body'] = \
            body
        return self.notebook_engine_profile_service_copy_notebook_engine_profile_endpoint.call_with_http_info(**kwargs)

    def notebook_engine_profile_service_create_notebook_engine_profile(
        self,
        parent,
        notebook_engine_profile_id,
        notebook_engine_profile,
        **kwargs
    ):
        """Creates a new NotebookEngineProfile.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_engine_profile_service_create_notebook_engine_profile(parent, notebook_engine_profile_id, notebook_engine_profile, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Workspace resource name. Format: workspaces/{workspace}  Authorization may require the following permission on the profile's parent workspace: * actions/enginemanager/notebookEngineProfiles/CREATE
            notebook_engine_profile_id (str): Specify the NotebookEngineProfile ID, which will become a part of the NotebookEngineProfile resource name.  It must: - contain 1-63 characters - contain only lowercase alphanumeric characters or hyphen ('-') - start with an alphabetic character - end with an alphanumeric character  This matches a regular expression: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$
            notebook_engine_profile (V1NotebookEngineProfile): The NotebookEngineProfile resource to create.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1CreateNotebookEngineProfileResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        kwargs['notebook_engine_profile_id'] = \
            notebook_engine_profile_id
        kwargs['notebook_engine_profile'] = \
            notebook_engine_profile
        return self.notebook_engine_profile_service_create_notebook_engine_profile_endpoint.call_with_http_info(**kwargs)

    def notebook_engine_profile_service_delete_notebook_engine_profile(
        self,
        name_7,
        **kwargs
    ):
        """Deletes a NotebookEngineProfile.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_engine_profile_service_delete_notebook_engine_profile(name_7, async_req=True)
        >>> result = thread.get()

        Args:
            name_7 (str): NotebookEngine resource name. Format: workspaces/{workspace}/notebookEngineProfiles/{notebook_engine_profile}  Authorization may require the following permission on the profile's parent workspace: * actions/enginemanager/notebookEngineProfiles/DELETE

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            bool, date, datetime, dict, float, int, list, str, none_type
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_7'] = \
            name_7
        return self.notebook_engine_profile_service_delete_notebook_engine_profile_endpoint.call_with_http_info(**kwargs)

    def notebook_engine_profile_service_get_notebook_engine_profile(
        self,
        name_7,
        **kwargs
    ):
        """Get NotebookEngineProfile.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_engine_profile_service_get_notebook_engine_profile(name_7, async_req=True)
        >>> result = thread.get()

        Args:
            name_7 (str): NotebookEngineProfile resource name. Format: workspaces/{workspace}/notebookEngineProfiles/{notebook_engine_profile}  Authorization may require the following permission on the profile's parent workspace: * actions/enginemanager/notebookEngineProfiles/GET

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1GetNotebookEngineProfileResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_7'] = \
            name_7
        return self.notebook_engine_profile_service_get_notebook_engine_profile_endpoint.call_with_http_info(**kwargs)

    def notebook_engine_profile_service_list_assigned_notebook_engine_profiles(
        self,
        parent,
        **kwargs
    ):
        """Returns assigned NotebookEngineProfiles that match OIDC roles of the caller. (-- api-linter: core::0136::http-uri-suffix=disabled     aip.dev/not-precedent: Not a standard List method. --)  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_engine_profile_service_list_assigned_notebook_engine_profiles(parent, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Workspace resource name. Format: workspaces/{workspace}  Authorization may require the following permission on the profile's parent workspace: * actions/enginemanager/notebookEngineProfiles/LIST_ASSIGNED

        Keyword Args:
            page_size (int): Maximum number of NotebookEngineProfiles to return in a response. If unspecified (or set to 0), at most 50 NotebookEngineProfiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.. [optional]
            page_token (str): Leave unset to receive the initial page. To list any subsequent pages use the value of 'next_page_token' returned from the ListNotebookEngineProfilesResponse.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1ListAssignedNotebookEngineProfilesResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        return self.notebook_engine_profile_service_list_assigned_notebook_engine_profiles_endpoint.call_with_http_info(**kwargs)

    def notebook_engine_profile_service_list_notebook_engine_profiles(
        self,
        parent,
        **kwargs
    ):
        """Returns a collection of NotebookEngineProfiles.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_engine_profile_service_list_notebook_engine_profiles(parent, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Workspace resource name. Format: workspaces/{workspace}  Authorization may require the following permission on the profile's parent workspace: * actions/enginemanager/notebookEngineProfiles/LIST

        Keyword Args:
            page_size (int): Maximum number of NotebookEngineProfiles to return in a response. If unspecified (or set to 0), at most 50 NotebookEngineProfiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.. [optional]
            page_token (str): Leave unset to receive the initial page. To list any subsequent pages use the value of 'next_page_token' returned from the ListNotebookEngineProfilesResponse.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1ListNotebookEngineProfilesResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        return self.notebook_engine_profile_service_list_notebook_engine_profiles_endpoint.call_with_http_info(**kwargs)

    def notebook_engine_profile_service_update_notebook_engine_profile(
        self,
        notebook_engine_profile_name,
        update_mask,
        notebook_engine_profile,
        **kwargs
    ):
        """Updates a NotebookEngineProfile.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_engine_profile_service_update_notebook_engine_profile(notebook_engine_profile_name, update_mask, notebook_engine_profile, async_req=True)
        >>> result = thread.get()

        Args:
            notebook_engine_profile_name (str): Output only. Resource name. Format: workspaces/*/notebookEngineProfiles/*
            update_mask (str): Required. The list of paths referencing which fields to update. Update mask must be non-empty.  Allowed field paths are: - display_name - priority - enabled - assigned_oidc_roles_enabled - assigned_oidc_roles - max_running_engines - cpu_constraint - gpu_constraint - memory_bytes_constraint - storage_bytes_constraint - max_idle_duration_constraint - max_running_duration_constraint - yaml_pod_template_spec - yaml_gpu_tolerations - storage_class_name - gpu_resource_name  Paths are case sensitive (must match exactly).  To update all allowed fields, specify exactly one path with value \"*\".
            notebook_engine_profile (RequiredNotebookEngineProfileResource): Required. NotebookEngineProfile resource.  Authorization may require the following permission on the profile's parent workspace: * actions/enginemanager/notebookEngineProfiles/UPDATE

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1UpdateNotebookEngineProfileResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['notebook_engine_profile_name'] = \
            notebook_engine_profile_name
        kwargs['update_mask'] = \
            update_mask
        kwargs['notebook_engine_profile'] = \
            notebook_engine_profile
        return self.notebook_engine_profile_service_update_notebook_engine_profile_endpoint.call_with_http_info(**kwargs)


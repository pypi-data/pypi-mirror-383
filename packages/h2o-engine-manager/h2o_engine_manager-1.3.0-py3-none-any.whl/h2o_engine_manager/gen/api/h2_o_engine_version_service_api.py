"""
    ai/h2o/engine/v1/base_types.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from h2o_engine_manager.gen.api_client import ApiClient, Endpoint as _Endpoint
from h2o_engine_manager.gen.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from h2o_engine_manager.gen.model.h2_o_engine_version_service_assign_h2_o_engine_version_aliases_request import H2OEngineVersionServiceAssignH2OEngineVersionAliasesRequest
from h2o_engine_manager.gen.model.required_h2_o_engine_version_resource import RequiredH2OEngineVersionResource
from h2o_engine_manager.gen.model.rpc_status import RpcStatus
from h2o_engine_manager.gen.model.v1_assign_h2_o_engine_version_aliases_response import V1AssignH2OEngineVersionAliasesResponse
from h2o_engine_manager.gen.model.v1_create_h2_o_engine_version_response import V1CreateH2OEngineVersionResponse
from h2o_engine_manager.gen.model.v1_get_h2_o_engine_version_response import V1GetH2OEngineVersionResponse
from h2o_engine_manager.gen.model.v1_h2_o_engine_version import V1H2OEngineVersion
from h2o_engine_manager.gen.model.v1_list_h2_o_engine_versions_response import V1ListH2OEngineVersionsResponse
from h2o_engine_manager.gen.model.v1_update_h2_o_engine_version_response import V1UpdateH2OEngineVersionResponse


class H2OEngineVersionServiceApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.h2_o_engine_version_service_assign_h2_o_engine_version_aliases_endpoint = _Endpoint(
            settings={
                'response_type': (V1AssignH2OEngineVersionAliasesResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name_1}:assignAliases',
                'operation_id': 'h2_o_engine_version_service_assign_h2_o_engine_version_aliases',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_1',
                    'body',
                ],
                'required': [
                    'name_1',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_1',
                ]
            },
            root_map={
                'validations': {
                    ('name_1',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/h2oEngineVersions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_1':
                        (str,),
                    'body':
                        (H2OEngineVersionServiceAssignH2OEngineVersionAliasesRequest,),
                },
                'attribute_map': {
                    'name_1': 'name_1',
                },
                'location_map': {
                    'name_1': 'path',
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.h2_o_engine_version_service_create_h2_o_engine_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1CreateH2OEngineVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/h2oEngineVersions',
                'operation_id': 'h2_o_engine_version_service_create_h2_o_engine_version',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'h2o_engine_version_id',
                    'h2o_engine_version',
                ],
                'required': [
                    'parent',
                    'h2o_engine_version_id',
                    'h2o_engine_version',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'h2o_engine_version_id':
                        (str,),
                    'h2o_engine_version':
                        (V1H2OEngineVersion,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'h2o_engine_version_id': 'h2oEngineVersionId',
                },
                'location_map': {
                    'parent': 'path',
                    'h2o_engine_version_id': 'query',
                    'h2o_engine_version': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.h2_o_engine_version_service_delete_h2_o_engine_version_endpoint = _Endpoint(
            settings={
                'response_type': (bool, date, datetime, dict, float, int, list, str, none_type,),
                'auth': [],
                'endpoint_path': '/v1/{name_5}',
                'operation_id': 'h2_o_engine_version_service_delete_h2_o_engine_version',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_5',
                ],
                'required': [
                    'name_5',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_5',
                ]
            },
            root_map={
                'validations': {
                    ('name_5',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/h2oEngineVersions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_5':
                        (str,),
                },
                'attribute_map': {
                    'name_5': 'name_5',
                },
                'location_map': {
                    'name_5': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.h2_o_engine_version_service_get_h2_o_engine_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1GetH2OEngineVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name_5}',
                'operation_id': 'h2_o_engine_version_service_get_h2_o_engine_version',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_5',
                ],
                'required': [
                    'name_5',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_5',
                ]
            },
            root_map={
                'validations': {
                    ('name_5',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/h2oEngineVersions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_5':
                        (str,),
                },
                'attribute_map': {
                    'name_5': 'name_5',
                },
                'location_map': {
                    'name_5': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.h2_o_engine_version_service_list_h2_o_engine_versions_endpoint = _Endpoint(
            settings={
                'response_type': (V1ListH2OEngineVersionsResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/h2oEngineVersions',
                'operation_id': 'h2_o_engine_version_service_list_h2_o_engine_versions',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'page_size',
                    'page_token',
                ],
                'required': [
                    'parent',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'page_size':
                        (int,),
                    'page_token':
                        (str,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'page_size': 'pageSize',
                    'page_token': 'pageToken',
                },
                'location_map': {
                    'parent': 'path',
                    'page_size': 'query',
                    'page_token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.h2_o_engine_version_service_update_h2_o_engine_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1UpdateH2OEngineVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/{h2oEngineVersion.name}',
                'operation_id': 'h2_o_engine_version_service_update_h2_o_engine_version',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'h2o_engine_version_name',
                    'update_mask',
                    'h2o_engine_version',
                ],
                'required': [
                    'h2o_engine_version_name',
                    'update_mask',
                    'h2o_engine_version',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'h2o_engine_version_name',
                ]
            },
            root_map={
                'validations': {
                    ('h2o_engine_version_name',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/h2oEngineVersions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'h2o_engine_version_name':
                        (str,),
                    'update_mask':
                        (str,),
                    'h2o_engine_version':
                        (RequiredH2OEngineVersionResource,),
                },
                'attribute_map': {
                    'h2o_engine_version_name': 'h2oEngineVersion.name',
                    'update_mask': 'updateMask',
                },
                'location_map': {
                    'h2o_engine_version_name': 'path',
                    'update_mask': 'query',
                    'h2o_engine_version': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def h2_o_engine_version_service_assign_h2_o_engine_version_aliases(
        self,
        name_1,
        body,
        **kwargs
    ):
        """Assign new set of resourceID aliases to H2OEngineVersion. This will replace existing H2OEngineVersion resourceID aliases with the new aliases. If there are other H2OEngineVersions with the same alias that we try to assign to this H2OEngineVersion, they will be deleted from the other H2OEngineVersions.  # noqa: E501

        Example 1 - two versions in the same workspace: - h2ow1v1(name=\"workspaces/w1/h2oEngineVersions/v1\", aliases=[\"latest\", \"bar\"]) - h2ow1v2(name=\"workspaces/w1/h2oEngineVersions/v2\", aliases=[\"baz\", \"foo\"]) - AssignAliases(h2ow1v1, aliases=[\"latest\", \"baz\"]) => h2ow1v1.aliases=[\"latest\", \"baz\"] (changed) => h2ow1v2.aliases=[\"foo\"] (changed)  Example 2 - two versions in different workspaces: - h2ow1v1(name=\"workspaces/w1/h2oEngineVersions/v1\", aliases=[\"latest\", \"bar\"]) - h2ow2v1(name=\"workspaces/w2/h2oEngineVersions/v1\", aliases=[\"latest\", \"baz\"]) - AssignAliases(h2ow1v1, aliases=[\"latest\", \"baz\"]) => h2ow1v1.aliases=[\"latest\", \"baz\"] (changed) => h2ow2v1.aliases=[\"latest\", \"baz\"] (unchanged)  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.h2_o_engine_version_service_assign_h2_o_engine_version_aliases(name_1, body, async_req=True)
        >>> result = thread.get()

        Args:
            name_1 (str): H2OEngineVersion resource name. Format: workspaces/{workspace}/h2oEngineVersions/{h2o_engine_version}  Authorization may require the following permission on the h2oEngineVersion's parent workspace: * actions/enginemanager/h2oEngineVersions/ASSIGN_ALIASES
            body (H2OEngineVersionServiceAssignH2OEngineVersionAliasesRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1AssignH2OEngineVersionAliasesResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_1'] = \
            name_1
        kwargs['body'] = \
            body
        return self.h2_o_engine_version_service_assign_h2_o_engine_version_aliases_endpoint.call_with_http_info(**kwargs)

    def h2_o_engine_version_service_create_h2_o_engine_version(
        self,
        parent,
        h2o_engine_version_id,
        h2o_engine_version,
        **kwargs
    ):
        """Creates a new H2OEngineVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.h2_o_engine_version_service_create_h2_o_engine_version(parent, h2o_engine_version_id, h2o_engine_version, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Workspace resource name. Format: workspaces/{workspace}  Authorization may require the following permission on the h2oEngineVersion's parent workspace: * actions/enginemanager/h2oEngineVersions/CREATE
            h2o_engine_version_id (str): Specify the H2OEngineVersion ID, which will become a part of the H2OEngineVersion resource name.  It must: - be in semver format (more segments than three segments allowed) - contain max 63 characters  Examples: \"1.10.3\", \"1.10.3-alpha\", \"1.10.3.2\", \"1.10.3.2-alpha\"
            h2o_engine_version (V1H2OEngineVersion): The H2OEngineVersion resource to create.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1CreateH2OEngineVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        kwargs['h2o_engine_version_id'] = \
            h2o_engine_version_id
        kwargs['h2o_engine_version'] = \
            h2o_engine_version
        return self.h2_o_engine_version_service_create_h2_o_engine_version_endpoint.call_with_http_info(**kwargs)

    def h2_o_engine_version_service_delete_h2_o_engine_version(
        self,
        name_5,
        **kwargs
    ):
        """Deletes a H2OEngineVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.h2_o_engine_version_service_delete_h2_o_engine_version(name_5, async_req=True)
        >>> result = thread.get()

        Args:
            name_5 (str): H2OEngineVersion resource name. Format: workspaces/{workspace}/h2oEngineVersions/{h2o_engine_version}  Authorization may require the following permission on the h2oEngineVersion's parent workspace: * actions/enginemanager/h2oEngineVersions/DELETE

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            bool, date, datetime, dict, float, int, list, str, none_type
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_5'] = \
            name_5
        return self.h2_o_engine_version_service_delete_h2_o_engine_version_endpoint.call_with_http_info(**kwargs)

    def h2_o_engine_version_service_get_h2_o_engine_version(
        self,
        name_5,
        **kwargs
    ):
        """Get H2OEngineVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.h2_o_engine_version_service_get_h2_o_engine_version(name_5, async_req=True)
        >>> result = thread.get()

        Args:
            name_5 (str): H2OEngineVersion resource name. Format: workspaces/{workspace}/h2oEngineVersions/{h2o_engine_version}  Authorization may require the following permission on the h2oEngineVersion's parent workspace: * actions/enginemanager/h2oEngineVersions/GET

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1GetH2OEngineVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_5'] = \
            name_5
        return self.h2_o_engine_version_service_get_h2_o_engine_version_endpoint.call_with_http_info(**kwargs)

    def h2_o_engine_version_service_list_h2_o_engine_versions(
        self,
        parent,
        **kwargs
    ):
        """Returns a collection of H2OEngineVersions.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.h2_o_engine_version_service_list_h2_o_engine_versions(parent, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Workspace resource name. Format: workspaces/{workspace}  Authorization may require the following permission on the h2oEngineVersion's parent workspace: * actions/enginemanager/h2oEngineVersions/LIST

        Keyword Args:
            page_size (int): Maximum number of H2OEngineVersions to return in a response. If unspecified (or set to 0), at most 50 H2OEngineVersions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.. [optional]
            page_token (str): Leave unset to receive the initial page. To list any subsequent pages use the value of 'next_page_token' returned from the ListH2OEngineVersionsResponse.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1ListH2OEngineVersionsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        return self.h2_o_engine_version_service_list_h2_o_engine_versions_endpoint.call_with_http_info(**kwargs)

    def h2_o_engine_version_service_update_h2_o_engine_version(
        self,
        h2o_engine_version_name,
        update_mask,
        h2o_engine_version,
        **kwargs
    ):
        """Updates a H2OEngineVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.h2_o_engine_version_service_update_h2_o_engine_version(h2o_engine_version_name, update_mask, h2o_engine_version, async_req=True)
        >>> result = thread.get()

        Args:
            h2o_engine_version_name (str): H2OEngineVersion resource name. For example: workspaces/global/h2oEngineVersions/3.38.0.1
            update_mask (str): Required. The list of paths referencing which fields to update. Update mask must be non-empty.  Allowed field paths are: - deprecated - image - image_pull_policy - image_pull_secrets  Paths are case sensitive (must match exactly).  To update all allowed fields, specify exactly one path with value \"*\".
            h2o_engine_version (RequiredH2OEngineVersionResource): Required. H2OEngineVersion resource.  Authorization may require the following permission on the h2oEngineVersion's parent workspace: * actions/enginemanager/h2oEngineVersions/UPDATE

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1UpdateH2OEngineVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['h2o_engine_version_name'] = \
            h2o_engine_version_name
        kwargs['update_mask'] = \
            update_mask
        kwargs['h2o_engine_version'] = \
            h2o_engine_version
        return self.h2_o_engine_version_service_update_h2_o_engine_version_endpoint.call_with_http_info(**kwargs)


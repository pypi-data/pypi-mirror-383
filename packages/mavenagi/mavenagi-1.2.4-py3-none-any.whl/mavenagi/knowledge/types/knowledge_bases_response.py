# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ...commons.types.page import Page
from ...core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ...core.serialization import FieldMetadata
from .knowledge_base_response import KnowledgeBaseResponse


class KnowledgeBasesResponse(Page):
    knowledge_bases: typing_extensions.Annotated[
        typing.List[KnowledgeBaseResponse], FieldMetadata(alias="knowledgeBases")
    ] = pydantic.Field()
    """
    The knowledge bases that match the search criteria
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...commons.types.precondition_group import PreconditionGroup  # noqa: E402, F401, I001

update_forward_refs(KnowledgeBasesResponse)

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.serialization import FieldMetadata
from .action_execution_param_value import ActionExecutionParamValue
from .bot_logic_action_reviewed_detail import BotLogicActionReviewedDetail


class BotLogicActionExecutedDetail(BotLogicActionReviewedDetail):
    action_parameters: typing_extensions.Annotated[
        typing.Dict[str, ActionExecutionParamValue], FieldMetadata(alias="actionParameters")
    ]
    execution_result: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="executionResult")] = None
    execution_error: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="executionError")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

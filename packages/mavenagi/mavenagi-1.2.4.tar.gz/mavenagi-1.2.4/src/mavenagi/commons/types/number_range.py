# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class NumberRange(UniversalBaseModel):
    """
    A range of numbers that can be used to filter search results by numeric fields.
    - `greaterThanOrEqual`: The minimum value (inclusive).
    - `lessThan`: The maximum value (exclusive).
    """

    greater_than_or_equal: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="greaterThanOrEqual")
    ] = None
    less_than: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="lessThan")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

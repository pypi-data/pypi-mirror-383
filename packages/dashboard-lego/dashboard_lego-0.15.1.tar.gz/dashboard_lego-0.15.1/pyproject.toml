[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dashboard-lego"
version = "0.15.1"
description = "A modular Python library for building interactive dashboards using Dash and Plotly"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Vitalii Voronov", email = "myrdhin.yates@gmail.com"}
]
maintainers = [
    {name = "Vitalii Voronov", email = "myrdhin.yates@gmail.com"}
]
keywords = ["dashboard", "dash", "plotly", "data-visualization", "eda"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10,<3.12"
dependencies = [
    "dash>=2.14.0",
    "dash-bootstrap-components>=1.5.0",
    "plotly>=5.17.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "diskcache>=5.6.0",
    "pyarrow>=14.0.0",
    "sqlalchemy>=2.0.43",
    "scikit-learn>=1.6.1",
    "isort>=6.0.1",
]

[project.urls]
Homepage = "https://github.com/blghtr/dashboard_lego"
Documentation = "https://blghtr.github.io/dashboard_lego/"
Repository = "https://github.com/blghtr/dashboard_lego"
"Bug Tracker" = "https://github.com/blghtr/dashboard_lego/issues"
Changelog = "https://github.com/blghtr/dashboard_lego/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "dash[testing]>=2.14.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
ml = [
    "scipy>=1.11.1",
    "scikit-learn>=1.3.0",
]
sql = [
    "sqlalchemy>=2.0.0",
]


[tool.setuptools]
package-dir = {"" = "src"}
packages = ["dashboard_lego", "dashboard_lego.blocks", "dashboard_lego.core", "dashboard_lego.core.datasources", "dashboard_lego.presets", "dashboard_lego.utils"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["dashboard_lego"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "dash.*",
    "plotly.*",
    "pandas.*",
    "numpy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dashboard_lego",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["dashboard_lego"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.poetry.scripts]
build-docs = "sphinx-build docs/source docs/build"

[dependency-groups]
dev = [
    "pytest-mock",
]

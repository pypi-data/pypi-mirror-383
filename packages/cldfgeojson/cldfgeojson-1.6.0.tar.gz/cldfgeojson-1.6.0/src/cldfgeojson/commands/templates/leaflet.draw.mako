<%def name="include()">
<script src="data:text/javascript;base64,LyoqCiAqIExlYWZsZXQuZHJhdyBhc3N1bWVzIHRoYXQgeW91IGhhdmUgYWxyZWFkeSBpbmNsdWRlZCB0aGUgTGVhZmxldCBsaWJyYXJ5LgogKi8KTC5kcmF3VmVyc2lvbiA9ICcwLjQuMic7Ci8qKgogKiBAY2xhc3MgTC5EcmF3CiAqIEBha2EgRHJhdwogKgogKgogKiBUbyBhZGQgdGhlIGRyYXcgdG9vbGJhciBzZXQgdGhlIG9wdGlvbiBkcmF3Q29udHJvbDogdHJ1ZSBpbiB0aGUgbWFwIG9wdGlvbnMuCiAqCiAqIEBleGFtcGxlCiAqIGBgYGpzCiAqICAgICAgdmFyIG1hcCA9IEwubWFwKCdtYXAnLCB7ZHJhd0NvbnRyb2w6IHRydWV9KS5zZXRWaWV3KFs1MS41MDUsIC0wLjA5XSwgMTMpOwogKgogKiAgICAgIEwudGlsZUxheWVyKCdodHRwOi8ve3N9LnRpbGUub3NtLm9yZy97en0ve3h9L3t5fS5wbmcnLCB7CiAqICAgICAgICAgIGF0dHJpYnV0aW9uOiAnJmNvcHk7IDxhIGhyZWY9Imh0dHA6Ly9vc20ub3JnL2NvcHlyaWdodCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJwogKiAgICAgIH0pLmFkZFRvKG1hcCk7CiAqIGBgYAogKgogKiAjIyMgQWRkaW5nIHRoZSBlZGl0IHRvb2xiYXIKICogVG8gdXNlIHRoZSBlZGl0IHRvb2xiYXIgeW91IG11c3QgaW5pdGlhbGlzZSB0aGUgTGVhZmxldC5kcmF3IGNvbnRyb2wgYW5kIG1hbnVhbGx5IGFkZCBpdCB0byB0aGUgbWFwLgogKgogKiBgYGBqcwogKiAgICAgIHZhciBtYXAgPSBMLm1hcCgnbWFwJykuc2V0VmlldyhbNTEuNTA1LCAtMC4wOV0sIDEzKTsKICoKICogICAgICBMLnRpbGVMYXllcignaHR0cDovL3tzfS50aWxlLm9zbS5vcmcve3p9L3t4fS97eX0ucG5nJywgewogKiAgICAgICAgICBhdHRyaWJ1dGlvbjogJyZjb3B5OyA8YSBocmVmPSJodHRwOi8vb3NtLm9yZy9jb3B5cmlnaHQiPk9wZW5TdHJlZXRNYXA8L2E+IGNvbnRyaWJ1dG9ycycKICogICAgICB9KS5hZGRUbyhtYXApOwogKgogKiAgICAgIC8vIEZlYXR1cmVHcm91cCBpcyB0byBzdG9yZSBlZGl0YWJsZSBsYXllcnMKICogICAgICB2YXIgZHJhd25JdGVtcyA9IG5ldyBMLkZlYXR1cmVHcm91cCgpOwogKiAgICAgIG1hcC5hZGRMYXllcihkcmF3bkl0ZW1zKTsKICoKICogICAgICB2YXIgZHJhd0NvbnRyb2wgPSBuZXcgTC5Db250cm9sLkRyYXcoewogKiAgICAgICAgICBlZGl0OiB7CiAqICAgICAgICAgICAgICBmZWF0dXJlR3JvdXA6IGRyYXduSXRlbXMKICogICAgICAgICAgfQogKiAgICAgIH0pOwogKiAgICAgIG1hcC5hZGRDb250cm9sKGRyYXdDb250cm9sKTsKICogYGBgCiAqCiAqIFRoZSBrZXkgaGVyZSBpcyB0aGUgZmVhdHVyZUdyb3VwIG9wdGlvbi4gVGhpcyB0ZWxscyB0aGUgcGx1Z2luIHdoaWNoIEZlYXR1cmVHcm91cCBjb250YWlucyB0aGUgbGF5ZXJzIHRoYXQKICogc2hvdWxkIGJlIGVkaXRhYmxlLiBUaGUgZmVhdHVyZUdyb3VwIGNhbiBjb250YWluIDAgb3IgbW9yZSBmZWF0dXJlcyB3aXRoIGdlb21ldHJ5IHR5cGVzIFBvaW50LCBMaW5lU3RyaW5nLCBhbmQgUG9seWdvbi4KICogTGVhZmxldC5kcmF3IGRvZXMgbm90IHdvcmsgd2l0aCBtdWx0aWdlb21ldHJ5IGZlYXR1cmVzIHN1Y2ggYXMgTXVsdGlQb2ludCwgTXVsdGlMaW5lU3RyaW5nLCBNdWx0aVBvbHlnb24sCiAqIG9yIEdlb21ldHJ5Q29sbGVjdGlvbi4gSWYgeW91IG5lZWQgdG8gYWRkIG11bHRpZ2VvbWV0cnkgZmVhdHVyZXMgdG8gdGhlIGRyYXcgcGx1Z2luLCBjb252ZXJ0IHRoZW0gdG8gYQogKiBGZWF0dXJlQ29sbGVjdGlvbiBvZiBub24tbXVsdGlnZW9tZXRyaWVzIChQb2ludHMsIExpbmVTdHJpbmdzLCBvciBQb2x5Z29ucykuCiAqLwpMLkRyYXcgPSB7fTsKCi8qKgogKiBAY2xhc3MgTC5kcmF3TG9jYWwKICogQGFrYSBMLmRyYXdMb2NhbAogKgogKiBUaGUgY29yZSB0b29sYmFyIGNsYXNzIG9mIHRoZSBBUEkg4oCUIGl0IGlzIHVzZWQgdG8gY3JlYXRlIHRoZSB0b29sYmFyIHVpCiAqCiAqIEBleGFtcGxlCiAqIGBgYGpzCiAqICAgICAgdmFyIG1vZGlmaWVkRHJhdyA9IEwuZHJhd0xvY2FsLmV4dGVuZCh7CiAqICAgICAgICAgIGRyYXc6IHsKICogICAgICAgICAgICAgIHRvb2xiYXI6IHsKICogICAgICAgICAgICAgICAgICBidXR0b25zOiB7CiAqICAgICAgICAgICAgICAgICAgICAgIHBvbHlnb246ICdEcmF3IGFuIGF3ZXNvbWUgcG9seWdvbicKICogICAgICAgICAgICAgICAgICB9CiAqICAgICAgICAgICAgICB9CiAqICAgICAgICAgIH0KICogICAgICB9KTsKICogYGBgCiAqCiAqIFRoZSBkZWZhdWx0IHN0YXRlIGZvciB0aGUgY29udHJvbCBpcyB0aGUgZHJhdyB0b29sYmFyIGp1c3QgYmVsb3cgdGhlIHpvb20gY29udHJvbC4KICogIFRoaXMgd2lsbCBhbGxvdyBtYXAgdXNlcnMgdG8gZHJhdyB2ZWN0b3JzIGFuZCBtYXJrZXJzLgogKiAgKipQbGVhc2Ugbm90ZSB0aGUgZWRpdCB0b29sYmFyIGlzIG5vdCBlbmFibGVkIGJ5IGRlZmF1bHQuKioKICovCkwuZHJhd0xvY2FsID0gewoJLy8gZm9ybWF0OiB7CgkvLyAJbnVtZXJpYzogewoJLy8gCQlkZWxpbWl0ZXJzOiB7CgkvLyAJCQl0aG91c2FuZHM6ICcsJywKCS8vIAkJCWRlY2ltYWw6ICcuJwoJLy8gCQl9CgkvLyAJfQoJLy8gfSwKCWRyYXc6IHsKCQl0b29sYmFyOiB7CgkJCS8vICNUT0RPOiB0aGlzIHNob3VsZCBiZSByZW9yZ2FuaXplZCB3aGVyZSBhY3Rpb25zIGFyZSBuZXN0ZWQgaW4gYWN0aW9ucwoJCQkvLyBleDogYWN0aW9ucy51bmRvICBvciBhY3Rpb25zLmNhbmNlbAoJCQlhY3Rpb25zOiB7CgkJCQl0aXRsZTogJ0NhbmNlbCBkcmF3aW5nJywKCQkJCXRleHQ6ICdDYW5jZWwnCgkJCX0sCgkJCWZpbmlzaDogewoJCQkJdGl0bGU6ICdGaW5pc2ggZHJhd2luZycsCgkJCQl0ZXh0OiAnRmluaXNoJwoJCQl9LAoJCQl1bmRvOiB7CgkJCQl0aXRsZTogJ0RlbGV0ZSBsYXN0IHBvaW50IGRyYXduJywKCQkJCXRleHQ6ICdEZWxldGUgbGFzdCBwb2ludCcKCQkJfSwKCQkJYnV0dG9uczogewoJCQkJcG9seWxpbmU6ICdEcmF3IGEgcG9seWxpbmUnLAoJCQkJcG9seWdvbjogJ0RyYXcgYSBwb2x5Z29uJywKCQkJCXJlY3RhbmdsZTogJ0RyYXcgYSByZWN0YW5nbGUnLAoJCQkJY2lyY2xlOiAnRHJhdyBhIGNpcmNsZScsCgkJCQltYXJrZXI6ICdEcmF3IGEgbWFya2VyJywKCQkJCWNpcmNsZW1hcmtlcjogJ0RyYXcgYSBjaXJjbGVtYXJrZXInCgkJCX0KCQl9LAoJCWhhbmRsZXJzOiB7CgkJCWNpcmNsZTogewoJCQkJdG9vbHRpcDogewoJCQkJCXN0YXJ0OiAnQ2xpY2sgYW5kIGRyYWcgdG8gZHJhdyBjaXJjbGUuJwoJCQkJfSwKCQkJCXJhZGl1czogJ1JhZGl1cycKCQkJfSwKCQkJY2lyY2xlbWFya2VyOiB7CgkJCQl0b29sdGlwOiB7CgkJCQkJc3RhcnQ6ICdDbGljayBtYXAgdG8gcGxhY2UgY2lyY2xlIG1hcmtlci4nCgkJCQl9CgkJCX0sCgkJCW1hcmtlcjogewoJCQkJdG9vbHRpcDogewoJCQkJCXN0YXJ0OiAnQ2xpY2sgbWFwIHRvIHBsYWNlIG1hcmtlci4nCgkJCQl9CgkJCX0sCgkJCXBvbHlnb246IHsKCQkJCXRvb2x0aXA6IHsKCQkJCQlzdGFydDogJ0NsaWNrIHRvIHN0YXJ0IGRyYXdpbmcgc2hhcGUuJywKCQkJCQljb250OiAnQ2xpY2sgdG8gY29udGludWUgZHJhd2luZyBzaGFwZS4nLAoJCQkJCWVuZDogJ0NsaWNrIGZpcnN0IHBvaW50IHRvIGNsb3NlIHRoaXMgc2hhcGUuJwoJCQkJfQoJCQl9LAoJCQlwb2x5bGluZTogewoJCQkJZXJyb3I6ICc8c3Ryb25nPkVycm9yOjwvc3Ryb25nPiBzaGFwZSBlZGdlcyBjYW5ub3QgY3Jvc3MhJywKCQkJCXRvb2x0aXA6IHsKCQkJCQlzdGFydDogJ0NsaWNrIHRvIHN0YXJ0IGRyYXdpbmcgbGluZS4nLAoJCQkJCWNvbnQ6ICdDbGljayB0byBjb250aW51ZSBkcmF3aW5nIGxpbmUuJywKCQkJCQllbmQ6ICdDbGljayBsYXN0IHBvaW50IHRvIGZpbmlzaCBsaW5lLicKCQkJCX0KCQkJfSwKCQkJcmVjdGFuZ2xlOiB7CgkJCQl0b29sdGlwOiB7CgkJCQkJc3RhcnQ6ICdDbGljayBhbmQgZHJhZyB0byBkcmF3IHJlY3RhbmdsZS4nCgkJCQl9CgkJCX0sCgkJCXNpbXBsZXNoYXBlOiB7CgkJCQl0b29sdGlwOiB7CgkJCQkJZW5kOiAnUmVsZWFzZSBtb3VzZSB0byBmaW5pc2ggZHJhd2luZy4nCgkJCQl9CgkJCX0KCQl9Cgl9LAoJZWRpdDogewoJCXRvb2xiYXI6IHsKCQkJYWN0aW9uczogewoJCQkJc2F2ZTogewoJCQkJCXRpdGxlOiAnU2F2ZSBjaGFuZ2VzJywKCQkJCQl0ZXh0OiAnU2F2ZScKCQkJCX0sCgkJCQljYW5jZWw6IHsKCQkJCQl0aXRsZTogJ0NhbmNlbCBlZGl0aW5nLCBkaXNjYXJkcyBhbGwgY2hhbmdlcycsCgkJCQkJdGV4dDogJ0NhbmNlbCcKCQkJCX0sCgkJCQljbGVhckFsbDogewoJCQkJCXRpdGxlOiAnQ2xlYXIgYWxsIGxheWVycycsCgkJCQkJdGV4dDogJ0NsZWFyIEFsbCcKCQkJCX0KCQkJfSwKCQkJYnV0dG9uczogewoJCQkJZWRpdDogJ0VkaXQgbGF5ZXJzJywKCQkJCWVkaXREaXNhYmxlZDogJ05vIGxheWVycyB0byBlZGl0JywKCQkJCXJlbW92ZTogJ0RlbGV0ZSBsYXllcnMnLAoJCQkJcmVtb3ZlRGlzYWJsZWQ6ICdObyBsYXllcnMgdG8gZGVsZXRlJwoJCQl9CgkJfSwKCQloYW5kbGVyczogewoJCQllZGl0OiB7CgkJCQl0b29sdGlwOiB7CgkJCQkJdGV4dDogJ0RyYWcgaGFuZGxlcyBvciBtYXJrZXJzIHRvIGVkaXQgZmVhdHVyZXMuJywKCQkJCQlzdWJ0ZXh0OiAnQ2xpY2sgY2FuY2VsIHRvIHVuZG8gY2hhbmdlcy4nCgkJCQl9CgkJCX0sCgkJCXJlbW92ZTogewoJCQkJdG9vbHRpcDogewoJCQkJCXRleHQ6ICdDbGljayBvbiBhIGZlYXR1cmUgdG8gcmVtb3ZlLicKCQkJCX0KCQkJfQoJCX0KCX0KfTsK"></script>
<script src="data:text/javascript;base64,LyoqCiAqICMjIyBFdmVudHMKICogT25jZSB5b3UgaGF2ZSBzdWNjZXNzZnVsbHkgYWRkZWQgdGhlIExlYWZsZXQuZHJhdyBwbHVnaW4gdG8geW91ciBtYXAgeW91IHdpbGwgd2FudCB0byByZXNwb25kIHRvIHRoZSBkaWZmZXJlbnQKICogYWN0aW9ucyB1c2VycyBjYW4gaW5pdGlhdGUuIFRoZSBmb2xsb3dpbmcgZXZlbnRzIHdpbGwgYmUgdHJpZ2dlcmVkIG9uIHRoZSBtYXA6CiAqCiAqIEBjbGFzcyBMLkRyYXcuRXZlbnQKICogQGFrYSBEcmF3LkV2ZW50CiAqCiAqIFVzZSBgTC5EcmF3LkV2ZW50LkVWRU5UTkFNRWAgY29uc3RhbnRzIHRvIGVuc3VyZSBldmVudHMgYXJlIGNvcnJlY3QuCiAqCiAqIEBleGFtcGxlCiAqIGBgYGpzCiAqIG1hcC5vbihMLkRyYXcuRXZlbnQuQ1JFQVRFRDsgZnVuY3Rpb24gKGUpIHsKICogICAgdmFyIHR5cGUgPSBlLmxheWVyVHlwZSwKICogICAgICAgIGxheWVyID0gZS5sYXllcjsKICoKICogICAgaWYgKHR5cGUgPT09ICdtYXJrZXInKSB7CiAqICAgICAgICAvLyBEbyBtYXJrZXIgc3BlY2lmaWMgYWN0aW9ucwogKiAgICB9CiAqCiAqICAgIC8vIERvIHdoYXRldmVyIGVsc2UgeW91IG5lZWQgdG8uIChzYXZlIHRvIGRiOyBhZGQgdG8gbWFwIGV0YykKICogICAgbWFwLmFkZExheWVyKGxheWVyKTsKICp9KTsKICogYGBgCiAqLwpMLkRyYXcuRXZlbnQgPSB7fTsKLyoqCiAqIEBldmVudCBkcmF3OmNyZWF0ZWQ6IFBvbHlMaW5lOyBQb2x5Z29uOyBSZWN0YW5nbGU7IENpcmNsZTsgTWFya2VyIHwgU3RyaW5nCiAqCiAqIExheWVyIHRoYXQgd2FzIGp1c3QgY3JlYXRlZC4KICogVGhlIHR5cGUgb2YgbGF5ZXIgdGhpcyBpcy4gT25lIG9mOiBgcG9seWxpbmVgOyBgcG9seWdvbmA7IGByZWN0YW5nbGVgOyBgY2lyY2xlYDsgYG1hcmtlcmAKICogVHJpZ2dlcmVkIHdoZW4gYSBuZXcgdmVjdG9yIG9yIG1hcmtlciBoYXMgYmVlbiBjcmVhdGVkLgogKgogKi8KTC5EcmF3LkV2ZW50LkNSRUFURUQgPSAnZHJhdzpjcmVhdGVkJzsKCi8qKgogKiBAZXZlbnQgZHJhdzplZGl0ZWQ6IExheWVyR3JvdXAKICoKICogTGlzdCBvZiBhbGwgbGF5ZXJzIGp1c3QgZWRpdGVkIG9uIHRoZSBtYXAuCiAqCiAqCiAqIFRyaWdnZXJlZCB3aGVuIGxheWVycyBpbiB0aGUgRmVhdHVyZUdyb3VwOyBpbml0aWFsaXNlZCB3aXRoIHRoZSBwbHVnaW47IGhhdmUgYmVlbiBlZGl0ZWQgYW5kIHNhdmVkLgogKgogKiBAZXhhbXBsZQogKiBgYGBqcwogKiAgICAgIG1hcC5vbignZHJhdzplZGl0ZWQnLCBmdW5jdGlvbiAoZSkgewogICAgICogICAgICAgICAgdmFyIGxheWVycyA9IGUubGF5ZXJzOwogICAgICogICAgICAgICAgbGF5ZXJzLmVhY2hMYXllcihmdW5jdGlvbiAobGF5ZXIpIHsKICAgICAqICAgICAgICAgICAgICAvL2RvIHdoYXRldmVyIHlvdSB3YW50OyBtb3N0IGxpa2VseSBzYXZlIGJhY2sgdG8gZGIKICAgICAqICAgICAgICAgIH0pOwogICAgICogICAgICB9KTsKICogYGBgCiAqLwpMLkRyYXcuRXZlbnQuRURJVEVEID0gJ2RyYXc6ZWRpdGVkJzsKCi8qKgogKiBAZXZlbnQgZHJhdzpkZWxldGVkOiBMYXllckdyb3VwCiAqCiAqIExpc3Qgb2YgYWxsIGxheWVycyBqdXN0IHJlbW92ZWQgZnJvbSB0aGUgbWFwLgogKgogKiBUcmlnZ2VyZWQgd2hlbiBsYXllcnMgaGF2ZSBiZWVuIHJlbW92ZWQgKGFuZCBzYXZlZCkgZnJvbSB0aGUgRmVhdHVyZUdyb3VwLgogKi8KTC5EcmF3LkV2ZW50LkRFTEVURUQgPSAnZHJhdzpkZWxldGVkJzsKCi8qKgogKiBAZXZlbnQgZHJhdzpkcmF3c3RhcnQ6IFN0cmluZwogKgogKiBUaGUgdHlwZSBvZiBsYXllciB0aGlzIGlzLiBPbmUgb2Y6YHBvbHlsaW5lYDsgYHBvbHlnb25gOyBgcmVjdGFuZ2xlYDsgYGNpcmNsZWA7IGBtYXJrZXJgCiAqCiAqIFRyaWdnZXJlZCB3aGVuIHRoZSB1c2VyIGhhcyBjaG9zZW4gdG8gZHJhdyBhIHBhcnRpY3VsYXIgdmVjdG9yIG9yIG1hcmtlci4KICovCkwuRHJhdy5FdmVudC5EUkFXU1RBUlQgPSAnZHJhdzpkcmF3c3RhcnQnOwoKLyoqCiAqIEBldmVudCBkcmF3OmRyYXdzdG9wOiBTdHJpbmcKICoKICogVGhlIHR5cGUgb2YgbGF5ZXIgdGhpcyBpcy4gT25lIG9mOiBgcG9seWxpbmVgOyBgcG9seWdvbmA7IGByZWN0YW5nbGVgOyBgY2lyY2xlYDsgYG1hcmtlcmAKICoKICogVHJpZ2dlcmVkIHdoZW4gdGhlIHVzZXIgaGFzIGZpbmlzaGVkIGEgcGFydGljdWxhciB2ZWN0b3Igb3IgbWFya2VyLgogKi8KCkwuRHJhdy5FdmVudC5EUkFXU1RPUCA9ICdkcmF3OmRyYXdzdG9wJzsKCi8qKgogKiBAZXZlbnQgZHJhdzpkcmF3dmVydGV4OiBMYXllckdyb3VwCiAqCiAqIExpc3Qgb2YgYWxsIGxheWVycyBqdXN0IGJlaW5nIGFkZGVkIGZyb20gdGhlIG1hcC4KICoKICogVHJpZ2dlcmVkIHdoZW4gYSB2ZXJ0ZXggaXMgY3JlYXRlZCBvbiBhIHBvbHlsaW5lIG9yIHBvbHlnb24uCiAqLwpMLkRyYXcuRXZlbnQuRFJBV1ZFUlRFWCA9ICdkcmF3OmRyYXd2ZXJ0ZXgnOwoKLyoqCiAqIEBldmVudCBkcmF3OmVkaXRzdGFydDogU3RyaW5nCiAqCiAqIFRoZSB0eXBlIG9mIGVkaXQgdGhpcyBpcy4gT25lIG9mOiBgZWRpdGAKICoKICogVHJpZ2dlcmVkIHdoZW4gdGhlIHVzZXIgc3RhcnRzIGVkaXQgbW9kZSBieSBjbGlja2luZyB0aGUgZWRpdCB0b29sIGJ1dHRvbi4KICovCgpMLkRyYXcuRXZlbnQuRURJVFNUQVJUID0gJ2RyYXc6ZWRpdHN0YXJ0JzsKCi8qKgogKiBAZXZlbnQgZHJhdzplZGl0bW92ZTogSUxheWVyCiAqCiAqICBMYXllciB0aGF0IHdhcyBqdXN0IG1vdmVkLgogKgogKiBUcmlnZ2VyZWQgYXMgdGhlIHVzZXIgbW92ZXMgYSByZWN0YW5nbGU7IGNpcmNsZSBvciBtYXJrZXIuCiAqLwpMLkRyYXcuRXZlbnQuRURJVE1PVkUgPSAnZHJhdzplZGl0bW92ZSc7CgovKioKICogQGV2ZW50IGRyYXc6ZWRpdHJlc2l6ZTogSUxheWVyCiAqCiAqIExheWVyIHRoYXQgd2FzIGp1c3QgbW92ZWQuCiAqCiAqIFRyaWdnZXJlZCBhcyB0aGUgdXNlciByZXNpemVzIGEgcmVjdGFuZ2xlIG9yIGNpcmNsZS4KICovCkwuRHJhdy5FdmVudC5FRElUUkVTSVpFID0gJ2RyYXc6ZWRpdHJlc2l6ZSc7CgovKioKICogQGV2ZW50IGRyYXc6ZWRpdHZlcnRleDogTGF5ZXJHcm91cAogKgogKiBMaXN0IG9mIGFsbCBsYXllcnMganVzdCBiZWluZyBlZGl0ZWQgZnJvbSB0aGUgbWFwLgogKgogKiBUcmlnZ2VyZWQgd2hlbiBhIHZlcnRleCBpcyBlZGl0ZWQgb24gYSBwb2x5bGluZSBvciBwb2x5Z29uLgogKi8KTC5EcmF3LkV2ZW50LkVESVRWRVJURVggPSAnZHJhdzplZGl0dmVydGV4JzsKCi8qKgogKiBAZXZlbnQgZHJhdzplZGl0c3RvcDogU3RyaW5nCiAqCiAqIFRoZSB0eXBlIG9mIGVkaXQgdGhpcyBpcy4gT25lIG9mOiBgZWRpdGAKICoKICogVHJpZ2dlcmVkIHdoZW4gdGhlIHVzZXIgaGFzIGZpbnNoZWQgZWRpdGluZyAoZWRpdCBtb2RlKSBhbmQgc2F2ZXMgZWRpdHMuCiAqLwpMLkRyYXcuRXZlbnQuRURJVFNUT1AgPSAnZHJhdzplZGl0c3RvcCc7CgovKioKICogQGV2ZW50IGRyYXc6ZGVsZXRlc3RhcnQ6IFN0cmluZwogKgogKiBUaGUgdHlwZSBvZiBlZGl0IHRoaXMgaXMuIE9uZSBvZjogYHJlbW92ZWAKICoKICogVHJpZ2dlcmVkIHdoZW4gdGhlIHVzZXIgc3RhcnRzIHJlbW92ZSBtb2RlIGJ5IGNsaWNraW5nIHRoZSByZW1vdmUgdG9vbCBidXR0b24uCiAqLwpMLkRyYXcuRXZlbnQuREVMRVRFU1RBUlQgPSAnZHJhdzpkZWxldGVzdGFydCc7CgovKioKICogQGV2ZW50IGRyYXc6ZGVsZXRlc3RvcDogU3RyaW5nCiAqCiAqIFRoZSB0eXBlIG9mIGVkaXQgdGhpcyBpcy4gT25lIG9mOiBgcmVtb3ZlYAogKgogKiBUcmlnZ2VyZWQgd2hlbiB0aGUgdXNlciBoYXMgZmluaXNoZWQgcmVtb3Zpbmcgc2hhcGVzIChyZW1vdmUgbW9kZSkgYW5kIHNhdmVzLgogKi8KTC5EcmF3LkV2ZW50LkRFTEVURVNUT1AgPSAnZHJhdzpkZWxldGVzdG9wJzsKCi8qKgogKiBAZXZlbnQgZHJhdzp0b29sYmFyb3BlbmVkOiBTdHJpbmcKICoKICogVHJpZ2dlcmVkIHdoZW4gYSB0b29sYmFyIGlzIG9wZW5lZC4KICovCkwuRHJhdy5FdmVudC5UT09MQkFST1BFTkVEID0gJ2RyYXc6dG9vbGJhcm9wZW5lZCc7CgovKioKICogQGV2ZW50IGRyYXc6dG9vbGJhcmNsb3NlZDogU3RyaW5nCiAqCiAqIFRyaWdnZXJlZCB3aGVuIGEgdG9vbGJhciBpcyBjbG9zZWQuCiAqLwpMLkRyYXcuRXZlbnQuVE9PTEJBUkNMT1NFRCA9ICdkcmF3OnRvb2xiYXJjbG9zZWQnOwoKLyoqCiAqIEBldmVudCBkcmF3Om1hcmtlcmNvbnRleHQ6IFN0cmluZwogKgogKiBUcmlnZ2VyZWQgd2hlbiBhIG1hcmtlciBpcyByaWdodCBjbGlja2VkLgogKi8KTC5EcmF3LkV2ZW50Lk1BUktFUkNPTlRFWFQgPSAnZHJhdzptYXJrZXJjb250ZXh0Jzs="></script>
<link rel="stylesheet" href="data:text/css;base64,"/>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkRyYXcuVG9vbGJhcgogKiBAYWthIFRvb2xiYXIKICoKICogVGhlIHRvb2xiYXIgY2xhc3Mgb2YgdGhlIEFQSSDigJQgaXQgaXMgdXNlZCB0byBjcmVhdGUgdGhlIHVpCiAqIFRoaXMgd2lsbCBiZSBkZXByZWNpYXRlZAogKgogKiBAZXhhbXBsZQogKgogKiBgYGBqcwogKiAgICB2YXIgdG9vbGJhciA9IEwuVG9vbGJhcigpOwogKiAgICB0b29sYmFyLmFkZFRvb2xiYXIobWFwKTsKICogYGBgCiAqCiAqICMjIyBEaXNhYmxpbmcgYSB0b29sYmFyCiAqCiAqIElmIHlvdSBkbyBub3Qgd2FudCBhIHBhcnRpY3VsYXIgdG9vbGJhciBpbiB5b3VyIGFwcCB5b3UgY2FuIHR1cm4gaXQgb2ZmIGJ5IHNldHRpbmcgdGhlIHRvb2xiYXIgdG8gZmFsc2UuCiAqCiAqIGBgYGpzCiAqICAgICAgdmFyIGRyYXdDb250cm9sID0gbmV3IEwuQ29udHJvbC5EcmF3KHsKICogICAgICAgICAgZHJhdzogZmFsc2UsCiAqICAgICAgICAgIGVkaXQ6IHsKICogICAgICAgICAgICAgIGZlYXR1cmVHcm91cDogZWRpdGFibGVMYXllcnMKICogICAgICAgICAgfQogKiAgICAgIH0pOwogKiBgYGAKICoKICogIyMjIERpc2FibGluZyBhIHRvb2xiYXIgaXRlbQogKgogKiBJZiB5b3Ugd2FudCB0byB0dXJuIG9mZiBhIHBhcnRpY3VsYXIgdG9vbGJhciBpdGVtLCBzZXQgaXQgdG8gZmFsc2UuIFRoZSBmb2xsb3dpbmcgZGlzYWJsZXMgZHJhd2luZyBwb2x5Z29ucyBhbmQKICogbWFya2Vycy4gSXQgYWxzbyB0dXJucyBvZmYgdGhlIGFiaWxpdHkgdG8gZWRpdCBsYXllcnMuCiAqCiAqIGBgYGpzCiAqICAgICAgdmFyIGRyYXdDb250cm9sID0gbmV3IEwuQ29udHJvbC5EcmF3KHsKICogICAgICAgICAgZHJhdzogewogKiAgICAgICAgICAgICAgcG9seWdvbjogZmFsc2UsCiAqICAgICAgICAgICAgICBtYXJrZXI6IGZhbHNlCiAqICAgICAgICAgIH0sCiAqICAgICAgICAgIGVkaXQ6IHsKICogICAgICAgICAgICAgIGZlYXR1cmVHcm91cDogZWRpdGFibGVMYXllcnMsCiAqICAgICAgICAgICAgICBlZGl0OiBmYWxzZQogKiAgICAgICAgICB9CiAqICAgICAgfSk7CiAqIGBgYAogKi8KTC5Ub29sYmFyID0gTC5DbGFzcy5leHRlbmQoewoJLy8gQHNlY3Rpb24gTWV0aG9kcyBmb3IgbW9kaWZ5aW5nIHRoZSB0b29sYmFyCgoJLy8gQG1ldGhvZCBpbml0aWFsaXplKG9wdGlvbnMpOiB2b2lkCgkvLyBUb29sYmFyIGNvbnN0cnVjdG9yCglpbml0aWFsaXplOiBmdW5jdGlvbiAob3B0aW9ucykgewoJCUwuc2V0T3B0aW9ucyh0aGlzLCBvcHRpb25zKTsKCgkJdGhpcy5fbW9kZXMgPSB7fTsKCQl0aGlzLl9hY3Rpb25CdXR0b25zID0gW107CgkJdGhpcy5fYWN0aXZlTW9kZSA9IG51bGw7CgoJCXZhciB2ZXJzaW9uID0gTC52ZXJzaW9uLnNwbGl0KCcuJyk7CgkJLy9JZiBWZXJzaW9uIGlzID49IDEuMi4wCgkJaWYgKHBhcnNlSW50KHZlcnNpb25bMF0sIDEwKSA9PT0gMSAmJiBwYXJzZUludCh2ZXJzaW9uWzFdLCAxMCkgPj0gMikgewoJCQlMLlRvb2xiYXIuaW5jbHVkZShMLkV2ZW50ZWQucHJvdG90eXBlKTsKCQl9IGVsc2UgewoJCQlMLlRvb2xiYXIuaW5jbHVkZShMLk1peGluLkV2ZW50cyk7CgkJfQoJfSwKCgkvLyBAbWV0aG9kIGVuYWJsZWQoKTogYm9vbGVhbgoJLy8gR2V0cyBhIHRydWUvZmFsc2Ugb2Ygd2hldGhlciB0aGUgdG9vbGJhciBpcyBlbmFibGVkCgllbmFibGVkOiBmdW5jdGlvbiAoKSB7CgkJcmV0dXJuIHRoaXMuX2FjdGl2ZU1vZGUgIT09IG51bGw7Cgl9LAoKCS8vIEBtZXRob2QgZGlzYWJsZSgpOiB2b2lkCgkvLyBEaXNhYmxlcyB0aGUgdG9vbGJhcgoJZGlzYWJsZTogZnVuY3Rpb24gKCkgewoJCWlmICghdGhpcy5lbmFibGVkKCkpIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5fYWN0aXZlTW9kZS5oYW5kbGVyLmRpc2FibGUoKTsKCX0sCgoJLy8gQG1ldGhvZCBhZGRUb29sYmFyKG1hcCk6IEwuRG9tVXRpbAoJLy8gQWRkcyB0aGUgdG9vbGJhciB0byB0aGUgbWFwIGFuZCByZXR1cm5zIHRoZSB0b29sYmFyIGRvbSBlbGVtZW50CglhZGRUb29sYmFyOiBmdW5jdGlvbiAobWFwKSB7CgkJdmFyIGNvbnRhaW5lciA9IEwuRG9tVXRpbC5jcmVhdGUoJ2RpdicsICdsZWFmbGV0LWRyYXctc2VjdGlvbicpLAoJCQlidXR0b25JbmRleCA9IDAsCgkJCWJ1dHRvbkNsYXNzUHJlZml4ID0gdGhpcy5fdG9vbGJhckNsYXNzIHx8ICcnLAoJCQltb2RlSGFuZGxlcnMgPSB0aGlzLmdldE1vZGVIYW5kbGVycyhtYXApLAoJCQlpOwoKCQl0aGlzLl90b29sYmFyQ29udGFpbmVyID0gTC5Eb21VdGlsLmNyZWF0ZSgnZGl2JywgJ2xlYWZsZXQtZHJhdy10b29sYmFyIGxlYWZsZXQtYmFyJyk7CgkJdGhpcy5fbWFwID0gbWFwOwoKCQlmb3IgKGkgPSAwOyBpIDwgbW9kZUhhbmRsZXJzLmxlbmd0aDsgaSsrKSB7CgkJCWlmIChtb2RlSGFuZGxlcnNbaV0uZW5hYmxlZCkgewoJCQkJdGhpcy5faW5pdE1vZGVIYW5kbGVyKAoJCQkJCW1vZGVIYW5kbGVyc1tpXS5oYW5kbGVyLAoJCQkJCXRoaXMuX3Rvb2xiYXJDb250YWluZXIsCgkJCQkJYnV0dG9uSW5kZXgrKywKCQkJCQlidXR0b25DbGFzc1ByZWZpeCwKCQkJCQltb2RlSGFuZGxlcnNbaV0udGl0bGUKCQkJCSk7CgkJCX0KCQl9CgoJCS8vIGlmIG5vIGJ1dHRvbnMgd2VyZSBhZGRlZCwgZG8gbm90IGFkZCB0aGUgdG9vbGJhcgoJCWlmICghYnV0dG9uSW5kZXgpIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gU2F2ZSBidXR0b24gaW5kZXggb2YgdGhlIGxhc3QgYnV0dG9uLCAtMSBhcyB3ZSB3b3VsZCBoYXZlICsrIGFmdGVyIHRoZSBsYXN0IGJ1dHRvbgoJCXRoaXMuX2xhc3RCdXR0b25JbmRleCA9IC0tYnV0dG9uSW5kZXg7CgoJCS8vIENyZWF0ZSBlbXB0eSBhY3Rpb25zIHBhcnQgb2YgdGhlIHRvb2xiYXIKCQl0aGlzLl9hY3Rpb25zQ29udGFpbmVyID0gTC5Eb21VdGlsLmNyZWF0ZSgndWwnLCAnbGVhZmxldC1kcmF3LWFjdGlvbnMnKTsKCgkJLy8gQWRkIGRyYXcgYW5kIGNhbmNlbCBjb250YWluZXJzIHRvIHRoZSBjb250cm9sIGNvbnRhaW5lcgoJCWNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLl90b29sYmFyQ29udGFpbmVyKTsKCQljb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5fYWN0aW9uc0NvbnRhaW5lcik7CgoJCXJldHVybiBjb250YWluZXI7Cgl9LAoKCS8vIEBtZXRob2QgcmVtb3ZlVG9vbGJhcigpOiB2b2lkCgkvLyBSZW1vdmVzIHRoZSB0b29sYmFyIGFuZCBkcm9wcyB0aGUgaGFuZGxlciBldmVudCBsaXN0ZW5lcnMKCXJlbW92ZVRvb2xiYXI6IGZ1bmN0aW9uICgpIHsKCQkvLyBEaXNwb3NlIGVhY2ggaGFuZGxlcgoJCWZvciAodmFyIGhhbmRsZXJJZCBpbiB0aGlzLl9tb2RlcykgewoJCQlpZiAodGhpcy5fbW9kZXMuaGFzT3duUHJvcGVydHkoaGFuZGxlcklkKSkgewoJCQkJLy8gVW5iaW5kIGhhbmRsZXIgYnV0dG9uCgkJCQl0aGlzLl9kaXNwb3NlQnV0dG9uKAoJCQkJCXRoaXMuX21vZGVzW2hhbmRsZXJJZF0uYnV0dG9uLAoJCQkJCXRoaXMuX21vZGVzW2hhbmRsZXJJZF0uaGFuZGxlci5lbmFibGUsCgkJCQkJdGhpcy5fbW9kZXNbaGFuZGxlcklkXS5oYW5kbGVyCgkJCQkpOwoKCQkJCS8vIE1ha2Ugc3VyZSBpcyBkaXNhYmxlZAoJCQkJdGhpcy5fbW9kZXNbaGFuZGxlcklkXS5oYW5kbGVyLmRpc2FibGUoKTsKCgkJCQkvLyBVbmJpbmQgaGFuZGxlcgoJCQkJdGhpcy5fbW9kZXNbaGFuZGxlcklkXS5oYW5kbGVyCgkJCQkJLm9mZignZW5hYmxlZCcsIHRoaXMuX2hhbmRsZXJBY3RpdmF0ZWQsIHRoaXMpCgkJCQkJLm9mZignZGlzYWJsZWQnLCB0aGlzLl9oYW5kbGVyRGVhY3RpdmF0ZWQsIHRoaXMpOwoJCQl9CgkJfQoJCXRoaXMuX21vZGVzID0ge307CgoJCS8vIERpc3Bvc2UgdGhlIGFjdGlvbnMgdG9vbGJhcgoJCWZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fYWN0aW9uQnV0dG9ucy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKCQkJdGhpcy5fZGlzcG9zZUJ1dHRvbigKCQkJCXRoaXMuX2FjdGlvbkJ1dHRvbnNbaV0uYnV0dG9uLAoJCQkJdGhpcy5fYWN0aW9uQnV0dG9uc1tpXS5jYWxsYmFjaywKCQkJCXRoaXMKCQkJKTsKCQl9CgkJdGhpcy5fYWN0aW9uQnV0dG9ucyA9IFtdOwoJCXRoaXMuX2FjdGlvbnNDb250YWluZXIgPSBudWxsOwoJfSwKCglfaW5pdE1vZGVIYW5kbGVyOiBmdW5jdGlvbiAoaGFuZGxlciwgY29udGFpbmVyLCBidXR0b25JbmRleCwgY2xhc3NOYW1lUHJlZGl4LCBidXR0b25UaXRsZSkgewoJCXZhciB0eXBlID0gaGFuZGxlci50eXBlOwoKCQl0aGlzLl9tb2Rlc1t0eXBlXSA9IHt9OwoKCQl0aGlzLl9tb2Rlc1t0eXBlXS5oYW5kbGVyID0gaGFuZGxlcjsKCgkJdGhpcy5fbW9kZXNbdHlwZV0uYnV0dG9uID0gdGhpcy5fY3JlYXRlQnV0dG9uKHsKCQkJdHlwZTogdHlwZSwKCQkJdGl0bGU6IGJ1dHRvblRpdGxlLAoJCQljbGFzc05hbWU6IGNsYXNzTmFtZVByZWRpeCArICctJyArIHR5cGUsCgkJCWNvbnRhaW5lcjogY29udGFpbmVyLAoJCQljYWxsYmFjazogdGhpcy5fbW9kZXNbdHlwZV0uaGFuZGxlci5lbmFibGUsCgkJCWNvbnRleHQ6IHRoaXMuX21vZGVzW3R5cGVdLmhhbmRsZXIKCQl9KTsKCgkJdGhpcy5fbW9kZXNbdHlwZV0uYnV0dG9uSW5kZXggPSBidXR0b25JbmRleDsKCgkJdGhpcy5fbW9kZXNbdHlwZV0uaGFuZGxlcgoJCQkub24oJ2VuYWJsZWQnLCB0aGlzLl9oYW5kbGVyQWN0aXZhdGVkLCB0aGlzKQoJCQkub24oJ2Rpc2FibGVkJywgdGhpcy5faGFuZGxlckRlYWN0aXZhdGVkLCB0aGlzKTsKCX0sCgoJLyogRGV0ZWN0IGlPUyBiYXNlZCBvbiBicm93c2VyIFVzZXIgQWdlbnQsIGJhc2VkIG9uOgoJICogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvOTAzOTg4NSAqLwoJX2RldGVjdElPUzogZnVuY3Rpb24gKCkgewoJCXZhciBpT1MgPSAoL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkgJiYgIXdpbmRvdy5NU1N0cmVhbSk7CgkJcmV0dXJuIGlPUzsKCX0sCgoJX2NyZWF0ZUJ1dHRvbjogZnVuY3Rpb24gKG9wdGlvbnMpIHsKCgkJdmFyIGxpbmsgPSBMLkRvbVV0aWwuY3JlYXRlKCdhJywgb3B0aW9ucy5jbGFzc05hbWUgfHwgJycsIG9wdGlvbnMuY29udGFpbmVyKTsKCQkvLyBTY3JlZW4gcmVhZGVyIHRhZwoJCXZhciBzciA9IEwuRG9tVXRpbC5jcmVhdGUoJ3NwYW4nLCAnc3Itb25seScsIG9wdGlvbnMuY29udGFpbmVyKTsKCgkJbGluay5ocmVmID0gJyMnOwoJCWxpbmsuYXBwZW5kQ2hpbGQoc3IpOwoKCQlpZiAob3B0aW9ucy50aXRsZSkgewoJCQlsaW5rLnRpdGxlID0gb3B0aW9ucy50aXRsZTsKCQkJc3IuaW5uZXJIVE1MID0gb3B0aW9ucy50aXRsZTsKCQl9CgoJCWlmIChvcHRpb25zLnRleHQpIHsKCQkJbGluay5pbm5lckhUTUwgPSBvcHRpb25zLnRleHQ7CgkJCXNyLmlubmVySFRNTCA9IG9wdGlvbnMudGV4dDsKCQl9CgoJCS8qIGlPUyBkb2VzIG5vdCB1c2UgY2xpY2sgZXZlbnRzICovCgkJdmFyIGJ1dHRvbkV2ZW50ID0gdGhpcy5fZGV0ZWN0SU9TKCkgPyAndG91Y2hzdGFydCcgOiAnY2xpY2snOwoKCQlMLkRvbUV2ZW50CgkJCS5vbihsaW5rLCAnY2xpY2snLCBMLkRvbUV2ZW50LnN0b3BQcm9wYWdhdGlvbikKCQkJLm9uKGxpbmssICdtb3VzZWRvd24nLCBMLkRvbUV2ZW50LnN0b3BQcm9wYWdhdGlvbikKCQkJLm9uKGxpbmssICdkYmxjbGljaycsIEwuRG9tRXZlbnQuc3RvcFByb3BhZ2F0aW9uKQoJCQkub24obGluaywgJ3RvdWNoc3RhcnQnLCBMLkRvbUV2ZW50LnN0b3BQcm9wYWdhdGlvbikKCQkJLm9uKGxpbmssICdjbGljaycsIEwuRG9tRXZlbnQucHJldmVudERlZmF1bHQpCgkJCS5vbihsaW5rLCBidXR0b25FdmVudCwgb3B0aW9ucy5jYWxsYmFjaywgb3B0aW9ucy5jb250ZXh0KTsKCgkJcmV0dXJuIGxpbms7Cgl9LAoKCV9kaXNwb3NlQnV0dG9uOiBmdW5jdGlvbiAoYnV0dG9uLCBjYWxsYmFjaykgewoJCS8qIGlPUyBkb2VzIG5vdCB1c2UgY2xpY2sgZXZlbnRzICovCgkJdmFyIGJ1dHRvbkV2ZW50ID0gdGhpcy5fZGV0ZWN0SU9TKCkgPyAndG91Y2hzdGFydCcgOiAnY2xpY2snOwoKCQlMLkRvbUV2ZW50CgkJCS5vZmYoYnV0dG9uLCAnY2xpY2snLCBMLkRvbUV2ZW50LnN0b3BQcm9wYWdhdGlvbikKCQkJLm9mZihidXR0b24sICdtb3VzZWRvd24nLCBMLkRvbUV2ZW50LnN0b3BQcm9wYWdhdGlvbikKCQkJLm9mZihidXR0b24sICdkYmxjbGljaycsIEwuRG9tRXZlbnQuc3RvcFByb3BhZ2F0aW9uKQoJCQkub2ZmKGJ1dHRvbiwgJ3RvdWNoc3RhcnQnLCBMLkRvbUV2ZW50LnN0b3BQcm9wYWdhdGlvbikKCQkJLm9mZihidXR0b24sICdjbGljaycsIEwuRG9tRXZlbnQucHJldmVudERlZmF1bHQpCgkJCS5vZmYoYnV0dG9uLCBidXR0b25FdmVudCwgY2FsbGJhY2spOwoJfSwKCglfaGFuZGxlckFjdGl2YXRlZDogZnVuY3Rpb24gKGUpIHsKCQkvLyBEaXNhYmxlIGFjdGl2ZSBtb2RlIChpZiBwcmVzZW50KQoJCXRoaXMuZGlzYWJsZSgpOwoKCQkvLyBDYWNoZSBuZXcgYWN0aXZlIGZlYXR1cmUKCQl0aGlzLl9hY3RpdmVNb2RlID0gdGhpcy5fbW9kZXNbZS5oYW5kbGVyXTsKCgkJTC5Eb21VdGlsLmFkZENsYXNzKHRoaXMuX2FjdGl2ZU1vZGUuYnV0dG9uLCAnbGVhZmxldC1kcmF3LXRvb2xiYXItYnV0dG9uLWVuYWJsZWQnKTsKCgkJdGhpcy5fc2hvd0FjdGlvbnNUb29sYmFyKCk7CgoJCXRoaXMuZmlyZSgnZW5hYmxlJyk7Cgl9LAoKCV9oYW5kbGVyRGVhY3RpdmF0ZWQ6IGZ1bmN0aW9uICgpIHsKCQl0aGlzLl9oaWRlQWN0aW9uc1Rvb2xiYXIoKTsKCgkJTC5Eb21VdGlsLnJlbW92ZUNsYXNzKHRoaXMuX2FjdGl2ZU1vZGUuYnV0dG9uLCAnbGVhZmxldC1kcmF3LXRvb2xiYXItYnV0dG9uLWVuYWJsZWQnKTsKCgkJdGhpcy5fYWN0aXZlTW9kZSA9IG51bGw7CgoJCXRoaXMuZmlyZSgnZGlzYWJsZScpOwoJfSwKCglfY3JlYXRlQWN0aW9uczogZnVuY3Rpb24gKGhhbmRsZXIpIHsKCQl2YXIgY29udGFpbmVyID0gdGhpcy5fYWN0aW9uc0NvbnRhaW5lciwKCQkJYnV0dG9ucyA9IHRoaXMuZ2V0QWN0aW9ucyhoYW5kbGVyKSwKCQkJbCA9IGJ1dHRvbnMubGVuZ3RoLAoJCQlsaSwgZGksIGRsLCBidXR0b247CgoJCS8vIERpc3Bvc2UgdGhlIGFjdGlvbnMgdG9vbGJhciAodG9kbzogZGlzcG9zZSBvbmx5IG5vdCB1c2VkIGJ1dHRvbnMpCgkJZm9yIChkaSA9IDAsIGRsID0gdGhpcy5fYWN0aW9uQnV0dG9ucy5sZW5ndGg7IGRpIDwgZGw7IGRpKyspIHsKCQkJdGhpcy5fZGlzcG9zZUJ1dHRvbih0aGlzLl9hY3Rpb25CdXR0b25zW2RpXS5idXR0b24sIHRoaXMuX2FjdGlvbkJ1dHRvbnNbZGldLmNhbGxiYWNrKTsKCQl9CgkJdGhpcy5fYWN0aW9uQnV0dG9ucyA9IFtdOwoKCQkvLyBSZW1vdmUgYWxsIG9sZCBidXR0b25zCgkJd2hpbGUgKGNvbnRhaW5lci5maXJzdENoaWxkKSB7CgkJCWNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIuZmlyc3RDaGlsZCk7CgkJfQoKCQlmb3IgKHZhciBpID0gMDsgaSA8IGw7IGkrKykgewoJCQlpZiAoJ2VuYWJsZWQnIGluIGJ1dHRvbnNbaV0gJiYgIWJ1dHRvbnNbaV0uZW5hYmxlZCkgewoJCQkJY29udGludWU7CgkJCX0KCgkJCWxpID0gTC5Eb21VdGlsLmNyZWF0ZSgnbGknLCAnJywgY29udGFpbmVyKTsKCgkJCWJ1dHRvbiA9IHRoaXMuX2NyZWF0ZUJ1dHRvbih7CgkJCQl0aXRsZTogYnV0dG9uc1tpXS50aXRsZSwKCQkJCXRleHQ6IGJ1dHRvbnNbaV0udGV4dCwKCQkJCWNvbnRhaW5lcjogbGksCgkJCQljYWxsYmFjazogYnV0dG9uc1tpXS5jYWxsYmFjaywKCQkJCWNvbnRleHQ6IGJ1dHRvbnNbaV0uY29udGV4dAoJCQl9KTsKCgkJCXRoaXMuX2FjdGlvbkJ1dHRvbnMucHVzaCh7CgkJCQlidXR0b246IGJ1dHRvbiwKCQkJCWNhbGxiYWNrOiBidXR0b25zW2ldLmNhbGxiYWNrCgkJCX0pOwoJCX0KCX0sCgoJX3Nob3dBY3Rpb25zVG9vbGJhcjogZnVuY3Rpb24gKCkgewoJCXZhciBidXR0b25JbmRleCA9IHRoaXMuX2FjdGl2ZU1vZGUuYnV0dG9uSW5kZXgsCgkJCWxhc3RCdXR0b25JbmRleCA9IHRoaXMuX2xhc3RCdXR0b25JbmRleCwKCQkJdG9vbGJhclBvc2l0aW9uID0gdGhpcy5fYWN0aXZlTW9kZS5idXR0b24ub2Zmc2V0VG9wIC0gMTsKCgkJLy8gUmVjcmVhdGUgYWN0aW9uIGJ1dHRvbnMgb24gZXZlcnkgY2xpY2sKCQl0aGlzLl9jcmVhdGVBY3Rpb25zKHRoaXMuX2FjdGl2ZU1vZGUuaGFuZGxlcik7CgoJCS8vIENvcnJlY3RseSBwb3NpdGlvbiB0aGUgY2FuY2VsIGJ1dHRvbgoJCXRoaXMuX2FjdGlvbnNDb250YWluZXIuc3R5bGUudG9wID0gdG9vbGJhclBvc2l0aW9uICsgJ3B4JzsKCgkJaWYgKGJ1dHRvbkluZGV4ID09PSAwKSB7CgkJCUwuRG9tVXRpbC5hZGRDbGFzcyh0aGlzLl90b29sYmFyQ29udGFpbmVyLCAnbGVhZmxldC1kcmF3LXRvb2xiYXItbm90b3AnKTsKCQkJTC5Eb21VdGlsLmFkZENsYXNzKHRoaXMuX2FjdGlvbnNDb250YWluZXIsICdsZWFmbGV0LWRyYXctYWN0aW9ucy10b3AnKTsKCQl9CgoJCWlmIChidXR0b25JbmRleCA9PT0gbGFzdEJ1dHRvbkluZGV4KSB7CgkJCUwuRG9tVXRpbC5hZGRDbGFzcyh0aGlzLl90b29sYmFyQ29udGFpbmVyLCAnbGVhZmxldC1kcmF3LXRvb2xiYXItbm9ib3R0b20nKTsKCQkJTC5Eb21VdGlsLmFkZENsYXNzKHRoaXMuX2FjdGlvbnNDb250YWluZXIsICdsZWFmbGV0LWRyYXctYWN0aW9ucy1ib3R0b20nKTsKCQl9CgoJCXRoaXMuX2FjdGlvbnNDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CgkJdGhpcy5fbWFwLmZpcmUoTC5EcmF3LkV2ZW50LlRPT0xCQVJPUEVORUQpOwoJfSwKCglfaGlkZUFjdGlvbnNUb29sYmFyOiBmdW5jdGlvbiAoKSB7CgkJdGhpcy5fYWN0aW9uc0NvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwoKCQlMLkRvbVV0aWwucmVtb3ZlQ2xhc3ModGhpcy5fdG9vbGJhckNvbnRhaW5lciwgJ2xlYWZsZXQtZHJhdy10b29sYmFyLW5vdG9wJyk7CgkJTC5Eb21VdGlsLnJlbW92ZUNsYXNzKHRoaXMuX3Rvb2xiYXJDb250YWluZXIsICdsZWFmbGV0LWRyYXctdG9vbGJhci1ub2JvdHRvbScpOwoJCUwuRG9tVXRpbC5yZW1vdmVDbGFzcyh0aGlzLl9hY3Rpb25zQ29udGFpbmVyLCAnbGVhZmxldC1kcmF3LWFjdGlvbnMtdG9wJyk7CgkJTC5Eb21VdGlsLnJlbW92ZUNsYXNzKHRoaXMuX2FjdGlvbnNDb250YWluZXIsICdsZWFmbGV0LWRyYXctYWN0aW9ucy1ib3R0b20nKTsKCQl0aGlzLl9tYXAuZmlyZShMLkRyYXcuRXZlbnQuVE9PTEJBUkNMT1NFRCk7Cgl9Cn0pOwo="></script>
<script src="data:text/javascript;base64,TC5EcmF3ID0gTC5EcmF3IHx8IHt9OwovKioKICogQGNsYXNzIEwuRHJhdy5Ub29sdGlwCiAqIEBha2EgVG9vbHRpcAogKgogKiBUaGUgdG9vbHRpcCBjbGFzcyDigJQgaXQgaXMgdXNlZCB0byBkaXNwbGF5IHRoZSB0b29sdGlwIHdoaWxlIGRyYXdpbmcKICogVGhpcyB3aWxsIGJlIGRlcHJlY2lhdGVkCiAqCiAqIEBleGFtcGxlCiAqCiAqIGBgYGpzCiAqICAgIHZhciB0b29sdGlwID0gTC5EcmF3LlRvb2x0aXAoKTsKICogYGBgCiAqCiAqLwpMLkRyYXcuVG9vbHRpcCA9IEwuQ2xhc3MuZXh0ZW5kKHsKCgkvLyBAc2VjdGlvbiBNZXRob2RzIGZvciBtb2RpZnlpbmcgZHJhdyBzdGF0ZQoKCS8vIEBtZXRob2QgaW5pdGlhbGl6ZShtYXApOiB2b2lkCgkvLyBUb29sdGlwIGNvbnN0cnVjdG9yCglpbml0aWFsaXplOiBmdW5jdGlvbiAobWFwKSB7CgkJdGhpcy5fbWFwID0gbWFwOwoJCXRoaXMuX3BvcHVwUGFuZSA9IG1hcC5fcGFuZXMucG9wdXBQYW5lOwoJCXRoaXMuX3Zpc2libGUgPSBmYWxzZTsKCgkJdGhpcy5fY29udGFpbmVyID0gbWFwLm9wdGlvbnMuZHJhd0NvbnRyb2xUb29sdGlwcyA/CgkJCUwuRG9tVXRpbC5jcmVhdGUoJ2RpdicsICdsZWFmbGV0LWRyYXctdG9vbHRpcCcsIHRoaXMuX3BvcHVwUGFuZSkgOiBudWxsOwoJCXRoaXMuX3NpbmdsZUxpbmVMYWJlbCA9IGZhbHNlOwoKCQl0aGlzLl9tYXAub24oJ21vdXNlb3V0JywgdGhpcy5fb25Nb3VzZU91dCwgdGhpcyk7Cgl9LAoKCS8vIEBtZXRob2QgZGlzcG9zZSgpOiB2b2lkCgkvLyBSZW1vdmUgVG9vbHRpcCBET00gYW5kIHVuYmluZCBldmVudHMKCWRpc3Bvc2U6IGZ1bmN0aW9uICgpIHsKCQl0aGlzLl9tYXAub2ZmKCdtb3VzZW91dCcsIHRoaXMuX29uTW91c2VPdXQsIHRoaXMpOwoKCQlpZiAodGhpcy5fY29udGFpbmVyKSB7CgkJCXRoaXMuX3BvcHVwUGFuZS5yZW1vdmVDaGlsZCh0aGlzLl9jb250YWluZXIpOwoJCQl0aGlzLl9jb250YWluZXIgPSBudWxsOwoJCX0KCX0sCgoJLy8gQG1ldGhvZCB1cGRhdGVDb250ZW50KGxhYmVsVGV4dCk6IHRoaXMKCS8vIENoYW5nZXMgdGhlIHRvb2x0aXAgdGV4dCB0byBzdHJpbmcgaW4gZnVuY3Rpb24gY2FsbAoJdXBkYXRlQ29udGVudDogZnVuY3Rpb24gKGxhYmVsVGV4dCkgewoJCWlmICghdGhpcy5fY29udGFpbmVyKSB7CgkJCXJldHVybiB0aGlzOwoJCX0KCQlsYWJlbFRleHQuc3VidGV4dCA9IGxhYmVsVGV4dC5zdWJ0ZXh0IHx8ICcnOwoKCQkvLyB1cGRhdGUgdGhlIHZlcnRpY2FsIHBvc2l0aW9uIChvbmx5IGlmIGNoYW5nZWQpCgkJaWYgKGxhYmVsVGV4dC5zdWJ0ZXh0Lmxlbmd0aCA9PT0gMCAmJiAhdGhpcy5fc2luZ2xlTGluZUxhYmVsKSB7CgkJCUwuRG9tVXRpbC5hZGRDbGFzcyh0aGlzLl9jb250YWluZXIsICdsZWFmbGV0LWRyYXctdG9vbHRpcC1zaW5nbGUnKTsKCQkJdGhpcy5fc2luZ2xlTGluZUxhYmVsID0gdHJ1ZTsKCQl9CgkJZWxzZSBpZiAobGFiZWxUZXh0LnN1YnRleHQubGVuZ3RoID4gMCAmJiB0aGlzLl9zaW5nbGVMaW5lTGFiZWwpIHsKCQkJTC5Eb21VdGlsLnJlbW92ZUNsYXNzKHRoaXMuX2NvbnRhaW5lciwgJ2xlYWZsZXQtZHJhdy10b29sdGlwLXNpbmdsZScpOwoJCQl0aGlzLl9zaW5nbGVMaW5lTGFiZWwgPSBmYWxzZTsKCQl9CgoJCXRoaXMuX2NvbnRhaW5lci5pbm5lckhUTUwgPQoJCQkobGFiZWxUZXh0LnN1YnRleHQubGVuZ3RoID4gMCA/CgkJCQknPHNwYW4gY2xhc3M9ImxlYWZsZXQtZHJhdy10b29sdGlwLXN1YnRleHQiPicgKyBsYWJlbFRleHQuc3VidGV4dCArICc8L3NwYW4+JyArICc8YnIgLz4nIDogJycpICsKCQkJJzxzcGFuPicgKyBsYWJlbFRleHQudGV4dCArICc8L3NwYW4+JzsKCgkJaWYgKCFsYWJlbFRleHQudGV4dCAmJiAhbGFiZWxUZXh0LnN1YnRleHQpIHsKCQkJdGhpcy5fdmlzaWJsZSA9IGZhbHNlOwoJCQl0aGlzLl9jb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nOwoJCX0gZWxzZSB7CgkJCXRoaXMuX3Zpc2libGUgPSB0cnVlOwoJCQl0aGlzLl9jb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9ICdpbmhlcml0JzsKCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCgkvLyBAbWV0aG9kIHVwZGF0ZVBvc2l0aW9uKGxhdGxuZyk6IHRoaXMKCS8vIENoYW5nZXMgdGhlIGxvY2F0aW9uIG9mIHRoZSB0b29sdGlwCgl1cGRhdGVQb3NpdGlvbjogZnVuY3Rpb24gKGxhdGxuZykgewoJCXZhciBwb3MgPSB0aGlzLl9tYXAubGF0TG5nVG9MYXllclBvaW50KGxhdGxuZyksCgkJCXRvb2x0aXBDb250YWluZXIgPSB0aGlzLl9jb250YWluZXI7CgoJCWlmICh0aGlzLl9jb250YWluZXIpIHsKCQkJaWYgKHRoaXMuX3Zpc2libGUpIHsKCQkJCXRvb2x0aXBDb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9ICdpbmhlcml0JzsKCQkJfQoJCQlMLkRvbVV0aWwuc2V0UG9zaXRpb24odG9vbHRpcENvbnRhaW5lciwgcG9zKTsKCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCgkvLyBAbWV0aG9kIHNob3dBc0Vycm9yKCk6IHRoaXMKCS8vIEFwcGxpZXMgZXJyb3IgY2xhc3MgdG8gdG9vbHRpcAoJc2hvd0FzRXJyb3I6IGZ1bmN0aW9uICgpIHsKCQlpZiAodGhpcy5fY29udGFpbmVyKSB7CgkJCUwuRG9tVXRpbC5hZGRDbGFzcyh0aGlzLl9jb250YWluZXIsICdsZWFmbGV0LWVycm9yLWRyYXctdG9vbHRpcCcpOwoJCX0KCQlyZXR1cm4gdGhpczsKCX0sCgoJLy8gQG1ldGhvZCByZW1vdmVFcnJvcigpOiB0aGlzCgkvLyBSZW1vdmVzIHRoZSBlcnJvciBjbGFzcyBmcm9tIHRoZSB0b29sdGlwCglyZW1vdmVFcnJvcjogZnVuY3Rpb24gKCkgewoJCWlmICh0aGlzLl9jb250YWluZXIpIHsKCQkJTC5Eb21VdGlsLnJlbW92ZUNsYXNzKHRoaXMuX2NvbnRhaW5lciwgJ2xlYWZsZXQtZXJyb3ItZHJhdy10b29sdGlwJyk7CgkJfQoJCXJldHVybiB0aGlzOwoJfSwKCglfb25Nb3VzZU91dDogZnVuY3Rpb24gKCkgewoJCWlmICh0aGlzLl9jb250YWluZXIpIHsKCQkJdGhpcy5fY29udGFpbmVyLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJzsKCQl9Cgl9Cn0pOwo="></script>
<script src="data:text/javascript;base64,KGZ1bmN0aW9uICgpIHsKCgl2YXIgZGVmYXVsdFByZWNpc2lvbiA9IHsKCQlrbTogMiwKCQloYTogMiwKCQltOiAwLAoJCW1pOiAyLAoJCWFjOiAyLAoJCXlkOiAwLAoJCWZ0OiAwLAoJCW5tOiAyCgl9OwoKCgkvKioKCSAqIEBjbGFzcyBMLkdlb21ldHJ5VXRpbAoJICogQGFrYSBHZW9tZXRyeVV0aWwKCSAqLwoJTC5HZW9tZXRyeVV0aWwgPSBMLmV4dGVuZChMLkdlb21ldHJ5VXRpbCB8fCB7fSwgewoJCS8vIFBvcnRlZCBmcm9tIHRoZSBPcGVuTGF5ZXJzIGltcGxlbWVudGF0aW9uLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL29wZW5sYXllcnMvb3BlbmxheWVycy9ibG9iL21hc3Rlci9saWIvT3BlbkxheWVycy9HZW9tZXRyeS9MaW5lYXJSaW5nLmpzI0wyNzAKCgkJLy8gQG1ldGhvZCBnZW9kZXNpY0FyZWEoKTogbnVtYmVyCgkJZ2VvZGVzaWNBcmVhOiBmdW5jdGlvbiAobGF0TG5ncykgewoJCQl2YXIgcG9pbnRzQ291bnQgPSBsYXRMbmdzLmxlbmd0aCwKCQkJCWFyZWEgPSAwLjAsCgkJCQlkMnIgPSBNYXRoLlBJIC8gMTgwLAoJCQkJcDEsIHAyOwoKCQkJaWYgKHBvaW50c0NvdW50ID4gMikgewoJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBwb2ludHNDb3VudDsgaSsrKSB7CgkJCQkJcDEgPSBsYXRMbmdzW2ldOwoJCQkJCXAyID0gbGF0TG5nc1soaSArIDEpICUgcG9pbnRzQ291bnRdOwoJCQkJCWFyZWEgKz0gKChwMi5sbmcgLSBwMS5sbmcpICogZDJyKSAqCgkJCQkJCSgyICsgTWF0aC5zaW4ocDEubGF0ICogZDJyKSArIE1hdGguc2luKHAyLmxhdCAqIGQycikpOwoJCQkJfQoJCQkJYXJlYSA9IGFyZWEgKiA2Mzc4MTM3LjAgKiA2Mzc4MTM3LjAgLyAyLjA7CgkJCX0KCgkJCXJldHVybiBNYXRoLmFicyhhcmVhKTsKCQl9LAoKCQkvLyBAbWV0aG9kIGZvcm1hdHRlZE51bWJlcihuLCBwcmVjaXNpb24pOiBzdHJpbmcKCQkvLyBSZXR1cm5zIG4gaW4gc3BlY2lmaWVkIG51bWJlciBmb3JtYXQgKGlmIGRlZmluZWQpIGFuZCBwcmVjaXNpb24KCQlmb3JtYXR0ZWROdW1iZXI6IGZ1bmN0aW9uIChuLCBwcmVjaXNpb24pIHsKCQkJdmFyIGZvcm1hdHRlZCA9IHBhcnNlRmxvYXQobikudG9GaXhlZChwcmVjaXNpb24pLAoJCQkJZm9ybWF0ID0gTC5kcmF3TG9jYWwuZm9ybWF0ICYmIEwuZHJhd0xvY2FsLmZvcm1hdC5udW1lcmljLAoJCQkJZGVsaW1pdGVycyA9IGZvcm1hdCAmJiBmb3JtYXQuZGVsaW1pdGVycywKCQkJCXRob3VzYW5kcyA9IGRlbGltaXRlcnMgJiYgZGVsaW1pdGVycy50aG91c2FuZHMsCgkJCQlkZWNpbWFsID0gZGVsaW1pdGVycyAmJiBkZWxpbWl0ZXJzLmRlY2ltYWw7CgoJCQlpZiAodGhvdXNhbmRzIHx8IGRlY2ltYWwpIHsKCQkJCXZhciBzcGxpdFZhbHVlID0gZm9ybWF0dGVkLnNwbGl0KCcuJyk7CgkJCQlmb3JtYXR0ZWQgPSB0aG91c2FuZHMgPyBzcGxpdFZhbHVlWzBdLnJlcGxhY2UoLyhcZCkoPz0oXGR7M30pKyg/IVxkKSkvZywgJyQxJyArIHRob3VzYW5kcykgOiBzcGxpdFZhbHVlWzBdOwoJCQkJZGVjaW1hbCA9IGRlY2ltYWwgfHwgJy4nOwoJCQkJaWYgKHNwbGl0VmFsdWUubGVuZ3RoID4gMSkgewoJCQkJCWZvcm1hdHRlZCA9IGZvcm1hdHRlZCArIGRlY2ltYWwgKyBzcGxpdFZhbHVlWzFdOwoJCQkJfQoJCQl9CgoJCQlyZXR1cm4gZm9ybWF0dGVkOwoJCX0sCgoJCS8vIEBtZXRob2QgcmVhZGFibGVBcmVhKGFyZWEsIGlzTWV0cmljLCBwcmVjaXNpb24pOiBzdHJpbmcKCQkvLyBSZXR1cm5zIGEgcmVhZGFibGUgYXJlYSBzdHJpbmcgaW4geWFyZHMgb3IgbWV0cmljLgoJCS8vIFRoZSB2YWx1ZSB3aWxsIGJlIHJvdW5kZWQgYXMgZGVmaW5lZCBieSB0aGUgcHJlY2lzaW9uIG9wdGlvbiBvYmplY3QuCgkJcmVhZGFibGVBcmVhOiBmdW5jdGlvbiAoYXJlYSwgaXNNZXRyaWMsIHByZWNpc2lvbikgewoJCQl2YXIgYXJlYVN0ciwKCQkJCXVuaXRzLAoJCQkJcHJlY2lzaW9uID0gTC5VdGlsLmV4dGVuZCh7fSwgZGVmYXVsdFByZWNpc2lvbiwgcHJlY2lzaW9uKTsKCgkJCWlmIChpc01ldHJpYykgewoJCQkJdW5pdHMgPSBbJ2hhJywgJ20nXTsKCQkJCXR5cGUgPSB0eXBlb2YgaXNNZXRyaWM7CgkJCQlpZiAodHlwZSA9PT0gJ3N0cmluZycpIHsKCQkJCQl1bml0cyA9IFtpc01ldHJpY107CgkJCQl9IGVsc2UgaWYgKHR5cGUgIT09ICdib29sZWFuJykgewoJCQkJCXVuaXRzID0gaXNNZXRyaWM7CgkJCQl9CgoJCQkJaWYgKGFyZWEgPj0gMTAwMDAwMCAmJiB1bml0cy5pbmRleE9mKCdrbScpICE9PSAtMSkgewoJCQkJCWFyZWFTdHIgPSBMLkdlb21ldHJ5VXRpbC5mb3JtYXR0ZWROdW1iZXIoYXJlYSAqIDAuMDAwMDAxLCBwcmVjaXNpb25bJ2ttJ10pICsgJyBrbcKyJzsKCQkJCX0gZWxzZSBpZiAoYXJlYSA+PSAxMDAwMCAmJiB1bml0cy5pbmRleE9mKCdoYScpICE9PSAtMSkgewoJCQkJCWFyZWFTdHIgPSBMLkdlb21ldHJ5VXRpbC5mb3JtYXR0ZWROdW1iZXIoYXJlYSAqIDAuMDAwMSwgcHJlY2lzaW9uWydoYSddKSArICcgaGEnOwoJCQkJfSBlbHNlIHsKCQkJCQlhcmVhU3RyID0gTC5HZW9tZXRyeVV0aWwuZm9ybWF0dGVkTnVtYmVyKGFyZWEsIHByZWNpc2lvblsnbSddKSArICcgbcKyJzsKCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWFyZWEgLz0gMC44MzYxMjc7IC8vIFNxdWFyZSB5YXJkcyBpbiAxIG1ldGVyCgoJCQkJaWYgKGFyZWEgPj0gMzA5NzYwMCkgeyAvLzMwOTc2MDAgc3F1YXJlIHlhcmRzIGluIDEgc3F1YXJlIG1pbGUKCQkJCQlhcmVhU3RyID0gTC5HZW9tZXRyeVV0aWwuZm9ybWF0dGVkTnVtYmVyKGFyZWEgLyAzMDk3NjAwLCBwcmVjaXNpb25bJ21pJ10pICsgJyBtacKyJzsKCQkJCX0gZWxzZSBpZiAoYXJlYSA+PSA0ODQwKSB7IC8vNDg0MCBzcXVhcmUgeWFyZHMgaW4gMSBhY3JlCgkJCQkJYXJlYVN0ciA9IEwuR2VvbWV0cnlVdGlsLmZvcm1hdHRlZE51bWJlcihhcmVhIC8gNDg0MCwgcHJlY2lzaW9uWydhYyddKSArICcgYWNyZXMnOwoJCQkJfSBlbHNlIHsKCQkJCQlhcmVhU3RyID0gTC5HZW9tZXRyeVV0aWwuZm9ybWF0dGVkTnVtYmVyKGFyZWEsIHByZWNpc2lvblsneWQnXSkgKyAnIHlkwrInOwoJCQkJfQoJCQl9CgoJCQlyZXR1cm4gYXJlYVN0cjsKCQl9LAoKCQkvLyBAbWV0aG9kIHJlYWRhYmxlRGlzdGFuY2UoZGlzdGFuY2UsIHVuaXRzKTogc3RyaW5nCgkJLy8gQ29udmVydHMgYSBtZXRyaWMgZGlzdGFuY2UgdG8gb25lIG9mIFsgZmVldCwgbmF1dGljYWxNaWxlLCBtZXRyaWMgb3IgeWFyZHMgXSBzdHJpbmcKCQkvLwoJCS8vIEBhbHRlcm5hdGl2ZQoJCS8vIEBtZXRob2QgcmVhZGFibGVEaXN0YW5jZShkaXN0YW5jZSwgaXNNZXRyaWMsIHVzZUZlZXQsIGlzTmF1dGljYWxNaWxlLCBwcmVjaXNpb24pOiBzdHJpbmcKCQkvLyBDb252ZXJ0cyBtZXRyaWMgZGlzdGFuY2UgdG8gZGlzdGFuY2Ugc3RyaW5nLgoJCS8vIFRoZSB2YWx1ZSB3aWxsIGJlIHJvdW5kZWQgYXMgZGVmaW5lZCBieSB0aGUgcHJlY2lzaW9uIG9wdGlvbiBvYmplY3QuCgkJcmVhZGFibGVEaXN0YW5jZTogZnVuY3Rpb24gKGRpc3RhbmNlLCBpc01ldHJpYywgaXNGZWV0LCBpc05hdXRpY2FsTWlsZSwgcHJlY2lzaW9uKSB7CgkJCXZhciBkaXN0YW5jZVN0ciwKCQkJCXVuaXRzLAoJCQkJcHJlY2lzaW9uID0gTC5VdGlsLmV4dGVuZCh7fSwgZGVmYXVsdFByZWNpc2lvbiwgcHJlY2lzaW9uKTsKCgkJCWlmIChpc01ldHJpYykgewoJCQkJdW5pdHMgPSB0eXBlb2YgaXNNZXRyaWMgPT0gJ3N0cmluZycgPyBpc01ldHJpYyA6ICdtZXRyaWMnOwoJCQl9IGVsc2UgaWYgKGlzRmVldCkgewoJCQkJdW5pdHMgPSAnZmVldCc7CgkJCX0gZWxzZSBpZiAoaXNOYXV0aWNhbE1pbGUpIHsKCQkJCXVuaXRzID0gJ25hdXRpY2FsTWlsZSc7CgkJCX0gZWxzZSB7CgkJCQl1bml0cyA9ICd5YXJkcyc7CgkJCX0KCgkJCXN3aXRjaCAodW5pdHMpIHsKCQkJCWNhc2UgJ21ldHJpYyc6CgkJCQkJLy8gc2hvdyBtZXRyZXMgd2hlbiBkaXN0YW5jZSBpcyA8IDFrbSwgdGhlbiBzaG93IGttCgkJCQkJaWYgKGRpc3RhbmNlID4gMTAwMCkgewoJCQkJCQlkaXN0YW5jZVN0ciA9IEwuR2VvbWV0cnlVdGlsLmZvcm1hdHRlZE51bWJlcihkaXN0YW5jZSAvIDEwMDAsIHByZWNpc2lvblsna20nXSkgKyAnIGttJzsKCQkJCQl9IGVsc2UgewoJCQkJCQlkaXN0YW5jZVN0ciA9IEwuR2VvbWV0cnlVdGlsLmZvcm1hdHRlZE51bWJlcihkaXN0YW5jZSwgcHJlY2lzaW9uWydtJ10pICsgJyBtJzsKCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQljYXNlICdmZWV0JzoKCQkJCQlkaXN0YW5jZSAqPSAxLjA5MzYxICogMzsKCQkJCQlkaXN0YW5jZVN0ciA9IEwuR2VvbWV0cnlVdGlsLmZvcm1hdHRlZE51bWJlcihkaXN0YW5jZSwgcHJlY2lzaW9uWydmdCddKSArICcgZnQnOwoKCQkJCQlicmVhazsKCQkJCWNhc2UgJ25hdXRpY2FsTWlsZSc6CgkJCQkJZGlzdGFuY2UgKj0gMC41Mzk5NjsKCQkJCQlkaXN0YW5jZVN0ciA9IEwuR2VvbWV0cnlVdGlsLmZvcm1hdHRlZE51bWJlcihkaXN0YW5jZSAvIDEwMDAsIHByZWNpc2lvblsnbm0nXSkgKyAnIG5tJzsKCQkJCQlicmVhazsKCQkJCWNhc2UgJ3lhcmRzJzoKCQkJCWRlZmF1bHQ6CgkJCQkJZGlzdGFuY2UgKj0gMS4wOTM2MTsKCgkJCQkJaWYgKGRpc3RhbmNlID4gMTc2MCkgewoJCQkJCQlkaXN0YW5jZVN0ciA9IEwuR2VvbWV0cnlVdGlsLmZvcm1hdHRlZE51bWJlcihkaXN0YW5jZSAvIDE3NjAsIHByZWNpc2lvblsnbWknXSkgKyAnIG1pbGVzJzsKCQkJCQl9IGVsc2UgewoJCQkJCQlkaXN0YW5jZVN0ciA9IEwuR2VvbWV0cnlVdGlsLmZvcm1hdHRlZE51bWJlcihkaXN0YW5jZSwgcHJlY2lzaW9uWyd5ZCddKSArICcgeWQnOwoJCQkJCX0KCQkJCQlicmVhazsKCQkJfQoJCQlyZXR1cm4gZGlzdGFuY2VTdHI7CgkJfSwKCgkJLy8gQG1ldGhvZCBpc1ZlcnNpb24wN3goKTogYm9vbGVhbgoJCS8vIFJldHVybnMgdHJ1ZSBpZiB0aGUgTGVhZmxldCB2ZXJzaW9uIGlzIDAuNy54LCBmYWxzZSBvdGhlcndpc2UuCgkJaXNWZXJzaW9uMDd4OiBmdW5jdGlvbiAoKSB7CgkJCXZhciB2ZXJzaW9uID0gTC52ZXJzaW9uLnNwbGl0KCcuJyk7CgkJCS8vSWYgVmVyc2lvbiBpcyA9PSAwLjcuKgoJCQlyZXR1cm4gcGFyc2VJbnQodmVyc2lvblswXSwgMTApID09PSAwICYmIHBhcnNlSW50KHZlcnNpb25bMV0sIDEwKSA9PT0gNzsKCQl9LAoJfSk7Cgp9KSgpOwo="></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkxhdExuZ1V0aWwKICogQGFrYSBMYXRMbmdVdGlsCiAqLwpMLkxhdExuZ1V0aWwgPSB7CgkvLyBDbG9uZXMgYSBMYXRMbmdzW10sIHJldHVybnMgW11bXQoKCS8vIEBtZXRob2QgY2xvbmVMYXRMbmdzKExhdExuZ3NbXSk6IEwuTGF0TG5nc1tdCgkvLyBDbG9uZSB0aGUgbGF0TG5nIHBvaW50IG9yIHBvaW50cyBvciBuZXN0ZWQgcG9pbnRzIGFuZCByZXR1cm4gYW4gYXJyYXkgd2l0aCB0aG9zZSBwb2ludHMKCWNsb25lTGF0TG5nczogZnVuY3Rpb24gKGxhdGxuZ3MpIHsKCQl2YXIgY2xvbmUgPSBbXTsKCQlmb3IgKHZhciBpID0gMCwgbCA9IGxhdGxuZ3MubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CgkJCS8vIENoZWNrIGZvciBuZXN0ZWQgYXJyYXkgKFBvbHlsaW5lL1BvbHlnb24pCgkJCWlmIChBcnJheS5pc0FycmF5KGxhdGxuZ3NbaV0pKSB7CgkJCQljbG9uZS5wdXNoKEwuTGF0TG5nVXRpbC5jbG9uZUxhdExuZ3MobGF0bG5nc1tpXSkpOwoJCQl9IGVsc2UgewoJCQkJY2xvbmUucHVzaCh0aGlzLmNsb25lTGF0TG5nKGxhdGxuZ3NbaV0pKTsKCQkJfQoJCX0KCQlyZXR1cm4gY2xvbmU7Cgl9LAoKCS8vIEBtZXRob2QgY2xvbmVMYXRMbmcoTGF0TG5nKTogTC5MYXRMbmcKCS8vIENsb25lIHRoZSBsYXRMbmcgYW5kIHJldHVybiBhIG5ldyBMYXRMbmcgb2JqZWN0LgoJY2xvbmVMYXRMbmc6IGZ1bmN0aW9uIChsYXRsbmcpIHsKCQlyZXR1cm4gTC5sYXRMbmcobGF0bG5nLmxhdCwgbGF0bG5nLmxuZyk7Cgl9Cn07Cg=="></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkxpbmVVdGlsCiAqIEBha2EgVXRpbAogKiBAYWthIEwuVXRpbHMKICovCkwuVXRpbC5leHRlbmQoTC5MaW5lVXRpbCwgewoKCS8vIEBtZXRob2Qgc2VnbWVudHNJbnRlcnNlY3QoKTogYm9vbGVhbgoJLy8gQ2hlY2tzIHRvIHNlZSBpZiB0d28gbGluZSBzZWdtZW50cyBpbnRlcnNlY3QuIERvZXMgbm90IGhhbmRsZSBkZWdlbmVyYXRlIGNhc2VzLgoJLy8gaHR0cDovL2NvbXBnZW9tLmNzLnVpdWMuZWR1L35qZWZmZS90ZWFjaGluZy8zNzMvbm90ZXMveDA2LXN3ZWVwbGluZS5wZGYKCXNlZ21lbnRzSW50ZXJzZWN0OiBmdW5jdGlvbiAoLypQb2ludCovIHAsIC8qUG9pbnQqLyBwMSwgLypQb2ludCovIHAyLCAvKlBvaW50Ki8gcDMpIHsKCQlyZXR1cm4gdGhpcy5fY2hlY2tDb3VudGVyY2xvY2t3aXNlKHAsIHAyLCBwMykgIT09CgkJCXRoaXMuX2NoZWNrQ291bnRlcmNsb2Nrd2lzZShwMSwgcDIsIHAzKSAmJgoJCQl0aGlzLl9jaGVja0NvdW50ZXJjbG9ja3dpc2UocCwgcDEsIHAyKSAhPT0KCQkJdGhpcy5fY2hlY2tDb3VudGVyY2xvY2t3aXNlKHAsIHAxLCBwMyk7Cgl9LAoKCS8vIGNoZWNrIHRvIHNlZSBpZiBwb2ludHMgYXJlIGluIGNvdW50ZXJjbG9ja3dpc2Ugb3JkZXIKCV9jaGVja0NvdW50ZXJjbG9ja3dpc2U6IGZ1bmN0aW9uICgvKlBvaW50Ki8gcCwgLypQb2ludCovIHAxLCAvKlBvaW50Ki8gcDIpIHsKCQlyZXR1cm4gKHAyLnkgLSBwLnkpICogKHAxLnggLSBwLngpID4gKHAxLnkgLSBwLnkpICogKHAyLnggLSBwLngpOwoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLlBvbHlnb24KICogQGFrYSBQb2x5Z29uCiAqLwpMLlBvbHlnb24uaW5jbHVkZSh7CgoJLy8gQG1ldGhvZCBpbnRlcnNlY3RzKCk6IGJvb2xlYW4KCS8vIENoZWNrcyBhIHBvbHlnb24gZm9yIGFueSBpbnRlcnNlY3RpbmcgbGluZSBzZWdtZW50cy4gSWdub3JlcyBob2xlcy4KCWludGVyc2VjdHM6IGZ1bmN0aW9uICgpIHsKCQl2YXIgcG9seWxpbmVJbnRlcnNlY3RzLAoJCQlwb2ludHMgPSB0aGlzLl9nZXRQcm9qZWN0ZWRQb2ludHMoKSwKCQkJbGVuLCBmaXJzdFBvaW50LCBsYXN0UG9pbnQsIG1heEluZGV4OwoKCQlpZiAodGhpcy5fdG9vRmV3UG9pbnRzRm9ySW50ZXJzZWN0aW9uKCkpIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJcG9seWxpbmVJbnRlcnNlY3RzID0gTC5Qb2x5bGluZS5wcm90b3R5cGUuaW50ZXJzZWN0cy5jYWxsKHRoaXMpOwoKCQkvLyBJZiBhbHJlYWR5IGZvdW5kIGFuIGludGVyc2VjdGlvbiBkb24ndCBuZWVkIHRvIGNoZWNrIGZvciBhbnkgbW9yZS4KCQlpZiAocG9seWxpbmVJbnRlcnNlY3RzKSB7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJbGVuID0gcG9pbnRzLmxlbmd0aDsKCQlmaXJzdFBvaW50ID0gcG9pbnRzWzBdOwoJCWxhc3RQb2ludCA9IHBvaW50c1tsZW4gLSAxXTsKCQltYXhJbmRleCA9IGxlbiAtIDI7CgoJCS8vIENoZWNrIHRoZSBsaW5lIHNlZ21lbnQgYmV0d2VlbiBsYXN0IGFuZCBmaXJzdCBwb2ludC4gRG9uJ3QgbmVlZCB0byBjaGVjayB0aGUgZmlyc3QgbGluZSBzZWdtZW50IChtaW5JbmRleCA9IDEpCgkJcmV0dXJuIHRoaXMuX2xpbmVTZWdtZW50c0ludGVyc2VjdHNSYW5nZShsYXN0UG9pbnQsIGZpcnN0UG9pbnQsIG1heEluZGV4LCAxKTsKCX0KfSk7Cg=="></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLlBvbHlsaW5lCiAqIEBha2EgUG9seWxpbmUKICovCkwuUG9seWxpbmUuaW5jbHVkZSh7CgoJLy8gQG1ldGhvZCBpbnRlcnNlY3RzKCk6IGJvb2xlYW4KCS8vIENoZWNrIHRvIHNlZSBpZiB0aGlzIHBvbHlsaW5lIGhhcyBhbnkgbGluZXNlZ21lbnRzIHRoYXQgaW50ZXJzZWN0LgoJLy8gTk9URTogZG9lcyBub3Qgc3VwcG9ydCBkZXRlY3RpbmcgaW50ZXJzZWN0aW9uIGZvciBkZWdlbmVyYXRlIGNhc2VzLgoJaW50ZXJzZWN0czogZnVuY3Rpb24gKCkgewoJCXZhciBwb2ludHMgPSB0aGlzLl9nZXRQcm9qZWN0ZWRQb2ludHMoKSwKCQkJbGVuID0gcG9pbnRzID8gcG9pbnRzLmxlbmd0aCA6IDAsCgkJCWksIHAsIHAxOwoKCQlpZiAodGhpcy5fdG9vRmV3UG9pbnRzRm9ySW50ZXJzZWN0aW9uKCkpIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJZm9yIChpID0gbGVuIC0gMTsgaSA+PSAzOyBpLS0pIHsKCQkJcCA9IHBvaW50c1tpIC0gMV07CgkJCXAxID0gcG9pbnRzW2ldOwoKCgkJCWlmICh0aGlzLl9saW5lU2VnbWVudHNJbnRlcnNlY3RzUmFuZ2UocCwgcDEsIGkgLSAyKSkgewoJCQkJcmV0dXJuIHRydWU7CgkJCX0KCQl9CgoJCXJldHVybiBmYWxzZTsKCX0sCgoJLy8gQG1ldGhvZCBuZXdMYXRMbmdJbnRlcnNlY3RzKCk6IGJvb2xlYW4KCS8vIENoZWNrIGZvciBpbnRlcnNlY3Rpb24gaWYgbmV3IGxhdGxuZyB3YXMgYWRkZWQgdG8gdGhpcyBwb2x5bGluZS4KCS8vIE5PVEU6IGRvZXMgbm90IHN1cHBvcnQgZGV0ZWN0aW5nIGludGVyc2VjdGlvbiBmb3IgZGVnZW5lcmF0ZSBjYXNlcy4KCW5ld0xhdExuZ0ludGVyc2VjdHM6IGZ1bmN0aW9uIChsYXRsbmcsIHNraXBGaXJzdCkgewoJCS8vIENhbm5vdCBjaGVjayBhIHBvbHlsaW5lIGZvciBpbnRlcnNlY3RpbmcgbGF0cy9sbmdzIHdoZW4gbm90IGFkZGVkIHRvIHRoZSBtYXAKCQlpZiAoIXRoaXMuX21hcCkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQlyZXR1cm4gdGhpcy5uZXdQb2ludEludGVyc2VjdHModGhpcy5fbWFwLmxhdExuZ1RvTGF5ZXJQb2ludChsYXRsbmcpLCBza2lwRmlyc3QpOwoJfSwKCgkvLyBAbWV0aG9kIG5ld1BvaW50SW50ZXJzZWN0cygpOiBib29sZWFuCgkvLyBDaGVjayBmb3IgaW50ZXJzZWN0aW9uIGlmIG5ldyBwb2ludCB3YXMgYWRkZWQgdG8gdGhpcyBwb2x5bGluZS4KCS8vIG5ld1BvaW50IG11c3QgYmUgYSBsYXllciBwb2ludC4KCS8vIE5PVEU6IGRvZXMgbm90IHN1cHBvcnQgZGV0ZWN0aW5nIGludGVyc2VjdGlvbiBmb3IgZGVnZW5lcmF0ZSBjYXNlcy4KCW5ld1BvaW50SW50ZXJzZWN0czogZnVuY3Rpb24gKG5ld1BvaW50LCBza2lwRmlyc3QpIHsKCQl2YXIgcG9pbnRzID0gdGhpcy5fZ2V0UHJvamVjdGVkUG9pbnRzKCksCgkJCWxlbiA9IHBvaW50cyA/IHBvaW50cy5sZW5ndGggOiAwLAoJCQlsYXN0UG9pbnQgPSBwb2ludHMgPyBwb2ludHNbbGVuIC0gMV0gOiBudWxsLAoJCQkvLyBUaGUgcHJldmlvdXMgcHJldmlvdXMgbGluZSBzZWdtZW50LiBQcmV2aW91cyBsaW5lIHNlZ21lbnQgZG9lc24ndCBuZWVkIHRlc3RpbmcuCgkJCW1heEluZGV4ID0gbGVuIC0gMjsKCgkJaWYgKHRoaXMuX3Rvb0Zld1BvaW50c0ZvckludGVyc2VjdGlvbigxKSkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQlyZXR1cm4gdGhpcy5fbGluZVNlZ21lbnRzSW50ZXJzZWN0c1JhbmdlKGxhc3RQb2ludCwgbmV3UG9pbnQsIG1heEluZGV4LCBza2lwRmlyc3QgPyAxIDogMCk7Cgl9LAoKCS8vIFBvbHlsaW5lcyB3aXRoIDIgc2lkZXMgY2FuIG9ubHkgaW50ZXJzZWN0IGluIGNhc2VzIHdoZXJlIHBvaW50cyBhcmUgY29sbGluZWFyICh3ZSBkb24ndCBzdXBwb3J0IGRldGVjdGluZyB0aGVzZSkuCgkvLyBDYW5ub3QgaGF2ZSBpbnRlcnNlY3Rpb24gd2hlbiA8IDMgbGluZSBzZWdtZW50cyAoPCA0IHBvaW50cykKCV90b29GZXdQb2ludHNGb3JJbnRlcnNlY3Rpb246IGZ1bmN0aW9uIChleHRyYVBvaW50cykgewoJCXZhciBwb2ludHMgPSB0aGlzLl9nZXRQcm9qZWN0ZWRQb2ludHMoKSwKCQkJbGVuID0gcG9pbnRzID8gcG9pbnRzLmxlbmd0aCA6IDA7CgkJLy8gSW5jcmVtZW50IGxlbmd0aCBieSBleHRyYVBvaW50cyBpZiBwcmVzZW50CgkJbGVuICs9IGV4dHJhUG9pbnRzIHx8IDA7CgoJCXJldHVybiAhcG9pbnRzIHx8IGxlbiA8PSAzOwoJfSwKCgkvLyBDaGVja3MgYSBsaW5lIHNlZ21lbnQgaW50ZXJzZWN0aW9ucyB3aXRoIGFueSBsaW5lIHNlZ21lbnRzIGJlZm9yZSBpdHMgcHJlZGVjZXNzb3IuCgkvLyBEb24ndCBuZWVkIHRvIGNoZWNrIHRoZSBwcmVkZWNlc3NvciBhcyB3aWxsIG5ldmVyIGludGVyc2VjdC4KCV9saW5lU2VnbWVudHNJbnRlcnNlY3RzUmFuZ2U6IGZ1bmN0aW9uIChwLCBwMSwgbWF4SW5kZXgsIG1pbkluZGV4KSB7CgkJdmFyIHBvaW50cyA9IHRoaXMuX2dldFByb2plY3RlZFBvaW50cygpLAoJCQlwMiwgcDM7CgoJCW1pbkluZGV4ID0gbWluSW5kZXggfHwgMDsKCgkJLy8gQ2hlY2sgYWxsIHByZXZpb3VzIGxpbmUgc2VnbWVudHMgKGJlc2lkZSB0aGUgaW1tZWRpYXRlbHkgcHJldmlvdXMpIGZvciBpbnRlcnNlY3Rpb25zCgkJZm9yICh2YXIgaiA9IG1heEluZGV4OyBqID4gbWluSW5kZXg7IGotLSkgewoJCQlwMiA9IHBvaW50c1tqIC0gMV07CgkJCXAzID0gcG9pbnRzW2pdOwoKCQkJaWYgKEwuTGluZVV0aWwuc2VnbWVudHNJbnRlcnNlY3QocCwgcDEsIHAyLCBwMykpIHsKCQkJCXJldHVybiB0cnVlOwoJCQl9CgkJfQoKCQlyZXR1cm4gZmFsc2U7Cgl9LAoKCV9nZXRQcm9qZWN0ZWRQb2ludHM6IGZ1bmN0aW9uICgpIHsKCQlpZiAoIXRoaXMuX2RlZmF1bHRTaGFwZSkgewoJCQlyZXR1cm4gdGhpcy5fb3JpZ2luYWxQb2ludHM7CgkJfQoJCXZhciBwb2ludHMgPSBbXSwKCQkJX3NoYXBlID0gdGhpcy5fZGVmYXVsdFNoYXBlKCk7CgoJCWZvciAodmFyIGkgPSAwOyBpIDwgX3NoYXBlLmxlbmd0aDsgaSsrKSB7CgkJCXBvaW50cy5wdXNoKHRoaXMuX21hcC5sYXRMbmdUb0xheWVyUG9pbnQoX3NoYXBlW2ldKSk7CgkJfQoJCXJldHVybiBwb2ludHM7Cgl9Cn0pOwo="></script>
<script src="data:text/javascript;base64,"></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkRyYXdUb29sYmFyCiAqIEBha2EgVG9vbGJhcgogKi8KTC5EcmF3VG9vbGJhciA9IEwuVG9vbGJhci5leHRlbmQoewoKCXN0YXRpY3M6IHsKCQlUWVBFOiAnZHJhdycKCX0sCgoJb3B0aW9uczogewoJCXBvbHlsaW5lOiB7fSwKCQlwb2x5Z29uOiB7fSwKCQlyZWN0YW5nbGU6IHt9LAoJCWNpcmNsZToge30sCgkJbWFya2VyOiB7fSwKCQljaXJjbGVtYXJrZXI6IHt9Cgl9LAoKCS8vIEBtZXRob2QgaW5pdGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAob3B0aW9ucykgewoJCS8vIEVuc3VyZSB0aGF0IHRoZSBvcHRpb25zIGFyZSBtZXJnZWQgY29ycmVjdGx5IHNpbmNlIEwuZXh0ZW5kIGlzIG9ubHkgc2hhbGxvdwoJCWZvciAodmFyIHR5cGUgaW4gdGhpcy5vcHRpb25zKSB7CgkJCWlmICh0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkodHlwZSkpIHsKCQkJCWlmIChvcHRpb25zW3R5cGVdKSB7CgkJCQkJb3B0aW9uc1t0eXBlXSA9IEwuZXh0ZW5kKHt9LCB0aGlzLm9wdGlvbnNbdHlwZV0sIG9wdGlvbnNbdHlwZV0pOwoJCQkJfQoJCQl9CgkJfQoKCQl0aGlzLl90b29sYmFyQ2xhc3MgPSAnbGVhZmxldC1kcmF3LWRyYXcnOwoJCUwuVG9vbGJhci5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIG9wdGlvbnMpOwoJfSwKCgkvLyBAbWV0aG9kIGdldE1vZGVIYW5kbGVycygpOiBvYmplY3QKCS8vIEdldCBtb2RlIGhhbmRsZXJzIGluZm9ybWF0aW9uCglnZXRNb2RlSGFuZGxlcnM6IGZ1bmN0aW9uIChtYXApIHsKCQlyZXR1cm4gWwoJCQl7CgkJCQllbmFibGVkOiB0aGlzLm9wdGlvbnMucG9seWxpbmUsCgkJCQloYW5kbGVyOiBuZXcgTC5EcmF3LlBvbHlsaW5lKG1hcCwgdGhpcy5vcHRpb25zLnBvbHlsaW5lKSwKCQkJCXRpdGxlOiBMLmRyYXdMb2NhbC5kcmF3LnRvb2xiYXIuYnV0dG9ucy5wb2x5bGluZQoJCQl9LAoJCQl7CgkJCQllbmFibGVkOiB0aGlzLm9wdGlvbnMucG9seWdvbiwKCQkJCWhhbmRsZXI6IG5ldyBMLkRyYXcuUG9seWdvbihtYXAsIHRoaXMub3B0aW9ucy5wb2x5Z29uKSwKCQkJCXRpdGxlOiBMLmRyYXdMb2NhbC5kcmF3LnRvb2xiYXIuYnV0dG9ucy5wb2x5Z29uCgkJCX0sCgkJCXsKCQkJCWVuYWJsZWQ6IHRoaXMub3B0aW9ucy5yZWN0YW5nbGUsCgkJCQloYW5kbGVyOiBuZXcgTC5EcmF3LlJlY3RhbmdsZShtYXAsIHRoaXMub3B0aW9ucy5yZWN0YW5nbGUpLAoJCQkJdGl0bGU6IEwuZHJhd0xvY2FsLmRyYXcudG9vbGJhci5idXR0b25zLnJlY3RhbmdsZQoJCQl9LAoJCQl7CgkJCQllbmFibGVkOiB0aGlzLm9wdGlvbnMuY2lyY2xlLAoJCQkJaGFuZGxlcjogbmV3IEwuRHJhdy5DaXJjbGUobWFwLCB0aGlzLm9wdGlvbnMuY2lyY2xlKSwKCQkJCXRpdGxlOiBMLmRyYXdMb2NhbC5kcmF3LnRvb2xiYXIuYnV0dG9ucy5jaXJjbGUKCQkJfSwKCQkJewoJCQkJZW5hYmxlZDogdGhpcy5vcHRpb25zLm1hcmtlciwKCQkJCWhhbmRsZXI6IG5ldyBMLkRyYXcuTWFya2VyKG1hcCwgdGhpcy5vcHRpb25zLm1hcmtlciksCgkJCQl0aXRsZTogTC5kcmF3TG9jYWwuZHJhdy50b29sYmFyLmJ1dHRvbnMubWFya2VyCgkJCX0sCgkJCXsKCQkJCWVuYWJsZWQ6IHRoaXMub3B0aW9ucy5jaXJjbGVtYXJrZXIsCgkJCQloYW5kbGVyOiBuZXcgTC5EcmF3LkNpcmNsZU1hcmtlcihtYXAsIHRoaXMub3B0aW9ucy5jaXJjbGVtYXJrZXIpLAoJCQkJdGl0bGU6IEwuZHJhd0xvY2FsLmRyYXcudG9vbGJhci5idXR0b25zLmNpcmNsZW1hcmtlcgoJCQl9CgkJXTsKCX0sCgoJLy8gQG1ldGhvZCBnZXRBY3Rpb25zKCk6IG9iamVjdAoJLy8gR2V0IGFjdGlvbiBpbmZvcm1hdGlvbgoJZ2V0QWN0aW9uczogZnVuY3Rpb24gKGhhbmRsZXIpIHsKCQlyZXR1cm4gWwoJCQl7CgkJCQllbmFibGVkOiBoYW5kbGVyLmNvbXBsZXRlU2hhcGUsCgkJCQl0aXRsZTogTC5kcmF3TG9jYWwuZHJhdy50b29sYmFyLmZpbmlzaC50aXRsZSwKCQkJCXRleHQ6IEwuZHJhd0xvY2FsLmRyYXcudG9vbGJhci5maW5pc2gudGV4dCwKCQkJCWNhbGxiYWNrOiBoYW5kbGVyLmNvbXBsZXRlU2hhcGUsCgkJCQljb250ZXh0OiBoYW5kbGVyCgkJCX0sCgkJCXsKCQkJCWVuYWJsZWQ6IGhhbmRsZXIuZGVsZXRlTGFzdFZlcnRleCwKCQkJCXRpdGxlOiBMLmRyYXdMb2NhbC5kcmF3LnRvb2xiYXIudW5kby50aXRsZSwKCQkJCXRleHQ6IEwuZHJhd0xvY2FsLmRyYXcudG9vbGJhci51bmRvLnRleHQsCgkJCQljYWxsYmFjazogaGFuZGxlci5kZWxldGVMYXN0VmVydGV4LAoJCQkJY29udGV4dDogaGFuZGxlcgoJCQl9LAoJCQl7CgkJCQl0aXRsZTogTC5kcmF3TG9jYWwuZHJhdy50b29sYmFyLmFjdGlvbnMudGl0bGUsCgkJCQl0ZXh0OiBMLmRyYXdMb2NhbC5kcmF3LnRvb2xiYXIuYWN0aW9ucy50ZXh0LAoJCQkJY2FsbGJhY2s6IHRoaXMuZGlzYWJsZSwKCQkJCWNvbnRleHQ6IHRoaXMKCQkJfQoJCV07Cgl9LAoKCS8vIEBtZXRob2Qgc2V0T3B0aW9ucygpOiB2b2lkCgkvLyBTZXRzIHRoZSBvcHRpb25zIHRvIHRoZSB0b29sYmFyCglzZXRPcHRpb25zOiBmdW5jdGlvbiAob3B0aW9ucykgewoJCUwuc2V0T3B0aW9ucyh0aGlzLCBvcHRpb25zKTsKCgkJZm9yICh2YXIgdHlwZSBpbiB0aGlzLl9tb2RlcykgewoJCQlpZiAodGhpcy5fbW9kZXMuaGFzT3duUHJvcGVydHkodHlwZSkgJiYgb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgewoJCQkJdGhpcy5fbW9kZXNbdHlwZV0uaGFuZGxlci5zZXRPcHRpb25zKG9wdGlvbnNbdHlwZV0pOwoJCQl9CgkJfQoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,TC5EcmF3ID0gTC5EcmF3IHx8IHt9OwoKLyoqCiAqIEBjbGFzcyBMLkRyYXcuRmVhdHVyZQogKiBAYWthIERyYXcuRmVhdHVyZQogKi8KTC5EcmF3LkZlYXR1cmUgPSBMLkhhbmRsZXIuZXh0ZW5kKHsKCgkvLyBAbWV0aG9kIGluaXRpYWxpemUoKTogdm9pZAoJaW5pdGlhbGl6ZTogZnVuY3Rpb24gKG1hcCwgb3B0aW9ucykgewoJCXRoaXMuX21hcCA9IG1hcDsKCQl0aGlzLl9jb250YWluZXIgPSBtYXAuX2NvbnRhaW5lcjsKCQl0aGlzLl9vdmVybGF5UGFuZSA9IG1hcC5fcGFuZXMub3ZlcmxheVBhbmU7CgkJdGhpcy5fcG9wdXBQYW5lID0gbWFwLl9wYW5lcy5wb3B1cFBhbmU7CgoJCS8vIE1lcmdlIGRlZmF1bHQgc2hhcGVPcHRpb25zIG9wdGlvbnMgd2l0aCBjdXN0b20gc2hhcGVPcHRpb25zCgkJaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5zaGFwZU9wdGlvbnMpIHsKCQkJb3B0aW9ucy5zaGFwZU9wdGlvbnMgPSBMLlV0aWwuZXh0ZW5kKHt9LCB0aGlzLm9wdGlvbnMuc2hhcGVPcHRpb25zLCBvcHRpb25zLnNoYXBlT3B0aW9ucyk7CgkJfQoJCUwuc2V0T3B0aW9ucyh0aGlzLCBvcHRpb25zKTsKCgkJdmFyIHZlcnNpb24gPSBMLnZlcnNpb24uc3BsaXQoJy4nKTsKCQkvL0lmIFZlcnNpb24gaXMgPj0gMS4yLjAKCQlpZiAocGFyc2VJbnQodmVyc2lvblswXSwgMTApID09PSAxICYmIHBhcnNlSW50KHZlcnNpb25bMV0sIDEwKSA+PSAyKSB7CgkJCUwuRHJhdy5GZWF0dXJlLmluY2x1ZGUoTC5FdmVudGVkLnByb3RvdHlwZSk7CgkJfSBlbHNlIHsKCQkJTC5EcmF3LkZlYXR1cmUuaW5jbHVkZShMLk1peGluLkV2ZW50cyk7CgkJfQoJfSwKCgkvLyBAbWV0aG9kIGVuYWJsZSgpOiB2b2lkCgkvLyBFbmFibGVzIHRoaXMgaGFuZGxlcgoJZW5hYmxlOiBmdW5jdGlvbiAoKSB7CgkJaWYgKHRoaXMuX2VuYWJsZWQpIHsKCQkJcmV0dXJuOwoJCX0KCgkJTC5IYW5kbGVyLnByb3RvdHlwZS5lbmFibGUuY2FsbCh0aGlzKTsKCgkJdGhpcy5maXJlKCdlbmFibGVkJywge2hhbmRsZXI6IHRoaXMudHlwZX0pOwoKCQl0aGlzLl9tYXAuZmlyZShMLkRyYXcuRXZlbnQuRFJBV1NUQVJULCB7bGF5ZXJUeXBlOiB0aGlzLnR5cGV9KTsKCX0sCgoJLy8gQG1ldGhvZCBkaXNhYmxlKCk6IHZvaWQKCWRpc2FibGU6IGZ1bmN0aW9uICgpIHsKCQlpZiAoIXRoaXMuX2VuYWJsZWQpIHsKCQkJcmV0dXJuOwoJCX0KCgkJTC5IYW5kbGVyLnByb3RvdHlwZS5kaXNhYmxlLmNhbGwodGhpcyk7CgoJCXRoaXMuX21hcC5maXJlKEwuRHJhdy5FdmVudC5EUkFXU1RPUCwge2xheWVyVHlwZTogdGhpcy50eXBlfSk7CgoJCXRoaXMuZmlyZSgnZGlzYWJsZWQnLCB7aGFuZGxlcjogdGhpcy50eXBlfSk7Cgl9LAoKCS8vIEBtZXRob2QgYWRkSG9va3MoKTogdm9pZAoJLy8gQWRkJ3MgZXZlbnQgbGlzdGVuZXJzIHRvIHRoaXMgaGFuZGxlcgoJYWRkSG9va3M6IGZ1bmN0aW9uICgpIHsKCQl2YXIgbWFwID0gdGhpcy5fbWFwOwoKCQlpZiAobWFwKSB7CgkJCUwuRG9tVXRpbC5kaXNhYmxlVGV4dFNlbGVjdGlvbigpOwoKCQkJbWFwLmdldENvbnRhaW5lcigpLmZvY3VzKCk7CgoJCQl0aGlzLl90b29sdGlwID0gbmV3IEwuRHJhdy5Ub29sdGlwKHRoaXMuX21hcCk7CgoJCQlMLkRvbUV2ZW50Lm9uKHRoaXMuX2NvbnRhaW5lciwgJ2tleXVwJywgdGhpcy5fY2FuY2VsRHJhd2luZywgdGhpcyk7CgkJfQoJfSwKCgkvLyBAbWV0aG9kIHJlbW92ZUhvb2tzKCk6IHZvaWQKCS8vIFJlbW92ZXMgZXZlbnQgbGlzdGVuZXJzIGZyb20gdGhpcyBoYW5kbGVyCglyZW1vdmVIb29rczogZnVuY3Rpb24gKCkgewoJCWlmICh0aGlzLl9tYXApIHsKCQkJTC5Eb21VdGlsLmVuYWJsZVRleHRTZWxlY3Rpb24oKTsKCgkJCXRoaXMuX3Rvb2x0aXAuZGlzcG9zZSgpOwoJCQl0aGlzLl90b29sdGlwID0gbnVsbDsKCgkJCUwuRG9tRXZlbnQub2ZmKHRoaXMuX2NvbnRhaW5lciwgJ2tleXVwJywgdGhpcy5fY2FuY2VsRHJhd2luZywgdGhpcyk7CgkJfQoJfSwKCgkvLyBAbWV0aG9kIHNldE9wdGlvbnMob2JqZWN0KTogdm9pZAoJLy8gU2V0cyBuZXcgb3B0aW9ucyB0byB0aGlzIGhhbmRsZXIKCXNldE9wdGlvbnM6IGZ1bmN0aW9uIChvcHRpb25zKSB7CgkJTC5zZXRPcHRpb25zKHRoaXMsIG9wdGlvbnMpOwoJfSwKCglfZmlyZUNyZWF0ZWRFdmVudDogZnVuY3Rpb24gKGxheWVyKSB7CgkJdGhpcy5fbWFwLmZpcmUoTC5EcmF3LkV2ZW50LkNSRUFURUQsIHtsYXllcjogbGF5ZXIsIGxheWVyVHlwZTogdGhpcy50eXBlfSk7Cgl9LAoKCS8vIENhbmNlbCBkcmF3aW5nIHdoZW4gdGhlIGVzY2FwZSBrZXkgaXMgcHJlc3NlZAoJX2NhbmNlbERyYXdpbmc6IGZ1bmN0aW9uIChlKSB7CgkJaWYgKGUua2V5Q29kZSA9PT0gMjcpIHsKCQkJdGhpcy5fbWFwLmZpcmUoJ2RyYXc6Y2FuY2VsZWQnLCB7bGF5ZXJUeXBlOiB0aGlzLnR5cGV9KTsKCQkJdGhpcy5kaXNhYmxlKCk7CgkJfQoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,TC5TaW1wbGVTaGFwZSA9IHt9OwovKioKICogQGNsYXNzIEwuRHJhdy5TaW1wbGVTaGFwZQogKiBAYWthIERyYXcuU2ltcGxlU2hhcGUKICogQGluaGVyaXRzIEwuRHJhdy5GZWF0dXJlCiAqLwpMLkRyYXcuU2ltcGxlU2hhcGUgPSBMLkRyYXcuRmVhdHVyZS5leHRlbmQoewoJb3B0aW9uczogewoJCXJlcGVhdE1vZGU6IGZhbHNlCgl9LAoKCS8vIEBtZXRob2QgaW5pdGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAobWFwLCBvcHRpb25zKSB7CgkJdGhpcy5fZW5kTGFiZWxUZXh0ID0gTC5kcmF3TG9jYWwuZHJhdy5oYW5kbGVycy5zaW1wbGVzaGFwZS50b29sdGlwLmVuZDsKCgkJTC5EcmF3LkZlYXR1cmUucHJvdG90eXBlLmluaXRpYWxpemUuY2FsbCh0aGlzLCBtYXAsIG9wdGlvbnMpOwoJfSwKCgkvLyBAbWV0aG9kIGFkZEhvb2tzKCk6IHZvaWQKCS8vIEFkZCBsaXN0ZW5lciBob29rcyB0byB0aGlzIGhhbmRsZXIuCglhZGRIb29rczogZnVuY3Rpb24gKCkgewoJCUwuRHJhdy5GZWF0dXJlLnByb3RvdHlwZS5hZGRIb29rcy5jYWxsKHRoaXMpOwoJCWlmICh0aGlzLl9tYXApIHsKCQkJdGhpcy5fbWFwRHJhZ2dhYmxlID0gdGhpcy5fbWFwLmRyYWdnaW5nLmVuYWJsZWQoKTsKCgkJCWlmICh0aGlzLl9tYXBEcmFnZ2FibGUpIHsKCQkJCXRoaXMuX21hcC5kcmFnZ2luZy5kaXNhYmxlKCk7CgkJCX0KCgkJCS8vVE9ETyByZWZhY3RvcjogbW92ZSBjdXJzb3IgdG8gc3R5bGVzCgkJCXRoaXMuX2NvbnRhaW5lci5zdHlsZS5jdXJzb3IgPSAnY3Jvc3NoYWlyJzsKCgkJCXRoaXMuX3Rvb2x0aXAudXBkYXRlQ29udGVudCh7dGV4dDogdGhpcy5faW5pdGlhbExhYmVsVGV4dH0pOwoKCQkJdGhpcy5fbWFwCgkJCQkub24oJ21vdXNlZG93bicsIHRoaXMuX29uTW91c2VEb3duLCB0aGlzKQoJCQkJLm9uKCdtb3VzZW1vdmUnLCB0aGlzLl9vbk1vdXNlTW92ZSwgdGhpcykKCQkJCS5vbigndG91Y2hzdGFydCcsIHRoaXMuX29uTW91c2VEb3duLCB0aGlzKQoJCQkJLm9uKCd0b3VjaG1vdmUnLCB0aGlzLl9vbk1vdXNlTW92ZSwgdGhpcyk7CgoJCQkvLyB3ZSBzaG91bGQgcHJldmVudCBkZWZhdWx0LCBvdGhlcndpc2UgZGVmYXVsdCBiZWhhdmlvciAoc2Nyb2xsaW5nKSB3aWxsIGZpcmUsCgkJCS8vIGFuZCB0aGF0IHdpbGwgY2F1c2UgZG9jdW1lbnQudG91Y2hlbmQgdG8gZmlyZSBhbmQgd2lsbCBzdG9wIHRoZSBkcmF3aW5nCgkJCS8vIChjaXJjbGUsIHJlY3RhbmdsZSkgaW4gdG91Y2ggbW9kZS4KCQkJLy8gKHVwZGF0ZSk6IHdlIGhhdmUgdG8gc2VuZCBwYXNzaXZlIG5vdyB0byBwcmV2ZW50IHNjcm9sbCwgYmVjYXVzZSBieSBkZWZhdWx0IGl0IGlzIHtwYXNzaXZlOiB0cnVlfSBub3csIHdoaWNoIG1lYW5zLAoJCQkvLyBoYW5kbGVyIGNhbid0IGV2ZW50LnByZXZlbnREZWZhdWx0CgkJCS8vIGNoZWNrIHRoZSBuZXdzIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi91cGRhdGVzLzIwMTYvMDYvcGFzc2l2ZS1ldmVudC1saXN0ZW5lcnMKCQkJZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIEwuRG9tRXZlbnQucHJldmVudERlZmF1bHQsIHtwYXNzaXZlOiBmYWxzZX0pOwoJCX0KCX0sCgoJLy8gQG1ldGhvZCByZW1vdmVIb29rcygpOiB2b2lkCgkvLyBSZW1vdmUgbGlzdGVuZXIgaG9va3MgZnJvbSB0aGlzIGhhbmRsZXIuCglyZW1vdmVIb29rczogZnVuY3Rpb24gKCkgewoJCUwuRHJhdy5GZWF0dXJlLnByb3RvdHlwZS5yZW1vdmVIb29rcy5jYWxsKHRoaXMpOwoJCWlmICh0aGlzLl9tYXApIHsKCQkJaWYgKHRoaXMuX21hcERyYWdnYWJsZSkgewoJCQkJdGhpcy5fbWFwLmRyYWdnaW5nLmVuYWJsZSgpOwoJCQl9CgoJCQkvL1RPRE8gcmVmYWN0b3I6IG1vdmUgY3Vyc29yIHRvIHN0eWxlcwoJCQl0aGlzLl9jb250YWluZXIuc3R5bGUuY3Vyc29yID0gJyc7CgoJCQl0aGlzLl9tYXAKCQkJCS5vZmYoJ21vdXNlZG93bicsIHRoaXMuX29uTW91c2VEb3duLCB0aGlzKQoJCQkJLm9mZignbW91c2Vtb3ZlJywgdGhpcy5fb25Nb3VzZU1vdmUsIHRoaXMpCgkJCQkub2ZmKCd0b3VjaHN0YXJ0JywgdGhpcy5fb25Nb3VzZURvd24sIHRoaXMpCgkJCQkub2ZmKCd0b3VjaG1vdmUnLCB0aGlzLl9vbk1vdXNlTW92ZSwgdGhpcyk7CgoJCQlMLkRvbUV2ZW50Lm9mZihkb2N1bWVudCwgJ21vdXNldXAnLCB0aGlzLl9vbk1vdXNlVXAsIHRoaXMpOwoJCQlMLkRvbUV2ZW50Lm9mZihkb2N1bWVudCwgJ3RvdWNoZW5kJywgdGhpcy5fb25Nb3VzZVVwLCB0aGlzKTsKCgkJCWRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBMLkRvbUV2ZW50LnByZXZlbnREZWZhdWx0KTsKCgkJCS8vIElmIHRoZSBib3ggZWxlbWVudCBkb2Vzbid0IGV4aXN0IHRoZXkgbXVzdCBub3QgaGF2ZSBtb3ZlZCB0aGUgbW91c2UsIHNvIGRvbid0IG5lZWQgdG8gZGVzdHJveS9yZXR1cm4KCQkJaWYgKHRoaXMuX3NoYXBlKSB7CgkJCQl0aGlzLl9tYXAucmVtb3ZlTGF5ZXIodGhpcy5fc2hhcGUpOwoJCQkJZGVsZXRlIHRoaXMuX3NoYXBlOwoJCQl9CgkJfQoJCXRoaXMuX2lzRHJhd2luZyA9IGZhbHNlOwoJfSwKCglfZ2V0VG9vbHRpcFRleHQ6IGZ1bmN0aW9uICgpIHsKCQlyZXR1cm4gewoJCQl0ZXh0OiB0aGlzLl9lbmRMYWJlbFRleHQKCQl9OwoJfSwKCglfb25Nb3VzZURvd246IGZ1bmN0aW9uIChlKSB7CgkJdGhpcy5faXNEcmF3aW5nID0gdHJ1ZTsKCQl0aGlzLl9zdGFydExhdExuZyA9IGUubGF0bG5nOwoKCQlMLkRvbUV2ZW50CgkJCS5vbihkb2N1bWVudCwgJ21vdXNldXAnLCB0aGlzLl9vbk1vdXNlVXAsIHRoaXMpCgkJCS5vbihkb2N1bWVudCwgJ3RvdWNoZW5kJywgdGhpcy5fb25Nb3VzZVVwLCB0aGlzKQoJCQkucHJldmVudERlZmF1bHQoZS5vcmlnaW5hbEV2ZW50KTsKCX0sCgoJX29uTW91c2VNb3ZlOiBmdW5jdGlvbiAoZSkgewoJCXZhciBsYXRsbmcgPSBlLmxhdGxuZzsKCgkJdGhpcy5fdG9vbHRpcC51cGRhdGVQb3NpdGlvbihsYXRsbmcpOwoJCWlmICh0aGlzLl9pc0RyYXdpbmcpIHsKCQkJdGhpcy5fdG9vbHRpcC51cGRhdGVDb250ZW50KHRoaXMuX2dldFRvb2x0aXBUZXh0KCkpOwoJCQl0aGlzLl9kcmF3U2hhcGUobGF0bG5nKTsKCQl9Cgl9LAoKCV9vbk1vdXNlVXA6IGZ1bmN0aW9uICgpIHsKCQlpZiAodGhpcy5fc2hhcGUpIHsKCQkJdGhpcy5fZmlyZUNyZWF0ZWRFdmVudCgpOwoJCX0KCgkJdGhpcy5kaXNhYmxlKCk7CgkJaWYgKHRoaXMub3B0aW9ucy5yZXBlYXRNb2RlKSB7CgkJCXRoaXMuZW5hYmxlKCk7CgkJfQoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,"></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkRyYXcuTWFya2VyCiAqIEBha2EgRHJhdy5NYXJrZXIKICogQGluaGVyaXRzIEwuRHJhdy5GZWF0dXJlCiAqLwpMLkRyYXcuTWFya2VyID0gTC5EcmF3LkZlYXR1cmUuZXh0ZW5kKHsKCXN0YXRpY3M6IHsKCQlUWVBFOiAnbWFya2VyJwoJfSwKCglvcHRpb25zOiB7CgkJaWNvbjogbmV3IEwuSWNvbi5EZWZhdWx0KCksCgkJcmVwZWF0TW9kZTogZmFsc2UsCgkJekluZGV4T2Zmc2V0OiAyMDAwIC8vIFRoaXMgc2hvdWxkIGJlID4gdGhhbiB0aGUgaGlnaGVzdCB6LWluZGV4IGFueSBtYXJrZXJzCgl9LAoKCS8vIEBtZXRob2QgaW5pdGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAobWFwLCBvcHRpb25zKSB7CgkJLy8gU2F2ZSB0aGUgdHlwZSBzbyBzdXBlciBjYW4gZmlyZSwgbmVlZCB0byBkbyB0aGlzIGFzIGNhbm5vdCBkbyB0aGlzLlRZUEUgOigKCQl0aGlzLnR5cGUgPSBMLkRyYXcuTWFya2VyLlRZUEU7CgoJCXRoaXMuX2luaXRpYWxMYWJlbFRleHQgPSBMLmRyYXdMb2NhbC5kcmF3LmhhbmRsZXJzLm1hcmtlci50b29sdGlwLnN0YXJ0OwoKCQlMLkRyYXcuRmVhdHVyZS5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIG1hcCwgb3B0aW9ucyk7Cgl9LAoKCS8vIEBtZXRob2QgYWRkSG9va3MoKTogdm9pZAoJLy8gQWRkIGxpc3RlbmVyIGhvb2tzIHRvIHRoaXMgaGFuZGxlci4KCWFkZEhvb2tzOiBmdW5jdGlvbiAoKSB7CgkJTC5EcmF3LkZlYXR1cmUucHJvdG90eXBlLmFkZEhvb2tzLmNhbGwodGhpcyk7CgoJCWlmICh0aGlzLl9tYXApIHsKCQkJdGhpcy5fdG9vbHRpcC51cGRhdGVDb250ZW50KHt0ZXh0OiB0aGlzLl9pbml0aWFsTGFiZWxUZXh0fSk7CgoJCQkvLyBTYW1lIG1vdXNlTWFya2VyIGFzIGluIERyYXcuUG9seWxpbmUKCQkJaWYgKCF0aGlzLl9tb3VzZU1hcmtlcikgewoJCQkJdGhpcy5fbW91c2VNYXJrZXIgPSBMLm1hcmtlcih0aGlzLl9tYXAuZ2V0Q2VudGVyKCksIHsKCQkJCQlpY29uOiBMLmRpdkljb24oewoJCQkJCQljbGFzc05hbWU6ICdsZWFmbGV0LW1vdXNlLW1hcmtlcicsCgkJCQkJCWljb25BbmNob3I6IFsyMCwgMjBdLAoJCQkJCQlpY29uU2l6ZTogWzQwLCA0MF0KCQkJCQl9KSwKCQkJCQlvcGFjaXR5OiAwLAoJCQkJCXpJbmRleE9mZnNldDogdGhpcy5vcHRpb25zLnpJbmRleE9mZnNldAoJCQkJfSk7CgkJCX0KCgkJCXRoaXMuX21vdXNlTWFya2VyCgkJCQkub24oJ2NsaWNrJywgdGhpcy5fb25DbGljaywgdGhpcykKCQkJCS5hZGRUbyh0aGlzLl9tYXApOwoKCQkJdGhpcy5fbWFwLm9uKCdtb3VzZW1vdmUnLCB0aGlzLl9vbk1vdXNlTW92ZSwgdGhpcyk7CgkJCXRoaXMuX21hcC5vbignY2xpY2snLCB0aGlzLl9vblRvdWNoLCB0aGlzKTsKCQl9Cgl9LAoKCS8vIEBtZXRob2QgcmVtb3ZlSG9va3MoKTogdm9pZAoJLy8gUmVtb3ZlIGxpc3RlbmVyIGhvb2tzIGZyb20gdGhpcyBoYW5kbGVyLgoJcmVtb3ZlSG9va3M6IGZ1bmN0aW9uICgpIHsKCQlMLkRyYXcuRmVhdHVyZS5wcm90b3R5cGUucmVtb3ZlSG9va3MuY2FsbCh0aGlzKTsKCgkJaWYgKHRoaXMuX21hcCkgewoJCQl0aGlzLl9tYXAKCQkJCS5vZmYoJ2NsaWNrJywgdGhpcy5fb25DbGljaywgdGhpcykKCQkJCS5vZmYoJ2NsaWNrJywgdGhpcy5fb25Ub3VjaCwgdGhpcyk7CgkJCWlmICh0aGlzLl9tYXJrZXIpIHsKCQkJCXRoaXMuX21hcmtlci5vZmYoJ2NsaWNrJywgdGhpcy5fb25DbGljaywgdGhpcyk7CgkJCQl0aGlzLl9tYXAKCQkJCQkucmVtb3ZlTGF5ZXIodGhpcy5fbWFya2VyKTsKCQkJCWRlbGV0ZSB0aGlzLl9tYXJrZXI7CgkJCX0KCgkJCXRoaXMuX21vdXNlTWFya2VyLm9mZignY2xpY2snLCB0aGlzLl9vbkNsaWNrLCB0aGlzKTsKCQkJdGhpcy5fbWFwLnJlbW92ZUxheWVyKHRoaXMuX21vdXNlTWFya2VyKTsKCQkJZGVsZXRlIHRoaXMuX21vdXNlTWFya2VyOwoKCQkJdGhpcy5fbWFwLm9mZignbW91c2Vtb3ZlJywgdGhpcy5fb25Nb3VzZU1vdmUsIHRoaXMpOwoJCX0KCX0sCgoJX29uTW91c2VNb3ZlOiBmdW5jdGlvbiAoZSkgewoJCXZhciBsYXRsbmcgPSBlLmxhdGxuZzsKCgkJdGhpcy5fdG9vbHRpcC51cGRhdGVQb3NpdGlvbihsYXRsbmcpOwoJCXRoaXMuX21vdXNlTWFya2VyLnNldExhdExuZyhsYXRsbmcpOwoKCQlpZiAoIXRoaXMuX21hcmtlcikgewoJCQl0aGlzLl9tYXJrZXIgPSB0aGlzLl9jcmVhdGVNYXJrZXIobGF0bG5nKTsKCQkJLy8gQmluZCB0byBib3RoIG1hcmtlciBhbmQgbWFwIHRvIG1ha2Ugc3VyZSB3ZSBnZXQgdGhlIGNsaWNrIGV2ZW50LgoJCQl0aGlzLl9tYXJrZXIub24oJ2NsaWNrJywgdGhpcy5fb25DbGljaywgdGhpcyk7CgkJCXRoaXMuX21hcAoJCQkJLm9uKCdjbGljaycsIHRoaXMuX29uQ2xpY2ssIHRoaXMpCgkJCQkuYWRkTGF5ZXIodGhpcy5fbWFya2VyKTsKCQl9CgkJZWxzZSB7CgkJCWxhdGxuZyA9IHRoaXMuX21vdXNlTWFya2VyLmdldExhdExuZygpOwoJCQl0aGlzLl9tYXJrZXIuc2V0TGF0TG5nKGxhdGxuZyk7CgkJfQoJfSwKCglfY3JlYXRlTWFya2VyOiBmdW5jdGlvbiAobGF0bG5nKSB7CgkJcmV0dXJuIG5ldyBMLk1hcmtlcihsYXRsbmcsIHsKCQkJaWNvbjogdGhpcy5vcHRpb25zLmljb24sCgkJCXpJbmRleE9mZnNldDogdGhpcy5vcHRpb25zLnpJbmRleE9mZnNldAoJCX0pOwoJfSwKCglfb25DbGljazogZnVuY3Rpb24gKCkgewoJCXRoaXMuX2ZpcmVDcmVhdGVkRXZlbnQoKTsKCgkJdGhpcy5kaXNhYmxlKCk7CgkJaWYgKHRoaXMub3B0aW9ucy5yZXBlYXRNb2RlKSB7CgkJCXRoaXMuZW5hYmxlKCk7CgkJfQoJfSwKCglfb25Ub3VjaDogZnVuY3Rpb24gKGUpIHsKCQkvLyBjYWxsZWQgb24gY2xpY2sgJiB0YXAsIG9ubHkgcmVhbGx5IGRvZXMgYW55IHRoaW5nIG9uIHRhcAoJCXRoaXMuX29uTW91c2VNb3ZlKGUpOyAvLyBjcmVhdGVzICYgcGxhY2VzIG1hcmtlcgoJCXRoaXMuX29uQ2xpY2soKTsgLy8gcGVybWFuZW50bHkgcGxhY2VzIG1hcmtlciAmIGVuZHMgaW50ZXJhY3Rpb24KCX0sCgoJX2ZpcmVDcmVhdGVkRXZlbnQ6IGZ1bmN0aW9uICgpIHsKCQl2YXIgbWFya2VyID0gbmV3IEwuTWFya2VyLlRvdWNoKHRoaXMuX21hcmtlci5nZXRMYXRMbmcoKSwge2ljb246IHRoaXMub3B0aW9ucy5pY29ufSk7CgkJTC5EcmF3LkZlYXR1cmUucHJvdG90eXBlLl9maXJlQ3JlYXRlZEV2ZW50LmNhbGwodGhpcywgbWFya2VyKTsKCX0KfSk7Cg=="></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkRyYXcuQ2lyY2xlCiAqIEBha2EgRHJhdy5DaXJjbGUKICogQGluaGVyaXRzIEwuRHJhdy5TaW1wbGVTaGFwZQogKi8KTC5EcmF3LkNpcmNsZSA9IEwuRHJhdy5TaW1wbGVTaGFwZS5leHRlbmQoewoJc3RhdGljczogewoJCVRZUEU6ICdjaXJjbGUnCgl9LAoKCW9wdGlvbnM6IHsKCQlzaGFwZU9wdGlvbnM6IHsKCQkJc3Ryb2tlOiB0cnVlLAoJCQljb2xvcjogJyMzMzg4ZmYnLAoJCQl3ZWlnaHQ6IDQsCgkJCW9wYWNpdHk6IDAuNSwKCQkJZmlsbDogdHJ1ZSwKCQkJZmlsbENvbG9yOiBudWxsLCAvL3NhbWUgYXMgY29sb3IgYnkgZGVmYXVsdAoJCQlmaWxsT3BhY2l0eTogMC4yLAoJCQljbGlja2FibGU6IHRydWUKCQl9LAoJCXNob3dSYWRpdXM6IHRydWUsCgkJbWV0cmljOiB0cnVlLCAvLyBXaGV0aGVyIHRvIHVzZSB0aGUgbWV0cmljIG1lYXN1cmVtZW50IHN5c3RlbSBvciBpbXBlcmlhbAoJCWZlZXQ6IHRydWUsIC8vIFdoZW4gbm90IG1ldHJpYywgdXNlIGZlZXQgaW5zdGVhZCBvZiB5YXJkcyBmb3IgZGlzcGxheQoJCW5hdXRpYzogZmFsc2UgLy8gV2hlbiBub3QgbWV0cmljLCBub3QgZmVldCB1c2UgbmF1dGljIG1pbGUgZm9yIGRpc3BsYXkKCX0sCgoJLy8gQG1ldGhvZCBpbml0aWFsaXplKCk6IHZvaWQKCWluaXRpYWxpemU6IGZ1bmN0aW9uIChtYXAsIG9wdGlvbnMpIHsKCQkvLyBTYXZlIHRoZSB0eXBlIHNvIHN1cGVyIGNhbiBmaXJlLCBuZWVkIHRvIGRvIHRoaXMgYXMgY2Fubm90IGRvIHRoaXMuVFlQRSA6KAoJCXRoaXMudHlwZSA9IEwuRHJhdy5DaXJjbGUuVFlQRTsKCgkJdGhpcy5faW5pdGlhbExhYmVsVGV4dCA9IEwuZHJhd0xvY2FsLmRyYXcuaGFuZGxlcnMuY2lyY2xlLnRvb2x0aXAuc3RhcnQ7CgoJCUwuRHJhdy5TaW1wbGVTaGFwZS5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIG1hcCwgb3B0aW9ucyk7Cgl9LAoKCV9kcmF3U2hhcGU6IGZ1bmN0aW9uIChsYXRsbmcpIHsKCQkvLyBDYWxjdWxhdGUgdGhlIGRpc3RhbmNlIGJhc2VkIG9uIHRoZSB2ZXJzaW9uCgkJaWYgKEwuR2VvbWV0cnlVdGlsLmlzVmVyc2lvbjA3eCgpKSB7CgkJCXZhciBkaXN0YW5jZSA9IHRoaXMuX3N0YXJ0TGF0TG5nLmRpc3RhbmNlVG8obGF0bG5nKTsKCQl9IGVsc2UgewoJCQl2YXIgZGlzdGFuY2UgPSB0aGlzLl9tYXAuZGlzdGFuY2UodGhpcy5fc3RhcnRMYXRMbmcsIGxhdGxuZyk7CgkJfQoKCQlpZiAoIXRoaXMuX3NoYXBlKSB7CgkJCXRoaXMuX3NoYXBlID0gbmV3IEwuQ2lyY2xlKHRoaXMuX3N0YXJ0TGF0TG5nLCBkaXN0YW5jZSwgdGhpcy5vcHRpb25zLnNoYXBlT3B0aW9ucyk7CgkJCXRoaXMuX21hcC5hZGRMYXllcih0aGlzLl9zaGFwZSk7CgkJfSBlbHNlIHsKCQkJdGhpcy5fc2hhcGUuc2V0UmFkaXVzKGRpc3RhbmNlKTsKCQl9Cgl9LAoKCV9maXJlQ3JlYXRlZEV2ZW50OiBmdW5jdGlvbiAoKSB7CgkJdmFyIGNpcmNsZSA9IG5ldyBMLkNpcmNsZSh0aGlzLl9zdGFydExhdExuZywgdGhpcy5fc2hhcGUuZ2V0UmFkaXVzKCksIHRoaXMub3B0aW9ucy5zaGFwZU9wdGlvbnMpOwoJCUwuRHJhdy5TaW1wbGVTaGFwZS5wcm90b3R5cGUuX2ZpcmVDcmVhdGVkRXZlbnQuY2FsbCh0aGlzLCBjaXJjbGUpOwoJfSwKCglfb25Nb3VzZU1vdmU6IGZ1bmN0aW9uIChlKSB7CgkJdmFyIGxhdGxuZyA9IGUubGF0bG5nLAoJCQlzaG93UmFkaXVzID0gdGhpcy5vcHRpb25zLnNob3dSYWRpdXMsCgkJCXVzZU1ldHJpYyA9IHRoaXMub3B0aW9ucy5tZXRyaWMsCgkJCXJhZGl1czsKCgkJdGhpcy5fdG9vbHRpcC51cGRhdGVQb3NpdGlvbihsYXRsbmcpOwoJCWlmICh0aGlzLl9pc0RyYXdpbmcpIHsKCQkJdGhpcy5fZHJhd1NoYXBlKGxhdGxuZyk7CgoJCQkvLyBHZXQgdGhlIG5ldyByYWRpdXMgKHJvdW5kZWQgdG8gMSBkcCkKCQkJcmFkaXVzID0gdGhpcy5fc2hhcGUuZ2V0UmFkaXVzKCkudG9GaXhlZCgxKTsKCgkJCXZhciBzdWJ0ZXh0ID0gJyc7CgkJCWlmIChzaG93UmFkaXVzKSB7CgkJCQlzdWJ0ZXh0ID0gTC5kcmF3TG9jYWwuZHJhdy5oYW5kbGVycy5jaXJjbGUucmFkaXVzICsgJzogJyArCgkJCQkJTC5HZW9tZXRyeVV0aWwucmVhZGFibGVEaXN0YW5jZShyYWRpdXMsIHVzZU1ldHJpYywgdGhpcy5vcHRpb25zLmZlZXQsIHRoaXMub3B0aW9ucy5uYXV0aWMpOwoJCQl9CgkJCXRoaXMuX3Rvb2x0aXAudXBkYXRlQ29udGVudCh7CgkJCQl0ZXh0OiB0aGlzLl9lbmRMYWJlbFRleHQsCgkJCQlzdWJ0ZXh0OiBzdWJ0ZXh0CgkJCX0pOwoJCX0KCX0KfSk7Cg=="></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkRyYXcuQ2lyY2xlTWFya2VyCiAqIEBha2EgRHJhdy5DaXJjbGVNYXJrZXIKICogQGluaGVyaXRzIEwuRHJhdy5NYXJrZXIKICovCkwuRHJhdy5DaXJjbGVNYXJrZXIgPSBMLkRyYXcuTWFya2VyLmV4dGVuZCh7CglzdGF0aWNzOiB7CgkJVFlQRTogJ2NpcmNsZW1hcmtlcicKCX0sCgoJb3B0aW9uczogewoJCXN0cm9rZTogdHJ1ZSwKCQljb2xvcjogJyMzMzg4ZmYnLAoJCXdlaWdodDogNCwKCQlvcGFjaXR5OiAwLjUsCgkJZmlsbDogdHJ1ZSwKCQlmaWxsQ29sb3I6IG51bGwsIC8vc2FtZSBhcyBjb2xvciBieSBkZWZhdWx0CgkJZmlsbE9wYWNpdHk6IDAuMiwKCQljbGlja2FibGU6IHRydWUsCgkJekluZGV4T2Zmc2V0OiAyMDAwIC8vIFRoaXMgc2hvdWxkIGJlID4gdGhhbiB0aGUgaGlnaGVzdCB6LWluZGV4IGFueSBtYXJrZXJzCgl9LAoKCS8vIEBtZXRob2QgaW5pdGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAobWFwLCBvcHRpb25zKSB7CgkJLy8gU2F2ZSB0aGUgdHlwZSBzbyBzdXBlciBjYW4gZmlyZSwgbmVlZCB0byBkbyB0aGlzIGFzIGNhbm5vdCBkbyB0aGlzLlRZUEUgOigKCQl0aGlzLnR5cGUgPSBMLkRyYXcuQ2lyY2xlTWFya2VyLlRZUEU7CgoJCXRoaXMuX2luaXRpYWxMYWJlbFRleHQgPSBMLmRyYXdMb2NhbC5kcmF3LmhhbmRsZXJzLmNpcmNsZW1hcmtlci50b29sdGlwLnN0YXJ0OwoKCQlMLkRyYXcuRmVhdHVyZS5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIG1hcCwgb3B0aW9ucyk7Cgl9LAoKCglfZmlyZUNyZWF0ZWRFdmVudDogZnVuY3Rpb24gKCkgewoJCXZhciBjaXJjbGVNYXJrZXIgPSBuZXcgTC5DaXJjbGVNYXJrZXIodGhpcy5fbWFya2VyLmdldExhdExuZygpLCB0aGlzLm9wdGlvbnMpOwoJCUwuRHJhdy5GZWF0dXJlLnByb3RvdHlwZS5fZmlyZUNyZWF0ZWRFdmVudC5jYWxsKHRoaXMsIGNpcmNsZU1hcmtlcik7Cgl9LAoKCV9jcmVhdGVNYXJrZXI6IGZ1bmN0aW9uIChsYXRsbmcpIHsKCQlyZXR1cm4gbmV3IEwuQ2lyY2xlTWFya2VyKGxhdGxuZywgdGhpcy5vcHRpb25zKTsKCX0KfSk7Cg=="></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkRyYXcuUG9seWdvbgogKiBAYWthIERyYXcuUG9seWdvbgogKiBAaW5oZXJpdHMgTC5EcmF3LlBvbHlsaW5lCiAqLwpMLkRyYXcuUG9seWdvbiA9IEwuRHJhdy5Qb2x5bGluZS5leHRlbmQoewoJc3RhdGljczogewoJCVRZUEU6ICdwb2x5Z29uJwoJfSwKCglQb2x5OiBMLlBvbHlnb24sCgoJb3B0aW9uczogewoJCXNob3dBcmVhOiBmYWxzZSwKCQlzaG93TGVuZ3RoOiBmYWxzZSwKCQlzaGFwZU9wdGlvbnM6IHsKCQkJc3Ryb2tlOiB0cnVlLAoJCQljb2xvcjogJyMzMzg4ZmYnLAoJCQl3ZWlnaHQ6IDQsCgkJCW9wYWNpdHk6IDAuNSwKCQkJZmlsbDogdHJ1ZSwKCQkJZmlsbENvbG9yOiBudWxsLCAvL3NhbWUgYXMgY29sb3IgYnkgZGVmYXVsdAoJCQlmaWxsT3BhY2l0eTogMC4yLAoJCQljbGlja2FibGU6IHRydWUKCQl9LAoJCS8vIFdoZXRoZXIgdG8gdXNlIHRoZSBtZXRyaWMgbWVhc3VyZW1lbnQgc3lzdGVtICh0cnV0aHkpIG9yIG5vdCAoZmFsc3kpLgoJCS8vIEFsc28gZGVmaW5lcyB0aGUgdW5pdHMgdG8gdXNlIGZvciB0aGUgbWV0cmljIHN5c3RlbSBhcyBhbiBhcnJheSBvZgoJCS8vIHN0cmluZ3MgKGUuZy4gYFsnaGEnLCAnbSddYCkuCgkJbWV0cmljOiB0cnVlLAoJCWZlZXQ6IHRydWUsIC8vIFdoZW4gbm90IG1ldHJpYywgdG8gdXNlIGZlZXQgaW5zdGVhZCBvZiB5YXJkcyBmb3IgZGlzcGxheS4KCQluYXV0aWM6IGZhbHNlLCAvLyBXaGVuIG5vdCBtZXRyaWMsIG5vdCBmZWV0IHVzZSBuYXV0aWMgbWlsZSBmb3IgZGlzcGxheQoJCS8vIERlZmluZXMgdGhlIHByZWNpc2lvbiBmb3IgZWFjaCB0eXBlIG9mIHVuaXQgKGUuZy4ge2ttOiAyLCBmdDogMH0KCQlwcmVjaXNpb246IHt9Cgl9LAoKCS8vIEBtZXRob2QgaW5pdGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAobWFwLCBvcHRpb25zKSB7CgkJTC5EcmF3LlBvbHlsaW5lLnByb3RvdHlwZS5pbml0aWFsaXplLmNhbGwodGhpcywgbWFwLCBvcHRpb25zKTsKCgkJLy8gU2F2ZSB0aGUgdHlwZSBzbyBzdXBlciBjYW4gZmlyZSwgbmVlZCB0byBkbyB0aGlzIGFzIGNhbm5vdCBkbyB0aGlzLlRZUEUgOigKCQl0aGlzLnR5cGUgPSBMLkRyYXcuUG9seWdvbi5UWVBFOwoJfSwKCglfdXBkYXRlRmluaXNoSGFuZGxlcjogZnVuY3Rpb24gKCkgewoJCXZhciBtYXJrZXJDb3VudCA9IHRoaXMuX21hcmtlcnMubGVuZ3RoOwoKCQkvLyBUaGUgZmlyc3QgbWFya2VyIHNob3VsZCBoYXZlIGEgY2xpY2sgaGFuZGxlciB0byBjbG9zZSB0aGUgcG9seWdvbgoJCWlmIChtYXJrZXJDb3VudCA9PT0gMSkgewoJCQl0aGlzLl9tYXJrZXJzWzBdLm9uKCdjbGljaycsIHRoaXMuX2ZpbmlzaFNoYXBlLCB0aGlzKTsKCQl9CgoJCS8vIEFkZCBhbmQgdXBkYXRlIHRoZSBkb3VibGUgY2xpY2sgaGFuZGxlcgoJCWlmIChtYXJrZXJDb3VudCA+IDIpIHsKCQkJdGhpcy5fbWFya2Vyc1ttYXJrZXJDb3VudCAtIDFdLm9uKCdkYmxjbGljaycsIHRoaXMuX2ZpbmlzaFNoYXBlLCB0aGlzKTsKCQkJLy8gT25seSBuZWVkIHRvIHJlbW92ZSBoYW5kbGVyIGlmIGhhcyBiZWVuIGFkZGVkIGJlZm9yZQoJCQlpZiAobWFya2VyQ291bnQgPiAzKSB7CgkJCQl0aGlzLl9tYXJrZXJzW21hcmtlckNvdW50IC0gMl0ub2ZmKCdkYmxjbGljaycsIHRoaXMuX2ZpbmlzaFNoYXBlLCB0aGlzKTsKCQkJfQoJCX0KCX0sCgoJX2dldFRvb2x0aXBUZXh0OiBmdW5jdGlvbiAoKSB7CgkJdmFyIHRleHQsIHN1YnRleHQ7CgoJCWlmICh0aGlzLl9tYXJrZXJzLmxlbmd0aCA9PT0gMCkgewoJCQl0ZXh0ID0gTC5kcmF3TG9jYWwuZHJhdy5oYW5kbGVycy5wb2x5Z29uLnRvb2x0aXAuc3RhcnQ7CgkJfSBlbHNlIGlmICh0aGlzLl9tYXJrZXJzLmxlbmd0aCA8IDMpIHsKCQkJdGV4dCA9IEwuZHJhd0xvY2FsLmRyYXcuaGFuZGxlcnMucG9seWdvbi50b29sdGlwLmNvbnQ7CgkJCXN1YnRleHQgPSB0aGlzLl9nZXRNZWFzdXJlbWVudFN0cmluZygpOwoJCX0gZWxzZSB7CgkJCXRleHQgPSBMLmRyYXdMb2NhbC5kcmF3LmhhbmRsZXJzLnBvbHlnb24udG9vbHRpcC5lbmQ7CgkJCXN1YnRleHQgPSB0aGlzLl9nZXRNZWFzdXJlbWVudFN0cmluZygpOwoJCX0KCgkJcmV0dXJuIHsKCQkJdGV4dDogdGV4dCwKCQkJc3VidGV4dDogc3VidGV4dAoJCX07Cgl9LAoKCV9nZXRNZWFzdXJlbWVudFN0cmluZzogZnVuY3Rpb24gKCkgewoJCXZhciBhcmVhID0gdGhpcy5fYXJlYSwKCQkJbWVhc3VyZW1lbnRTdHJpbmcgPSAnJzsKCgoJCWlmICghYXJlYSAmJiAhdGhpcy5vcHRpb25zLnNob3dMZW5ndGgpIHsKCQkJcmV0dXJuIG51bGw7CgkJfQoKCQlpZiAodGhpcy5vcHRpb25zLnNob3dMZW5ndGgpIHsKCQkJbWVhc3VyZW1lbnRTdHJpbmcgPSBMLkRyYXcuUG9seWxpbmUucHJvdG90eXBlLl9nZXRNZWFzdXJlbWVudFN0cmluZy5jYWxsKHRoaXMpOwoJCX0KCgkJaWYgKGFyZWEpIHsKCQkJbWVhc3VyZW1lbnRTdHJpbmcgKz0gJzxicj4nICsgTC5HZW9tZXRyeVV0aWwucmVhZGFibGVBcmVhKGFyZWEsIHRoaXMub3B0aW9ucy5tZXRyaWMsIHRoaXMub3B0aW9ucy5wcmVjaXNpb24pOwoJCX0KCgkJcmV0dXJuIG1lYXN1cmVtZW50U3RyaW5nOwoJfSwKCglfc2hhcGVJc1ZhbGlkOiBmdW5jdGlvbiAoKSB7CgkJcmV0dXJuIHRoaXMuX21hcmtlcnMubGVuZ3RoID49IDM7Cgl9LAoKCV92ZXJ0ZXhDaGFuZ2VkOiBmdW5jdGlvbiAobGF0bG5nLCBhZGRlZCkgewoJCXZhciBsYXRMbmdzOwoKCQkvLyBDaGVjayB0byBzZWUgaWYgd2Ugc2hvdWxkIHNob3cgdGhlIGFyZWEKCQlpZiAoIXRoaXMub3B0aW9ucy5hbGxvd0ludGVyc2VjdGlvbiAmJiB0aGlzLm9wdGlvbnMuc2hvd0FyZWEpIHsKCQkJbGF0TG5ncyA9IHRoaXMuX3BvbHkuZ2V0TGF0TG5ncygpOwoKCQkJdGhpcy5fYXJlYSA9IEwuR2VvbWV0cnlVdGlsLmdlb2Rlc2ljQXJlYShsYXRMbmdzKTsKCQl9CgoJCUwuRHJhdy5Qb2x5bGluZS5wcm90b3R5cGUuX3ZlcnRleENoYW5nZWQuY2FsbCh0aGlzLCBsYXRsbmcsIGFkZGVkKTsKCX0sCgoJX2NsZWFuVXBTaGFwZTogZnVuY3Rpb24gKCkgewoJCXZhciBtYXJrZXJDb3VudCA9IHRoaXMuX21hcmtlcnMubGVuZ3RoOwoKCQlpZiAobWFya2VyQ291bnQgPiAwKSB7CgkJCXRoaXMuX21hcmtlcnNbMF0ub2ZmKCdjbGljaycsIHRoaXMuX2ZpbmlzaFNoYXBlLCB0aGlzKTsKCgkJCWlmIChtYXJrZXJDb3VudCA+IDIpIHsKCQkJCXRoaXMuX21hcmtlcnNbbWFya2VyQ291bnQgLSAxXS5vZmYoJ2RibGNsaWNrJywgdGhpcy5fZmluaXNoU2hhcGUsIHRoaXMpOwoJCQl9CgkJfQoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkRyYXcuUmVjdGFuZ2xlCiAqIEBha2EgRHJhdy5SZWN0YW5nbGUKICogQGluaGVyaXRzIEwuRHJhdy5TaW1wbGVTaGFwZQogKi8KTC5EcmF3LlJlY3RhbmdsZSA9IEwuRHJhdy5TaW1wbGVTaGFwZS5leHRlbmQoewoJc3RhdGljczogewoJCVRZUEU6ICdyZWN0YW5nbGUnCgl9LAoKCW9wdGlvbnM6IHsKCQlzaGFwZU9wdGlvbnM6IHsKCQkJc3Ryb2tlOiB0cnVlLAoJCQljb2xvcjogJyMzMzg4ZmYnLAoJCQl3ZWlnaHQ6IDQsCgkJCW9wYWNpdHk6IDAuNSwKCQkJZmlsbDogdHJ1ZSwKCQkJZmlsbENvbG9yOiBudWxsLCAvL3NhbWUgYXMgY29sb3IgYnkgZGVmYXVsdAoJCQlmaWxsT3BhY2l0eTogMC4yLAoJCQlzaG93QXJlYTogdHJ1ZSwKCQkJY2xpY2thYmxlOiB0cnVlCgkJfSwKCQltZXRyaWM6IHRydWUgLy8gV2hldGhlciB0byB1c2UgdGhlIG1ldHJpYyBtZWFzdXJlbWVudCBzeXN0ZW0gb3IgaW1wZXJpYWwKCX0sCgoJLy8gQG1ldGhvZCBpbml0aWFsaXplKCk6IHZvaWQKCWluaXRpYWxpemU6IGZ1bmN0aW9uIChtYXAsIG9wdGlvbnMpIHsKCQkvLyBTYXZlIHRoZSB0eXBlIHNvIHN1cGVyIGNhbiBmaXJlLCBuZWVkIHRvIGRvIHRoaXMgYXMgY2Fubm90IGRvIHRoaXMuVFlQRSA6KAoJCXRoaXMudHlwZSA9IEwuRHJhdy5SZWN0YW5nbGUuVFlQRTsKCgkJdGhpcy5faW5pdGlhbExhYmVsVGV4dCA9IEwuZHJhd0xvY2FsLmRyYXcuaGFuZGxlcnMucmVjdGFuZ2xlLnRvb2x0aXAuc3RhcnQ7CgoJCUwuRHJhdy5TaW1wbGVTaGFwZS5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIG1hcCwgb3B0aW9ucyk7Cgl9LAoKCS8vIEBtZXRob2QgZGlzYWJsZSgpOiB2b2lkCglkaXNhYmxlOiBmdW5jdGlvbiAoKSB7CgkJaWYgKCF0aGlzLl9lbmFibGVkKSB7CgkJCXJldHVybjsKCQl9CgoJCXRoaXMuX2lzQ3VycmVudGx5VHdvQ2xpY2tEcmF3aW5nID0gZmFsc2U7CgkJTC5EcmF3LlNpbXBsZVNoYXBlLnByb3RvdHlwZS5kaXNhYmxlLmNhbGwodGhpcyk7Cgl9LAoKCV9vbk1vdXNlVXA6IGZ1bmN0aW9uIChlKSB7CgkJaWYgKCF0aGlzLl9zaGFwZSAmJiAhdGhpcy5faXNDdXJyZW50bHlUd29DbGlja0RyYXdpbmcpIHsKCQkJdGhpcy5faXNDdXJyZW50bHlUd29DbGlja0RyYXdpbmcgPSB0cnVlOwoJCQlyZXR1cm47CgkJfQoKCQkvLyBNYWtlIHN1cmUgY2xvc2luZyBjbGljayBpcyBvbiBtYXAKCQlpZiAodGhpcy5faXNDdXJyZW50bHlUd29DbGlja0RyYXdpbmcgJiYgIV9oYXNBbmNlc3RvcihlLnRhcmdldCwgJ2xlYWZsZXQtcGFuZScpKSB7CgkJCXJldHVybjsKCQl9CgoJCUwuRHJhdy5TaW1wbGVTaGFwZS5wcm90b3R5cGUuX29uTW91c2VVcC5jYWxsKHRoaXMpOwoJfSwKCglfZHJhd1NoYXBlOiBmdW5jdGlvbiAobGF0bG5nKSB7CgkJaWYgKCF0aGlzLl9zaGFwZSkgewoJCQl0aGlzLl9zaGFwZSA9IG5ldyBMLlJlY3RhbmdsZShuZXcgTC5MYXRMbmdCb3VuZHModGhpcy5fc3RhcnRMYXRMbmcsIGxhdGxuZyksIHRoaXMub3B0aW9ucy5zaGFwZU9wdGlvbnMpOwoJCQl0aGlzLl9tYXAuYWRkTGF5ZXIodGhpcy5fc2hhcGUpOwoJCX0gZWxzZSB7CgkJCXRoaXMuX3NoYXBlLnNldEJvdW5kcyhuZXcgTC5MYXRMbmdCb3VuZHModGhpcy5fc3RhcnRMYXRMbmcsIGxhdGxuZykpOwoJCX0KCX0sCgoJX2ZpcmVDcmVhdGVkRXZlbnQ6IGZ1bmN0aW9uICgpIHsKCQl2YXIgcmVjdGFuZ2xlID0gbmV3IEwuUmVjdGFuZ2xlKHRoaXMuX3NoYXBlLmdldEJvdW5kcygpLCB0aGlzLm9wdGlvbnMuc2hhcGVPcHRpb25zKTsKCQlMLkRyYXcuU2ltcGxlU2hhcGUucHJvdG90eXBlLl9maXJlQ3JlYXRlZEV2ZW50LmNhbGwodGhpcywgcmVjdGFuZ2xlKTsKCX0sCgoJX2dldFRvb2x0aXBUZXh0OiBmdW5jdGlvbiAoKSB7CgkJdmFyIHRvb2x0aXBUZXh0ID0gTC5EcmF3LlNpbXBsZVNoYXBlLnByb3RvdHlwZS5fZ2V0VG9vbHRpcFRleHQuY2FsbCh0aGlzKSwKCQkJc2hhcGUgPSB0aGlzLl9zaGFwZSwKCQkJc2hvd0FyZWEgPSB0aGlzLm9wdGlvbnMuc2hvd0FyZWEsCgkJCWxhdExuZ3MsIGFyZWEsIHN1YnRleHQ7CgoJCWlmIChzaGFwZSkgewoJCQlsYXRMbmdzID0gdGhpcy5fc2hhcGUuX2RlZmF1bHRTaGFwZSA/IHRoaXMuX3NoYXBlLl9kZWZhdWx0U2hhcGUoKSA6IHRoaXMuX3NoYXBlLmdldExhdExuZ3MoKTsKCQkJYXJlYSA9IEwuR2VvbWV0cnlVdGlsLmdlb2Rlc2ljQXJlYShsYXRMbmdzKTsKCQkJc3VidGV4dCA9IHNob3dBcmVhID8gTC5HZW9tZXRyeVV0aWwucmVhZGFibGVBcmVhKGFyZWEsIHRoaXMub3B0aW9ucy5tZXRyaWMpIDogJyc7CgkJfQoKCQlyZXR1cm4gewoJCQl0ZXh0OiB0b29sdGlwVGV4dC50ZXh0LAoJCQlzdWJ0ZXh0OiBzdWJ0ZXh0CgkJfTsKCX0KfSk7CgpmdW5jdGlvbiBfaGFzQW5jZXN0b3IoZWwsIGNscykgewoJd2hpbGUgKChlbCA9IGVsLnBhcmVudEVsZW1lbnQpICYmICFlbC5jbGFzc0xpc3QuY29udGFpbnMoY2xzKSkgewoJCTsKCX0KCXJldHVybiBlbDsKfQo="></script>
<script src="data:text/javascript;base64,LypMLk1hcC5tZXJnZU9wdGlvbnMoewogZWRpdENvbnRyb2w6IHRydWUKIH0pOyovCi8qKgogKiBAY2xhc3MgTC5FZGl0VG9vbGJhcgogKiBAYWthIEVkaXRUb29sYmFyCiAqLwpMLkVkaXRUb29sYmFyID0gTC5Ub29sYmFyLmV4dGVuZCh7CglzdGF0aWNzOiB7CgkJVFlQRTogJ2VkaXQnCgl9LAoKCW9wdGlvbnM6IHsKCQllZGl0OiB7CgkJCXNlbGVjdGVkUGF0aE9wdGlvbnM6IHsKCQkJCWRhc2hBcnJheTogJzEwLCAxMCcsCgoJCQkJZmlsbDogdHJ1ZSwKCQkJCWZpbGxDb2xvcjogJyNmZTU3YTEnLAoJCQkJZmlsbE9wYWNpdHk6IDAuMSwKCgkJCQkvLyBXaGV0aGVyIHRvIHVzZXIgdGhlIGV4aXN0aW5nIGxheWVycyBjb2xvcgoJCQkJbWFpbnRhaW5Db2xvcjogZmFsc2UKCQkJfQoJCX0sCgkJcmVtb3ZlOiB7fSwKCQlwb2x5OiBudWxsLAoJCWZlYXR1cmVHcm91cDogbnVsbCAvKiBSRVFVSVJFRCEgVE9ETzogcGVyaGFwcyBpZiBub3Qgc2V0IHRoZW4gYWxsIGxheWVycyBvbiB0aGUgbWFwIGFyZSBzZWxlY3RhYmxlPyAqLwoJfSwKCgkvLyBAbWV0aG9kIGludGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAob3B0aW9ucykgewoJCS8vIE5lZWQgdG8gc2V0IHRoaXMgbWFudWFsbHkgc2luY2UgbnVsbCBpcyBhbiBhY2NlcHRhYmxlIHZhbHVlIGhlcmUKCQlpZiAob3B0aW9ucy5lZGl0KSB7CgkJCWlmICh0eXBlb2Ygb3B0aW9ucy5lZGl0LnNlbGVjdGVkUGF0aE9wdGlvbnMgPT09ICd1bmRlZmluZWQnKSB7CgkJCQlvcHRpb25zLmVkaXQuc2VsZWN0ZWRQYXRoT3B0aW9ucyA9IHRoaXMub3B0aW9ucy5lZGl0LnNlbGVjdGVkUGF0aE9wdGlvbnM7CgkJCX0KCQkJb3B0aW9ucy5lZGl0LnNlbGVjdGVkUGF0aE9wdGlvbnMgPSBMLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zLmVkaXQuc2VsZWN0ZWRQYXRoT3B0aW9ucywgb3B0aW9ucy5lZGl0LnNlbGVjdGVkUGF0aE9wdGlvbnMpOwoJCX0KCgkJaWYgKG9wdGlvbnMucmVtb3ZlKSB7CgkJCW9wdGlvbnMucmVtb3ZlID0gTC5leHRlbmQoe30sIHRoaXMub3B0aW9ucy5yZW1vdmUsIG9wdGlvbnMucmVtb3ZlKTsKCQl9CgoJCWlmIChvcHRpb25zLnBvbHkpIHsKCQkJb3B0aW9ucy5wb2x5ID0gTC5leHRlbmQoe30sIHRoaXMub3B0aW9ucy5wb2x5LCBvcHRpb25zLnBvbHkpOwoJCX0KCgkJdGhpcy5fdG9vbGJhckNsYXNzID0gJ2xlYWZsZXQtZHJhdy1lZGl0JzsKCQlMLlRvb2xiYXIucHJvdG90eXBlLmluaXRpYWxpemUuY2FsbCh0aGlzLCBvcHRpb25zKTsKCgkJdGhpcy5fc2VsZWN0ZWRGZWF0dXJlQ291bnQgPSAwOwoJfSwKCgkvLyBAbWV0aG9kIGdldE1vZGVIYW5kbGVycygpOiBvYmplY3QKCS8vIEdldCBtb2RlIGhhbmRsZXJzIGluZm9ybWF0aW9uCglnZXRNb2RlSGFuZGxlcnM6IGZ1bmN0aW9uIChtYXApIHsKCQl2YXIgZmVhdHVyZUdyb3VwID0gdGhpcy5vcHRpb25zLmZlYXR1cmVHcm91cDsKCQlyZXR1cm4gWwoJCQl7CgkJCQllbmFibGVkOiB0aGlzLm9wdGlvbnMuZWRpdCwKCQkJCWhhbmRsZXI6IG5ldyBMLkVkaXRUb29sYmFyLkVkaXQobWFwLCB7CgkJCQkJZmVhdHVyZUdyb3VwOiBmZWF0dXJlR3JvdXAsCgkJCQkJc2VsZWN0ZWRQYXRoT3B0aW9uczogdGhpcy5vcHRpb25zLmVkaXQuc2VsZWN0ZWRQYXRoT3B0aW9ucywKCQkJCQlwb2x5OiB0aGlzLm9wdGlvbnMucG9seQoJCQkJfSksCgkJCQl0aXRsZTogTC5kcmF3TG9jYWwuZWRpdC50b29sYmFyLmJ1dHRvbnMuZWRpdAoJCQl9LAoJCQl7CgkJCQllbmFibGVkOiB0aGlzLm9wdGlvbnMucmVtb3ZlLAoJCQkJaGFuZGxlcjogbmV3IEwuRWRpdFRvb2xiYXIuRGVsZXRlKG1hcCwgewoJCQkJCWZlYXR1cmVHcm91cDogZmVhdHVyZUdyb3VwCgkJCQl9KSwKCQkJCXRpdGxlOiBMLmRyYXdMb2NhbC5lZGl0LnRvb2xiYXIuYnV0dG9ucy5yZW1vdmUKCQkJfQoJCV07Cgl9LAoKCS8vIEBtZXRob2QgZ2V0QWN0aW9ucygpOiBvYmplY3QKCS8vIEdldCBhY3Rpb25zIGluZm9ybWF0aW9uCglnZXRBY3Rpb25zOiBmdW5jdGlvbiAoaGFuZGxlcikgewoJCXZhciBhY3Rpb25zID0gWwoJCQl7CgkJCQl0aXRsZTogTC5kcmF3TG9jYWwuZWRpdC50b29sYmFyLmFjdGlvbnMuc2F2ZS50aXRsZSwKCQkJCXRleHQ6IEwuZHJhd0xvY2FsLmVkaXQudG9vbGJhci5hY3Rpb25zLnNhdmUudGV4dCwKCQkJCWNhbGxiYWNrOiB0aGlzLl9zYXZlLAoJCQkJY29udGV4dDogdGhpcwoJCQl9LAoJCQl7CgkJCQl0aXRsZTogTC5kcmF3TG9jYWwuZWRpdC50b29sYmFyLmFjdGlvbnMuY2FuY2VsLnRpdGxlLAoJCQkJdGV4dDogTC5kcmF3TG9jYWwuZWRpdC50b29sYmFyLmFjdGlvbnMuY2FuY2VsLnRleHQsCgkJCQljYWxsYmFjazogdGhpcy5kaXNhYmxlLAoJCQkJY29udGV4dDogdGhpcwoJCQl9CgkJXTsKCgkJaWYgKGhhbmRsZXIucmVtb3ZlQWxsTGF5ZXJzKSB7CgkJCWFjdGlvbnMucHVzaCh7CgkJCQl0aXRsZTogTC5kcmF3TG9jYWwuZWRpdC50b29sYmFyLmFjdGlvbnMuY2xlYXJBbGwudGl0bGUsCgkJCQl0ZXh0OiBMLmRyYXdMb2NhbC5lZGl0LnRvb2xiYXIuYWN0aW9ucy5jbGVhckFsbC50ZXh0LAoJCQkJY2FsbGJhY2s6IHRoaXMuX2NsZWFyQWxsTGF5ZXJzLAoJCQkJY29udGV4dDogdGhpcwoJCQl9KTsKCQl9CgoJCXJldHVybiBhY3Rpb25zOwoJfSwKCgkvLyBAbWV0aG9kIGFkZFRvb2xiYXIobWFwKTogTC5Eb21VdGlsCgkvLyBBZGRzIHRoZSB0b29sYmFyIHRvIHRoZSBtYXAKCWFkZFRvb2xiYXI6IGZ1bmN0aW9uIChtYXApIHsKCQl2YXIgY29udGFpbmVyID0gTC5Ub29sYmFyLnByb3RvdHlwZS5hZGRUb29sYmFyLmNhbGwodGhpcywgbWFwKTsKCgkJdGhpcy5fY2hlY2tEaXNhYmxlZCgpOwoKCQl0aGlzLm9wdGlvbnMuZmVhdHVyZUdyb3VwLm9uKCdsYXllcmFkZCBsYXllcnJlbW92ZScsIHRoaXMuX2NoZWNrRGlzYWJsZWQsIHRoaXMpOwoKCQlyZXR1cm4gY29udGFpbmVyOwoJfSwKCgkvLyBAbWV0aG9kIHJlbW92ZVRvb2xiYXIoKTogdm9pZAoJLy8gUmVtb3ZlcyB0aGUgdG9vbGJhciBmcm9tIHRoZSBtYXAKCXJlbW92ZVRvb2xiYXI6IGZ1bmN0aW9uICgpIHsKCQl0aGlzLm9wdGlvbnMuZmVhdHVyZUdyb3VwLm9mZignbGF5ZXJhZGQgbGF5ZXJyZW1vdmUnLCB0aGlzLl9jaGVja0Rpc2FibGVkLCB0aGlzKTsKCgkJTC5Ub29sYmFyLnByb3RvdHlwZS5yZW1vdmVUb29sYmFyLmNhbGwodGhpcyk7Cgl9LAoKCS8vIEBtZXRob2QgZGlzYWJsZSgpOiB2b2lkCgkvLyBEaXNhYmxlcyB0aGUgdG9vbGJhcgoJZGlzYWJsZTogZnVuY3Rpb24gKCkgewoJCWlmICghdGhpcy5lbmFibGVkKCkpIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5fYWN0aXZlTW9kZS5oYW5kbGVyLnJldmVydExheWVycygpOwoKCQlMLlRvb2xiYXIucHJvdG90eXBlLmRpc2FibGUuY2FsbCh0aGlzKTsKCX0sCgoJX3NhdmU6IGZ1bmN0aW9uICgpIHsKCQl0aGlzLl9hY3RpdmVNb2RlLmhhbmRsZXIuc2F2ZSgpOwoJCWlmICh0aGlzLl9hY3RpdmVNb2RlKSB7CgkJCXRoaXMuX2FjdGl2ZU1vZGUuaGFuZGxlci5kaXNhYmxlKCk7CgkJfQoJfSwKCglfY2xlYXJBbGxMYXllcnM6IGZ1bmN0aW9uICgpIHsKCQl0aGlzLl9hY3RpdmVNb2RlLmhhbmRsZXIucmVtb3ZlQWxsTGF5ZXJzKCk7CgkJaWYgKHRoaXMuX2FjdGl2ZU1vZGUpIHsKCQkJdGhpcy5fYWN0aXZlTW9kZS5oYW5kbGVyLmRpc2FibGUoKTsKCQl9Cgl9LAoKCV9jaGVja0Rpc2FibGVkOiBmdW5jdGlvbiAoKSB7CgkJdmFyIGZlYXR1cmVHcm91cCA9IHRoaXMub3B0aW9ucy5mZWF0dXJlR3JvdXAsCgkJCWhhc0xheWVycyA9IGZlYXR1cmVHcm91cC5nZXRMYXllcnMoKS5sZW5ndGggIT09IDAsCgkJCWJ1dHRvbjsKCgkJaWYgKHRoaXMub3B0aW9ucy5lZGl0KSB7CgkJCWJ1dHRvbiA9IHRoaXMuX21vZGVzW0wuRWRpdFRvb2xiYXIuRWRpdC5UWVBFXS5idXR0b247CgoJCQlpZiAoaGFzTGF5ZXJzKSB7CgkJCQlMLkRvbVV0aWwucmVtb3ZlQ2xhc3MoYnV0dG9uLCAnbGVhZmxldC1kaXNhYmxlZCcpOwoJCQl9IGVsc2UgewoJCQkJTC5Eb21VdGlsLmFkZENsYXNzKGJ1dHRvbiwgJ2xlYWZsZXQtZGlzYWJsZWQnKTsKCQkJfQoKCQkJYnV0dG9uLnNldEF0dHJpYnV0ZSgKCQkJCSd0aXRsZScsCgkJCQloYXNMYXllcnMgPwoJCQkJCUwuZHJhd0xvY2FsLmVkaXQudG9vbGJhci5idXR0b25zLmVkaXQKCQkJCQk6IEwuZHJhd0xvY2FsLmVkaXQudG9vbGJhci5idXR0b25zLmVkaXREaXNhYmxlZAoJCQkpOwoJCX0KCgkJaWYgKHRoaXMub3B0aW9ucy5yZW1vdmUpIHsKCQkJYnV0dG9uID0gdGhpcy5fbW9kZXNbTC5FZGl0VG9vbGJhci5EZWxldGUuVFlQRV0uYnV0dG9uOwoKCQkJaWYgKGhhc0xheWVycykgewoJCQkJTC5Eb21VdGlsLnJlbW92ZUNsYXNzKGJ1dHRvbiwgJ2xlYWZsZXQtZGlzYWJsZWQnKTsKCQkJfSBlbHNlIHsKCQkJCUwuRG9tVXRpbC5hZGRDbGFzcyhidXR0b24sICdsZWFmbGV0LWRpc2FibGVkJyk7CgkJCX0KCgkJCWJ1dHRvbi5zZXRBdHRyaWJ1dGUoCgkJCQkndGl0bGUnLAoJCQkJaGFzTGF5ZXJzID8KCQkJCQlMLmRyYXdMb2NhbC5lZGl0LnRvb2xiYXIuYnV0dG9ucy5yZW1vdmUKCQkJCQk6IEwuZHJhd0xvY2FsLmVkaXQudG9vbGJhci5idXR0b25zLnJlbW92ZURpc2FibGVkCgkJCSk7CgkJfQoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,"></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkVkaXRUb29sYmFyLkRlbGV0ZQogKiBAYWthIEVkaXRUb29sYmFyLkRlbGV0ZQogKi8KTC5FZGl0VG9vbGJhci5EZWxldGUgPSBMLkhhbmRsZXIuZXh0ZW5kKHsKCXN0YXRpY3M6IHsKCQlUWVBFOiAncmVtb3ZlJyAvLyBub3QgZGVsZXRlIGFzIGRlbGV0ZSBpcyByZXNlcnZlZCBpbiBqcwoJfSwKCgkvLyBAbWV0aG9kIGludGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAobWFwLCBvcHRpb25zKSB7CgkJTC5IYW5kbGVyLnByb3RvdHlwZS5pbml0aWFsaXplLmNhbGwodGhpcywgbWFwKTsKCgkJTC5VdGlsLnNldE9wdGlvbnModGhpcywgb3B0aW9ucyk7CgoJCS8vIFN0b3JlIHRoZSBzZWxlY3RhYmxlIGxheWVyIGdyb3VwIGZvciBlYXNlIG9mIGFjY2VzcwoJCXRoaXMuX2RlbGV0YWJsZUxheWVycyA9IHRoaXMub3B0aW9ucy5mZWF0dXJlR3JvdXA7CgoJCWlmICghKHRoaXMuX2RlbGV0YWJsZUxheWVycyBpbnN0YW5jZW9mIEwuRmVhdHVyZUdyb3VwKSkgewoJCQl0aHJvdyBuZXcgRXJyb3IoJ29wdGlvbnMuZmVhdHVyZUdyb3VwIG11c3QgYmUgYSBMLkZlYXR1cmVHcm91cCcpOwoJCX0KCgkJLy8gU2F2ZSB0aGUgdHlwZSBzbyBzdXBlciBjYW4gZmlyZSwgbmVlZCB0byBkbyB0aGlzIGFzIGNhbm5vdCBkbyB0aGlzLlRZUEUgOigKCQl0aGlzLnR5cGUgPSBMLkVkaXRUb29sYmFyLkRlbGV0ZS5UWVBFOwoKCQl2YXIgdmVyc2lvbiA9IEwudmVyc2lvbi5zcGxpdCgnLicpOwoJCS8vSWYgVmVyc2lvbiBpcyA+PSAxLjIuMAoJCWlmIChwYXJzZUludCh2ZXJzaW9uWzBdLCAxMCkgPT09IDEgJiYgcGFyc2VJbnQodmVyc2lvblsxXSwgMTApID49IDIpIHsKCQkJTC5FZGl0VG9vbGJhci5EZWxldGUuaW5jbHVkZShMLkV2ZW50ZWQucHJvdG90eXBlKTsKCQl9IGVsc2UgewoJCQlMLkVkaXRUb29sYmFyLkRlbGV0ZS5pbmNsdWRlKEwuTWl4aW4uRXZlbnRzKTsKCQl9CgoJfSwKCgkvLyBAbWV0aG9kIGVuYWJsZSgpOiB2b2lkCgkvLyBFbmFibGUgdGhlIGRlbGV0ZSB0b29sYmFyCgllbmFibGU6IGZ1bmN0aW9uICgpIHsKCQlpZiAodGhpcy5fZW5hYmxlZCB8fCAhdGhpcy5faGFzQXZhaWxhYmxlTGF5ZXJzKCkpIHsKCQkJcmV0dXJuOwoJCX0KCQl0aGlzLmZpcmUoJ2VuYWJsZWQnLCB7aGFuZGxlcjogdGhpcy50eXBlfSk7CgoJCXRoaXMuX21hcC5maXJlKEwuRHJhdy5FdmVudC5ERUxFVEVTVEFSVCwge2hhbmRsZXI6IHRoaXMudHlwZX0pOwoKCQlMLkhhbmRsZXIucHJvdG90eXBlLmVuYWJsZS5jYWxsKHRoaXMpOwoKCQl0aGlzLl9kZWxldGFibGVMYXllcnMKCQkJLm9uKCdsYXllcmFkZCcsIHRoaXMuX2VuYWJsZUxheWVyRGVsZXRlLCB0aGlzKQoJCQkub24oJ2xheWVycmVtb3ZlJywgdGhpcy5fZGlzYWJsZUxheWVyRGVsZXRlLCB0aGlzKTsKCX0sCgoJLy8gQG1ldGhvZCBkaXNhYmxlKCk6IHZvaWQKCS8vIERpc2FibGUgdGhlIGRlbGV0ZSB0b29sYmFyCglkaXNhYmxlOiBmdW5jdGlvbiAoKSB7CgkJaWYgKCF0aGlzLl9lbmFibGVkKSB7CgkJCXJldHVybjsKCQl9CgoJCXRoaXMuX2RlbGV0YWJsZUxheWVycwoJCQkub2ZmKCdsYXllcmFkZCcsIHRoaXMuX2VuYWJsZUxheWVyRGVsZXRlLCB0aGlzKQoJCQkub2ZmKCdsYXllcnJlbW92ZScsIHRoaXMuX2Rpc2FibGVMYXllckRlbGV0ZSwgdGhpcyk7CgoJCUwuSGFuZGxlci5wcm90b3R5cGUuZGlzYWJsZS5jYWxsKHRoaXMpOwoKCQl0aGlzLl9tYXAuZmlyZShMLkRyYXcuRXZlbnQuREVMRVRFU1RPUCwge2hhbmRsZXI6IHRoaXMudHlwZX0pOwoKCQl0aGlzLmZpcmUoJ2Rpc2FibGVkJywge2hhbmRsZXI6IHRoaXMudHlwZX0pOwoJfSwKCgkvLyBAbWV0aG9kIGFkZEhvb2tzKCk6IHZvaWQKCS8vIEFkZCBsaXN0ZW5lciBob29rcyB0byB0aGlzIGhhbmRsZXIKCWFkZEhvb2tzOiBmdW5jdGlvbiAoKSB7CgkJdmFyIG1hcCA9IHRoaXMuX21hcDsKCgkJaWYgKG1hcCkgewoJCQltYXAuZ2V0Q29udGFpbmVyKCkuZm9jdXMoKTsKCgkJCXRoaXMuX2RlbGV0YWJsZUxheWVycy5lYWNoTGF5ZXIodGhpcy5fZW5hYmxlTGF5ZXJEZWxldGUsIHRoaXMpOwoJCQl0aGlzLl9kZWxldGVkTGF5ZXJzID0gbmV3IEwuTGF5ZXJHcm91cCgpOwoKCQkJdGhpcy5fdG9vbHRpcCA9IG5ldyBMLkRyYXcuVG9vbHRpcCh0aGlzLl9tYXApOwoJCQl0aGlzLl90b29sdGlwLnVwZGF0ZUNvbnRlbnQoe3RleHQ6IEwuZHJhd0xvY2FsLmVkaXQuaGFuZGxlcnMucmVtb3ZlLnRvb2x0aXAudGV4dH0pOwoKCQkJdGhpcy5fbWFwLm9uKCdtb3VzZW1vdmUnLCB0aGlzLl9vbk1vdXNlTW92ZSwgdGhpcyk7CgkJfQoJfSwKCgkvLyBAbWV0aG9kIHJlbW92ZUhvb2tzKCk6IHZvaWQKCS8vIFJlbW92ZSBsaXN0ZW5lciBob29rcyBmcm9tIHRoaXMgaGFuZGxlcgoJcmVtb3ZlSG9va3M6IGZ1bmN0aW9uICgpIHsKCQlpZiAodGhpcy5fbWFwKSB7CgkJCXRoaXMuX2RlbGV0YWJsZUxheWVycy5lYWNoTGF5ZXIodGhpcy5fZGlzYWJsZUxheWVyRGVsZXRlLCB0aGlzKTsKCQkJdGhpcy5fZGVsZXRlZExheWVycyA9IG51bGw7CgoJCQl0aGlzLl90b29sdGlwLmRpc3Bvc2UoKTsKCQkJdGhpcy5fdG9vbHRpcCA9IG51bGw7CgoJCQl0aGlzLl9tYXAub2ZmKCdtb3VzZW1vdmUnLCB0aGlzLl9vbk1vdXNlTW92ZSwgdGhpcyk7CgkJfQoJfSwKCgkvLyBAbWV0aG9kIHJldmVydExheWVycygpOiB2b2lkCgkvLyBSZXZlcnQgdGhlIGRlbGV0ZWQgbGF5ZXJzIGJhY2sgdG8gdGhlaXIgcHJpb3Igc3RhdGUuCglyZXZlcnRMYXllcnM6IGZ1bmN0aW9uICgpIHsKCQkvLyBJdGVyYXRlIG9mIHRoZSBkZWxldGVkIGxheWVycyBhbmQgYWRkIHRoZW0gYmFjayBpbnRvIHRoZSBmZWF0dXJlR3JvdXAKCQl0aGlzLl9kZWxldGVkTGF5ZXJzLmVhY2hMYXllcihmdW5jdGlvbiAobGF5ZXIpIHsKCQkJdGhpcy5fZGVsZXRhYmxlTGF5ZXJzLmFkZExheWVyKGxheWVyKTsKCQkJbGF5ZXIuZmlyZSgncmV2ZXJ0LWRlbGV0ZWQnLCB7bGF5ZXI6IGxheWVyfSk7CgkJfSwgdGhpcyk7Cgl9LAoKCS8vIEBtZXRob2Qgc2F2ZSgpOiB2b2lkCgkvLyBTYXZlIGRlbGV0ZWQgbGF5ZXJzCglzYXZlOiBmdW5jdGlvbiAoKSB7CgkJdGhpcy5fbWFwLmZpcmUoTC5EcmF3LkV2ZW50LkRFTEVURUQsIHtsYXllcnM6IHRoaXMuX2RlbGV0ZWRMYXllcnN9KTsKCX0sCgoJLy8gQG1ldGhvZCByZW1vdmVBbGxMYXllcnMoKTogdm9pZAoJLy8gUmVtb3ZlIGFsbCBkZWxhdGVhYmxlIGxheWVycwoJcmVtb3ZlQWxsTGF5ZXJzOiBmdW5jdGlvbiAoKSB7CgkJLy8gSXRlcmF0ZSBvZiB0aGUgZGVsYXRlYWJsZSBsYXllcnMgYW5kIGFkZCByZW1vdmUgdGhlbQoJCXRoaXMuX2RlbGV0YWJsZUxheWVycy5lYWNoTGF5ZXIoZnVuY3Rpb24gKGxheWVyKSB7CgkJCXRoaXMuX3JlbW92ZUxheWVyKHtsYXllcjogbGF5ZXJ9KTsKCQl9LCB0aGlzKTsKCQl0aGlzLnNhdmUoKTsKCX0sCgoJX2VuYWJsZUxheWVyRGVsZXRlOiBmdW5jdGlvbiAoZSkgewoJCXZhciBsYXllciA9IGUubGF5ZXIgfHwgZS50YXJnZXQgfHwgZTsKCgkJbGF5ZXIub24oJ2NsaWNrJywgdGhpcy5fcmVtb3ZlTGF5ZXIsIHRoaXMpOwoJfSwKCglfZGlzYWJsZUxheWVyRGVsZXRlOiBmdW5jdGlvbiAoZSkgewoJCXZhciBsYXllciA9IGUubGF5ZXIgfHwgZS50YXJnZXQgfHwgZTsKCgkJbGF5ZXIub2ZmKCdjbGljaycsIHRoaXMuX3JlbW92ZUxheWVyLCB0aGlzKTsKCgkJLy8gUmVtb3ZlIGZyb20gdGhlIGRlbGV0ZWQgbGF5ZXJzIHNvIHdlIGNhbid0IGFjY2lkZW50YWxseSByZXZlcnQgaWYgdGhlIHVzZXIgcHJlc3NlcyBjYW5jZWwKCQl0aGlzLl9kZWxldGVkTGF5ZXJzLnJlbW92ZUxheWVyKGxheWVyKTsKCX0sCgoJX3JlbW92ZUxheWVyOiBmdW5jdGlvbiAoZSkgewoJCXZhciBsYXllciA9IGUubGF5ZXIgfHwgZS50YXJnZXQgfHwgZTsKCgkJdGhpcy5fZGVsZXRhYmxlTGF5ZXJzLnJlbW92ZUxheWVyKGxheWVyKTsKCgkJdGhpcy5fZGVsZXRlZExheWVycy5hZGRMYXllcihsYXllcik7CgoJCWxheWVyLmZpcmUoJ2RlbGV0ZWQnKTsKCX0sCgoJX29uTW91c2VNb3ZlOiBmdW5jdGlvbiAoZSkgewoJCXRoaXMuX3Rvb2x0aXAudXBkYXRlUG9zaXRpb24oZS5sYXRsbmcpOwoJfSwKCglfaGFzQXZhaWxhYmxlTGF5ZXJzOiBmdW5jdGlvbiAoKSB7CgkJcmV0dXJuIHRoaXMuX2RlbGV0YWJsZUxheWVycy5nZXRMYXllcnMoKS5sZW5ndGggIT09IDA7Cgl9Cn0pOwo="></script>
<script src="data:text/javascript;base64,LyoqCiAqIEBjbGFzcyBMLkNvbnRyb2wuRHJhdwogKiBAYWthIEwuRHJhdwogKi8KTC5Db250cm9sLkRyYXcgPSBMLkNvbnRyb2wuZXh0ZW5kKHsKCgkvLyBPcHRpb25zCglvcHRpb25zOiB7CgkJcG9zaXRpb246ICd0b3BsZWZ0JywKCQlkcmF3OiB7fSwKCQllZGl0OiBmYWxzZQoJfSwKCgkvLyBAbWV0aG9kIGluaXRpYWxpemUoKTogdm9pZAoJLy8gSW5pdGlhbGl6ZXMgZHJhdyBjb250cm9sLCB0b29sYmFycyBmcm9tIHRoZSBvcHRpb25zCglpbml0aWFsaXplOiBmdW5jdGlvbiAob3B0aW9ucykgewoJCWlmIChMLnZlcnNpb24gPCAnMC43JykgewoJCQl0aHJvdyBuZXcgRXJyb3IoJ0xlYWZsZXQuZHJhdyAwLjIuMysgcmVxdWlyZXMgTGVhZmxldCAwLjcuMCsuIERvd25sb2FkIGxhdGVzdCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9MZWFmbGV0L0xlYWZsZXQvJyk7CgkJfQoKCQlMLkNvbnRyb2wucHJvdG90eXBlLmluaXRpYWxpemUuY2FsbCh0aGlzLCBvcHRpb25zKTsKCgkJdmFyIHRvb2xiYXI7CgoJCXRoaXMuX3Rvb2xiYXJzID0ge307CgoJCS8vIEluaXRpYWxpemUgdG9vbGJhcnMKCQlpZiAoTC5EcmF3VG9vbGJhciAmJiB0aGlzLm9wdGlvbnMuZHJhdykgewoJCQl0b29sYmFyID0gbmV3IEwuRHJhd1Rvb2xiYXIodGhpcy5vcHRpb25zLmRyYXcpOwoKCQkJdGhpcy5fdG9vbGJhcnNbTC5EcmF3VG9vbGJhci5UWVBFXSA9IHRvb2xiYXI7CgoJCQkvLyBMaXN0ZW4gZm9yIHdoZW4gdG9vbGJhciBpcyBlbmFibGVkCgkJCXRoaXMuX3Rvb2xiYXJzW0wuRHJhd1Rvb2xiYXIuVFlQRV0ub24oJ2VuYWJsZScsIHRoaXMuX3Rvb2xiYXJFbmFibGVkLCB0aGlzKTsKCQl9CgoJCWlmIChMLkVkaXRUb29sYmFyICYmIHRoaXMub3B0aW9ucy5lZGl0KSB7CgkJCXRvb2xiYXIgPSBuZXcgTC5FZGl0VG9vbGJhcih0aGlzLm9wdGlvbnMuZWRpdCk7CgoJCQl0aGlzLl90b29sYmFyc1tMLkVkaXRUb29sYmFyLlRZUEVdID0gdG9vbGJhcjsKCgkJCS8vIExpc3RlbiBmb3Igd2hlbiB0b29sYmFyIGlzIGVuYWJsZWQKCQkJdGhpcy5fdG9vbGJhcnNbTC5FZGl0VG9vbGJhci5UWVBFXS5vbignZW5hYmxlJywgdGhpcy5fdG9vbGJhckVuYWJsZWQsIHRoaXMpOwoJCX0KCQlMLnRvb2xiYXIgPSB0aGlzOyAvL3NldCBnbG9iYWwgdmFyIGZvciBlZGl0aW5nIHRoZSB0b29sYmFyCgl9LAoKCS8vIEBtZXRob2Qgb25BZGQoKTogY29udGFpbmVyCgkvLyBBZGRzIHRoZSB0b29sYmFyIGNvbnRhaW5lciB0byB0aGUgbWFwCglvbkFkZDogZnVuY3Rpb24gKG1hcCkgewoJCXZhciBjb250YWluZXIgPSBMLkRvbVV0aWwuY3JlYXRlKCdkaXYnLCAnbGVhZmxldC1kcmF3JyksCgkJCWFkZGVkVG9wQ2xhc3MgPSBmYWxzZSwKCQkJdG9wQ2xhc3NOYW1lID0gJ2xlYWZsZXQtZHJhdy10b29sYmFyLXRvcCcsCgkJCXRvb2xiYXJDb250YWluZXI7CgoJCWZvciAodmFyIHRvb2xiYXJJZCBpbiB0aGlzLl90b29sYmFycykgewoJCQlpZiAodGhpcy5fdG9vbGJhcnMuaGFzT3duUHJvcGVydHkodG9vbGJhcklkKSkgewoJCQkJdG9vbGJhckNvbnRhaW5lciA9IHRoaXMuX3Rvb2xiYXJzW3Rvb2xiYXJJZF0uYWRkVG9vbGJhcihtYXApOwoKCQkJCWlmICh0b29sYmFyQ29udGFpbmVyKSB7CgkJCQkJLy8gQWRkIGNsYXNzIHRvIHRoZSBmaXJzdCB0b29sYmFyIHRvIHJlbW92ZSB0aGUgbWFyZ2luCgkJCQkJaWYgKCFhZGRlZFRvcENsYXNzKSB7CgkJCQkJCWlmICghTC5Eb21VdGlsLmhhc0NsYXNzKHRvb2xiYXJDb250YWluZXIsIHRvcENsYXNzTmFtZSkpIHsKCQkJCQkJCUwuRG9tVXRpbC5hZGRDbGFzcyh0b29sYmFyQ29udGFpbmVyLmNoaWxkTm9kZXNbMF0sIHRvcENsYXNzTmFtZSk7CgkJCQkJCX0KCQkJCQkJYWRkZWRUb3BDbGFzcyA9IHRydWU7CgkJCQkJfQoKCQkJCQljb250YWluZXIuYXBwZW5kQ2hpbGQodG9vbGJhckNvbnRhaW5lcik7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiBjb250YWluZXI7Cgl9LAoKCS8vIEBtZXRob2Qgb25SZW1vdmUoKTogdm9pZAoJLy8gUmVtb3ZlcyB0aGUgdG9vbGJhcnMgZnJvbSB0aGUgbWFwIHRvb2xiYXIgY29udGFpbmVyCglvblJlbW92ZTogZnVuY3Rpb24gKCkgewoJCWZvciAodmFyIHRvb2xiYXJJZCBpbiB0aGlzLl90b29sYmFycykgewoJCQlpZiAodGhpcy5fdG9vbGJhcnMuaGFzT3duUHJvcGVydHkodG9vbGJhcklkKSkgewoJCQkJdGhpcy5fdG9vbGJhcnNbdG9vbGJhcklkXS5yZW1vdmVUb29sYmFyKCk7CgkJCX0KCQl9Cgl9LAoKCS8vIEBtZXRob2Qgc2V0RHJhd2luZ09wdGlvbnMob3B0aW9ucyk6IHZvaWQKCS8vIFNldHMgb3B0aW9ucyB0byBhbGwgdG9vbGJhciBpbnN0YW5jZXMKCXNldERyYXdpbmdPcHRpb25zOiBmdW5jdGlvbiAob3B0aW9ucykgewoJCWZvciAodmFyIHRvb2xiYXJJZCBpbiB0aGlzLl90b29sYmFycykgewoJCQlpZiAodGhpcy5fdG9vbGJhcnNbdG9vbGJhcklkXSBpbnN0YW5jZW9mIEwuRHJhd1Rvb2xiYXIpIHsKCQkJCXRoaXMuX3Rvb2xiYXJzW3Rvb2xiYXJJZF0uc2V0T3B0aW9ucyhvcHRpb25zKTsKCQkJfQoJCX0KCX0sCgoJX3Rvb2xiYXJFbmFibGVkOiBmdW5jdGlvbiAoZSkgewoJCXZhciBlbmFibGVkVG9vbGJhciA9IGUudGFyZ2V0OwoKCQlmb3IgKHZhciB0b29sYmFySWQgaW4gdGhpcy5fdG9vbGJhcnMpIHsKCQkJaWYgKHRoaXMuX3Rvb2xiYXJzW3Rvb2xiYXJJZF0gIT09IGVuYWJsZWRUb29sYmFyKSB7CgkJCQl0aGlzLl90b29sYmFyc1t0b29sYmFySWRdLmRpc2FibGUoKTsKCQkJfQoJCX0KCX0KfSk7CgpMLk1hcC5tZXJnZU9wdGlvbnMoewoJZHJhd0NvbnRyb2xUb29sdGlwczogdHJ1ZSwKCWRyYXdDb250cm9sOiBmYWxzZQp9KTsKCkwuTWFwLmFkZEluaXRIb29rKGZ1bmN0aW9uICgpIHsKCWlmICh0aGlzLm9wdGlvbnMuZHJhd0NvbnRyb2wpIHsKCQl0aGlzLmRyYXdDb250cm9sID0gbmV3IEwuQ29udHJvbC5EcmF3KCk7CgkJdGhpcy5hZGRDb250cm9sKHRoaXMuZHJhd0NvbnRyb2wpOwoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,"></script>
<script src="data:text/javascript;base64,TC5FZGl0ID0gTC5FZGl0IHx8IHt9OwovKioKICogQGNsYXNzIEwuRWRpdC5TaW1wbGVTaGFwZQogKiBAYWthIEVkaXQuU2ltcGxlU2hhcGUKICovCkwuRWRpdC5TaW1wbGVTaGFwZSA9IEwuSGFuZGxlci5leHRlbmQoewoJb3B0aW9uczogewoJCW1vdmVJY29uOiBuZXcgTC5EaXZJY29uKHsKCQkJaWNvblNpemU6IG5ldyBMLlBvaW50KDgsIDgpLAoJCQljbGFzc05hbWU6ICdsZWFmbGV0LWRpdi1pY29uIGxlYWZsZXQtZWRpdGluZy1pY29uIGxlYWZsZXQtZWRpdC1tb3ZlJwoJCX0pLAoJCXJlc2l6ZUljb246IG5ldyBMLkRpdkljb24oewoJCQlpY29uU2l6ZTogbmV3IEwuUG9pbnQoOCwgOCksCgkJCWNsYXNzTmFtZTogJ2xlYWZsZXQtZGl2LWljb24gbGVhZmxldC1lZGl0aW5nLWljb24gbGVhZmxldC1lZGl0LXJlc2l6ZScKCQl9KSwKCQl0b3VjaE1vdmVJY29uOiBuZXcgTC5EaXZJY29uKHsKCQkJaWNvblNpemU6IG5ldyBMLlBvaW50KDIwLCAyMCksCgkJCWNsYXNzTmFtZTogJ2xlYWZsZXQtZGl2LWljb24gbGVhZmxldC1lZGl0aW5nLWljb24gbGVhZmxldC1lZGl0LW1vdmUgbGVhZmxldC10b3VjaC1pY29uJwoJCX0pLAoJCXRvdWNoUmVzaXplSWNvbjogbmV3IEwuRGl2SWNvbih7CgkJCWljb25TaXplOiBuZXcgTC5Qb2ludCgyMCwgMjApLAoJCQljbGFzc05hbWU6ICdsZWFmbGV0LWRpdi1pY29uIGxlYWZsZXQtZWRpdGluZy1pY29uIGxlYWZsZXQtZWRpdC1yZXNpemUgbGVhZmxldC10b3VjaC1pY29uJwoJCX0pLAoJfSwKCgkvLyBAbWV0aG9kIGludGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAoc2hhcGUsIG9wdGlvbnMpIHsKCQkvLyBpZiB0b3VjaCwgc3dpdGNoIHRvIHRvdWNoIGljb24KCQlpZiAoTC5Ccm93c2VyLnRvdWNoKSB7CgkJCXRoaXMub3B0aW9ucy5tb3ZlSWNvbiA9IHRoaXMub3B0aW9ucy50b3VjaE1vdmVJY29uOwoJCQl0aGlzLm9wdGlvbnMucmVzaXplSWNvbiA9IHRoaXMub3B0aW9ucy50b3VjaFJlc2l6ZUljb247CgkJfQoKCQl0aGlzLl9zaGFwZSA9IHNoYXBlOwoJCUwuVXRpbC5zZXRPcHRpb25zKHRoaXMsIG9wdGlvbnMpOwoJfSwKCgkvLyBAbWV0aG9kIGFkZEhvb2tzKCk6IHZvaWQKCS8vIEFkZCBsaXN0ZW5lciBob29rcyB0byB0aGlzIGhhbmRsZXIKCWFkZEhvb2tzOiBmdW5jdGlvbiAoKSB7CgkJdmFyIHNoYXBlID0gdGhpcy5fc2hhcGU7CgkJaWYgKHRoaXMuX3NoYXBlLl9tYXApIHsKCQkJdGhpcy5fbWFwID0gdGhpcy5fc2hhcGUuX21hcDsKCQkJc2hhcGUuc2V0U3R5bGUoc2hhcGUub3B0aW9ucy5lZGl0aW5nKTsKCgkJCWlmIChzaGFwZS5fbWFwKSB7CgkJCQl0aGlzLl9tYXAgPSBzaGFwZS5fbWFwOwoJCQkJaWYgKCF0aGlzLl9tYXJrZXJHcm91cCkgewoJCQkJCXRoaXMuX2luaXRNYXJrZXJzKCk7CgkJCQl9CgkJCQl0aGlzLl9tYXAuYWRkTGF5ZXIodGhpcy5fbWFya2VyR3JvdXApOwoJCQl9CgkJfQoJfSwKCgkvLyBAbWV0aG9kIHJlbW92ZUhvb2tzKCk6IHZvaWQKCS8vIFJlbW92ZSBsaXN0ZW5lciBob29rcyBmcm9tIHRoaXMgaGFuZGxlcgoJcmVtb3ZlSG9va3M6IGZ1bmN0aW9uICgpIHsKCQl2YXIgc2hhcGUgPSB0aGlzLl9zaGFwZTsKCgkJc2hhcGUuc2V0U3R5bGUoc2hhcGUub3B0aW9ucy5vcmlnaW5hbCk7CgoJCWlmIChzaGFwZS5fbWFwKSB7CgkJCXRoaXMuX3VuYmluZE1hcmtlcih0aGlzLl9tb3ZlTWFya2VyKTsKCgkJCWZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5fcmVzaXplTWFya2Vycy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKCQkJCXRoaXMuX3VuYmluZE1hcmtlcih0aGlzLl9yZXNpemVNYXJrZXJzW2ldKTsKCQkJfQoJCQl0aGlzLl9yZXNpemVNYXJrZXJzID0gbnVsbDsKCgkJCXRoaXMuX21hcC5yZW1vdmVMYXllcih0aGlzLl9tYXJrZXJHcm91cCk7CgkJCWRlbGV0ZSB0aGlzLl9tYXJrZXJHcm91cDsKCQl9CgoJCXRoaXMuX21hcCA9IG51bGw7Cgl9LAoKCS8vIEBtZXRob2QgdXBkYXRlTWFya2VycygpOiB2b2lkCgkvLyBSZW1vdmUgdGhlIGVkaXQgbWFya2VycyBmcm9tIHRoaXMgbGF5ZXIKCXVwZGF0ZU1hcmtlcnM6IGZ1bmN0aW9uICgpIHsKCQl0aGlzLl9tYXJrZXJHcm91cC5jbGVhckxheWVycygpOwoJCXRoaXMuX2luaXRNYXJrZXJzKCk7Cgl9LAoKCV9pbml0TWFya2VyczogZnVuY3Rpb24gKCkgewoJCWlmICghdGhpcy5fbWFya2VyR3JvdXApIHsKCQkJdGhpcy5fbWFya2VyR3JvdXAgPSBuZXcgTC5MYXllckdyb3VwKCk7CgkJfQoKCQkvLyBDcmVhdGUgY2VudGVyIG1hcmtlcgoJCXRoaXMuX2NyZWF0ZU1vdmVNYXJrZXIoKTsKCgkJLy8gQ3JlYXRlIGVkZ2UgbWFya2VyCgkJdGhpcy5fY3JlYXRlUmVzaXplTWFya2VyKCk7Cgl9LAoKCV9jcmVhdGVNb3ZlTWFya2VyOiBmdW5jdGlvbiAoKSB7CgkJLy8gQ2hpbGRyZW4gb3ZlcnJpZGUKCX0sCgoJX2NyZWF0ZVJlc2l6ZU1hcmtlcjogZnVuY3Rpb24gKCkgewoJCS8vIENoaWxkcmVuIG92ZXJyaWRlCgl9LAoKCV9jcmVhdGVNYXJrZXI6IGZ1bmN0aW9uIChsYXRsbmcsIGljb24pIHsKCQkvLyBFeHRlbmRpbmcgTC5NYXJrZXIgaW4gVG91Y2hFdmVudHMuanMgdG8gaW5jbHVkZSB0b3VjaC4KCQl2YXIgbWFya2VyID0gbmV3IEwuTWFya2VyLlRvdWNoKGxhdGxuZywgewoJCQlkcmFnZ2FibGU6IHRydWUsCgkJCWljb246IGljb24sCgkJCXpJbmRleE9mZnNldDogMTAKCQl9KTsKCgkJdGhpcy5fYmluZE1hcmtlcihtYXJrZXIpOwoKCQl0aGlzLl9tYXJrZXJHcm91cC5hZGRMYXllcihtYXJrZXIpOwoKCQlyZXR1cm4gbWFya2VyOwoJfSwKCglfYmluZE1hcmtlcjogZnVuY3Rpb24gKG1hcmtlcikgewoJCW1hcmtlcgoJCQkub24oJ2RyYWdzdGFydCcsIHRoaXMuX29uTWFya2VyRHJhZ1N0YXJ0LCB0aGlzKQoJCQkub24oJ2RyYWcnLCB0aGlzLl9vbk1hcmtlckRyYWcsIHRoaXMpCgkJCS5vbignZHJhZ2VuZCcsIHRoaXMuX29uTWFya2VyRHJhZ0VuZCwgdGhpcykKCQkJLm9uKCd0b3VjaHN0YXJ0JywgdGhpcy5fb25Ub3VjaFN0YXJ0LCB0aGlzKQoJCQkub24oJ3RvdWNobW92ZScsIHRoaXMuX29uVG91Y2hNb3ZlLCB0aGlzKQoJCQkub24oJ01TUG9pbnRlck1vdmUnLCB0aGlzLl9vblRvdWNoTW92ZSwgdGhpcykKCQkJLm9uKCd0b3VjaGVuZCcsIHRoaXMuX29uVG91Y2hFbmQsIHRoaXMpCgkJCS5vbignTVNQb2ludGVyVXAnLCB0aGlzLl9vblRvdWNoRW5kLCB0aGlzKTsKCX0sCgoJX3VuYmluZE1hcmtlcjogZnVuY3Rpb24gKG1hcmtlcikgewoJCW1hcmtlcgoJCQkub2ZmKCdkcmFnc3RhcnQnLCB0aGlzLl9vbk1hcmtlckRyYWdTdGFydCwgdGhpcykKCQkJLm9mZignZHJhZycsIHRoaXMuX29uTWFya2VyRHJhZywgdGhpcykKCQkJLm9mZignZHJhZ2VuZCcsIHRoaXMuX29uTWFya2VyRHJhZ0VuZCwgdGhpcykKCQkJLm9mZigndG91Y2hzdGFydCcsIHRoaXMuX29uVG91Y2hTdGFydCwgdGhpcykKCQkJLm9mZigndG91Y2htb3ZlJywgdGhpcy5fb25Ub3VjaE1vdmUsIHRoaXMpCgkJCS5vZmYoJ01TUG9pbnRlck1vdmUnLCB0aGlzLl9vblRvdWNoTW92ZSwgdGhpcykKCQkJLm9mZigndG91Y2hlbmQnLCB0aGlzLl9vblRvdWNoRW5kLCB0aGlzKQoJCQkub2ZmKCdNU1BvaW50ZXJVcCcsIHRoaXMuX29uVG91Y2hFbmQsIHRoaXMpOwoJfSwKCglfb25NYXJrZXJEcmFnU3RhcnQ6IGZ1bmN0aW9uIChlKSB7CgkJdmFyIG1hcmtlciA9IGUudGFyZ2V0OwoJCW1hcmtlci5zZXRPcGFjaXR5KDApOwoKCQl0aGlzLl9zaGFwZS5maXJlKCdlZGl0c3RhcnQnKTsKCX0sCgoJX2ZpcmVFZGl0OiBmdW5jdGlvbiAoKSB7CgkJdGhpcy5fc2hhcGUuZWRpdGVkID0gdHJ1ZTsKCQl0aGlzLl9zaGFwZS5maXJlKCdlZGl0Jyk7Cgl9LAoKCV9vbk1hcmtlckRyYWc6IGZ1bmN0aW9uIChlKSB7CgkJdmFyIG1hcmtlciA9IGUudGFyZ2V0LAoJCQlsYXRsbmcgPSBtYXJrZXIuZ2V0TGF0TG5nKCk7CgoJCWlmIChtYXJrZXIgPT09IHRoaXMuX21vdmVNYXJrZXIpIHsKCQkJdGhpcy5fbW92ZShsYXRsbmcpOwoJCX0gZWxzZSB7CgkJCXRoaXMuX3Jlc2l6ZShsYXRsbmcpOwoJCX0KCgkJdGhpcy5fc2hhcGUucmVkcmF3KCk7CgkJdGhpcy5fc2hhcGUuZmlyZSgnZWRpdGRyYWcnKTsKCX0sCgoJX29uTWFya2VyRHJhZ0VuZDogZnVuY3Rpb24gKGUpIHsKCQl2YXIgbWFya2VyID0gZS50YXJnZXQ7CgkJbWFya2VyLnNldE9wYWNpdHkoMSk7CgoJCXRoaXMuX2ZpcmVFZGl0KCk7Cgl9LAoKCV9vblRvdWNoU3RhcnQ6IGZ1bmN0aW9uIChlKSB7CgkJTC5FZGl0LlNpbXBsZVNoYXBlLnByb3RvdHlwZS5fb25NYXJrZXJEcmFnU3RhcnQuY2FsbCh0aGlzLCBlKTsKCgkJaWYgKHR5cGVvZih0aGlzLl9nZXRDb3JuZXJzKSA9PT0gJ2Z1bmN0aW9uJykgewoJCQkvLyBTYXZlIGEgcmVmZXJlbmNlIHRvIHRoZSBvcHBvc2l0ZSBwb2ludAoJCQl2YXIgY29ybmVycyA9IHRoaXMuX2dldENvcm5lcnMoKSwKCQkJCW1hcmtlciA9IGUudGFyZ2V0LAoJCQkJY3VycmVudENvcm5lckluZGV4ID0gbWFya2VyLl9jb3JuZXJJbmRleDsKCgkJCW1hcmtlci5zZXRPcGFjaXR5KDApOwoKCQkJLy8gQ29weWVkIGZyb20gRWRpdC5SZWN0YW5nbGUuanMgbGluZSAyMyBfb25NYXJrZXJEcmFnU3RhcnQoKQoJCQkvLyBMYXRsbmcgaXMgbnVsbCBvdGhlcndpc2UuCgkJCXRoaXMuX29wcG9zaXRlQ29ybmVyID0gY29ybmVyc1soY3VycmVudENvcm5lckluZGV4ICsgMikgJSA0XTsKCQkJdGhpcy5fdG9nZ2xlQ29ybmVyTWFya2VycygwLCBjdXJyZW50Q29ybmVySW5kZXgpOwoJCX0KCgkJdGhpcy5fc2hhcGUuZmlyZSgnZWRpdHN0YXJ0Jyk7Cgl9LAoKCV9vblRvdWNoTW92ZTogZnVuY3Rpb24gKGUpIHsKCQl2YXIgbGF5ZXJQb2ludCA9IHRoaXMuX21hcC5tb3VzZUV2ZW50VG9MYXllclBvaW50KGUub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdKSwKCQkJbGF0bG5nID0gdGhpcy5fbWFwLmxheWVyUG9pbnRUb0xhdExuZyhsYXllclBvaW50KSwKCQkJbWFya2VyID0gZS50YXJnZXQ7CgoJCWlmIChtYXJrZXIgPT09IHRoaXMuX21vdmVNYXJrZXIpIHsKCQkJdGhpcy5fbW92ZShsYXRsbmcpOwoJCX0gZWxzZSB7CgkJCXRoaXMuX3Jlc2l6ZShsYXRsbmcpOwoJCX0KCgkJdGhpcy5fc2hhcGUucmVkcmF3KCk7CgoJCS8vIHByZXZlbnQgdG91Y2hjYW5jZWwgaW4gSU9TCgkJLy8gZS5wcmV2ZW50RGVmYXVsdCgpOwoJCXJldHVybiBmYWxzZTsKCX0sCgoJX29uVG91Y2hFbmQ6IGZ1bmN0aW9uIChlKSB7CgkJdmFyIG1hcmtlciA9IGUudGFyZ2V0OwoJCW1hcmtlci5zZXRPcGFjaXR5KDEpOwoJCXRoaXMudXBkYXRlTWFya2VycygpOwoJCXRoaXMuX2ZpcmVFZGl0KCk7Cgl9LAoKCV9tb3ZlOiBmdW5jdGlvbiAoKSB7CgkJLy8gQ2hpbGRyZW4gb3ZlcnJpZGUKCX0sCgoJX3Jlc2l6ZTogZnVuY3Rpb24gKCkgewoJCS8vIENoaWxkcmVuIG92ZXJyaWRlCgl9Cn0pOwo="></script>
<script src="data:text/javascript;base64,TC5FZGl0ID0gTC5FZGl0IHx8IHt9OwovKioKICogQGNsYXNzIEwuRWRpdC5SZWN0YW5nbGUKICogQGFrYSBFZGl0LlJlY3RhbmdsZQogKiBAaW5oZXJpdHMgTC5FZGl0LlNpbXBsZVNoYXBlCiAqLwpMLkVkaXQuUmVjdGFuZ2xlID0gTC5FZGl0LlNpbXBsZVNoYXBlLmV4dGVuZCh7CglfY3JlYXRlTW92ZU1hcmtlcjogZnVuY3Rpb24gKCkgewoJCXZhciBib3VuZHMgPSB0aGlzLl9zaGFwZS5nZXRCb3VuZHMoKSwKCQkJY2VudGVyID0gYm91bmRzLmdldENlbnRlcigpOwoKCQl0aGlzLl9tb3ZlTWFya2VyID0gdGhpcy5fY3JlYXRlTWFya2VyKGNlbnRlciwgdGhpcy5vcHRpb25zLm1vdmVJY29uKTsKCX0sCgoJX2NyZWF0ZVJlc2l6ZU1hcmtlcjogZnVuY3Rpb24gKCkgewoJCXZhciBjb3JuZXJzID0gdGhpcy5fZ2V0Q29ybmVycygpOwoKCQl0aGlzLl9yZXNpemVNYXJrZXJzID0gW107CgoJCWZvciAodmFyIGkgPSAwLCBsID0gY29ybmVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKCQkJdGhpcy5fcmVzaXplTWFya2Vycy5wdXNoKHRoaXMuX2NyZWF0ZU1hcmtlcihjb3JuZXJzW2ldLCB0aGlzLm9wdGlvbnMucmVzaXplSWNvbikpOwoJCQkvLyBNb25rZXkgaW4gdGhlIGNvcm5lciBpbmRleCBhcyB3ZSB3aWxsIG5lZWQgdG8ga25vdyB0aGlzIGZvciBkcmFnZ2luZwoJCQl0aGlzLl9yZXNpemVNYXJrZXJzW2ldLl9jb3JuZXJJbmRleCA9IGk7CgkJfQoJfSwKCglfb25NYXJrZXJEcmFnU3RhcnQ6IGZ1bmN0aW9uIChlKSB7CgkJTC5FZGl0LlNpbXBsZVNoYXBlLnByb3RvdHlwZS5fb25NYXJrZXJEcmFnU3RhcnQuY2FsbCh0aGlzLCBlKTsKCgkJLy8gU2F2ZSBhIHJlZmVyZW5jZSB0byB0aGUgb3Bwb3NpdGUgcG9pbnQKCQl2YXIgY29ybmVycyA9IHRoaXMuX2dldENvcm5lcnMoKSwKCQkJbWFya2VyID0gZS50YXJnZXQsCgkJCWN1cnJlbnRDb3JuZXJJbmRleCA9IG1hcmtlci5fY29ybmVySW5kZXg7CgoJCXRoaXMuX29wcG9zaXRlQ29ybmVyID0gY29ybmVyc1soY3VycmVudENvcm5lckluZGV4ICsgMikgJSA0XTsKCgkJdGhpcy5fdG9nZ2xlQ29ybmVyTWFya2VycygwLCBjdXJyZW50Q29ybmVySW5kZXgpOwoJfSwKCglfb25NYXJrZXJEcmFnRW5kOiBmdW5jdGlvbiAoZSkgewoJCXZhciBtYXJrZXIgPSBlLnRhcmdldCwKCQkJYm91bmRzLCBjZW50ZXI7CgoJCS8vIFJlc2V0IG1vdmUgbWFya2VyIHBvc2l0aW9uIHRvIHRoZSBjZW50ZXIKCQlpZiAobWFya2VyID09PSB0aGlzLl9tb3ZlTWFya2VyKSB7CgkJCWJvdW5kcyA9IHRoaXMuX3NoYXBlLmdldEJvdW5kcygpOwoJCQljZW50ZXIgPSBib3VuZHMuZ2V0Q2VudGVyKCk7CgoJCQltYXJrZXIuc2V0TGF0TG5nKGNlbnRlcik7CgkJfQoKCQl0aGlzLl90b2dnbGVDb3JuZXJNYXJrZXJzKDEpOwoKCQl0aGlzLl9yZXBvc2l0aW9uQ29ybmVyTWFya2VycygpOwoKCQlMLkVkaXQuU2ltcGxlU2hhcGUucHJvdG90eXBlLl9vbk1hcmtlckRyYWdFbmQuY2FsbCh0aGlzLCBlKTsKCX0sCgoJX21vdmU6IGZ1bmN0aW9uIChuZXdDZW50ZXIpIHsKCQl2YXIgbGF0bG5ncyA9IHRoaXMuX3NoYXBlLl9kZWZhdWx0U2hhcGUgPyB0aGlzLl9zaGFwZS5fZGVmYXVsdFNoYXBlKCkgOiB0aGlzLl9zaGFwZS5nZXRMYXRMbmdzKCksCgkJCWJvdW5kcyA9IHRoaXMuX3NoYXBlLmdldEJvdW5kcygpLAoJCQljZW50ZXIgPSBib3VuZHMuZ2V0Q2VudGVyKCksCgkJCW9mZnNldCwgbmV3TGF0TG5ncyA9IFtdOwoKCQkvLyBPZmZzZXQgdGhlIGxhdGxuZ3MgdG8gdGhlIG5ldyBjZW50ZXIKCQlmb3IgKHZhciBpID0gMCwgbCA9IGxhdGxuZ3MubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CgkJCW9mZnNldCA9IFtsYXRsbmdzW2ldLmxhdCAtIGNlbnRlci5sYXQsIGxhdGxuZ3NbaV0ubG5nIC0gY2VudGVyLmxuZ107CgkJCW5ld0xhdExuZ3MucHVzaChbbmV3Q2VudGVyLmxhdCArIG9mZnNldFswXSwgbmV3Q2VudGVyLmxuZyArIG9mZnNldFsxXV0pOwoJCX0KCgkJdGhpcy5fc2hhcGUuc2V0TGF0TG5ncyhuZXdMYXRMbmdzKTsKCgkJLy8gUmVwb3NpdGlvbiB0aGUgcmVzaXplIG1hcmtlcnMKCQl0aGlzLl9yZXBvc2l0aW9uQ29ybmVyTWFya2VycygpOwoKCQl0aGlzLl9tYXAuZmlyZShMLkRyYXcuRXZlbnQuRURJVE1PVkUsIHtsYXllcjogdGhpcy5fc2hhcGV9KTsKCX0sCgoJX3Jlc2l6ZTogZnVuY3Rpb24gKGxhdGxuZykgewoJCXZhciBib3VuZHM7CgoJCS8vIFVwZGF0ZSB0aGUgc2hhcGUgYmFzZWQgb24gdGhlIGN1cnJlbnQgcG9zaXRpb24gb2YgdGhpcyBjb3JuZXIgYW5kIHRoZSBvcHBvc2l0ZSBwb2ludAoJCXRoaXMuX3NoYXBlLnNldEJvdW5kcyhMLmxhdExuZ0JvdW5kcyhsYXRsbmcsIHRoaXMuX29wcG9zaXRlQ29ybmVyKSk7CgoJCS8vIFJlcG9zaXRpb24gdGhlIG1vdmUgbWFya2VyCgkJYm91bmRzID0gdGhpcy5fc2hhcGUuZ2V0Qm91bmRzKCk7CgkJdGhpcy5fbW92ZU1hcmtlci5zZXRMYXRMbmcoYm91bmRzLmdldENlbnRlcigpKTsKCgkJdGhpcy5fbWFwLmZpcmUoTC5EcmF3LkV2ZW50LkVESVRSRVNJWkUsIHtsYXllcjogdGhpcy5fc2hhcGV9KTsKCX0sCgoJX2dldENvcm5lcnM6IGZ1bmN0aW9uICgpIHsKCQl2YXIgYm91bmRzID0gdGhpcy5fc2hhcGUuZ2V0Qm91bmRzKCksCgkJCW53ID0gYm91bmRzLmdldE5vcnRoV2VzdCgpLAoJCQluZSA9IGJvdW5kcy5nZXROb3J0aEVhc3QoKSwKCQkJc2UgPSBib3VuZHMuZ2V0U291dGhFYXN0KCksCgkJCXN3ID0gYm91bmRzLmdldFNvdXRoV2VzdCgpOwoKCQlyZXR1cm4gW253LCBuZSwgc2UsIHN3XTsKCX0sCgoJX3RvZ2dsZUNvcm5lck1hcmtlcnM6IGZ1bmN0aW9uIChvcGFjaXR5KSB7CgkJZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9yZXNpemVNYXJrZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykgewoJCQl0aGlzLl9yZXNpemVNYXJrZXJzW2ldLnNldE9wYWNpdHkob3BhY2l0eSk7CgkJfQoJfSwKCglfcmVwb3NpdGlvbkNvcm5lck1hcmtlcnM6IGZ1bmN0aW9uICgpIHsKCQl2YXIgY29ybmVycyA9IHRoaXMuX2dldENvcm5lcnMoKTsKCgkJZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLl9yZXNpemVNYXJrZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykgewoJCQl0aGlzLl9yZXNpemVNYXJrZXJzW2ldLnNldExhdExuZyhjb3JuZXJzW2ldKTsKCQl9Cgl9Cn0pOwoKTC5SZWN0YW5nbGUuYWRkSW5pdEhvb2soZnVuY3Rpb24gKCkgewoJaWYgKEwuRWRpdC5SZWN0YW5nbGUpIHsKCQl0aGlzLmVkaXRpbmcgPSBuZXcgTC5FZGl0LlJlY3RhbmdsZSh0aGlzKTsKCgkJaWYgKHRoaXMub3B0aW9ucy5lZGl0YWJsZSkgewoJCQl0aGlzLmVkaXRpbmcuZW5hYmxlKCk7CgkJfQoJfQp9KTsK"></script>
<script src="data:text/javascript;base64,TC5FZGl0ID0gTC5FZGl0IHx8IHt9OwoKLyoqCiAqIEBjbGFzcyBMLkVkaXQuTWFya2VyCiAqIEBha2EgRWRpdC5NYXJrZXIKICovCkwuRWRpdC5NYXJrZXIgPSBMLkhhbmRsZXIuZXh0ZW5kKHsKCS8vIEBtZXRob2QgaW5pdGlhbGl6ZSgpOiB2b2lkCglpbml0aWFsaXplOiBmdW5jdGlvbiAobWFya2VyLCBvcHRpb25zKSB7CgkJdGhpcy5fbWFya2VyID0gbWFya2VyOwoJCUwuc2V0T3B0aW9ucyh0aGlzLCBvcHRpb25zKTsKCX0sCgoJLy8gQG1ldGhvZCBhZGRIb29rcygpOiB2b2lkCgkvLyBBZGQgbGlzdGVuZXIgaG9va3MgdG8gdGhpcyBoYW5kbGVyCglhZGRIb29rczogZnVuY3Rpb24gKCkgewoJCXZhciBtYXJrZXIgPSB0aGlzLl9tYXJrZXI7CgoJCW1hcmtlci5kcmFnZ2luZy5lbmFibGUoKTsKCQltYXJrZXIub24oJ2RyYWdlbmQnLCB0aGlzLl9vbkRyYWdFbmQsIG1hcmtlcik7CgkJdGhpcy5fdG9nZ2xlTWFya2VySGlnaGxpZ2h0KCk7Cgl9LAoKCS8vIEBtZXRob2QgcmVtb3ZlSG9va3MoKTogdm9pZAoJLy8gUmVtb3ZlIGxpc3RlbmVyIGhvb2tzIGZyb20gdGhpcyBoYW5kbGVyCglyZW1vdmVIb29rczogZnVuY3Rpb24gKCkgewoJCXZhciBtYXJrZXIgPSB0aGlzLl9tYXJrZXI7CgoJCW1hcmtlci5kcmFnZ2luZy5kaXNhYmxlKCk7CgkJbWFya2VyLm9mZignZHJhZ2VuZCcsIHRoaXMuX29uRHJhZ0VuZCwgbWFya2VyKTsKCQl0aGlzLl90b2dnbGVNYXJrZXJIaWdobGlnaHQoKTsKCX0sCgoJX29uRHJhZ0VuZDogZnVuY3Rpb24gKGUpIHsKCQl2YXIgbGF5ZXIgPSBlLnRhcmdldDsKCQlsYXllci5lZGl0ZWQgPSB0cnVlOwoJCXRoaXMuX21hcC5maXJlKEwuRHJhdy5FdmVudC5FRElUTU9WRSwge2xheWVyOiBsYXllcn0pOwoJfSwKCglfdG9nZ2xlTWFya2VySGlnaGxpZ2h0OiBmdW5jdGlvbiAoKSB7CgkJdmFyIGljb24gPSB0aGlzLl9tYXJrZXIuX2ljb247CgoJCS8vIERvbid0IGRvIGFueXRoaW5nIGlmIHRoaXMgbGF5ZXIgaXMgYSBtYXJrZXIgYnV0IGRvZXNuJ3QgaGF2ZSBhbiBpY29uLiBNYXJrZXJzCgkJLy8gc2hvdWxkIHVzdWFsbHkgaGF2ZSBpY29ucy4gSWYgdXNpbmcgTGVhZmxldC5kcmF3IHdpdGggTGVhZmxldC5tYXJrZXJjbHVzdGVyIHRoZXJlCgkJLy8gaXMgYSBjaGFuY2UgdGhhdCBhIG1hcmtlciBkb2Vzbid0LgoJCWlmICghaWNvbikgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBUaGlzIGlzIHF1aXRlIG5hdWdodHksIGJ1dCBJIGRvbid0IHNlZSBhbm90aGVyIHdheSBvZiBkb2luZyBpdC4gKHNob3J0IG9mIHNldHRpbmcgYSBuZXcgaWNvbikKCQlpY29uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CgoJCWlmIChMLkRvbVV0aWwuaGFzQ2xhc3MoaWNvbiwgJ2xlYWZsZXQtZWRpdC1tYXJrZXItc2VsZWN0ZWQnKSkgewoJCQlMLkRvbVV0aWwucmVtb3ZlQ2xhc3MoaWNvbiwgJ2xlYWZsZXQtZWRpdC1tYXJrZXItc2VsZWN0ZWQnKTsKCQkJLy8gT2Zmc2V0IGFzIHRoZSBib3JkZXIgd2lsbCBtYWtlIHRoZSBpY29uIG1vdmUuCgkJCXRoaXMuX29mZnNldE1hcmtlcihpY29uLCAtNCk7CgoJCX0gZWxzZSB7CgkJCUwuRG9tVXRpbC5hZGRDbGFzcyhpY29uLCAnbGVhZmxldC1lZGl0LW1hcmtlci1zZWxlY3RlZCcpOwoJCQkvLyBPZmZzZXQgYXMgdGhlIGJvcmRlciB3aWxsIG1ha2UgdGhlIGljb24gbW92ZS4KCQkJdGhpcy5fb2Zmc2V0TWFya2VyKGljb24sIDQpOwoJCX0KCgkJaWNvbi5zdHlsZS5kaXNwbGF5ID0gJyc7Cgl9LAoKCV9vZmZzZXRNYXJrZXI6IGZ1bmN0aW9uIChpY29uLCBvZmZzZXQpIHsKCQl2YXIgaWNvbk1hcmdpblRvcCA9IHBhcnNlSW50KGljb24uc3R5bGUubWFyZ2luVG9wLCAxMCkgLSBvZmZzZXQsCgkJCWljb25NYXJnaW5MZWZ0ID0gcGFyc2VJbnQoaWNvbi5zdHlsZS5tYXJnaW5MZWZ0LCAxMCkgLSBvZmZzZXQ7CgoJCWljb24uc3R5bGUubWFyZ2luVG9wID0gaWNvbk1hcmdpblRvcCArICdweCc7CgkJaWNvbi5zdHlsZS5tYXJnaW5MZWZ0ID0gaWNvbk1hcmdpbkxlZnQgKyAncHgnOwoJfQp9KTsKCkwuTWFya2VyLmFkZEluaXRIb29rKGZ1bmN0aW9uICgpIHsKCWlmIChMLkVkaXQuTWFya2VyKSB7CgkJdGhpcy5lZGl0aW5nID0gbmV3IEwuRWRpdC5NYXJrZXIodGhpcyk7CgoJCWlmICh0aGlzLm9wdGlvbnMuZWRpdGFibGUpIHsKCQkJdGhpcy5lZGl0aW5nLmVuYWJsZSgpOwoJCX0KCX0KfSk7Cg=="></script>
<script src="data:text/javascript;base64,TC5FZGl0ID0gTC5FZGl0IHx8IHt9OwovKioKICogQGNsYXNzIEwuRWRpdC5DaXJjbGVNYXJrZXIKICogQGFrYSBFZGl0LkNpcmNsZQogKiBAaW5oZXJpdHMgTC5FZGl0LlNpbXBsZVNoYXBlCiAqLwpMLkVkaXQuQ2lyY2xlTWFya2VyID0gTC5FZGl0LlNpbXBsZVNoYXBlLmV4dGVuZCh7CglfY3JlYXRlTW92ZU1hcmtlcjogZnVuY3Rpb24gKCkgewoJCXZhciBjZW50ZXIgPSB0aGlzLl9zaGFwZS5nZXRMYXRMbmcoKTsKCgkJdGhpcy5fbW92ZU1hcmtlciA9IHRoaXMuX2NyZWF0ZU1hcmtlcihjZW50ZXIsIHRoaXMub3B0aW9ucy5tb3ZlSWNvbik7Cgl9LAoKCV9jcmVhdGVSZXNpemVNYXJrZXI6IGZ1bmN0aW9uICgpIHsKCQkvLyBUbyBhdm9pZCBhbiB1bmRlZmluZWQgY2hlY2sgaW4gTC5FZGl0LlNpbXBsZVNoYXBlLnJlbW92ZUhvb2tzCgkJdGhpcy5fcmVzaXplTWFya2VycyA9IFtdOwoJfSwKCglfbW92ZTogZnVuY3Rpb24gKGxhdGxuZykgewoJCWlmICh0aGlzLl9yZXNpemVNYXJrZXJzLmxlbmd0aCkgewoJCQl2YXIgcmVzaXplbWFya2VyUG9pbnQgPSB0aGlzLl9nZXRSZXNpemVNYXJrZXJQb2ludChsYXRsbmcpOwoJCQkvLyBNb3ZlIHRoZSByZXNpemUgbWFya2VyCgkJCXRoaXMuX3Jlc2l6ZU1hcmtlcnNbMF0uc2V0TGF0TG5nKHJlc2l6ZW1hcmtlclBvaW50KTsKCQl9CgoJCS8vIE1vdmUgdGhlIGNpcmNsZQoJCXRoaXMuX3NoYXBlLnNldExhdExuZyhsYXRsbmcpOwoKCQl0aGlzLl9tYXAuZmlyZShMLkRyYXcuRXZlbnQuRURJVE1PVkUsIHtsYXllcjogdGhpcy5fc2hhcGV9KTsKCX0sCn0pOwoKTC5DaXJjbGVNYXJrZXIuYWRkSW5pdEhvb2soZnVuY3Rpb24gKCkgewoJaWYgKEwuRWRpdC5DaXJjbGVNYXJrZXIpIHsKCQl0aGlzLmVkaXRpbmcgPSBuZXcgTC5FZGl0LkNpcmNsZU1hcmtlcih0aGlzKTsKCgkJaWYgKHRoaXMub3B0aW9ucy5lZGl0YWJsZSkgewoJCQl0aGlzLmVkaXRpbmcuZW5hYmxlKCk7CgkJfQoJfQoKCXRoaXMub24oJ2FkZCcsIGZ1bmN0aW9uICgpIHsKCQlpZiAodGhpcy5lZGl0aW5nICYmIHRoaXMuZWRpdGluZy5lbmFibGVkKCkpIHsKCQkJdGhpcy5lZGl0aW5nLmFkZEhvb2tzKCk7CgkJfQoJfSk7CgoJdGhpcy5vbigncmVtb3ZlJywgZnVuY3Rpb24gKCkgewoJCWlmICh0aGlzLmVkaXRpbmcgJiYgdGhpcy5lZGl0aW5nLmVuYWJsZWQoKSkgewoJCQl0aGlzLmVkaXRpbmcucmVtb3ZlSG9va3MoKTsKCQl9Cgl9KTsKfSk7Cg=="></script>
<script src="data:text/javascript;base64,TC5FZGl0ID0gTC5FZGl0IHx8IHt9OwovKioKICogQGNsYXNzIEwuRWRpdC5DaXJjbGUKICogQGFrYSBFZGl0LkNpcmNsZQogKiBAaW5oZXJpdHMgTC5FZGl0LkNpcmNsZU1hcmtlcgogKi8KTC5FZGl0LkNpcmNsZSA9IEwuRWRpdC5DaXJjbGVNYXJrZXIuZXh0ZW5kKHsKCglfY3JlYXRlUmVzaXplTWFya2VyOiBmdW5jdGlvbiAoKSB7CgkJdmFyIGNlbnRlciA9IHRoaXMuX3NoYXBlLmdldExhdExuZygpLAoJCQlyZXNpemVtYXJrZXJQb2ludCA9IHRoaXMuX2dldFJlc2l6ZU1hcmtlclBvaW50KGNlbnRlcik7CgoJCXRoaXMuX3Jlc2l6ZU1hcmtlcnMgPSBbXTsKCQl0aGlzLl9yZXNpemVNYXJrZXJzLnB1c2godGhpcy5fY3JlYXRlTWFya2VyKHJlc2l6ZW1hcmtlclBvaW50LCB0aGlzLm9wdGlvbnMucmVzaXplSWNvbikpOwoJfSwKCglfZ2V0UmVzaXplTWFya2VyUG9pbnQ6IGZ1bmN0aW9uIChsYXRsbmcpIHsKCQkvLyBGcm9tIEwuc2hhcGUuZ2V0Qm91bmRzKCkKCQl2YXIgZGVsdGEgPSB0aGlzLl9zaGFwZS5fcmFkaXVzICogTWF0aC5jb3MoTWF0aC5QSSAvIDQpLAoJCQlwb2ludCA9IHRoaXMuX21hcC5wcm9qZWN0KGxhdGxuZyk7CgkJcmV0dXJuIHRoaXMuX21hcC51bnByb2plY3QoW3BvaW50LnggKyBkZWx0YSwgcG9pbnQueSAtIGRlbHRhXSk7Cgl9LAoKCV9yZXNpemU6IGZ1bmN0aW9uIChsYXRsbmcpIHsKCQl2YXIgbW92ZUxhdExuZyA9IHRoaXMuX21vdmVNYXJrZXIuZ2V0TGF0TG5nKCk7CgoJCS8vIENhbGN1bGF0ZSB0aGUgcmFkaXVzIGJhc2VkIG9uIHRoZSB2ZXJzaW9uCgkJaWYgKEwuR2VvbWV0cnlVdGlsLmlzVmVyc2lvbjA3eCgpKSB7CgkJCXJhZGl1cyA9IG1vdmVMYXRMbmcuZGlzdGFuY2VUbyhsYXRsbmcpOwoJCX0gZWxzZSB7CgkJCXJhZGl1cyA9IHRoaXMuX21hcC5kaXN0YW5jZShtb3ZlTGF0TG5nLCBsYXRsbmcpOwoJCX0KCQl0aGlzLl9zaGFwZS5zZXRSYWRpdXMocmFkaXVzKTsKCgkJdGhpcy5fbWFwLl9lZGl0VG9vbHRpcC51cGRhdGVDb250ZW50KHsKCQkJdGV4dDogTC5kcmF3TG9jYWwuZWRpdC5oYW5kbGVycy5lZGl0LnRvb2x0aXAuc3VidGV4dCArICc8YnIgLz4nICsgTC5kcmF3TG9jYWwuZWRpdC5oYW5kbGVycy5lZGl0LnRvb2x0aXAudGV4dCwKCQkJc3VidGV4dDogTC5kcmF3TG9jYWwuZHJhdy5oYW5kbGVycy5jaXJjbGUucmFkaXVzICsgJzogJyArCgkJCUwuR2VvbWV0cnlVdGlsLnJlYWRhYmxlRGlzdGFuY2UocmFkaXVzLCB0cnVlLCB0aGlzLm9wdGlvbnMuZmVldCwgdGhpcy5vcHRpb25zLm5hdXRpYykKCQl9KTsKCgkJdGhpcy5fc2hhcGUuc2V0UmFkaXVzKHJhZGl1cyk7CgoJCXRoaXMuX21hcC5maXJlKEwuRHJhdy5FdmVudC5FRElUUkVTSVpFLCB7bGF5ZXI6IHRoaXMuX3NoYXBlfSk7Cgl9Cn0pOwoKTC5DaXJjbGUuYWRkSW5pdEhvb2soZnVuY3Rpb24gKCkgewoJaWYgKEwuRWRpdC5DaXJjbGUpIHsKCQl0aGlzLmVkaXRpbmcgPSBuZXcgTC5FZGl0LkNpcmNsZSh0aGlzKTsKCgkJaWYgKHRoaXMub3B0aW9ucy5lZGl0YWJsZSkgewoJCQl0aGlzLmVkaXRpbmcuZW5hYmxlKCk7CgkJfQoJfQoKCXRoaXMub24oJ2FkZCcsIGZ1bmN0aW9uICgpIHsKCQlpZiAodGhpcy5lZGl0aW5nICYmIHRoaXMuZWRpdGluZy5lbmFibGVkKCkpIHsKCQkJdGhpcy5lZGl0aW5nLmFkZEhvb2tzKCk7CgkJfQoJfSk7CgoJdGhpcy5vbigncmVtb3ZlJywgZnVuY3Rpb24gKCkgewoJCWlmICh0aGlzLmVkaXRpbmcgJiYgdGhpcy5lZGl0aW5nLmVuYWJsZWQoKSkgewoJCQl0aGlzLmVkaXRpbmcucmVtb3ZlSG9va3MoKTsKCQl9Cgl9KTsKfSk7Cg=="></script>
</%def>
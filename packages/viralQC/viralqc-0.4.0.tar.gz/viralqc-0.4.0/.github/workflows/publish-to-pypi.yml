name: Publish Python viralQC distribution to PyPI and TestPyPI

on:
  push

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/viralQC
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-dev-to-testpypi:
    name: Publish dev Python distribution to TestPyPI
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/viralQC

    permissions:
      id-token: write

    steps:
    - name: Checkout repository (needed to read & edit pyproject.toml)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set version based on branch/tag
      run: |
        python -m pip install toml-cli
        VERSION=$(toml get --toml-path pyproject.toml project.version | tr -d '"')
        
        # Check if this is a tag (starts with refs/tags/), no change in version
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          echo "Tag detected: $GITHUB_REF_NAME"
          echo "Using version from pyproject.toml: $VERSION"
        elif [ "$GITHUB_REF_NAME" != "main" ]; then
          # Not main branch and not a tag - use dev version
          NEW_VERSION="${VERSION}.dev$(date +%Y%m%d%H%M%S)"
          echo "Setting dev version: $NEW_VERSION"
          toml set --toml-path pyproject.toml project.version "$NEW_VERSION"
        else
          # On main branch but not a tag - use dev version to avoid conflicts
          NEW_VERSION="${VERSION}.dev$(date +%Y%m%d%H%M%S)"
          echo "On main branch (no tag), setting dev version: $NEW_VERSION"
          toml set --toml-path pyproject.toml project.version "$NEW_VERSION"
        fi
    - name: Rebuild distributions with new version
      run: |
        rm -rf dist/*
        python -m pip install build
        python -m build

    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true
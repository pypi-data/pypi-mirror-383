[project]
name = "onedl-mmpretrain"
version = "1.3.0"
description = "OneDL Model Pretraining Toolbox and Benchmark"
readme = "README.md"
authors = [
    { name = "VBTI Contributors", email = "oss-team@vbti.nl" },
    { name = "OneDL Pretrain Contributors" }
]
license = "Apache-2.0"
requires-python = ">=3.10"
keywords = ["computer vision", "image classification", "unsupervised learning", "self-supervised learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "einops",
    "importlib-metadata",
    "mat4py",
    "matplotlib",
    "modelindex",
    "numpy",
    "rich",
]

[dependency-groups]
tests = [
    "coverage",
    "interrogate",
    "pytest",
    ##
    "opencv-python",
]
docs = [
    "docutils==0.18.1",
    "modelindex",
    "myst-parser",
    "pytorch_sphinx_theme @ git+https://github.com/VBTI-development/onedl_sphinx_theme.git@master",
    "sphinx==6.1.3",
    "sphinx-copybutton",
    "sphinx-notfound-page",
    "sphinx-tabs",
    "sphinxcontrib-jquery",
    "tabulate",
]
readthedocs = [
    "onedl-mmcv",
    "onedl-mmengine",
    "pycocotools",
    "torch",
    "torchvision",
    "transformers>=4.53.0",
]

[project.optional-dependencies]
multimodal = [
    "pycocotools",
    "transformers>=4.53.0",
]
mminstall = [
    "onedl-mmcv>=2.0.0",
    "onedl-mmengine>=0.10.8rc1",
]
optional = [
    "albumentations~=1.4",
    "grad-cam>=1.3.7,<1.5.0",
    "requests",
    "scikit-learn>=1.5"
]
torch = [ "torch", "torchvision" ]

[project.urls]
Homepage = "https://onedl.ai"
Repository = "https://github.com/VBTI-development/onedl-mmpretrain"
Documentation = "https://onedl-mmpretrain.readthedocs.io/en/latest/"

[tool.setuptools.packages.find]
include = ["mmpretrain", "mmpretrain.*"]
exclude = ['configs', 'tools', 'demo', 'tests']
namespaces = false

[tool.setuptools.package-data]
"mmpretrain" = [".mim/**/*"]

[tool.setuptools.package-dir]
"" = "."

[tool.uv]
# uv-specific configuration can be added here if needed

[build-system]
requires = ["setuptools", "wheel", "click"]
build-backend = "setuptools.build_meta"

[tool.isort]
line_length = 79
multi_line_output = 0
extra_standard_library = ["setuptools"]
known_first_party = ["mmpretrain"]
known_third_party = ["pytest", "yaml"]
no_lines_before = ["STDLIB", "LOCALFOLDER"]
default_section = "THIRDPARTY"  # codespell:ignore

[tool.yapf]
based_on_style = "pep8"
blank_line_before_nested_class_or_def = true
split_before_expression_after_opening_paren = true

[tool.codespell]
skip = "*.ipynb, configs/*/README.md"
quiet-level = 3
ignore-words-list = "patten,confectionery,nd,ty,warmup"  # codespell:ignore

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

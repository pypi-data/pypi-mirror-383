# Generated by Django 5.2.6 on 2025-10-08 16:10

import django.core.validators
import django.db.models.deletion
import netbox.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dcim', '0215_rackreservation_status'),
        ('extras', '0133_make_cf_minmax_decimal'),
        ('ipam', '0082_add_prefix_network_containment_indexes'),
        ('netbox_routing_complex', '0009_bgpglobalconfig'),
    ]

    operations = [
        migrations.CreateModel(
            name='StaticRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('description', models.CharField(blank=True, max_length=30)),
                ('administrative_distance', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(255)])),
                ('bfd_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='netbox_routing_complex.bfdconfig')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='static_routes', to='dcim.device')),
                ('next_hop_int', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='dcim.interface')),
                ('next_hop_ip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ipam.ipaddress')),
                ('subnet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='static_routes', to='ipam.prefix')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('vrf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='static_routes', to='ipam.vrf')),
            ],
            options={
                'ordering': ('device', 'vrf', 'subnet', 'next_hop_ip'),
                'unique_together': {('device', 'vrf', 'subnet', 'next_hop_ip')},
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
    ]

# Generated by Django 5.2.6 on 2025-10-02 14:29

import django.db.models.deletion
import netbox.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dcim', '0215_rackreservation_status'),
        ('extras', '0133_make_cf_minmax_decimal'),
        ('ipam', '0082_add_prefix_network_containment_indexes'),
        ('netbox_routing_complex', '0008_alter_isisconfig_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BGPGlobalConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('asn', models.CharField(max_length=100)),
                ('use_cluster_id', models.BooleanField(default=False)),
                ('graceful_restart', models.BooleanField(default=False)),
                ('up_down_logging', models.BooleanField(default=True)),
                ('cluster_id_override', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='ipam.ipaddress')),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bgp_global_config', to='dcim.device')),
                ('router_id_override', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='ipam.ipaddress')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('device',),
                'unique_together': {('device',)},
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
    ]

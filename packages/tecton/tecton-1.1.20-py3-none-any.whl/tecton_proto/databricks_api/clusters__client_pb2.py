# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tecton_proto/databricks_api/clusters__client.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tecton_proto.spark_common import clusters__client_pb2 as tecton__proto_dot_spark__common_dot_clusters____client__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n2tecton_proto/databricks_api/clusters__client.proto\x12\x1btecton_proto.databricks_api\x1a\x30tecton_proto/spark_common/clusters__client.proto\"3\n\x12\x43lustersGetRequest\x12\x1d\n\ncluster_id\x18\x01 \x01(\tR\tclusterId\"\xc7\n\n\x14\x43lusterCreateRequest\x12_\n\nspark_conf\x18\x01 \x03(\x0b\x32@.tecton_proto.databricks_api.ClusterCreateRequest.SparkConfEntryR\tsparkConf\x12-\n\x13\x64river_node_type_id\x18\x02 \x01(\tR\x10\x64riverNodeTypeId\x12 \n\x0cnode_type_id\x18\x03 \x01(\tR\nnodeTypeId\x12\x1f\n\x0bnum_workers\x18\x04 \x01(\x05R\nnumWorkers\x12!\n\x0c\x63luster_name\x18\x05 \x01(\tR\x0b\x63lusterName\x12#\n\rspark_version\x18\x06 \x01(\tR\x0csparkVersion\x12O\n\x0e\x61ws_attributes\x18\x07 \x01(\x0b\x32(.tecton_proto.spark_common.AwsAttributesR\rawsAttributes\x12+\n\x11idempotency_token\x18\x08 \x01(\tR\x10idempotencyToken\x12i\n\x0espark_env_vars\x18\t \x03(\x0b\x32\x43.tecton_proto.databricks_api.ClusterCreateRequest.SparkEnvVarsEntryR\x0csparkEnvVars\x12\x62\n\x0b\x63ustom_tags\x18\n \x03(\x0b\x32\x41.tecton_proto.databricks_api.ClusterCreateRequest.CustomTagsEntryR\ncustomTags\x12\x37\n\x17\x61utotermination_minutes\x18\x0b \x01(\x05R\x16\x61utoterminationMinutes\x12.\n\x13\x65nable_elastic_disk\x18\x0c \x01(\x08R\x11\x65nableElasticDisk\x12K\n\tautoscale\x18\r \x01(\x0b\x32-.tecton_proto.databricks_api.ClusterAutoScaleR\tautoscale\x12N\n\x0cinit_scripts\x18\x0e \x03(\x0b\x32+.tecton_proto.spark_common.ResourceLocationR\x0binitScripts\x12\x1b\n\tpolicy_id\x18\x0f \x01(\tR\x08policyId\x12O\n\x0egcp_attributes\x18\x10 \x01(\x0b\x32(.tecton_proto.spark_common.GCPAttributesR\rgcpAttributes\x12,\n\x12\x64\x61ta_security_mode\x18\x11 \x01(\tR\x10\x64\x61taSecurityMode\x12(\n\x10single_user_name\x18\x12 \x01(\tR\x0esingleUserName\x12=\n\x1b\x61pply_policy_default_values\x18\x13 \x01(\x08R\x18\x61pplyPolicyDefaultValues\x1a<\n\x0eSparkConfEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a?\n\x11SparkEnvVarsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a=\n\x0f\x43ustomTagsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"T\n\x10\x43lusterAutoScale\x12\x1f\n\x0bmin_workers\x18\x01 \x01(\x05R\nminWorkers\x12\x1f\n\x0bmax_workers\x18\x02 \x01(\x05R\nmaxWorkers\"6\n\x15\x43lusterCreateResponse\x12\x1d\n\ncluster_id\x18\x01 \x01(\tR\tclusterId\"8\n\x17\x43lusterTerminateRequest\x12\x1d\n\ncluster_id\x18\x01 \x01(\tR\tclusterId\"\xf9\x01\n\x13\x43lustersGetResponse\x12\x1d\n\ncluster_id\x18\x01 \x01(\tR\tclusterId\x12#\n\rstate_message\x18\x02 \x01(\tR\x0cstateMessage\x12]\n\x12termination_reason\x18\x03 \x01(\x0b\x32..tecton_proto.databricks_api.TerminationReasonR\x11terminationReason\x12?\n\x05state\x18\x04 \x01(\x0e\x32).tecton_proto.databricks_api.ClusterStateR\x05state\"\x97\x01\n\x11TerminationReason\x12@\n\x04\x63ode\x18\x01 \x01(\x0e\x32,.tecton_proto.databricks_api.TerminationCodeR\x04\x63ode\x12@\n\x04type\x18\x02 \x01(\x0e\x32,.tecton_proto.databricks_api.TerminationTypeR\x04type\"W\n\x13\x43lusterListResponse\x12@\n\x08\x63lusters\x18\x01 \x03(\x0b\x32$.tecton_proto.databricks_api.ClusterR\x08\x63lusters\"\xc7\x02\n\x07\x43luster\x12\x1d\n\ncluster_id\x18\x01 \x01(\tR\tclusterId\x12!\n\x0c\x63luster_name\x18\x02 \x01(\tR\x0b\x63lusterName\x12#\n\rspark_version\x18\x03 \x01(\tR\x0csparkVersion\x12?\n\x05state\x18\x04 \x01(\x0e\x32).tecton_proto.databricks_api.ClusterStateR\x05state\x12U\n\x0b\x63ustom_tags\x18\x05 \x03(\x0b\x32\x34.tecton_proto.databricks_api.Cluster.CustomTagsEntryR\ncustomTags\x1a=\n\x0f\x43ustomTagsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01*\x7f\n\x0c\x43lusterState\x12\x0b\n\x07PENDING\x10\x00\x12\x0b\n\x07RUNNING\x10\x01\x12\x0e\n\nRESTARTING\x10\x02\x12\x0c\n\x08RESIZING\x10\x03\x12\x0f\n\x0bTERMINATING\x10\x04\x12\x0e\n\nTERMINATED\x10\x05\x12\t\n\x05\x45RROR\x10\x06\x12\x0b\n\x07UNKNOWN\x10\x07*\xf0\x04\n\x0fTerminationCode\x12\x1d\n\x19UNKNOWN_TERMINATION_STATE\x10\x00\x12\x10\n\x0cUSER_REQUEST\x10\x01\x12\x10\n\x0cJOB_FINISHED\x10\x02\x12\x0e\n\nINACTIVITY\x10\x03\x12\x1b\n\x17\x43LOUD_PROVIDER_SHUTDOWN\x10\x04\x12\x16\n\x12\x43OMMUNICATION_LOST\x10\x05\x12!\n\x1d\x43LOUD_PROVIDER_LAUNCH_FAILURE\x10\x06\x12\x19\n\x15SPARK_STARTUP_FAILURE\x10\x07\x12\x14\n\x10INVALID_ARGUMENT\x10\x08\x12\x1d\n\x19UNEXPECTED_LAUNCH_FAILURE\x10\t\x12\x12\n\x0eINTERNAL_ERROR\x10\n\x12\x0f\n\x0bSPARK_ERROR\x10\x0b\x12!\n\x1dMETASTORE_COMPONENT_UNHEALTHY\x10\x0c\x12\x1c\n\x18\x44\x42\x46S_COMPONENT_UNHEALTHY\x10\r\x12\x16\n\x12\x44RIVER_UNREACHABLE\x10\x0e\x12\x17\n\x13\x44RIVER_UNRESPONSIVE\x10\x0f\x12\x18\n\x14INSTANCE_UNREACHABLE\x10\x10\x12\x1c\n\x18\x43ONTAINER_LAUNCH_FAILURE\x10\x11\x12!\n\x1dINSTANCE_POOL_CLUSTER_FAILURE\x10\x12\x12\x14\n\x10REQUEST_REJECTED\x10\x13\x12\x17\n\x13INIT_SCRIPT_FAILURE\x10\x14\x12\x11\n\rTRIAL_EXPIRED\x10\x15\x12.\n*AWS_INSUFFICIENT_INSTANCE_CAPACITY_FAILURE\x10\x16*t\n\x0fTerminationType\x12\x1c\n\x18UNKNOWN_TERMINATION_TYPE\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\x10\n\x0c\x43LIENT_ERROR\x10\x02\x12\x11\n\rSERVICE_FAULT\x10\x03\x12\x11\n\rCLOUD_FAILURE\x10\x04\x42\x1d\n\x19\x63om.tecton.databricks_apiP\x01')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tecton_proto.databricks_api.clusters__client_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031com.tecton.databricks_apiP\001'
  _CLUSTERCREATEREQUEST_SPARKCONFENTRY._options = None
  _CLUSTERCREATEREQUEST_SPARKCONFENTRY._serialized_options = b'8\001'
  _CLUSTERCREATEREQUEST_SPARKENVVARSENTRY._options = None
  _CLUSTERCREATEREQUEST_SPARKENVVARSENTRY._serialized_options = b'8\001'
  _CLUSTERCREATEREQUEST_CUSTOMTAGSENTRY._options = None
  _CLUSTERCREATEREQUEST_CUSTOMTAGSENTRY._serialized_options = b'8\001'
  _CLUSTER_CUSTOMTAGSENTRY._options = None
  _CLUSTER_CUSTOMTAGSENTRY._serialized_options = b'8\001'
  _CLUSTERSTATE._serialized_start=2565
  _CLUSTERSTATE._serialized_end=2692
  _TERMINATIONCODE._serialized_start=2695
  _TERMINATIONCODE._serialized_end=3319
  _TERMINATIONTYPE._serialized_start=3321
  _TERMINATIONTYPE._serialized_end=3437
  _CLUSTERSGETREQUEST._serialized_start=133
  _CLUSTERSGETREQUEST._serialized_end=184
  _CLUSTERCREATEREQUEST._serialized_start=187
  _CLUSTERCREATEREQUEST._serialized_end=1538
  _CLUSTERCREATEREQUEST_SPARKCONFENTRY._serialized_start=1350
  _CLUSTERCREATEREQUEST_SPARKCONFENTRY._serialized_end=1410
  _CLUSTERCREATEREQUEST_SPARKENVVARSENTRY._serialized_start=1412
  _CLUSTERCREATEREQUEST_SPARKENVVARSENTRY._serialized_end=1475
  _CLUSTERCREATEREQUEST_CUSTOMTAGSENTRY._serialized_start=1477
  _CLUSTERCREATEREQUEST_CUSTOMTAGSENTRY._serialized_end=1538
  _CLUSTERAUTOSCALE._serialized_start=1540
  _CLUSTERAUTOSCALE._serialized_end=1624
  _CLUSTERCREATERESPONSE._serialized_start=1626
  _CLUSTERCREATERESPONSE._serialized_end=1680
  _CLUSTERTERMINATEREQUEST._serialized_start=1682
  _CLUSTERTERMINATEREQUEST._serialized_end=1738
  _CLUSTERSGETRESPONSE._serialized_start=1741
  _CLUSTERSGETRESPONSE._serialized_end=1990
  _TERMINATIONREASON._serialized_start=1993
  _TERMINATIONREASON._serialized_end=2144
  _CLUSTERLISTRESPONSE._serialized_start=2146
  _CLUSTERLISTRESPONSE._serialized_end=2233
  _CLUSTER._serialized_start=2236
  _CLUSTER._serialized_end=2563
  _CLUSTER_CUSTOMTAGSENTRY._serialized_start=1477
  _CLUSTER_CUSTOMTAGSENTRY._serialized_end=1538
# @@protoc_insertion_point(module_scope)

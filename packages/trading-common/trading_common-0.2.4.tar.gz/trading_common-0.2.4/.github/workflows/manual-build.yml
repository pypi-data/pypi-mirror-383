name: Manual Build and Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 0.1.0)'
        required: true
        default: '0.1.0'
      action:
        description: 'Action to perform (always build and publish)'
        required: true
        default: 'publish-pypi'
        type: choice
        options:
        - publish-pypi
      create_tag:
        description: 'Create git tag after build?'
        required: false
        default: false
        type: boolean

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      run: |
        python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

    - name: Create git tag
      if: ${{ inputs.create_tag }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a v${{ inputs.version }} -m "Manual release v${{ inputs.version }}"
        git push origin v${{ inputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

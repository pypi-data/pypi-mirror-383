# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class ServerToolsResult(UniversalBaseModel):
    server_name: typing_extensions.Annotated[str, FieldMetadata(alias="serverName")] = pydantic.Field()
    """
    The name of the MCP server.
    """

    success: bool = pydantic.Field()
    """
    Whether the tools were retrieved successfully for this server.
    """

    tools: typing.Optional[typing.List[typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Tools available for the server when the request succeeds.
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    The error message if the request failed for this server.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

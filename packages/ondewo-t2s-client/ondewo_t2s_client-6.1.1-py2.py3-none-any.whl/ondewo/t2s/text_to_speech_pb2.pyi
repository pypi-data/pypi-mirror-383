"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2020 ONDEWO GmbH

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Pcm:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PcmEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Pcm.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PCM_16: _Pcm.ValueType  # 0
    """16-bit pulse-code modulation."""
    PCM_24: _Pcm.ValueType  # 1
    """24-bit pulse-code modulation."""
    PCM_32: _Pcm.ValueType  # 2
    """32-bit pulse-code modulation."""
    PCM_S8: _Pcm.ValueType  # 3
    """Signed 8-bit pulse-code modulation."""
    PCM_U8: _Pcm.ValueType  # 4
    """Unsigned 8-bit pulse-code modulation."""
    FLOAT: _Pcm.ValueType  # 5
    """Floating-point (32-bit) pulse-code modulation."""
    DOUBLE: _Pcm.ValueType  # 6
    """Floating-point (64-bit) pulse-code modulation."""

class Pcm(_Pcm, metaclass=_PcmEnumTypeWrapper):
    """Represents a pulse-code modulation technique."""

PCM_16: Pcm.ValueType  # 0
"""16-bit pulse-code modulation."""
PCM_24: Pcm.ValueType  # 1
"""24-bit pulse-code modulation."""
PCM_32: Pcm.ValueType  # 2
"""32-bit pulse-code modulation."""
PCM_S8: Pcm.ValueType  # 3
"""Signed 8-bit pulse-code modulation."""
PCM_U8: Pcm.ValueType  # 4
"""Unsigned 8-bit pulse-code modulation."""
FLOAT: Pcm.ValueType  # 5
"""Floating-point (32-bit) pulse-code modulation."""
DOUBLE: Pcm.ValueType  # 6
"""Floating-point (64-bit) pulse-code modulation."""
global___Pcm = Pcm

class _AudioFormat:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AudioFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AudioFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    wav: _AudioFormat.ValueType  # 0
    """Waveform Audio File Format (WAV)"""
    flac: _AudioFormat.ValueType  # 1
    """Free Lossless Audio Codec (FLAC)"""
    caf: _AudioFormat.ValueType  # 2
    """Core Audio Format (CAF)"""
    mp3: _AudioFormat.ValueType  # 3
    """MPEG Audio Layer III (MP3)"""
    aac: _AudioFormat.ValueType  # 4
    """Advanced Audio Coding (AAC)"""
    ogg: _AudioFormat.ValueType  # 5
    """Ogg Vorbis (OGG)"""
    wma: _AudioFormat.ValueType  # 6
    """Windows Media Audio (WMA)"""

class AudioFormat(_AudioFormat, metaclass=_AudioFormatEnumTypeWrapper):
    """AudioFormat enum represents various audio file formats for storing digital audio data."""

wav: AudioFormat.ValueType  # 0
"""Waveform Audio File Format (WAV)"""
flac: AudioFormat.ValueType  # 1
"""Free Lossless Audio Codec (FLAC)"""
caf: AudioFormat.ValueType  # 2
"""Core Audio Format (CAF)"""
mp3: AudioFormat.ValueType  # 3
"""MPEG Audio Layer III (MP3)"""
aac: AudioFormat.ValueType  # 4
"""Advanced Audio Coding (AAC)"""
ogg: AudioFormat.ValueType  # 5
"""Ogg Vorbis (OGG)"""
wma: AudioFormat.ValueType  # 6
"""Windows Media Audio (WMA)"""
global___AudioFormat = AudioFormat

@typing.final
class SynthesizeRequest(google.protobuf.message.Message):
    """Represents a Synthesize Request.
    A Synthesize Request contains the information need to perform a text to speech conversion.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    text: builtins.str
    """Required. Represents the text that will be transformed to speech.

    <p> Synthesize text: </p>

    - Simple text: <pre><code>Hello, how are you?</code></pre>

    <p>Examples to modulate the voice based on SSML tags and Arpabet phonemes:</p>

    - SSML Tag Phone: <pre><code>&lt;say-as interpret-as="phone">+12354321&lt;/say-as&gt;</code></pre>

    - SSML Tag Email: <pre><code>&lt;say-as interpret-as="email">voices@ondewo.com&lt;/say-as&gt;</code></pre>

    - SSML Tag URL: <pre><code>&lt;say-as interpret-as="url">ondewo.com/en/&lt;/say-as&gt;</code></pre>

    - SSML Tag Spell: <pre><code>&lt;say-as interpret-as="spell">AP732&lt;/say-as&gt;</code></pre>

    - SSML Tag Spell With Names: <pre><code>&lt;say-as interpret-as="spell-with-names">AHO32&lt;/say-as&gt;</code></pre>

    - SSML Tag Callsigns Short: <pre><code>&lt;say-as interpret-as="callsign-short">AUA439&lt;/say-as&gt;</code></pre>

    - SSML Tag Callsigns Long: <pre><code>&lt;say-as interpret-as="callsign-long">AAL439&lt;/say-as&gt;</code></pre>

    - SSML Tag Break Tag: <pre><code>I am going to take a 2 seconds break <break time="2.0"/> done</code></pre>

    - Arpabet Phonemes: <pre><code>Hello I am {AE2 L EH0 G Z AE1 N D R AH0}</code></pre>
    """
    @property
    def config(self) -> global___RequestConfig:
        """Required. Represents the specifications needed to do the text to speech transformation."""

    def __init__(
        self,
        *,
        text: builtins.str = ...,
        config: global___RequestConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config", b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["config", b"config", "text", b"text"]) -> None: ...

global___SynthesizeRequest = SynthesizeRequest

@typing.final
class BatchSynthesizeRequest(google.protobuf.message.Message):
    """BatchSynthesizeRequest message is used to send a batch request for synthesis."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BATCH_REQUEST_FIELD_NUMBER: builtins.int
    @property
    def batch_request(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SynthesizeRequest]:
        """Repeated field holding individual synthesis requests that make up the batch request."""

    def __init__(
        self,
        *,
        batch_request: collections.abc.Iterable[global___SynthesizeRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["batch_request", b"batch_request"]) -> None: ...

global___BatchSynthesizeRequest = BatchSynthesizeRequest

@typing.final
class StreamingSynthesizeRequest(google.protobuf.message.Message):
    """StreamingSynthesizeRequest is used to perform streaming synthesize."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    text: builtins.str
    """Required. Represents the text that will be transformed to speech.
    All the properties according to the input text in SynthesizeRequest can be also applied here.
    """
    @property
    def config(self) -> global___RequestConfig:
        """Required. Represents the specifications needed to do the text to speech transformation."""

    def __init__(
        self,
        *,
        text: builtins.str = ...,
        config: global___RequestConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config", b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["config", b"config", "text", b"text"]) -> None: ...

global___StreamingSynthesizeRequest = StreamingSynthesizeRequest

@typing.final
class BatchSynthesizeResponse(google.protobuf.message.Message):
    """BatchSynthesizeResponse message is used to store the responses for a batch synthesis request."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BATCH_RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def batch_response(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SynthesizeResponse]:
        """Repeated field holding individual synthesis responses that correspond to the input requests in the batch."""

    def __init__(
        self,
        *,
        batch_response: collections.abc.Iterable[global___SynthesizeResponse] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["batch_response", b"batch_response"]) -> None: ...

global___BatchSynthesizeResponse = BatchSynthesizeResponse

@typing.final
class RequestConfig(google.protobuf.message.Message):
    """Represents a Configuration for the text to speech conversion."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    T2S_PIPELINE_ID_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    PCM_FIELD_NUMBER: builtins.int
    AUDIO_FORMAT_FIELD_NUMBER: builtins.int
    USE_CACHE_FIELD_NUMBER: builtins.int
    T2S_SERVICE_CONFIG_FIELD_NUMBER: builtins.int
    T2S_CLOUD_PROVIDER_CONFIG_FIELD_NUMBER: builtins.int
    T2S_NORMALIZATION_FIELD_NUMBER: builtins.int
    WORD_TO_PHONEME_MAPPING_FIELD_NUMBER: builtins.int
    t2s_pipeline_id: builtins.str
    """Required. Represents the pipeline id of the model configuration that will be used."""
    length_scale: builtins.float
    """Optional. This parameter is used for time stretching which is the process of
    changing the speed or duration of an audio.
    It should be much more than 1.0. O is not a valid number for this variable.
    The default value is 1.
    """
    noise_scale: builtins.float
    """Optional. Defines the noise in the generated audio.
    It should be between 0.0 and 1.
    The default value is 0.0
    """
    sample_rate: builtins.int
    """Optional. Defines the sample rate of the generated wav file.
    The default value is 22050.
    """
    pcm: global___Pcm.ValueType
    """Optional. Defines the pulse-code modulation of the wav file.
    The default value is PCM_16.
    """
    audio_format: global___AudioFormat.ValueType
    """Optional. Defines the format of the desired audio.
    The default value is wav.
    """
    use_cache: builtins.bool
    """Optional. Define if cache should be used or not.
    The default value is False.
    """
    @property
    def t2s_service_config(self) -> google.protobuf.struct_pb2.Struct:
        """Optional. t2s_service_config provides the configuration of the service such as API key, bearer tokens, JWT,
        and other header information as key value pairs, e.g., <pre><code>MY_API_KEY='LKJDIFe244LKJOI'</code></pre>
        A. For Amazon T2S service, the following arguments should be passed:
          A1. aws_access_key_id (required) Access key id to access Amazon WEB Service.
          A2. aws_secret_access_key (required) Secret access key to access Amazon WEB Service.
          A3. region (required) Region name of Amazon Server.
          Example:
          t2s_config_service={'aws_access_key_id': 'YOUR_AWS_ACCESS_KEY_ID', 'aws_secret_access_key':
         'YOUR_AWS_SECRET_ACCESS_KEY', 'region': 'YOUR_AMAZON_SERVER_REGION_NAME'}
        B. For ElevenLabs T2s service, the following arguments should be passed:
          B1. api_key (required) API key of ElevenLabs cloud provider to access its T2S service.
          Example:
          t2s_config_service={'api_key': 'YOUR_ELEVENLABS_API_KEY'}
        C. For Google cloud T2S service, the following arguments should be passed:
          C1. api_key (required) API key of Google cloud provider to access its T2S service.
          C2. api_endpoint (optional) Regional API endpoint of Google cloud T2S service.
            (Defaults to 'eu-texttospeech.googleapis.com')
          Example:
          t2s_config_service={'api_key': 'YOUR_GOOGLE_CLOUD_API_KEY', 'api_endpoint': 'YOUR_GOOGLE_CLOUD_API_ENDPOINT'}
        D. For Microsoft Azure T2s service, the following arguments should be passed:
          D1. subscription_key (required) Subscription key to access Microsoft Azure Service.
          D2. region (required) Region name of Microsoft Azure Server.
          Example:
          t2s_config_service={'subscription_key': 'YOUR_MICROSOFT_AZURE_SUBSCRIPTION_KEY', 'region':
          'YOUR_MICROSOFT_AZURE_SERVER_REGION_NAME'}
        Note: ondewo-t2s will raise an error if you don't pass any of the required arguments above.
        """

    @property
    def t2s_cloud_provider_config(self) -> global___T2sCloudProviderConfig:
        """Optional. Defines the cloud provider's specific configuration for using text to speech cloud services
        The default value is None.
        """

    @property
    def t2s_normalization(self) -> global___T2SNormalization:
        """Optional. Define t2s_normalization config parameters for this specific request.
        The default values are set in the config file and the values set via RequestConfig are set just for
        this specific request and will not update the pipeline.
        """

    @property
    def word_to_phoneme_mapping(self) -> google.protobuf.struct_pb2.Struct:
        """Optional. Define a dict which specifies the phonemes for a special word."""

    def __init__(
        self,
        *,
        t2s_pipeline_id: builtins.str = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        sample_rate: builtins.int = ...,
        pcm: global___Pcm.ValueType = ...,
        audio_format: global___AudioFormat.ValueType = ...,
        use_cache: builtins.bool = ...,
        t2s_service_config: google.protobuf.struct_pb2.Struct | None = ...,
        t2s_cloud_provider_config: global___T2sCloudProviderConfig | None = ...,
        t2s_normalization: global___T2SNormalization | None = ...,
        word_to_phoneme_mapping: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_t2s_cloud_provider_config", b"_t2s_cloud_provider_config", "_t2s_service_config", b"_t2s_service_config", "_word_to_phoneme_mapping", b"_word_to_phoneme_mapping", "audio_format", b"audio_format", "length_scale", b"length_scale", "noise_scale", b"noise_scale", "oneof_AudioFormat", b"oneof_AudioFormat", "oneof_Pcm", b"oneof_Pcm", "oneof_length_scale", b"oneof_length_scale", "oneof_noise_scale", b"oneof_noise_scale", "oneof_sample_rate", b"oneof_sample_rate", "oneof_t2s_normalization", b"oneof_t2s_normalization", "oneof_use_cache", b"oneof_use_cache", "pcm", b"pcm", "sample_rate", b"sample_rate", "t2s_cloud_provider_config", b"t2s_cloud_provider_config", "t2s_normalization", b"t2s_normalization", "t2s_service_config", b"t2s_service_config", "use_cache", b"use_cache", "word_to_phoneme_mapping", b"word_to_phoneme_mapping"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_t2s_cloud_provider_config", b"_t2s_cloud_provider_config", "_t2s_service_config", b"_t2s_service_config", "_word_to_phoneme_mapping", b"_word_to_phoneme_mapping", "audio_format", b"audio_format", "length_scale", b"length_scale", "noise_scale", b"noise_scale", "oneof_AudioFormat", b"oneof_AudioFormat", "oneof_Pcm", b"oneof_Pcm", "oneof_length_scale", b"oneof_length_scale", "oneof_noise_scale", b"oneof_noise_scale", "oneof_sample_rate", b"oneof_sample_rate", "oneof_t2s_normalization", b"oneof_t2s_normalization", "oneof_use_cache", b"oneof_use_cache", "pcm", b"pcm", "sample_rate", b"sample_rate", "t2s_cloud_provider_config", b"t2s_cloud_provider_config", "t2s_normalization", b"t2s_normalization", "t2s_pipeline_id", b"t2s_pipeline_id", "t2s_service_config", b"t2s_service_config", "use_cache", b"use_cache", "word_to_phoneme_mapping", b"word_to_phoneme_mapping"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_t2s_cloud_provider_config", b"_t2s_cloud_provider_config"]) -> typing.Literal["t2s_cloud_provider_config"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_t2s_service_config", b"_t2s_service_config"]) -> typing.Literal["t2s_service_config"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_word_to_phoneme_mapping", b"_word_to_phoneme_mapping"]) -> typing.Literal["word_to_phoneme_mapping"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["oneof_AudioFormat", b"oneof_AudioFormat"]) -> typing.Literal["audio_format"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["oneof_Pcm", b"oneof_Pcm"]) -> typing.Literal["pcm"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["oneof_length_scale", b"oneof_length_scale"]) -> typing.Literal["length_scale"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["oneof_noise_scale", b"oneof_noise_scale"]) -> typing.Literal["noise_scale"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["oneof_sample_rate", b"oneof_sample_rate"]) -> typing.Literal["sample_rate"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["oneof_t2s_normalization", b"oneof_t2s_normalization"]) -> typing.Literal["t2s_normalization"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["oneof_use_cache", b"oneof_use_cache"]) -> typing.Literal["use_cache"] | None: ...

global___RequestConfig = RequestConfig

@typing.final
class T2sCloudProviderConfig(google.protobuf.message.Message):
    """Configuration for cloud provider settings for Text-to-Speech (T2S)."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    T2S_CLOUD_PROVIDER_CONFIG_ELEVENLABS_FIELD_NUMBER: builtins.int
    T2S_CLOUD_PROVIDER_CONFIG_GOOGLE_FIELD_NUMBER: builtins.int
    T2S_CLOUD_PROVIDER_CONFIG_MICROSOFT_FIELD_NUMBER: builtins.int
    @property
    def t2s_cloud_provider_config_elevenlabs(self) -> global___T2sCloudProviderConfigElevenLabs:
        """Configuration for Eleven Labs text-to-speech provider."""

    @property
    def t2s_cloud_provider_config_google(self) -> global___T2sCloudProviderConfigGoogle:
        """Configuration for Google text-to-speech provider."""

    @property
    def t2s_cloud_provider_config_microsoft(self) -> global___T2sCloudProviderConfigMicrosoft:
        """Configuration for Microsoft text-to-speech provider."""

    def __init__(
        self,
        *,
        t2s_cloud_provider_config_elevenlabs: global___T2sCloudProviderConfigElevenLabs | None = ...,
        t2s_cloud_provider_config_google: global___T2sCloudProviderConfigGoogle | None = ...,
        t2s_cloud_provider_config_microsoft: global___T2sCloudProviderConfigMicrosoft | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["t2s_cloud_provider_config_elevenlabs", b"t2s_cloud_provider_config_elevenlabs", "t2s_cloud_provider_config_google", b"t2s_cloud_provider_config_google", "t2s_cloud_provider_config_microsoft", b"t2s_cloud_provider_config_microsoft"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["t2s_cloud_provider_config_elevenlabs", b"t2s_cloud_provider_config_elevenlabs", "t2s_cloud_provider_config_google", b"t2s_cloud_provider_config_google", "t2s_cloud_provider_config_microsoft", b"t2s_cloud_provider_config_microsoft"]) -> None: ...

global___T2sCloudProviderConfig = T2sCloudProviderConfig

@typing.final
class T2sCloudProviderConfigElevenLabs(google.protobuf.message.Message):
    """Configuration details specific to the Eleven Labs text-to-speech provider."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STABILITY_FIELD_NUMBER: builtins.int
    SIMILARITY_BOOST_FIELD_NUMBER: builtins.int
    STYLE_FIELD_NUMBER: builtins.int
    USE_SPEAKER_BOOST_FIELD_NUMBER: builtins.int
    APPLY_TEXT_NORMALIZATION_FIELD_NUMBER: builtins.int
    stability: builtins.float
    """Stability level for inference, influencing consistency of generated speech. It is in the range [0.0, 1.0]."""
    similarity_boost: builtins.float
    """Boost value for similarity to enhance the similarity of the generated voice to a target voice.
    It is in the range [0.0, 1.0].
    """
    style: builtins.float
    """Style parameter to control the expression or emotion in speech. It is in the range [0.0, 1.0]."""
    use_speaker_boost: builtins.bool
    """Enables or disables speaker boost for emphasis on clarity and loudness."""
    apply_text_normalization: builtins.str
    """Specifies type of text normalization to apply during processing. Available options are 'auto', 'on', and 'off'."""
    def __init__(
        self,
        *,
        stability: builtins.float = ...,
        similarity_boost: builtins.float = ...,
        style: builtins.float = ...,
        use_speaker_boost: builtins.bool = ...,
        apply_text_normalization: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["apply_text_normalization", b"apply_text_normalization", "similarity_boost", b"similarity_boost", "stability", b"stability", "style", b"style", "use_speaker_boost", b"use_speaker_boost"]) -> None: ...

global___T2sCloudProviderConfigElevenLabs = T2sCloudProviderConfigElevenLabs

@typing.final
class T2sCloudProviderConfigMicrosoft(google.protobuf.message.Message):
    """Configuration details specific to the Microsoft text-to-speech provider."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USE_DEFAULT_SPEAKER_FIELD_NUMBER: builtins.int
    use_default_speaker: builtins.bool
    """Determines whether to use the default speaker voice."""
    def __init__(
        self,
        *,
        use_default_speaker: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["use_default_speaker", b"use_default_speaker"]) -> None: ...

global___T2sCloudProviderConfigMicrosoft = T2sCloudProviderConfigMicrosoft

@typing.final
class T2sCloudProviderConfigGoogle(google.protobuf.message.Message):
    """Configuration details specific to the Google text-to-speech provider."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPEAKING_RATE_FIELD_NUMBER: builtins.int
    VOLUME_GAIN_DB_FIELD_NUMBER: builtins.int
    PITCH_FIELD_NUMBER: builtins.int
    speaking_rate: builtins.float
    """Speaking rate for inference, controlling the speed of generated speech. It is in the range [0.25, 4.0]."""
    volume_gain_db: builtins.float
    """Volume gain in dB applied to the generated speech. It is in the range [-96.0, 16.0]."""
    pitch: builtins.float
    """Pitch adjustment for inference, allowing control over voice pitch. It is in the range in the range [-20.0, 20.0]."""
    def __init__(
        self,
        *,
        speaking_rate: builtins.float = ...,
        volume_gain_db: builtins.float = ...,
        pitch: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pitch", b"pitch", "speaking_rate", b"speaking_rate", "volume_gain_db", b"volume_gain_db"]) -> None: ...

global___T2sCloudProviderConfigGoogle = T2sCloudProviderConfigGoogle

@typing.final
class SynthesizeResponse(google.protobuf.message.Message):
    """Represents a Synthesize Response.
    A Synthesize Response contains the generated audio, requested text and all other properties of this generated audio.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUDIO_UUID_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    GENERATION_TIME_FIELD_NUMBER: builtins.int
    AUDIO_LENGTH_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    NORMALIZED_TEXT_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    audio_uuid: builtins.str
    """Required. Represents the pipeline id of the model configuration that will be used."""
    audio: builtins.bytes
    """Required. Generated file with the parameters described in request."""
    generation_time: builtins.float
    """Required. Time to generate audio."""
    audio_length: builtins.float
    """Required. Audio length."""
    text: builtins.str
    """Required. Text from which audio was generated."""
    normalized_text: builtins.str
    """Optional. Normalized text."""
    sample_rate: builtins.float
    """Optional. Value of sampling rate"""
    @property
    def config(self) -> global___RequestConfig:
        """Required. Configuration from which audio was generated."""

    def __init__(
        self,
        *,
        audio_uuid: builtins.str = ...,
        audio: builtins.bytes = ...,
        generation_time: builtins.float = ...,
        audio_length: builtins.float = ...,
        text: builtins.str = ...,
        config: global___RequestConfig | None = ...,
        normalized_text: builtins.str = ...,
        sample_rate: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config", b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["audio", b"audio", "audio_length", b"audio_length", "audio_uuid", b"audio_uuid", "config", b"config", "generation_time", b"generation_time", "normalized_text", b"normalized_text", "sample_rate", b"sample_rate", "text", b"text"]) -> None: ...

global___SynthesizeResponse = SynthesizeResponse

@typing.final
class StreamingSynthesizeResponse(google.protobuf.message.Message):
    """Represents a Streaming Synthesize Response.
    A Streaming Synthesize Response contains the generated audio, requested text and and
    all other properties of this generated audio.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUDIO_UUID_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    GENERATION_TIME_FIELD_NUMBER: builtins.int
    AUDIO_LENGTH_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    NORMALIZED_TEXT_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    audio_uuid: builtins.str
    """Required. Represents the pipeline id of the model configuration that will be used."""
    audio: builtins.bytes
    """Required. Generated file with the parameters described in request."""
    generation_time: builtins.float
    """Required. Time to generate audio."""
    audio_length: builtins.float
    """Required. Audio length."""
    text: builtins.str
    """Required. Text from which audio was generated."""
    normalized_text: builtins.str
    """Optional. Normalized text."""
    sample_rate: builtins.float
    """Optional. Value of sampling rate"""
    @property
    def config(self) -> global___RequestConfig:
        """Required. Configuration from which audio was generated."""

    def __init__(
        self,
        *,
        audio_uuid: builtins.str = ...,
        audio: builtins.bytes = ...,
        generation_time: builtins.float = ...,
        audio_length: builtins.float = ...,
        text: builtins.str = ...,
        config: global___RequestConfig | None = ...,
        normalized_text: builtins.str = ...,
        sample_rate: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config", b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["audio", b"audio", "audio_length", b"audio_length", "audio_uuid", b"audio_uuid", "config", b"config", "generation_time", b"generation_time", "normalized_text", b"normalized_text", "sample_rate", b"sample_rate", "text", b"text"]) -> None: ...

global___StreamingSynthesizeResponse = StreamingSynthesizeResponse

@typing.final
class NormalizeTextRequest(google.protobuf.message.Message):
    """/////////////
    NORMALIZE //
    /////////////

    NormalizeTextRequest message is used to request text normalization.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    T2S_PIPELINE_ID_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    t2s_pipeline_id: builtins.str
    """The ID of the text-to-speech pipeline."""
    text: builtins.str
    """The text to be normalized."""
    def __init__(
        self,
        *,
        t2s_pipeline_id: builtins.str = ...,
        text: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["t2s_pipeline_id", b"t2s_pipeline_id", "text", b"text"]) -> None: ...

global___NormalizeTextRequest = NormalizeTextRequest

@typing.final
class NormalizeTextResponse(google.protobuf.message.Message):
    """NormalizeTextResponse message is used to store the normalized text response."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NORMALIZED_TEXT_FIELD_NUMBER: builtins.int
    normalized_text: builtins.str
    """The normalized text."""
    def __init__(
        self,
        *,
        normalized_text: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["normalized_text", b"normalized_text"]) -> None: ...

global___NormalizeTextResponse = NormalizeTextResponse

@typing.final
class T2SGetServiceInfoResponse(google.protobuf.message.Message):
    """////////////////////
    GET SERVICE INFO //
    ////////////////////

    Version information of the service
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    version: builtins.str
    """version number"""
    def __init__(
        self,
        *,
        version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["version", b"version"]) -> None: ...

global___T2SGetServiceInfoResponse = T2SGetServiceInfoResponse

@typing.final
class ListT2sPipelinesRequest(google.protobuf.message.Message):
    """//////////////////////
    LIST T2S PIPELINES //
    //////////////////////

    Pipeline Request representation.
    The request message for ListT2sPipelines.
    Filter pipelines by attributed in request.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANGUAGES_FIELD_NUMBER: builtins.int
    SPEAKER_SEXES_FIELD_NUMBER: builtins.int
    PIPELINE_OWNERS_FIELD_NUMBER: builtins.int
    SPEAKER_NAMES_FIELD_NUMBER: builtins.int
    DOMAINS_FIELD_NUMBER: builtins.int
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the language/ languages."""

    @property
    def speaker_sexes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the speaker sex."""

    @property
    def pipeline_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the pipeline owner/ owners."""

    @property
    def speaker_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the speaker name/ names."""

    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the domain/ domains."""

    def __init__(
        self,
        *,
        languages: collections.abc.Iterable[builtins.str] | None = ...,
        speaker_sexes: collections.abc.Iterable[builtins.str] | None = ...,
        pipeline_owners: collections.abc.Iterable[builtins.str] | None = ...,
        speaker_names: collections.abc.Iterable[builtins.str] | None = ...,
        domains: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["domains", b"domains", "languages", b"languages", "pipeline_owners", b"pipeline_owners", "speaker_names", b"speaker_names", "speaker_sexes", b"speaker_sexes"]) -> None: ...

global___ListT2sPipelinesRequest = ListT2sPipelinesRequest

@typing.final
class ListT2sPipelinesResponse(google.protobuf.message.Message):
    """Pipeline Response representation.
    The response message for ListT2sPipelines.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINES_FIELD_NUMBER: builtins.int
    @property
    def pipelines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Text2SpeechConfig]:
        """Required. Representation of a list of pipelines configurations.
        Retrieved by ListT2sPipelines, containing the configurations of
        pipelines with the specifications received in the ListT2sPipelinesRequest.
        """

    def __init__(
        self,
        *,
        pipelines: collections.abc.Iterable[global___Text2SpeechConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pipelines", b"pipelines"]) -> None: ...

global___ListT2sPipelinesResponse = ListT2sPipelinesResponse

@typing.final
class ListT2sLanguagesRequest(google.protobuf.message.Message):
    """//////////////////////
    LIST T2S LANGUAGES //
    //////////////////////

    Language Request representation.
    The request message for ListT2sLanguages.
    Filter languages of pipelines by attributed in request.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPEAKER_SEXES_FIELD_NUMBER: builtins.int
    PIPELINE_OWNERS_FIELD_NUMBER: builtins.int
    SPEAKER_NAMES_FIELD_NUMBER: builtins.int
    DOMAINS_FIELD_NUMBER: builtins.int
    @property
    def speaker_sexes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the speaker sex."""

    @property
    def pipeline_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the pipeline owner/ owners."""

    @property
    def speaker_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the speaker name/ names."""

    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the domain/ domains."""

    def __init__(
        self,
        *,
        speaker_sexes: collections.abc.Iterable[builtins.str] | None = ...,
        pipeline_owners: collections.abc.Iterable[builtins.str] | None = ...,
        speaker_names: collections.abc.Iterable[builtins.str] | None = ...,
        domains: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["domains", b"domains", "pipeline_owners", b"pipeline_owners", "speaker_names", b"speaker_names", "speaker_sexes", b"speaker_sexes"]) -> None: ...

global___ListT2sLanguagesRequest = ListT2sLanguagesRequest

@typing.final
class ListT2sLanguagesResponse(google.protobuf.message.Message):
    """Language Response representation.
    The response message for ListT2sLanguages.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANGUAGES_FIELD_NUMBER: builtins.int
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Required. Define the language/ languages that satisfy/ies
        the specifications in the ListT2sLanguagesRequest.
        """

    def __init__(
        self,
        *,
        languages: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["languages", b"languages"]) -> None: ...

global___ListT2sLanguagesResponse = ListT2sLanguagesResponse

@typing.final
class ListT2sDomainsRequest(google.protobuf.message.Message):
    """////////////////////
    LIST T2S DOMAINS //
    ////////////////////

    Domain Request representation.
    The request message for ListT2sDomains.
    Filter domains of pipelines by attributed in request.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPEAKER_SEXES_FIELD_NUMBER: builtins.int
    PIPELINE_OWNERS_FIELD_NUMBER: builtins.int
    SPEAKER_NAMES_FIELD_NUMBER: builtins.int
    LANGUAGES_FIELD_NUMBER: builtins.int
    @property
    def speaker_sexes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the speaker sex."""

    @property
    def pipeline_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the pipeline owner/ owners."""

    @property
    def speaker_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the speaker name/ names."""

    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional. Define the language/ languages."""

    def __init__(
        self,
        *,
        speaker_sexes: collections.abc.Iterable[builtins.str] | None = ...,
        pipeline_owners: collections.abc.Iterable[builtins.str] | None = ...,
        speaker_names: collections.abc.Iterable[builtins.str] | None = ...,
        languages: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["languages", b"languages", "pipeline_owners", b"pipeline_owners", "speaker_names", b"speaker_names", "speaker_sexes", b"speaker_sexes"]) -> None: ...

global___ListT2sDomainsRequest = ListT2sDomainsRequest

@typing.final
class ListT2sDomainsResponse(google.protobuf.message.Message):
    """Domains Response representation.
    The response message for ListT2sDomains.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOMAINS_FIELD_NUMBER: builtins.int
    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Required. Define the domain/ domains that satisfy/ies
        the specifications in the ListT2sDomainsRequest.
        """

    def __init__(
        self,
        *,
        domains: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["domains", b"domains"]) -> None: ...

global___ListT2sDomainsResponse = ListT2sDomainsResponse

@typing.final
class ListT2sNormalizationPipelinesRequest(google.protobuf.message.Message):
    """//////////////////////
    LIST T2S NORMALIZATION PIPELINES //
    //////////////////////

    The request message for ListT2sNormalizationPipelines.
    Filter pipelines by attributed in request.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANGUAGE_FIELD_NUMBER: builtins.int
    language: builtins.str
    """Optional. Define the language."""
    def __init__(
        self,
        *,
        language: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["language", b"language"]) -> None: ...

global___ListT2sNormalizationPipelinesRequest = ListT2sNormalizationPipelinesRequest

@typing.final
class ListT2sNormalizationPipelinesResponse(google.protobuf.message.Message):
    """Pipeline Response representation.
    The response message for ListT2sNormalizationPipelines.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    T2S_NORMALIZATION_PIPELINES_FIELD_NUMBER: builtins.int
    @property
    def t2s_normalization_pipelines(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Required. Representation of a list of normalization pipelines configurations.
        Retrieved by ListT2sNormalizationPipelines, containing the configurations of
        normalization pipelines with the specifications received in the ListT2sNormalizationPipelinesRequest.
        """

    def __init__(
        self,
        *,
        t2s_normalization_pipelines: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["t2s_normalization_pipelines", b"t2s_normalization_pipelines"]) -> None: ...

global___ListT2sNormalizationPipelinesResponse = ListT2sNormalizationPipelinesResponse

@typing.final
class T2sPipelineId(google.protobuf.message.Message):
    """///////////////////////
    UPDATE T2S PIPELINE //
    ///////////////////////

    Pipeline Id representation.
    Used in the creation, deletion and getter of pipelines.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. Defines the id of the pipeline."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___T2sPipelineId = T2sPipelineId

@typing.final
class Text2SpeechConfig(google.protobuf.message.Message):
    """/////////////////////////
    Text-to-Speech Config //
    /////////////////////////

    Configuration of text-to-speech models representation.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    INFERENCE_FIELD_NUMBER: builtins.int
    NORMALIZATION_FIELD_NUMBER: builtins.int
    POSTPROCESSING_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. Defines the id of the pipeline."""
    active: builtins.bool
    """Required. Defines if the pipeline is active or inactive."""
    @property
    def description(self) -> global___T2SDescription:
        """Required. Defines the description of the pipeline representation."""

    @property
    def inference(self) -> global___T2SInference:
        """Required. Defines he inference of the pipeline representation."""

    @property
    def normalization(self) -> global___T2SNormalization:
        """Required. Defines the normalization process of the pipeline representation."""

    @property
    def postprocessing(self) -> global___Postprocessing:
        """Required. Defines the postprocessing process of the pipeline representation."""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        description: global___T2SDescription | None = ...,
        active: builtins.bool = ...,
        inference: global___T2SInference | None = ...,
        normalization: global___T2SNormalization | None = ...,
        postprocessing: global___Postprocessing | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["description", b"description", "inference", b"inference", "normalization", b"normalization", "postprocessing", b"postprocessing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["active", b"active", "description", b"description", "id", b"id", "inference", b"inference", "normalization", b"normalization", "postprocessing", b"postprocessing"]) -> None: ...

global___Text2SpeechConfig = Text2SpeechConfig

@typing.final
class T2SDescription(google.protobuf.message.Message):
    """T2SDescription message is used to describe the text-to-speech service."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANGUAGE_FIELD_NUMBER: builtins.int
    SPEAKER_SEX_FIELD_NUMBER: builtins.int
    PIPELINE_OWNER_FIELD_NUMBER: builtins.int
    COMMENTS_FIELD_NUMBER: builtins.int
    SPEAKER_NAME_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    language: builtins.str
    """The language supported by the service."""
    speaker_sex: builtins.str
    """The speaker's sex or gender."""
    pipeline_owner: builtins.str
    """The owner of the text-to-speech pipeline."""
    comments: builtins.str
    """Additional comments or notes."""
    speaker_name: builtins.str
    """The name of the speaker."""
    domain: builtins.str
    """The domain or context of the service."""
    def __init__(
        self,
        *,
        language: builtins.str = ...,
        speaker_sex: builtins.str = ...,
        pipeline_owner: builtins.str = ...,
        comments: builtins.str = ...,
        speaker_name: builtins.str = ...,
        domain: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["comments", b"comments", "domain", b"domain", "language", b"language", "pipeline_owner", b"pipeline_owner", "speaker_name", b"speaker_name", "speaker_sex", b"speaker_sex"]) -> None: ...

global___T2SDescription = T2SDescription

@typing.final
class T2SInference(google.protobuf.message.Message):
    """T2SInference message is used to specify the text-to-speech inference settings."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    COMPOSITE_INFERENCE_FIELD_NUMBER: builtins.int
    SINGLE_INFERENCE_FIELD_NUMBER: builtins.int
    CACHING_FIELD_NUMBER: builtins.int
    type: builtins.str
    """The type of inference."""
    @property
    def composite_inference(self) -> global___CompositeInference:
        """Composite inference settings."""

    @property
    def single_inference(self) -> global___SingleInference:
        """Single inference settings."""

    @property
    def caching(self) -> global___Caching:
        """Caching settings."""

    def __init__(
        self,
        *,
        type: builtins.str = ...,
        composite_inference: global___CompositeInference | None = ...,
        single_inference: global___SingleInference | None = ...,
        caching: global___Caching | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["caching", b"caching", "composite_inference", b"composite_inference", "single_inference", b"single_inference"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["caching", b"caching", "composite_inference", b"composite_inference", "single_inference", b"single_inference", "type", b"type"]) -> None: ...

global___T2SInference = T2SInference

@typing.final
class CompositeInference(google.protobuf.message.Message):
    """CompositeInference message combines text-to-mel and mel-to-audio inference settings."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT2MEL_FIELD_NUMBER: builtins.int
    MEL2AUDIO_FIELD_NUMBER: builtins.int
    @property
    def text2mel(self) -> global___Text2Mel:
        """Text-to-mel inference settings."""

    @property
    def mel2audio(self) -> global___Mel2Audio:
        """Mel-to-audio inference settings."""

    def __init__(
        self,
        *,
        text2mel: global___Text2Mel | None = ...,
        mel2audio: global___Mel2Audio | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["mel2audio", b"mel2audio", "text2mel", b"text2mel"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["mel2audio", b"mel2audio", "text2mel", b"text2mel"]) -> None: ...

global___CompositeInference = CompositeInference

@typing.final
class SingleInference(google.protobuf.message.Message):
    """SingleInference message inference settings of text2audio models."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT2AUDIO_FIELD_NUMBER: builtins.int
    @property
    def text2audio(self) -> global___Text2Audio:
        """Text-to-audio inference settings."""

    def __init__(
        self,
        *,
        text2audio: global___Text2Audio | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["text2audio", b"text2audio"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["text2audio", b"text2audio"]) -> None: ...

global___SingleInference = SingleInference

@typing.final
class Text2Mel(google.protobuf.message.Message):
    """Text2Mel message contains settings for text-to-mel inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    GLOW_TTS_FIELD_NUMBER: builtins.int
    GLOW_TTS_TRITON_FIELD_NUMBER: builtins.int
    type: builtins.str
    """The type of text-to-mel inference."""
    @property
    def glow_tts(self) -> global___GlowTTS:
        """GlowTTS inference settings."""

    @property
    def glow_tts_triton(self) -> global___GlowTTSTriton:
        """GlowTTS Triton inference settings."""

    def __init__(
        self,
        *,
        type: builtins.str = ...,
        glow_tts: global___GlowTTS | None = ...,
        glow_tts_triton: global___GlowTTSTriton | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["glow_tts", b"glow_tts", "glow_tts_triton", b"glow_tts_triton"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["glow_tts", b"glow_tts", "glow_tts_triton", b"glow_tts_triton", "type", b"type"]) -> None: ...

global___Text2Mel = Text2Mel

@typing.final
class Text2Audio(google.protobuf.message.Message):
    """Text2Audio message contains settings for text-to-audio inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    VITS_FIELD_NUMBER: builtins.int
    VITS_TRITON_FIELD_NUMBER: builtins.int
    T2S_CLOUD_SERVICE_ELEVENLABS_FIELD_NUMBER: builtins.int
    T2S_CLOUD_SERVICE_AMAZON_FIELD_NUMBER: builtins.int
    T2S_CLOUD_SERVICE_GOOGLE_FIELD_NUMBER: builtins.int
    T2S_CLOUD_SERVICE_MICROSOFT_FIELD_NUMBER: builtins.int
    type: builtins.str
    """The type of text-to-audio inference."""
    @property
    def vits(self) -> global___Vits:
        """Vits inference settings."""

    @property
    def vits_triton(self) -> global___VitsTriton:
        """Vits Triton inference settings."""

    @property
    def t2s_cloud_service_elevenlabs(self) -> global___T2sCloudServiceElevenLabs:
        """ElevenLabs cloud service inference settings."""

    @property
    def t2s_cloud_service_amazon(self) -> global___T2sCloudServiceAmazon:
        """Amazon cloud service inference settings."""

    @property
    def t2s_cloud_service_google(self) -> global___T2sCloudServiceGoogle:
        """Google cloud service inference settings."""

    @property
    def t2s_cloud_service_microsoft(self) -> global___T2sCloudServiceMicrosoft:
        """Microsoft cloud service inference settings."""

    def __init__(
        self,
        *,
        type: builtins.str = ...,
        vits: global___Vits | None = ...,
        vits_triton: global___VitsTriton | None = ...,
        t2s_cloud_service_elevenlabs: global___T2sCloudServiceElevenLabs | None = ...,
        t2s_cloud_service_amazon: global___T2sCloudServiceAmazon | None = ...,
        t2s_cloud_service_google: global___T2sCloudServiceGoogle | None = ...,
        t2s_cloud_service_microsoft: global___T2sCloudServiceMicrosoft | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["t2s_cloud_service_amazon", b"t2s_cloud_service_amazon", "t2s_cloud_service_elevenlabs", b"t2s_cloud_service_elevenlabs", "t2s_cloud_service_google", b"t2s_cloud_service_google", "t2s_cloud_service_microsoft", b"t2s_cloud_service_microsoft", "vits", b"vits", "vits_triton", b"vits_triton"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["t2s_cloud_service_amazon", b"t2s_cloud_service_amazon", "t2s_cloud_service_elevenlabs", b"t2s_cloud_service_elevenlabs", "t2s_cloud_service_google", b"t2s_cloud_service_google", "t2s_cloud_service_microsoft", b"t2s_cloud_service_microsoft", "type", b"type", "vits", b"vits", "vits_triton", b"vits_triton"]) -> None: ...

global___Text2Audio = Text2Audio

@typing.final
class GlowTTS(google.protobuf.message.Message):
    """GlowTTS message contains settings for the GlowTTS inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BATCH_SIZE_FIELD_NUMBER: builtins.int
    USE_GPU_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""
    use_gpu: builtins.bool
    """Flag indicating whether to use GPU for inference."""
    length_scale: builtins.float
    """The length scale for inference."""
    noise_scale: builtins.float
    """The noise scale for inference."""
    path: builtins.str
    """The path to the GlowTTS model."""
    param_config_path: builtins.str
    """The path to the parameter configuration."""
    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Repeated field containing the cleaners for text normalization."""

    def __init__(
        self,
        *,
        batch_size: builtins.int = ...,
        use_gpu: builtins.bool = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        path: builtins.str = ...,
        cleaners: collections.abc.Iterable[builtins.str] | None = ...,
        param_config_path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["batch_size", b"batch_size", "cleaners", b"cleaners", "length_scale", b"length_scale", "noise_scale", b"noise_scale", "param_config_path", b"param_config_path", "path", b"path", "use_gpu", b"use_gpu"]) -> None: ...

global___GlowTTS = GlowTTS

@typing.final
class GlowTTSTriton(google.protobuf.message.Message):
    """GlowTTSTriton message contains settings for the GlowTTS Triton inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BATCH_SIZE_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    MAX_TEXT_LENGTH_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""
    length_scale: builtins.float
    """The length scale for inference."""
    noise_scale: builtins.float
    """The noise scale for inference."""
    max_text_length: builtins.int
    """The maximum text length allowed."""
    param_config_path: builtins.str
    """The path to the parameter configuration."""
    triton_model_name: builtins.str
    """The name of the Triton model."""
    triton_server_host: builtins.str
    """The host of the Triton inference server which servers the model."""
    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""
    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Repeated field containing the cleaners for text normalization."""

    def __init__(
        self,
        *,
        batch_size: builtins.int = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        cleaners: collections.abc.Iterable[builtins.str] | None = ...,
        max_text_length: builtins.int = ...,
        param_config_path: builtins.str = ...,
        triton_model_name: builtins.str = ...,
        triton_server_host: builtins.str = ...,
        triton_server_port: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["batch_size", b"batch_size", "cleaners", b"cleaners", "length_scale", b"length_scale", "max_text_length", b"max_text_length", "noise_scale", b"noise_scale", "param_config_path", b"param_config_path", "triton_model_name", b"triton_model_name", "triton_server_host", b"triton_server_host", "triton_server_port", b"triton_server_port"]) -> None: ...

global___GlowTTSTriton = GlowTTSTriton

@typing.final
class Vits(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BATCH_SIZE_FIELD_NUMBER: builtins.int
    USE_GPU_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""
    use_gpu: builtins.bool
    """Flag indicating whether to use GPU for inference."""
    length_scale: builtins.float
    """The length scale for inference."""
    noise_scale: builtins.float
    """The noise scale for inference."""
    path: builtins.str
    """The path to the Vits model."""
    param_config_path: builtins.str
    """The path to the parameter configuration."""
    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Repeated field containing the cleaners for text normalization."""

    def __init__(
        self,
        *,
        batch_size: builtins.int = ...,
        use_gpu: builtins.bool = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        path: builtins.str = ...,
        cleaners: collections.abc.Iterable[builtins.str] | None = ...,
        param_config_path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["batch_size", b"batch_size", "cleaners", b"cleaners", "length_scale", b"length_scale", "noise_scale", b"noise_scale", "param_config_path", b"param_config_path", "path", b"path", "use_gpu", b"use_gpu"]) -> None: ...

global___Vits = Vits

@typing.final
class VitsTriton(google.protobuf.message.Message):
    """VitsTriton message contains settings for the Vits Triton inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BATCH_SIZE_FIELD_NUMBER: builtins.int
    LENGTH_SCALE_FIELD_NUMBER: builtins.int
    NOISE_SCALE_FIELD_NUMBER: builtins.int
    CLEANERS_FIELD_NUMBER: builtins.int
    MAX_TEXT_LENGTH_FIELD_NUMBER: builtins.int
    PARAM_CONFIG_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    batch_size: builtins.int
    """The batch size for inference."""
    length_scale: builtins.float
    """The length scale for inference."""
    noise_scale: builtins.float
    """The noise scale for inference."""
    max_text_length: builtins.int
    """The maximum text length allowed."""
    param_config_path: builtins.str
    """The path to the parameter configuration."""
    triton_model_name: builtins.str
    """The name of the Triton model."""
    triton_server_host: builtins.str
    """The host of the Triton inference server which servers the model."""
    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""
    @property
    def cleaners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Repeated field containing the cleaners for text normalization."""

    def __init__(
        self,
        *,
        batch_size: builtins.int = ...,
        length_scale: builtins.float = ...,
        noise_scale: builtins.float = ...,
        cleaners: collections.abc.Iterable[builtins.str] | None = ...,
        max_text_length: builtins.int = ...,
        param_config_path: builtins.str = ...,
        triton_model_name: builtins.str = ...,
        triton_server_host: builtins.str = ...,
        triton_server_port: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["batch_size", b"batch_size", "cleaners", b"cleaners", "length_scale", b"length_scale", "max_text_length", b"max_text_length", "noise_scale", b"noise_scale", "param_config_path", b"param_config_path", "triton_model_name", b"triton_model_name", "triton_server_host", b"triton_server_host", "triton_server_port", b"triton_server_port"]) -> None: ...

global___VitsTriton = VitsTriton

@typing.final
class T2sCloudServiceElevenLabs(google.protobuf.message.Message):
    """T2sCloudServiceElevenLabs message contains settings for the ElevenLabs Cloud service inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VOICE_ID_FIELD_NUMBER: builtins.int
    VOICE_SETTINGS_FIELD_NUMBER: builtins.int
    APPLY_TEXT_NORMALIZATION_FIELD_NUMBER: builtins.int
    language_code: builtins.str
    """Language of the generated audio. It should be 4-Letter language code."""
    model_id: builtins.str
    """Model ID indicating the name of the model"""
    voice_id: builtins.str
    """Voice ID indicating the speaker"""
    apply_text_normalization: builtins.str
    """Flag to indicate applying text normalization"""
    @property
    def voice_settings(self) -> global___VoiceSettings:
        """Voice setting of the inference"""

    def __init__(
        self,
        *,
        language_code: builtins.str = ...,
        model_id: builtins.str = ...,
        voice_id: builtins.str = ...,
        voice_settings: global___VoiceSettings | None = ...,
        apply_text_normalization: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["voice_settings", b"voice_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["apply_text_normalization", b"apply_text_normalization", "language_code", b"language_code", "model_id", b"model_id", "voice_id", b"voice_id", "voice_settings", b"voice_settings"]) -> None: ...

global___T2sCloudServiceElevenLabs = T2sCloudServiceElevenLabs

@typing.final
class VoiceSettings(google.protobuf.message.Message):
    """VoiceSettings message contains settings for ElevenLabs inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STABILITY_FIELD_NUMBER: builtins.int
    SIMILARITY_BOOST_FIELD_NUMBER: builtins.int
    STYLE_FIELD_NUMBER: builtins.int
    USE_SPEAKER_BOOST_FIELD_NUMBER: builtins.int
    stability: builtins.float
    """stability value for elevenlabs inference"""
    similarity_boost: builtins.float
    """similarity boost value for ElevenLabs inference."""
    style: builtins.float
    """style boost value for ElevenLabs inference."""
    use_speaker_boost: builtins.bool
    """Flag to indicate speaker boost"""
    def __init__(
        self,
        *,
        stability: builtins.float = ...,
        similarity_boost: builtins.float = ...,
        style: builtins.float = ...,
        use_speaker_boost: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["similarity_boost", b"similarity_boost", "stability", b"stability", "style", b"style", "use_speaker_boost", b"use_speaker_boost"]) -> None: ...

global___VoiceSettings = VoiceSettings

@typing.final
class T2sCloudServiceAmazon(google.protobuf.message.Message):
    """T2sCloudServiceAmazon message contains settings for the Amazon Cloud service inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VOICE_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    voice_id: builtins.str
    """Voice ID indicating the speaker"""
    model_id: builtins.str
    """Model id for the inference server."""
    def __init__(
        self,
        *,
        voice_id: builtins.str = ...,
        model_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["model_id", b"model_id", "voice_id", b"voice_id"]) -> None: ...

global___T2sCloudServiceAmazon = T2sCloudServiceAmazon

@typing.final
class T2sCloudServiceGoogle(google.protobuf.message.Message):
    """T2sCloudServiceGoogle message contains settings for the Google Cloud service inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VOICE_ID_FIELD_NUMBER: builtins.int
    SPEAKING_RATE_FIELD_NUMBER: builtins.int
    VOLUME_GAIN_DB_FIELD_NUMBER: builtins.int
    PITCH_FIELD_NUMBER: builtins.int
    voice_id: builtins.str
    """Voice ID indicating the speaker"""
    speaking_rate: builtins.float
    """Speaking rate to control the speed of audio."""
    volume_gain_db: builtins.float
    """Volume gain in db to control volume of the audio."""
    pitch: builtins.float
    """pitch value of the audio"""
    def __init__(
        self,
        *,
        voice_id: builtins.str = ...,
        speaking_rate: builtins.float = ...,
        volume_gain_db: builtins.float = ...,
        pitch: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pitch", b"pitch", "speaking_rate", b"speaking_rate", "voice_id", b"voice_id", "volume_gain_db", b"volume_gain_db"]) -> None: ...

global___T2sCloudServiceGoogle = T2sCloudServiceGoogle

@typing.final
class T2sCloudServiceMicrosoft(google.protobuf.message.Message):
    """T2sCloudServiceMicrosoft message contains settings for the Microsoft Cloud service inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VOICE_ID_FIELD_NUMBER: builtins.int
    USE_DEFAULT_SPEAKER_FIELD_NUMBER: builtins.int
    voice_id: builtins.str
    """Voice ID indicating the speaker."""
    use_default_speaker: builtins.bool
    """Flag to indicate using the default speaker."""
    def __init__(
        self,
        *,
        voice_id: builtins.str = ...,
        use_default_speaker: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["use_default_speaker", b"use_default_speaker", "voice_id", b"voice_id"]) -> None: ...

global___T2sCloudServiceMicrosoft = T2sCloudServiceMicrosoft

@typing.final
class Mel2Audio(google.protobuf.message.Message):
    """Mel2Audio message contains settings for mel-to-audio inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    MB_MELGAN_TRITON_FIELD_NUMBER: builtins.int
    HIFI_GAN_FIELD_NUMBER: builtins.int
    HIFI_GAN_TRITON_FIELD_NUMBER: builtins.int
    type: builtins.str
    """The type of mel-to-audio inference."""
    @property
    def mb_melgan_triton(self) -> global___MbMelganTriton:
        """MbMelgan Triton inference settings."""

    @property
    def hifi_gan(self) -> global___HiFiGan:
        """HiFiGan inference settings."""

    @property
    def hifi_gan_triton(self) -> global___HiFiGanTriton:
        """HiFiGan Triton inference settings."""

    def __init__(
        self,
        *,
        type: builtins.str = ...,
        mb_melgan_triton: global___MbMelganTriton | None = ...,
        hifi_gan: global___HiFiGan | None = ...,
        hifi_gan_triton: global___HiFiGanTriton | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["hifi_gan", b"hifi_gan", "hifi_gan_triton", b"hifi_gan_triton", "mb_melgan_triton", b"mb_melgan_triton"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["hifi_gan", b"hifi_gan", "hifi_gan_triton", b"hifi_gan_triton", "mb_melgan_triton", b"mb_melgan_triton", "type", b"type"]) -> None: ...

global___Mel2Audio = Mel2Audio

@typing.final
class HiFiGan(google.protobuf.message.Message):
    """HiFiGan message contains settings for the HiFiGan inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USE_GPU_FIELD_NUMBER: builtins.int
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    CONFIG_PATH_FIELD_NUMBER: builtins.int
    MODEL_PATH_FIELD_NUMBER: builtins.int
    use_gpu: builtins.bool
    """Flag indicating whether to use GPU for inference."""
    batch_size: builtins.int
    """The batch size for inference."""
    config_path: builtins.str
    """The path to the HiFiGan configuration."""
    model_path: builtins.str
    """The path to the HiFiGan model."""
    def __init__(
        self,
        *,
        use_gpu: builtins.bool = ...,
        batch_size: builtins.int = ...,
        config_path: builtins.str = ...,
        model_path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["batch_size", b"batch_size", "config_path", b"config_path", "model_path", b"model_path", "use_gpu", b"use_gpu"]) -> None: ...

global___HiFiGan = HiFiGan

@typing.final
class HiFiGanTriton(google.protobuf.message.Message):
    """HiFiGanTriton message contains settings for the HiFiGan Triton inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    config_path: builtins.str
    """The path to the HiFiGan Triton configuration."""
    triton_model_name: builtins.str
    """The name of the Triton model."""
    triton_server_host: builtins.str
    """The host of the Triton inference server which servers the model."""
    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""
    def __init__(
        self,
        *,
        config_path: builtins.str = ...,
        triton_model_name: builtins.str = ...,
        triton_server_host: builtins.str = ...,
        triton_server_port: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["config_path", b"config_path", "triton_model_name", b"triton_model_name", "triton_server_host", b"triton_server_host", "triton_server_port", b"triton_server_port"]) -> None: ...

global___HiFiGanTriton = HiFiGanTriton

@typing.final
class MbMelganTriton(google.protobuf.message.Message):
    """MbMelganTriton message contains settings for the MbMelgan Triton inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_PATH_FIELD_NUMBER: builtins.int
    STATS_PATH_FIELD_NUMBER: builtins.int
    TRITON_MODEL_NAME_FIELD_NUMBER: builtins.int
    TRITON_SERVER_HOST_FIELD_NUMBER: builtins.int
    TRITON_SERVER_PORT_FIELD_NUMBER: builtins.int
    config_path: builtins.str
    """The path to the MbMelgan Triton configuration."""
    stats_path: builtins.str
    """The path to the MbMelgan statistics."""
    triton_model_name: builtins.str
    """The name of the Triton model."""
    triton_server_host: builtins.str
    """The host of the Triton inference server which servers the model."""
    triton_server_port: builtins.int
    """The port of the Triton inference server which servers the model."""
    def __init__(
        self,
        *,
        config_path: builtins.str = ...,
        stats_path: builtins.str = ...,
        triton_model_name: builtins.str = ...,
        triton_server_host: builtins.str = ...,
        triton_server_port: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["config_path", b"config_path", "stats_path", b"stats_path", "triton_model_name", b"triton_model_name", "triton_server_host", b"triton_server_host", "triton_server_port", b"triton_server_port"]) -> None: ...

global___MbMelganTriton = MbMelganTriton

@typing.final
class Caching(google.protobuf.message.Message):
    """Caching message contains settings for caching."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVE_FIELD_NUMBER: builtins.int
    MEMORY_CACHE_MAX_SIZE_FIELD_NUMBER: builtins.int
    SAMPLING_RATE_FIELD_NUMBER: builtins.int
    LOAD_CACHE_FIELD_NUMBER: builtins.int
    SAVE_CACHE_FIELD_NUMBER: builtins.int
    CACHE_SAVE_DIR_FIELD_NUMBER: builtins.int
    active: builtins.bool
    """Flag indicating whether caching is active."""
    memory_cache_max_size: builtins.int
    """The maximum size of the memory cache."""
    sampling_rate: builtins.int
    """The sampling rate for caching."""
    load_cache: builtins.bool
    """Flag indicating whether to load cache."""
    save_cache: builtins.bool
    """Flag indicating whether to save cache."""
    cache_save_dir: builtins.str
    """The directory path to save the cache."""
    def __init__(
        self,
        *,
        active: builtins.bool = ...,
        memory_cache_max_size: builtins.int = ...,
        sampling_rate: builtins.int = ...,
        load_cache: builtins.bool = ...,
        save_cache: builtins.bool = ...,
        cache_save_dir: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["active", b"active", "cache_save_dir", b"cache_save_dir", "load_cache", b"load_cache", "memory_cache_max_size", b"memory_cache_max_size", "sampling_rate", b"sampling_rate", "save_cache", b"save_cache"]) -> None: ...

global___Caching = Caching

@typing.final
class T2SNormalization(google.protobuf.message.Message):
    """Represents the configuration for text-to-speech normalization."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANGUAGE_FIELD_NUMBER: builtins.int
    PIPELINE_FIELD_NUMBER: builtins.int
    CUSTOM_PHONEMIZER_ID_FIELD_NUMBER: builtins.int
    CUSTOM_LENGTH_SCALES_FIELD_NUMBER: builtins.int
    ARPABET_MAPPING_FIELD_NUMBER: builtins.int
    NUMERIC_MAPPING_FIELD_NUMBER: builtins.int
    CALLSIGNS_MAPPING_FIELD_NUMBER: builtins.int
    PHONEME_CORRECTION_MAPPING_FIELD_NUMBER: builtins.int
    language: builtins.str
    """The language for which the normalization is applied."""
    custom_phonemizer_id: builtins.str
    """The ID of the custom phonemizer, if used."""
    arpabet_mapping: builtins.str
    """The mapping for Arpabet phonemes."""
    numeric_mapping: builtins.str
    """The mapping for numeric expressions."""
    callsigns_mapping: builtins.str
    """The mapping for callsigns."""
    phoneme_correction_mapping: builtins.str
    """The mapping for phoneme correction."""
    @property
    def pipeline(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The pipeline(s) used for normalization."""

    @property
    def custom_length_scales(self) -> global___T2SCustomLengthScales:
        """Custom length scales for different text types."""

    def __init__(
        self,
        *,
        language: builtins.str = ...,
        pipeline: collections.abc.Iterable[builtins.str] | None = ...,
        custom_phonemizer_id: builtins.str = ...,
        custom_length_scales: global___T2SCustomLengthScales | None = ...,
        arpabet_mapping: builtins.str = ...,
        numeric_mapping: builtins.str = ...,
        callsigns_mapping: builtins.str = ...,
        phoneme_correction_mapping: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["custom_length_scales", b"custom_length_scales"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["arpabet_mapping", b"arpabet_mapping", "callsigns_mapping", b"callsigns_mapping", "custom_length_scales", b"custom_length_scales", "custom_phonemizer_id", b"custom_phonemizer_id", "language", b"language", "numeric_mapping", b"numeric_mapping", "phoneme_correction_mapping", b"phoneme_correction_mapping", "pipeline", b"pipeline"]) -> None: ...

global___T2SNormalization = T2SNormalization

@typing.final
class Postprocessing(google.protobuf.message.Message):
    """Postprocessing message contains settings for postprocessing."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SILENCE_SECS_FIELD_NUMBER: builtins.int
    PIPELINE_FIELD_NUMBER: builtins.int
    LOGMMSE_FIELD_NUMBER: builtins.int
    WIENER_FIELD_NUMBER: builtins.int
    APODIZATION_FIELD_NUMBER: builtins.int
    silence_secs: builtins.float
    """The duration of silence in seconds."""
    @property
    def pipeline(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Repeated field containing pipeline names."""

    @property
    def logmmse(self) -> global___Logmnse:
        """Logmnse postprocessing settings."""

    @property
    def wiener(self) -> global___Wiener:
        """Wiener postprocessing settings."""

    @property
    def apodization(self) -> global___Apodization:
        """Apodization postprocessing settings."""

    def __init__(
        self,
        *,
        silence_secs: builtins.float = ...,
        pipeline: collections.abc.Iterable[builtins.str] | None = ...,
        logmmse: global___Logmnse | None = ...,
        wiener: global___Wiener | None = ...,
        apodization: global___Apodization | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["apodization", b"apodization", "logmmse", b"logmmse", "wiener", b"wiener"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["apodization", b"apodization", "logmmse", b"logmmse", "pipeline", b"pipeline", "silence_secs", b"silence_secs", "wiener", b"wiener"]) -> None: ...

global___Postprocessing = Postprocessing

@typing.final
class Logmnse(google.protobuf.message.Message):
    """Logmnse message contains settings for Logmnse postprocessing."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INITIAL_NOISE_FIELD_NUMBER: builtins.int
    WINDOW_SIZE_FIELD_NUMBER: builtins.int
    NOISE_THRESHOLD_FIELD_NUMBER: builtins.int
    initial_noise: builtins.int
    """The initial noise value."""
    window_size: builtins.int
    """The window size."""
    noise_threshold: builtins.float
    """The noise threshold."""
    def __init__(
        self,
        *,
        initial_noise: builtins.int = ...,
        window_size: builtins.int = ...,
        noise_threshold: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["initial_noise", b"initial_noise", "noise_threshold", b"noise_threshold", "window_size", b"window_size"]) -> None: ...

global___Logmnse = Logmnse

@typing.final
class Wiener(google.protobuf.message.Message):
    """Wiener message contains settings for Wiener postprocessing."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FRAME_LEN_FIELD_NUMBER: builtins.int
    LPC_ORDER_FIELD_NUMBER: builtins.int
    ITERATIONS_FIELD_NUMBER: builtins.int
    ALPHA_FIELD_NUMBER: builtins.int
    THRESH_FIELD_NUMBER: builtins.int
    frame_len: builtins.int
    """The frame length."""
    lpc_order: builtins.int
    """The LPC order."""
    iterations: builtins.int
    """The number of iterations."""
    alpha: builtins.float
    """The alpha value."""
    thresh: builtins.float
    """The threshold value."""
    def __init__(
        self,
        *,
        frame_len: builtins.int = ...,
        lpc_order: builtins.int = ...,
        iterations: builtins.int = ...,
        alpha: builtins.float = ...,
        thresh: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["alpha", b"alpha", "frame_len", b"frame_len", "iterations", b"iterations", "lpc_order", b"lpc_order", "thresh", b"thresh"]) -> None: ...

global___Wiener = Wiener

@typing.final
class Apodization(google.protobuf.message.Message):
    """Apodization message contains settings for apodization postprocessing."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APODIZATION_SECS_FIELD_NUMBER: builtins.int
    apodization_secs: builtins.float
    """The duration of apodization in seconds."""
    def __init__(
        self,
        *,
        apodization_secs: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["apodization_secs", b"apodization_secs"]) -> None: ...

global___Apodization = Apodization

@typing.final
class T2SCustomLengthScales(google.protobuf.message.Message):
    """T2SCustomLengthScales message contains custom length scales for text types."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    PHONE_FIELD_NUMBER: builtins.int
    SPELL_FIELD_NUMBER: builtins.int
    SPELL_WITH_NAMES_FIELD_NUMBER: builtins.int
    CALLSIGN_LONG_FIELD_NUMBER: builtins.int
    CALLSIGN_SHORT_FIELD_NUMBER: builtins.int
    text: builtins.float
    """The custom length scale for general text."""
    email: builtins.float
    """The custom length scale for email text."""
    url: builtins.float
    """The custom length scale for URL text."""
    phone: builtins.float
    """The custom length scale for phone number text."""
    spell: builtins.float
    """The custom length scale for spelled-out text."""
    spell_with_names: builtins.float
    """The custom length scale for spelled-out text with names."""
    callsign_long: builtins.float
    """The custom length scale for long callsigns."""
    callsign_short: builtins.float
    """The custom length scale for short callsigns."""
    def __init__(
        self,
        *,
        text: builtins.float = ...,
        email: builtins.float = ...,
        url: builtins.float = ...,
        phone: builtins.float = ...,
        spell: builtins.float = ...,
        spell_with_names: builtins.float = ...,
        callsign_long: builtins.float = ...,
        callsign_short: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["callsign_long", b"callsign_long", "callsign_short", b"callsign_short", "email", b"email", "phone", b"phone", "spell", b"spell", "spell_with_names", b"spell_with_names", "text", b"text", "url", b"url"]) -> None: ...

global___T2SCustomLengthScales = T2SCustomLengthScales

@typing.final
class PhonemizerId(google.protobuf.message.Message):
    """PhonemizerId message represents the ID of a phonemizer."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The ID of the phonemizer."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___PhonemizerId = PhonemizerId

@typing.final
class CustomPhonemizerProto(google.protobuf.message.Message):
    """CustomPhonemizerProto message represents a custom phonemizer."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    MAPS_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The ID of the custom phonemizer."""
    @property
    def maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Map]:
        """Repeated field of Map messages representing word-to-phoneme mappings."""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        maps: collections.abc.Iterable[global___Map] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "maps", b"maps"]) -> None: ...

global___CustomPhonemizerProto = CustomPhonemizerProto

@typing.final
class Map(google.protobuf.message.Message):
    """Map message represents a word-to-phoneme mapping in a custom phonemizer."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORD_FIELD_NUMBER: builtins.int
    PHONEME_GROUPS_FIELD_NUMBER: builtins.int
    word: builtins.str
    """The word to be mapped."""
    phoneme_groups: builtins.str
    """The phoneme groups associated with the word."""
    def __init__(
        self,
        *,
        word: builtins.str = ...,
        phoneme_groups: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["phoneme_groups", b"phoneme_groups", "word", b"word"]) -> None: ...

global___Map = Map

@typing.final
class ListCustomPhonemizerResponse(google.protobuf.message.Message):
    """ListCustomPhonemizerResponse message represents the response for listing custom phonemizers."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PHONEMIZERS_FIELD_NUMBER: builtins.int
    @property
    def phonemizers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CustomPhonemizerProto]:
        """Repeated field of CustomPhonemizerProto messages representing the custom phonemizers."""

    def __init__(
        self,
        *,
        phonemizers: collections.abc.Iterable[global___CustomPhonemizerProto] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["phonemizers", b"phonemizers"]) -> None: ...

global___ListCustomPhonemizerResponse = ListCustomPhonemizerResponse

@typing.final
class ListCustomPhonemizerRequest(google.protobuf.message.Message):
    """ListCustomPhonemizerRequest message represents the request for listing custom phonemizers."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_IDS_FIELD_NUMBER: builtins.int
    @property
    def pipeline_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Repeated field of pipeline IDs to filter the list of custom phonemizers."""

    def __init__(
        self,
        *,
        pipeline_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pipeline_ids", b"pipeline_ids"]) -> None: ...

global___ListCustomPhonemizerRequest = ListCustomPhonemizerRequest

@typing.final
class UpdateCustomPhonemizerRequest(google.protobuf.message.Message):
    """UpdateCustomPhonemizerRequest message represents the request for updating a custom phonemizer."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _UpdateMethod:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _UpdateMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[UpdateCustomPhonemizerRequest._UpdateMethod.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        extend_hard: UpdateCustomPhonemizerRequest._UpdateMethod.ValueType  # 0
        """Add new words, replacing existing ones."""
        extend_soft: UpdateCustomPhonemizerRequest._UpdateMethod.ValueType  # 1
        """Add new words if they are not already present."""
        replace: UpdateCustomPhonemizerRequest._UpdateMethod.ValueType  # 2
        """Replace all words in the phonemizer with new ones."""

    class UpdateMethod(_UpdateMethod, metaclass=_UpdateMethodEnumTypeWrapper):
        """The update method to be used."""

    extend_hard: UpdateCustomPhonemizerRequest.UpdateMethod.ValueType  # 0
    """Add new words, replacing existing ones."""
    extend_soft: UpdateCustomPhonemizerRequest.UpdateMethod.ValueType  # 1
    """Add new words if they are not already present."""
    replace: UpdateCustomPhonemizerRequest.UpdateMethod.ValueType  # 2
    """Replace all words in the phonemizer with new ones."""

    ID_FIELD_NUMBER: builtins.int
    UPDATE_METHOD_FIELD_NUMBER: builtins.int
    MAPS_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The ID of the custom phonemizer to be updated."""
    update_method: global___UpdateCustomPhonemizerRequest.UpdateMethod.ValueType
    """The update method."""
    @property
    def maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Map]:
        """Repeated field of Map messages representing word-to-phoneme mappings."""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        update_method: global___UpdateCustomPhonemizerRequest.UpdateMethod.ValueType = ...,
        maps: collections.abc.Iterable[global___Map] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "maps", b"maps", "update_method", b"update_method"]) -> None: ...

global___UpdateCustomPhonemizerRequest = UpdateCustomPhonemizerRequest

@typing.final
class CreateCustomPhonemizerRequest(google.protobuf.message.Message):
    """CreateCustomPhonemizerRequest message represents the request for creating a custom phonemizer."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PREFIX_FIELD_NUMBER: builtins.int
    MAPS_FIELD_NUMBER: builtins.int
    prefix: builtins.str
    """The prefix for the custom phonemizer ID."""
    @property
    def maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Map]:
        """Repeated field of Map messages representing word-to-phoneme mappings."""

    def __init__(
        self,
        *,
        prefix: builtins.str = ...,
        maps: collections.abc.Iterable[global___Map] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["maps", b"maps", "prefix", b"prefix"]) -> None: ...

global___CreateCustomPhonemizerRequest = CreateCustomPhonemizerRequest

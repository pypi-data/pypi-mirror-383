[tool.poetry]
name = "twingly-pyamqp"
version = "0.2.3"
description = "A Python implementation for subscribing and publishing messages via RabbitMQ."
authors = ["Twingly AB"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11"
python-dotenv = "^1.0.1"
kombu = "^5.4.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.3"
pre-commit = "^4.1.0"
pytest = "^8.3.4"
invoke = "^2.2.0"
pytest-timeout = "^2.4.0"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "UP027", # deprecated rule
  "PLR2004", # Magic value used in comparison
  "BLE001", # False positives https://github.com/astral-sh/ruff/issues/9868
  "RET504", # Variable assignment before return can increase readability in some cases
  "TRY003", # Don't agree with this rule
  "TD003", # TODOs without issue link is okay
  "G004", # Micro-optimization
  "ANN", # Type annotations are good but optional
  "T20", # Prints instead of logging can be fine in some cases
  "FIX", # Ofc we should fix things, but this is a bit much
  "D", # Docstrings should be optional IMO
  "DOC", # Docstrings should be optional IMO
  "S", # We don't really have any customer-facing code, these security rules feels overkill
  "DJ", # We don't use Django
  "CPY", # No need to include a license in every file
  # Formatter confilcts
  "W191",
  "E111",
  "E114",
  "E117",
  "E501",
  "Q",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
    "ARG", # Fixtures are flagged as unused arguments
    "SLF", # Accessing private methods can be okay in tests
]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["mock_*"]

[tool.ruff.lint.mccabe]
# Ruff's default max-complexity is 10
# Flakes8's default is max-complexity 15
max-complexity = 15

[tool.ruff.lint.pylint]
max-args = 7

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

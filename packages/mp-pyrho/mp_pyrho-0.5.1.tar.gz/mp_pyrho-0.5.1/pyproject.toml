[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 60", "setuptools-scm>=8.0", "wheel"]

[project]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]
authors = [{name = "Jimmy-Xuan Shen", email = "jmmshn@gmail.com"}]
dependencies = [
  'pymatgen>=2023.9.21',
]

description = "Tools for re-griding periodic volumetric quantum chemistry data for machine-learning purposes."
dynamic = ["version"]
keywords = ["machine-learning", "dft", "vasp", "volumetric", "pymatgen"]
license = {text = "modified BSD"}
name = "mp-pyrho"
readme = "README.md"
requires-python = ">=3.9"

[tool.setuptools_scm]

[project.optional-dependencies]
dev = ["pre-commit==4.3.0"]
docs = [
  "numpydoc==1.9.0",
  "sphinx==8.2.3",
  "furo==2025.9.25",
  "m2r2==0.3.4",
  "ipython==9.6.0",
  "nbsphinx==0.9.6",
  "nbsphinx-link==1.3.1",
  "sphinx-autodoc-typehints==3.5.1",
  "sphinx-autoapi==3.6.1",
  "lxml_html_clean==0.4.3",
]
tests = [
  "pytest>=7.1.2",
  "pytest-cov>=3.0.0",
  "hypothesis>=6.98.10",
]

[project.urls]
homepage = "https://materialsproject.github.io/pyrho/"
repository = "https://materialsproject.github.io/pyrho"

[tool.ruff]
src = ["src",]
extend-exclude = ["docs", "tests"]
line-length = 88
indent-width = 4

[tool.ruff.lint]
ignore = ["E203", "E501", "F401", "SLF001"]
select = [
  "A001",
  "A002",
  "B018",
  "D",
  "E",
  "F",
  "I001",
  "PLE",
  "PLW",
  # "ERA001",
  "RUF",
  "D409",
  "TCH",
  "TID251",
  "T20",
  "UP032",
  "W605",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
ignore_missing_imports = true
no_strict_optional = true

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:.*POTCAR.*:UserWarning",
  "ignore:.*magmom.*:UserWarning",
  "ignore:.*is not gzipped.*:UserWarning",
  "ignore:.*input structure.*:UserWarning",
  "ignore::DeprecationWarning",
]

[tool.coverage.run]
branch = true
include = ["src/*"]
parallel = true

[tool.coverage.paths]
source = ["src/"]

[tool.coverage.report]
exclude_lines = [
  '^\s*assert False(,|$)',
  'if typing.TYPE_CHECKING:',
  '^\s*@overload( |$)',
]
show_missing = true
skip_covered = true

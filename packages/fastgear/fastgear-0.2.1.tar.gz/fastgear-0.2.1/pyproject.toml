[project]
name = "fastgear"
version = "0.2.1"
description = "A personal utility library I've developed to streamline and optimize backend development with FastAPI in my projects. From generic repositories and queries to enums, error handling, and more, FastGear encompasses essential tools that have proven invaluable in my development journey, whether as a novice or a seasoned professional."
authors = [
    {name = "Henrique Marcuzzo <henrique.souza.m06@gmail.com>"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi>=0.115.13",
    "fastapi-pagination>=0.13.2",
    "loguru>=0.7.3",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.0",
    "sqlalchemy>=2.0.41",
    "sqlalchemy-utils>=0.41.2",
    "typing-inspect>=0.9.0",
    "uuid6>=2025.0.0",
]

[project.optional-dependencies]
redis = [
    "redis>=6.2.0",
]


[tool.uv]
default-groups = []

[dependency-groups]
dev = [
    # ----------------------------------------
    # Code quality
    # ----------------------------------------
    "pre-commit>=4.2.0",
    "python-semantic-release>=10.4.1",
    "ruff>=0.12.0",
]

docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocstrings>=0.29.1",
]

test = [
    "faker>=37.4.0",
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-testdox>=3.1.0",
]


# ==== Ruff ====
[tool.ruff]
fix = true
line-length = 100
indent-width = 4
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "_build",
    "buck-out",
    "build",
    "dist",
]

[tool.ruff.lint]
fixable = ["ALL"]  # Fix all fixable issues
select = ["ALL"]   # Select all rules available
extend-select = ["I"]
ignore = [
    "A005",
    "COM812",
    "DTZ005",
    "E501",
    "FIX002",
    "F811",
    "G004",
    "PLC0415",
    "PLR0913",
    "PERF203",
    "PGH003",
    "N818",
    "SLF001",
    "ARG",
    "ANN",
    "B",
    "D",
    "EM",
    "RUF",
    "S",
    "TD",
    "TRY"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "8.0.0"
addopts = "-ra -q --force-testdox --cov=fastgear --cov-branch --cov-report=xml"
testpaths = ["tests/"]

# ==== Semantic Release ====
[tool.semantic_release]
commit_message = """\
ðŸ”– Release version {version}

Automatically generated by python-semantic-release
"""
tag_format = "{version}"
version_toml = [
    "pyproject.toml:project.version",
]
version_variables = ["fastgear/__init__.py:__version__"]
vcs_release = true

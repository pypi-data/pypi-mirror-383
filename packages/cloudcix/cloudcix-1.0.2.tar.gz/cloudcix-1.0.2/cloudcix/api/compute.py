from cloudcix.client import Client


class Compute:
    """
    The Compute application provides services that allow for management of IP Addresses, Subnets, and DNS records,
    along with accessing black and whitelists generated by CloudCIX and the direct management of CloudCIX Cloud
    Resources, API Resources and HPC Resources.
    """
    _application_name = 'compute'
    allocation = Client(_application_name, 'allocation/')
    api_usage = Client(_application_name, 'api_usage/')
    asn = Client(_application_name, 'asn/')
    backup_hyperv = Client(_application_name, 'backup_hyperv/')
    backup_lxc = Client(_application_name, 'backup_lxc/')
    ceph = Client(_application_name, 'ceph/')
    cloudbill = Client(_application_name, 'cloudbill/')
    device = Client(_application_name, 'device/')
    device_type = Client(_application_name, 'device_type/')
    firewall = Client(_application_name, 'firewall/')
    geofilter = Client(_application_name, 'geofilter/')
    gpu = Client(_application_name, 'gpu/')
    hpc_home_dir = Client(_application_name, 'hpc_home_dir/')
    hpc_job = Client(_application_name, 'hpc_job/')
    image = Client(_application_name, 'image/')
    ip_address = Client(_application_name, 'ip_address/')
    ip_address_group = Client(_application_name, 'ip_address_group/')
    lxc = Client(_application_name, 'lxc/')
    project = Client(_application_name, 'project/')
    project_type = Client(_application_name, 'project_type/')
    resource_type = Client(_application_name, 'resource_type/')
    run_robot = Client(_application_name, 'run_robot/')
    snapshot_hyperv = Client(_application_name, 'snapshot_hyperv/')
    snapshot_lxc = Client(_application_name, 'snapshot_lxc/')
    storage_hyperv = Client(_application_name, 'storage_hyperv/')
    subnet = Client(_application_name, 'subnet/')
    vm_hyperv = Client(_application_name, 'vm_hyperv/')
    vm_phantom = Client(_application_name, 'vm_phantom/')
    vpn_s2s = Client(_application_name, 'vpn_s2s/')
    vrf = Client(_application_name, 'vrf/')
    vrf_phantom = Client(_application_name, 'vrf_phantom/')

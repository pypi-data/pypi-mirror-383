[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tensorcontainer"
version = "0.8.3.dev20251012111025"
description = "TensorDict-like functionality for PyTorch with PyTree compatibility and torch.compile support"
authors = [{name="Tim Joseph", email="tim@mctigger.com"}]
license = {text = "MIT"}
dependencies = [
    "torch>=2.6"
]
readme = "README.md"
requires-python = ">=3.9"
keywords = ["deep learning", "tensordict", "pytorch"]
urls = {Homepage = "https://github.com/mctigger/tensor-container"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.2,<8.0",
  "pytest-cov",
  "ruff"
]



[tool.setuptools.packages.find]
where = ["src"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--tb=short",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

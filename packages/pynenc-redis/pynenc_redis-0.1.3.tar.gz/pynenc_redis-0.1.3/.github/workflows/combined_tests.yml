name: CombinedTests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        run: uv sync --group tests --group monitor

      - name: Run unit tests with coverage
        run: uv run coverage run -m pytest tests/unit

      - run: uv run coverage report
      - run: uv run coverage html --show-contexts --title "Unit Test Coverage for ${{ github.sha }}"

      - name: Upload unit test coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-unit
          path: htmlcov

      - name: Prepare unit coverage file for upload
        run: |
          cp .coverage coverage.unit
          ls -la coverage.unit

      - name: Upload unit test coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-unit
          path: coverage.unit

  integration-tests:
    runs-on: ubuntu-latest
    container: python:3.11.7
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        run: uv sync --group tests --group monitor

      - name: Run integration tests with coverage
        run: uv run coverage run -m pytest tests/integration

      - run: uv run coverage report
      - run: uv run coverage html --show-contexts --title "Integration Test Coverage for ${{ github.sha }}"

      - name: Upload integration test coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-integration
          path: htmlcov

      - name: Prepare integration coverage file for upload
        run: |
          cp .coverage coverage.integration
          ls -la coverage.integration

      - name: Upload integration test coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-integration
          path: coverage.integration

  all-tests-completed:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"

      - name: Install dependencies
        run: uv sync --group tests --group monitor

      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "coverage-data-*"
          path: .
          merge-multiple: true

      - name: List downloaded files (debug)
        run: find . -type f -name 'coverage.*'

      - name: Combine coverage data
        run: uv run coverage combine coverage.unit coverage.integration

      - run: uv run coverage report
      - run: uv run coverage html --show-contexts --title "Combined Test Coverage"

      - name: Upload combined test coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

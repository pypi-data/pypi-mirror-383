import pytest
from models import Base
from pytest_alembic import MigrationContext
from pytest_mock_resources import PostgresConfig, create_postgres_fixture

from sqlalchemy_declarative_extensions.view.compare import compare_views

alembic_engine = create_postgres_fixture(scope="function", engine_kwargs={"echo": True})


@pytest.fixture(scope="session")
def pmr_postgres_config():
    return PostgresConfig(image="postgres:13", port=None, ci_port=None)


def test_apply_autogenerated_revision(alembic_runner: MigrationContext, alembic_engine):
    alembic_runner.migrate_up_one()

    # Create the view in an autogenerated revision
    alembic_runner.generate_revision(autogenerate=True, prevent_file_generation=False)
    alembic_runner.migrate_up_one()

    # Now a comparison should yield no results, because the view def has not changed.
    with alembic_engine.connect() as conn:
        result = compare_views(conn, views=Base.views)
    assert result == []

[project]
name = "cloudevents-pydantic"
dynamic = ["version"]
description = "An implementation of the CloudEvents spec using Pydantic V2"
authors = [{ name = "Federico Busetti", email = "729029+febus982@users.noreply.github.com" }]
requires-python = ">=3.9,<3.15"
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Typing :: Typed",
]
dependencies = [
    "cloudevents>=1.11.0,<2",
    "pydantic>=2.9.1,<3",
    "python-ulid>=3.0.0,<4",
]

[project.urls]
Homepage = "https://febus982.github.io/cloudevents-pydantic"
Repository = "https://github.com/febus982/cloudevents-pydantic"

[dependency-groups]
dev = [
    "coverage>=6.5.0",
    "jsonschema>=4.23.0,<5",
    "mkdocs>=1.4.3",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-awesome-pages-plugin",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-material>=9.1.16",
    "mike>=2.0.0",
    "mypy>=0.990",
    "pymdown-extensions>=10.0.1",
    "pytest>=8.0.0,<9",
    "pytest-cov>=4.0.0",
    "pytest-factoryboy>=2.5.0",
    "pytest-xdist>=3.0.2",
    "ruff>=0.0.263",
    "tox>=4.12.1",
    "tox-uv>=1.26.0",
    "uv-dynamic-versioning>=0.8.2",
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["cloudevents_pydantic"]

[tool.hatch.build.targets.wheel]
include = ["cloudevents_pydantic"]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.hooks.version]
path = "cloudevents_pydantic/version.py"

[tool.coverage.run]
branch = true
source = ["cloudevents_pydantic"]
omit = [
    "cloudevents_pydantic/version.py",
]

[tool.coverage.report]
fail_under = 100
exclude_also = [
    "pragma: no cover",
    "pass",
    "\\.\\.\\.",
    ]

[tool.mypy]
files = "cloudevents_pydantic"
python_version = "3.9"
plugins = "pydantic.mypy"

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "6.0"
addopts = "-n auto --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.ruff]
extend-exclude = ["docs", ".tox"]
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "S",  # flake8-bandit
    "RUF",  # ruff-specific-rules
]
# Ignoring rules problematic with formatter
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports on init files
"tests/**/*.py" = ["S101"]  # Allow assert usage on tests

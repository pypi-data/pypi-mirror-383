<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AIAssistantCustomInstructionsStorage">
    <option name="instructions">
      <map>
        <entry key="AIAssistant.VCS.GenerateCommitMessage">
          <value>
            <AIAssistantStoredInstruction>
              <option name="actionId" value="AIAssistant.VCS.GenerateCommitMessage" />
              <option name="content" value="Write a single, emoji-prefixed, imperative commit subject that matches this repository’s style. Keep the subject under ~60 characters, no trailing period. Prefer small, focused commits and human-friendly language. Use lowercase after the emoji.&#10;&#10;Format:&#10;- Subject line only for simple changes: `EMOJI short imperative summary`&#10;- Optional body only when it adds necessary context (what/why, not how). Wrap body at ~72 chars. Avoid boilerplate.&#10;- Do not add scope tags like `feat:` or `fix:`; use the emoji as the category indicator.&#10;- Don’t end the subject with punctuation.&#10;- Prefer multiple atomic commits over one omnibus commit.&#10;&#10;Emoji categories to choose from:&#10;&#10;| Emoji | Description |&#10;|---|---|&#10;|  | Simple fix for a non-critical issue. |&#10;| ⚗️ | Perform experiments. |&#10;| ️ | Update code due to external API changes. |&#10;| ️ | Critical hotfix. |&#10;| ⬇️ | Downgrade dependencies. |&#10;| ⬆️ | Upgrade dependencies. |&#10;|  | Improve structure / format of the code. |&#10;|  | Write code drunkenly. |&#10;|  | Add or update assets. |&#10;|  | Release / Version tags. |&#10;|  | Introduce breaking changes. |&#10;|  | Infrastructure related changes. |&#10;|  | Fix a bug. |&#10;| ️ | Make architectural changes. |&#10;|  | Add or update comments in source code. |&#10;|  | Add or update contributor(s). |&#10;|  | Add or update snapshots. |&#10;| ️ | Perform database related changes. |&#10;|  | Add or update analytics or track code. |&#10;|  | Improve user experience / usability. |&#10;|  | Add or update secrets. |&#10;|  | Mock things. |&#10;| ⚰️ | Remove dead code. |&#10;|  | Work in progress. |&#10;|  | Add or update CI build system. |&#10;|  | Add or update animations and transitions. |&#10;|  | Add or update an easter egg. |&#10;|  | Remove code or files. |&#10;|  | Internationalization and localization. |&#10;|  | Catch errors. |&#10;|  | Fix CI Build. |&#10;|  | Add or update development scripts. |&#10;| ➖ | Remove a dependency. |&#10;| ➕ | Add a dependency. |&#10;|  | Work on responsive design. |&#10;| ️ | Add or update types. |&#10;|  | Add or update the UI and style files. |&#10;| ️ | Fix security or privacy issues. |&#10;|  | Add or update logs. |&#10;| ️ | Improve SEO. |&#10;|  | Add or update documentation. |&#10;|  | Add sponsorships or money related infrastructure. |&#10;|  | Data exploration/inspection. |&#10;|  | Remove logs. |&#10;|  | Add or update business logic. |&#10;| ️ | Add or update compiled files or packages. |&#10;|  | Add or update license. |&#10;|  | Work on code related to authorization, roles and permissions. |&#10;| ✏️ | Fix typos. |&#10;|  | Write bad code that needs to be improved. |&#10;|  | Pin dependencies to specific versions. |&#10;| ♻️ | Refactor code. |&#10;| ⏪️ | Revert changes. |&#10;|  | Deploy stuff. |&#10;|  | Fix compiler / linter warnings. |&#10;|  | Add or update code related to validation. |&#10;|  | Add or update a .gitignore file. |&#10;|  | Add or update seed files. |&#10;| ✨ | Introduce new features. |&#10;|  | Add or update text and literals. |&#10;|  | Add or update healthcheck. |&#10;|  | Begin a project. |&#10;| ‍ | Improve developer experience. |&#10;|  | Add a failing test. |&#10;|  | Add or update code related to multithreading or concurrency. |&#10;|  | Add, update, or remove feature flags. |&#10;|  | Move or rename resources (e.g.: files, paths, routes). |&#10;|  | Merge branches. |&#10;| ️ | Deprecate code that needs to be cleaned up. |&#10;| ♿️ | Improve accessibility. |&#10;| ✅ | Add, update, or pass tests. |&#10;|  | Add or update configuration files. |&#10;| ⚡️ | Improve performance. |&#10;&#10;Subjects should look like these real examples from the repo:&#10;- ` release 4.9.4`&#10;- ` deploy 4.9.2`&#10;- ` fix sorting on colormatch results page`&#10;- ` fix history issue and regaining lost tray`&#10;- ` fix collection mode exiting when searching`&#10;- ` fix grab / grabbing cursor`&#10;- ` testing and moving computers`&#10;- `⬆️ Bump django-htmx from 1.23.2 to 1.24.1`&#10;&#10;Guidelines for dependency bumps:&#10;- Use `⬆️ Bump &lt;package&gt; from &lt;old&gt; to &lt;new&gt;` in the subject.&#10;- If you include a body, briefly note changelog/links and whether it’s major/minor.&#10;&#10;Guidelines for releases/deploys:&#10;- ` release X.Y.Z` for tagging a new version.&#10;- ` deploy X.Y.Z` for pushing that version to production.&#10;&#10;Tone and style:&#10;- Imperative mood: “add”, “fix”, “update”, “bump”, “remove”.&#10;- Keep it concise and specific; mention the user-visible area if relevant.&#10;- Lowercase after the emoji unless a proper noun or version string requires caps.&#10;&#10;Templates:&#10;```&#10;EMOJI short imperative summary&#10;&#10;[Optional body: what changed and why; wrap at ~72 chars.]&#10;```&#10;&#10;```&#10; release X.Y.Z&#10;```&#10;&#10;```&#10;⬆️ Bump package-name from A.B.C to D.E.F&#10;&#10;- optional: one-line reason or link to changelog&#10;```&#10;&#10;```&#10; fix &lt;specific bug or behavior&gt;&#10;&#10;- optional: brief why the bug happened or test added&#10;```&#10;&#10;Decision hints:&#10;- Is it a user-facing bug fix? → &#10;- Is it a release or deploy with a version? → &#10;- Is it only a dependency version change? → ⬆️&#10;- Is it purely visual/CSS/UI? → &#10;- Is it partial or exploratory work? → &#10;- Otherwise choose the best-fit from the additional emojis.&#10;&#10;More example subjects to emulate:&#10;- `✨ add quick filter to inventory table`&#10;- `♻️ refactor swatch query for readability`&#10;- ` add tests for library search pagination`&#10;- ` document test settings and make targets`&#10;- ` update pytest config for coverage html`&#10;- ` remove unused static vendor files`&#10;&#10;Do not:&#10;- Do not use trailing periods or exclamation marks.&#10;- Do not include scopes like `(app):` or `feat:` prefixes.&#10;- Do not write long, multi-paragraph bodies unless truly necessary.&#10;- Do not bundle unrelated changes under one commit." />
            </AIAssistantStoredInstruction>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a9fabf8c-b6c5-4401-b454-8b4b1454a800" name="Changes" comment="🎨 update media dir handling and improve middleware checks&#10;&#10;- Added creation of non-existent media directories in `main.py`.&#10;- Commented out unused code in `example.py` for clarity.&#10;- Introduced `CheckPydanticInstalled` for runtime middleware checks.">
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/_sidebar.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/_sidebar.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 6
}]]></component>
  <component name="ProjectId" id="33wSM5pGii5D6M37Io8Ogx1gJ9W" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "com.github.patou.gitmoji.display-icon": "emoji",
    "com.github.patou.gitmoji.text-after-unicode": " ",
    "com.github.patou.gitmoji.use-unicode": "true",
    "git-widget-placeholder": "file-uploads",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "//wsl.localhost/Ubuntu/home/jkaufeld/code/spiderweb",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.github.patou.gitmoji.config",
    "to.speed.mode.migration.done": "true",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-9c94529fcfe0-JavaScript-PY-252.26199.168" />
        <option value="bundled-python-sdk-b3d66beaba9a-c6efb3732140-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.26199.168" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a9fabf8c-b6c5-4401-b454-8b4b1454a800" name="Changes" comment="" />
      <created>1760226589561</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1760226589561</updated>
      <workItem from="1760226590671" duration="15121000" />
    </task>
    <task id="LOCAL-00001" summary="👽️ add optional pydantic support&#10;&#10;Pydantic is now an optional dependency, and the middleware provides &#10;proper import guards and fallback behavior if Pydantic is not installed. &#10;Updated docs to clarify installation and configuration steps.">
      <option name="closed" value="true" />
      <created>1760228087824</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1760228087824</updated>
    </task>
    <task id="LOCAL-00002" summary="🔥 remove peewee and migrate to sqlalchemy">
      <option name="closed" value="true" />
      <created>1760233742981</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1760233742981</updated>
    </task>
    <task id="LOCAL-00003" summary="📝 update database docs and improve cookie parsing robustness">
      <option name="closed" value="true" />
      <created>1760233755993</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1760233755993</updated>
    </task>
    <task id="LOCAL-00004" summary="💥 bump version to 2.0.0 because of database switch">
      <option name="closed" value="true" />
      <created>1760234220582</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1760234220582</updated>
    </task>
    <task id="LOCAL-00005" summary="🧱 switch to hatchling, update docs and dev instructions">
      <option name="closed" value="true" />
      <created>1760235826035</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1760235826035</updated>
    </task>
    <task id="LOCAL-00006" summary="🔥 remove poetry.lock file">
      <option name="closed" value="true" />
      <created>1760238795504</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1760238795504</updated>
    </task>
    <task id="LOCAL-00007" summary="🎨 add Makefile for common tasks and sync constants version">
      <option name="closed" value="true" />
      <created>1760238816843</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1760238816843</updated>
    </task>
    <task id="LOCAL-00008" summary="🎨 add Makefile for common tasks and sync constants version">
      <option name="closed" value="true" />
      <created>1760238833128</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1760238833128</updated>
    </task>
    <task id="LOCAL-00009" summary="🎨 clean up imports and reformat test cases">
      <option name="closed" value="true" />
      <created>1760238853186</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1760238853186</updated>
    </task>
    <task id="LOCAL-00010" summary="⬆️ add pytest-cov, tomli, and multipart dependencies&#10;&#10;- Added `pytest-cov` for extended test coverage reporting.&#10;- Included `tomli` as an optional dependency for TOML support.&#10;- Added `multipart` for handling multipart form data.&#10;- Updated SQLite engine to use `NullPool` and ensured resource cleanup with `atexit`.">
      <option name="closed" value="true" />
      <created>1760239937075</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1760239937075</updated>
    </task>
    <task id="LOCAL-00011" summary="✅ add hypothesis-based tests for core components&#10;&#10;- Introduced property-based tests for `create_sqlite_engine`, exceptions,&#10;  `LocalServerMixin`, secrets handling, and server checks.&#10;- Ensured coverage of edge cases and validation logic.">
      <option name="closed" value="true" />
      <created>1760240728794</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1760240728794</updated>
    </task>
    <task id="LOCAL-00012" summary="🙈 add spiderweb.db to .gitignore">
      <option name="closed" value="true" />
      <created>1760278955064</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1760278955064</updated>
    </task>
    <task id="LOCAL-00013" summary="🔀 Merge branch 'main' of github.com:itsthejoker/spiderweb into file-uploads">
      <option name="closed" value="true" />
      <created>1760279307725</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1760279307725</updated>
    </task>
    <task id="LOCAL-00014" summary="🙈 remove JetBrains IDE config files from .gitignore">
      <option name="closed" value="true" />
      <created>1760279469098</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1760279469098</updated>
    </task>
    <task id="LOCAL-00015" summary="✅ add hypothesis-based tests for MediaFile&#10;&#10;- Added extensive property-based tests for `MediaFile` to validate attribute &#10;  passthrough, file operations, and unique saved paths on collisions.&#10;- Utilized `FakeMultipartPart` and `FakeServer` for mocking dependencies.">
      <option name="closed" value="true" />
      <created>1760280037173</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1760280037173</updated>
    </task>
    <task id="LOCAL-00016" summary="🎨 reformat tests and clean up imports&#10;&#10;- Removed unnecessary `urlparse` import.&#10;- Reformatted test cases for better readability and consistency.&#10;- Added `multipart&gt;=1.3.0` as a dependency.">
      <option name="closed" value="true" />
      <created>1760280110160</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1760280110160</updated>
    </task>
    <task id="LOCAL-00017" summary="🎨 update media dir handling and improve middleware checks&#10;&#10;- Added creation of non-existent media directories in `main.py`.&#10;- Commented out unused code in `example.py` for clarity.&#10;- Introduced `CheckPydanticInstalled` for runtime middleware checks.">
      <option name="closed" value="true" />
      <created>1760281280659</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1760281280659</updated>
    </task>
    <option name="localTasksCounter" value="18" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="️ add optional pydantic support&#10;&#10;Pydantic is now an optional dependency, and the middleware provides &#10;proper import guards and fallback behavior if Pydantic is not installed. &#10;Updated docs to clarify installation and configuration steps." />
    <MESSAGE value=" remove peewee and migrate to sqlalchemy" />
    <MESSAGE value=" update database docs and improve cookie parsing robustness" />
    <MESSAGE value=" bump version to 2.0.0 because of database switch" />
    <MESSAGE value=" switch to hatchling, update docs and dev instructions" />
    <MESSAGE value=" remove poetry.lock file" />
    <MESSAGE value=" add Makefile for common tasks and sync constants version" />
    <MESSAGE value=" clean up imports and reformat test cases" />
    <MESSAGE value="⬆️ add pytest-cov, tomli, and multipart dependencies&#10;&#10;- Added `pytest-cov` for extended test coverage reporting.&#10;- Included `tomli` as an optional dependency for TOML support.&#10;- Added `multipart` for handling multipart form data.&#10;- Updated SQLite engine to use `NullPool` and ensured resource cleanup with `atexit`." />
    <MESSAGE value="✅ add hypothesis-based tests for core components&#10;&#10;- Introduced property-based tests for `create_sqlite_engine`, exceptions,&#10;  `LocalServerMixin`, secrets handling, and server checks.&#10;- Ensured coverage of edge cases and validation logic." />
    <MESSAGE value=" add spiderweb.db to .gitignore" />
    <MESSAGE value=" Merge branch 'main' of github.com:itsthejoker/spiderweb into file-uploads" />
    <MESSAGE value=" remove JetBrains IDE config files from .gitignore" />
    <MESSAGE value="✅ format hypothesis test decorators for readability" />
    <MESSAGE value="✅ add hypothesis-based tests for MediaFile&#10;&#10;- Added extensive property-based tests for `MediaFile` to validate attribute &#10;  passthrough, file operations, and unique saved paths on collisions.&#10;- Utilized `FakeMultipartPart` and `FakeServer` for mocking dependencies." />
    <MESSAGE value=" remove unused imports and multipart dependency&#10;&#10;- Cleaned up unused imports across multiple files.&#10;- Removed `multipart` dependency since it is no longer required." />
    <MESSAGE value=" reformat tests and clean up imports&#10;&#10;- Removed unnecessary `urlparse` import.&#10;- Reformatted test cases for better readability and consistency.&#10;- Added `multipart&gt;=1.3.0` as a dependency." />
    <MESSAGE value=" update media dir handling and improve middleware checks&#10;&#10;- Added creation of non-existent media directories in `main.py`.&#10;- Commented out unused code in `example.py` for clarity.&#10;- Introduced `CheckPydanticInstalled` for runtime middleware checks." />
    <option name="LAST_COMMIT_MESSAGE" value=" update media dir handling and improve middleware checks&#10;&#10;- Added creation of non-existent media directories in `main.py`.&#10;- Commented out unused code in `example.py` for clarity.&#10;- Introduced `CheckPydanticInstalled` for runtime middleware checks." />
  </component>
</project>
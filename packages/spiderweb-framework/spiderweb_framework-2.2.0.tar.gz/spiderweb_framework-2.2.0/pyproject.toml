[project]
name = "spiderweb-framework"
version = "2.2.0"
description = "A small web framework, just big enough for a spider."
authors = [{name="Joe Kaufeld", email="opensource@joekaufeld.com"}]
readme = "README.md"
packages = [{include = "spiderweb"}]
license = "MIT"
requires-python = ">=3.11"
exclude = [
    "tests/*",
    "example.py",
    "example2.py",
    "static_files/*",
    "templates/*",
    "example_middleware.py",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "advanced-alchemy>=1.6.3,<2.0.0",
    "cryptography>=46.0.2",
    "email-validator>=2.3.0",
    "jinja2>=3.1.6",
    "multipart>=1.3.0",
    "sqlalchemy>=2.0.44",
]

[project.optional-dependencies]
pydantic = ["pydantic>=2.8.2,<3"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.9.0",
    "coverage>=7.10.7",
    "gunicorn>=23.0.0",
    "hypothesis>=6.140.3",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.0",
]

[tool.hatch.build.targets.wheel]
packages = ["spiderweb/spiderweb-framework"]

[project.urls]
Homepage = "https://github.com/itsthejoker/spiderweb"
Documentation = "https://github.com/itsthejoker/spiderweb"
Repository = "https://git.joekaufeld.com/jkaufeld/spiderweb"
"Bug Tracker" = "https://github.com/itsthejoker/spiderweb/issues"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["--maxfail=2", "-rf"]

[tool.coverage.run]
branch = true
omit = ["conftest.py", "spiderweb/tests/*"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Type checking lines are never run:
    "if TYPE_CHECKING:",
]

ignore_errors = true

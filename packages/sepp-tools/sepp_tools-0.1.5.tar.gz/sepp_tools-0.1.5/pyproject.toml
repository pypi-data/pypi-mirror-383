[project]
name = "sepp_tools"
version = "0.1.5"
description = "Pdf transport orders reading and automatic soloplan order creation"
authors = [{ name="Kolibrain", email="info@kolibrain.de" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "googlemaps", "imaplib2", "numpy", "openai", "openpyxl", "pandas", "pdf2image", "pillow", "pre-commit", "pyMuPDF", "PyPDF2", "pytest", "python-dotenv", "python-Levenshtein", "requests", "requests-toolbelt", "transformers", "urllib3", "beautifulsoup4", "datetime", "django-environ", "exchangelib", "fpdf", "geopy"
]


[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["src/tests"]


[tool.ruff.lint]
select = ["ALL", "PLR1702"]

ignore = [
    "ISC001",  # Checks for implicitly concatenated strings on a single line. Ignored on purpose as it may cause conflicts with formatter
    "COM812",  # Checks for the absence of trailing commas. Ignored on purpose as it may cause conflicts with formatter
    "S311",  # Non-cryptographic random generator
    "S101",  # Checks for uses of the assert keyword.
    "D100",  # Checks for undocumented public module definitions. # Ignored because it is flagging system dependencies.
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in internal method
    "D104",  # Missing docstring in special method
    "D105",  # Missing docstring in magic method
    "D205",  # 1 blank line required between summary line and description
    "D400",  # Checks for docstrings in which the first line does not end in a period.
    "D401",  # First line of docstring should be in imperative mood
    "D404",  # First word of docstring should be in imperative mood
    "E501",  # Line length. We have ruff-format (ruff-format seems not to work on # comments) did not find an autofix for this, therefore ignoring.
    "FA102", # We assume to use Python versions >= 3.10
    "S301", # We only load stuff that we wrap ourselves
    "PLR0913", # We just need many args...
    "BLE001", # We can catch all exceptions
    "SLF001", # Need for unit-tests
    "N818", # Using exceptions as a control-flow
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

extend-select = ["D212"]

# Turn on preview to activate more ruff checks
preview = true

# Only activate the preview rules that are explicitly selected
explicit-preview-rules = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.black]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.extend-per-file-ignores]
"test*.py" = [
    "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
]


[tool.mypy]
mypy_path = ["src", "tests"]
disable_error_code = ["import-untyped"]
python_version = "3.10"

[mypy-openai]
ignore_errors = true
disable_error_code = ["arg-type"]

[[tool.mypy.overrides]]
module = ["pathos.*","sklearn.*", "openai"]
ignore_missing_imports = true
ignore_errors = true
disable_error_code = ["arg-type"]

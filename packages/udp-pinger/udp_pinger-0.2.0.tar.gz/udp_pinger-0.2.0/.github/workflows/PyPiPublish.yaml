# This file adapts maturin's generated workflow to be gated by Rust CI
# and to only publish when a semver tag vX.Y.Z points at the tested commit.
name: PyPi Publish

on:
  workflow_run:
    workflows: ["Rust CI"]
    types: [completed]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.workflow_run.head_sha }}
  cancel-in-progress: true

jobs:
  precheck:
    name: Detect release tag & verify
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout tested commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Find semver tag on this commit
        id: tag
        shell: bash
        run: |
          TAG="$(git tag --points-at "${{ github.event.workflow_run.head_sha }}" | head -n1 || true)"
          if [[ -z "$TAG" ]]; then
            echo "No tag points at this commit; skip PyPI publish."
            echo "tag=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag '$TAG' is not semver vX.Y.Z; skip PyPI publish."
            echo "tag=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

  linux:
    if: ${{ needs.precheck.outputs.tag != '' }}
    needs: precheck
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.10
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
          manylinux: auto
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist -i python3.13t
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    if: ${{ needs.precheck.outputs.tag != '' }}
    needs: precheck
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
          manylinux: musllinux_1_2
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist -i python3.13t
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    if: ${{ needs.precheck.outputs.tag != '' }}
    needs: precheck
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13t
          architecture: ${{ matrix.platform.target }}
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist -i python3.13t
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    if: ${{ needs.precheck.outputs.tag != '' }}
    needs: precheck
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist -i python3.13t
          sccache: ${{ !startsWith(github.event.workflow_run.head_branch, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    if: ${{ needs.precheck.outputs.tag != '' }}
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    if: ${{ needs.precheck.outputs.tag != '' }}
    needs: [precheck, linux, musllinux, windows, macos, sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write      # sign release artifacts
      contents: write      # upload release artifacts
      attestations: write  # generate build attestations
    steps:
      - uses: actions/download-artifact@v4

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

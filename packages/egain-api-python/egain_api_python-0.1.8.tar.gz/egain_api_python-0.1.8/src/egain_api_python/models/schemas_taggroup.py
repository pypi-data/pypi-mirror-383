"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .schemas_tag import SchemasTag, SchemasTagTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SchemasTagGroupTypedDict(TypedDict):
    id: NotRequired[str]
    r"""The unique identifier for the tag group."""
    name: NotRequired[str]
    r"""Name of the tag group."""
    tag_group: NotRequired[List[SchemasTagGroupTypedDict]]
    tag: NotRequired[List[SchemasTagTypedDict]]


class SchemasTagGroup(BaseModel):
    id: Optional[str] = None
    r"""The unique identifier for the tag group."""

    name: Optional[str] = None
    r"""Name of the tag group."""

    tag_group: Annotated[
        Optional[List[SchemasTagGroup]], pydantic.Field(alias="tagGroup")
    ] = None

    tag: Optional[List[SchemasTag]] = None

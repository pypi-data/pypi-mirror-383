"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .components_schemas_tag import ComponentsSchemasTag, ComponentsSchemasTagTypedDict
from .components_schemas_taggroup import (
    ComponentsSchemasTagGroup,
    ComponentsSchemasTagGroupTypedDict,
)
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ComponentsSchemasTagCategoryTypedDict(TypedDict):
    r"""Tag Categories for Interest configured for a portal."""

    name: NotRequired[str]
    r"""Name of the Tag Category"""
    id: NotRequired[str]
    r"""The ID of the Tag Category.<br>A Tag Category ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits."""
    tag: NotRequired[List[ComponentsSchemasTagTypedDict]]
    tag_group: NotRequired[List[ComponentsSchemasTagGroupTypedDict]]


class ComponentsSchemasTagCategory(BaseModel):
    r"""Tag Categories for Interest configured for a portal."""

    name: Optional[str] = None
    r"""Name of the Tag Category"""

    id: Optional[str] = None
    r"""The ID of the Tag Category.<br>A Tag Category ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits."""

    tag: Optional[List[ComponentsSchemasTag]] = None

    tag_group: Annotated[
        Optional[List[ComponentsSchemasTagGroup]], pydantic.Field(alias="tagGroup")
    ] = None

"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .link import Link, LinkTypedDict
from egain_api_python.types import BaseModel
from typing import Literal, Optional
from typing_extensions import NotRequired, TypedDict


ArticleAttachmentType = Literal[
    "INTERNAL",
    "EXTERNAL",
]
r"""The type of attachment."""


class ArticleAttachmentTypedDict(TypedDict):
    id: NotRequired[str]
    r"""The ID of the attachment."""
    name: NotRequired[str]
    r"""The name of the attachment."""
    size: NotRequired[int]
    r"""The size of the attachment in bytes. The maximum size is limited to 25MB."""
    type: NotRequired[ArticleAttachmentType]
    r"""The type of attachment."""
    link: NotRequired[LinkTypedDict]
    r"""Defines the relationship between this resource and another object."""


class ArticleAttachment(BaseModel):
    id: Optional[str] = None
    r"""The ID of the attachment."""

    name: Optional[str] = None
    r"""The name of the attachment."""

    size: Optional[int] = None
    r"""The size of the attachment in bytes. The maximum size is limited to 25MB."""

    type: Optional[ArticleAttachmentType] = None
    r"""The type of attachment."""

    link: Optional[Link] = None
    r"""Defines the relationship between this resource and another object."""

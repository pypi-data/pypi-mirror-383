"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .articleresult import ArticleResult, ArticleResultTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FeedbackArticleForSuggestionTypedDict(TypedDict):
    r"""This schema contains information about a Suggestion."""

    id: NotRequired[str]
    r"""The ID of the Suggestion. A Suggestion ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits."""
    name: NotRequired[str]
    r"""The name of the Suggestion."""
    related_articles: NotRequired[List[ArticleResultTypedDict]]
    r"""Related Articles for the Suggestion."""


class FeedbackArticleForSuggestion(BaseModel):
    r"""This schema contains information about a Suggestion."""

    id: Optional[str] = None
    r"""The ID of the Suggestion. A Suggestion ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits."""

    name: Optional[str] = None
    r"""The name of the Suggestion."""

    related_articles: Annotated[
        Optional[List[ArticleResult]], pydantic.Field(alias="relatedArticles")
    ] = None
    r"""Related Articles for the Suggestion."""

"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .attachmentsummary import AttachmentSummary, AttachmentSummaryTypedDict
from .link import Link, LinkTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AttachmentsTypedDict(TypedDict):
    r"""This schema contains the definition of Attachments."""

    count: NotRequired[int]
    r"""The number of Attachments in the list."""
    link: NotRequired[LinkTypedDict]
    r"""Defines the relationship between this resource and another object."""
    attachments: NotRequired[List[AttachmentSummaryTypedDict]]
    r"""The list of Attachments."""


class Attachments(BaseModel):
    r"""This schema contains the definition of Attachments."""

    count: Optional[int] = None
    r"""The number of Attachments in the list."""

    link: Optional[Link] = None
    r"""Defines the relationship between this resource and another object."""

    attachments: Annotated[
        Optional[List[AttachmentSummary]], pydantic.Field(alias="Attachments")
    ] = None
    r"""The list of Attachments."""

"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .paginationinfo import PaginationInfo, PaginationInfoTypedDict
from .topictreenode import TopicTreeNode, TopicTreeNodeTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TopicTreeResultTypedDict(TypedDict):
    r"""This schema contains the result of topic tree"""

    topic_tree: NotRequired[List[TopicTreeNodeTypedDict]]
    pagination_info: NotRequired[PaginationInfoTypedDict]


class TopicTreeResult(BaseModel):
    r"""This schema contains the result of topic tree"""

    topic_tree: Annotated[
        Optional[List[TopicTreeNode]], pydantic.Field(alias="topicTree")
    ] = None

    pagination_info: Annotated[
        Optional[PaginationInfo], pydantic.Field(alias="paginationInfo")
    ] = None

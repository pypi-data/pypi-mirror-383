"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from egain_api_python.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ShortURLTypedDict(TypedDict):
    id: NotRequired[str]
    r"""The alphanumeric ID of the short URL.<br><br>A topic ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits."""
    template_name: NotRequired[str]
    r"""Name of template"""
    short_url_name: NotRequired[str]
    r"""Name of ShortURL"""
    is_default: NotRequired[bool]


class ShortURL(BaseModel):
    id: Optional[str] = None
    r"""The alphanumeric ID of the short URL.<br><br>A topic ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits."""

    template_name: Annotated[Optional[str], pydantic.Field(alias="templateName")] = None
    r"""Name of template"""

    short_url_name: Annotated[Optional[str], pydantic.Field(alias="shortURLName")] = (
        None
    )
    r"""Name of ShortURL"""

    is_default: Annotated[Optional[bool], pydantic.Field(alias="isDefault")] = None

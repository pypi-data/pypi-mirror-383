"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .topic import Topic, TopicTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TopicTreeNodeTypedDict(TypedDict):
    r"""This schema contains general information about the TopicTree."""

    topic: NotRequired[TopicTypedDict]
    r"""This schema contains general information about the topic."""
    topic_tree: NotRequired[List[TopicTreeNodeTypedDict]]


class TopicTreeNode(BaseModel):
    r"""This schema contains general information about the TopicTree."""

    topic: Optional[Topic] = None
    r"""This schema contains general information about the topic."""

    topic_tree: Annotated[
        Optional[List[TopicTreeNode]], pydantic.Field(alias="topicTree")
    ] = None

"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .acceptlanguage import AcceptLanguage
from egain_api_python.types import BaseModel
from egain_api_python.utils import FieldMetadata, HeaderMetadata, QueryParamMetadata
import io
import pydantic
from typing import IO, Union
from typing_extensions import Annotated, TypedDict


class UploadAttachmentRequestTypedDict(TypedDict):
    accept_language: AcceptLanguage
    r"""The Language locale accepted by the client (used for locale specific fields in resource representation and in error responses)."""
    signature: str
    r"""Signature data to upload attachment."""
    request_body: Union[bytes, IO[bytes], io.BufferedReader]


class UploadAttachmentRequest(BaseModel):
    accept_language: Annotated[
        AcceptLanguage,
        pydantic.Field(alias="Accept-Language"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ]
    r"""The Language locale accepted by the client (used for locale specific fields in resource representation and in error responses)."""

    signature: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""Signature data to upload attachment."""

    request_body: Annotated[
        Union[bytes, IO[bytes], io.BufferedReader], FieldMetadata(request=True)
    ]

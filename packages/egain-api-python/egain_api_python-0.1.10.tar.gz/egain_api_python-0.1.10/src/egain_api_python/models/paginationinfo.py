"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .link import Link, LinkTypedDict
from egain_api_python.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class PaginationInfoTypedDict(TypedDict):
    count: int
    r"""The total number of pages."""
    pagenum: int
    r"""The page number requested. Page numbers start from 1."""
    pagesize: int
    r"""The number of objects requested per page. The maximum number of objects per page is 75."""
    link: NotRequired[List[LinkTypedDict]]
    r"""Can include the *prev* and *next* link."""


class PaginationInfo(BaseModel):
    count: int
    r"""The total number of pages."""

    pagenum: int
    r"""The page number requested. Page numbers start from 1."""

    pagesize: int
    r"""The number of objects requested per page. The maximum number of objects per page is 75."""

    link: Optional[List[Link]] = None
    r"""Can include the *prev* and *next* link."""

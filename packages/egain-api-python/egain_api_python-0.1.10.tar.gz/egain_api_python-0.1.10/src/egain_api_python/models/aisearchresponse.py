"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .articleaisearchresult import ArticleAISearchResult, ArticleAISearchResultTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SearchResultsTypedDict(TypedDict):
    r"""Top search results with relevance scores"""

    article: NotRequired[List[ArticleAISearchResultTypedDict]]


class SearchResults(BaseModel):
    r"""Top search results with relevance scores"""

    article: Optional[List[ArticleAISearchResult]] = None


class AISearchResponseTypedDict(TypedDict):
    search_results: SearchResultsTypedDict
    r"""Top search results with relevance scores"""


class AISearchResponse(BaseModel):
    search_results: Annotated[SearchResults, pydantic.Field(alias="searchResults")]
    r"""Top search results with relevance scores"""

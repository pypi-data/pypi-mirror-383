"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from egain_api_python.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class StringAttributeValueTypedDict(TypedDict):
    r"""An attribute can have an external value such as a readable label, and an internal value such as a unique ID. This schema provides both the internal and external values for one attribute."""

    internal_value: NotRequired[str]
    r"""The internal value of the attribute."""
    external_value: NotRequired[str]
    r"""The external or public value of the attribute."""


class StringAttributeValue(BaseModel):
    r"""An attribute can have an external value such as a readable label, and an internal value such as a unique ID. This schema provides both the internal and external values for one attribute."""

    internal_value: Annotated[Optional[str], pydantic.Field(alias="internalValue")] = (
        None
    )
    r"""The internal value of the attribute."""

    external_value: Annotated[Optional[str], pydantic.Field(alias="externalValue")] = (
        None
    )
    r"""The external or public value of the attribute."""

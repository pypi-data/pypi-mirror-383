"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from egain_api_python.types import BaseModel
from typing import Literal, Optional
from typing_extensions import NotRequired, TypedDict


Name = Literal[
    "English (United States)",
    "English (United Kingdom)",
    "French (France)",
    "Spanish (Spain)",
    "Italian (Italy)",
    "German (Germany)",
    "Dutch (Netherlands)",
    "Portuguese (Brazil)",
    "Portuguese (Portugal)",
    "Danish (Denmark)",
    "Swedish (Sweden)",
    "Russian (Russia)",
    "French (Canada)",
    "Chinese (Simplified)",
    "Japanese (Japan)",
    "Korean (South Korea)",
]
r"""Name of the language."""


KbLanguageCode1 = Literal[
    "en-US",
    "en-GB",
    "fr-FR",
    "es-ES",
    "it-IT",
    "de-DE",
    "nl-NL",
    "pt-BR",
    "pt-PT",
    "da-DK",
    "sv-SE",
    "ru-RU",
    "fr-CA",
    "zh-CN",
    "ja-JP",
    "ko-KR",
]
r"""IETF code of the language."""


class KbLanguageTypedDict(TypedDict):
    name: NotRequired[Name]
    r"""Name of the language."""
    code: NotRequired[KbLanguageCode1]
    r"""IETF code of the language."""


class KbLanguage(BaseModel):
    name: Optional[Name] = None
    r"""Name of the language."""

    code: Optional[KbLanguageCode1] = None
    r"""IETF code of the language."""

"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .taggroups import TagGroups, TagGroupsTypedDict
from .tags import Tags, TagsTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TagCategoryTypedDict(TypedDict):
    r"""A tag category is a grouping of tags and tag groups."""

    name: NotRequired[str]
    r"""The name of the tag category."""
    id: NotRequired[str]
    r"""The ID of the tag category. A tag category ID is composed of a 4-letter prefix, followed by a dash and 4-15 digits."""
    tags: NotRequired[TagsTypedDict]
    tag_groups: NotRequired[TagGroupsTypedDict]


class TagCategory(BaseModel):
    r"""A tag category is a grouping of tags and tag groups."""

    name: Optional[str] = None
    r"""The name of the tag category."""

    id: Optional[str] = None
    r"""The ID of the tag category. A tag category ID is composed of a 4-letter prefix, followed by a dash and 4-15 digits."""

    tags: Optional[Tags] = None

    tag_groups: Annotated[Optional[TagGroups], pydantic.Field(alias="tagGroups")] = None

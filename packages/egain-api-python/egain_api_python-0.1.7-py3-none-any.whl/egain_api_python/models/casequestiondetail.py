"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .caseanswer import CaseAnswer, CaseAnswerTypedDict
from .casequestion import CaseQuestion, CaseQuestionTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CaseQuestionDetailTypedDict(TypedDict):
    question: CaseQuestionTypedDict
    answer: List[CaseAnswerTypedDict]
    r"""Answer of the question"""
    scoring_value: NotRequired[float]
    r"""Weightage of the question"""


class CaseQuestionDetail(BaseModel):
    question: CaseQuestion

    answer: List[CaseAnswer]
    r"""Answer of the question"""

    scoring_value: Annotated[Optional[float], pydantic.Field(alias="scoringValue")] = (
        None
    )
    r"""Weightage of the question"""

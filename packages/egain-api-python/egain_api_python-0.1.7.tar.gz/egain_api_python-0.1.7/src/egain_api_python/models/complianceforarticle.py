"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from egain_api_python.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class StartDateDateAndTimeTypedDict(TypedDict):
    r"""The start date for the Article."""

    date_: datetime
    r"""The date in the format <code>YYYY-MM-DDTHH:MM:SS</code>."""


class StartDateDateAndTime(BaseModel):
    r"""The start date for the Article."""

    date_: Annotated[datetime, pydantic.Field(alias="date")]
    r"""The date in the format <code>YYYY-MM-DDTHH:MM:SS</code>."""


class DueDateDateAndTimeTypedDict(TypedDict):
    r"""The end date for the Article."""

    date_: datetime
    r"""The date in the format <code>YYYY-MM-DDTHH:MM:SS</code>."""


class DueDateDateAndTime(BaseModel):
    r"""The end date for the Article."""

    date_: Annotated[datetime, pydantic.Field(alias="date")]
    r"""The date in the format <code>YYYY-MM-DDTHH:MM:SS</code>."""


class ComplianceForArticleTypedDict(TypedDict):
    r"""This schema contains the compliance details for an Article."""

    start_date: NotRequired[StartDateDateAndTimeTypedDict]
    r"""The start date for the Article."""
    due_date: NotRequired[DueDateDateAndTimeTypedDict]
    r"""The end date for the Article."""


class ComplianceForArticle(BaseModel):
    r"""This schema contains the compliance details for an Article."""

    start_date: Annotated[
        Optional[StartDateDateAndTime], pydantic.Field(alias="startDate")
    ] = None
    r"""The start date for the Article."""

    due_date: Annotated[
        Optional[DueDateDateAndTime], pydantic.Field(alias="dueDate")
    ] = None
    r"""The end date for the Article."""

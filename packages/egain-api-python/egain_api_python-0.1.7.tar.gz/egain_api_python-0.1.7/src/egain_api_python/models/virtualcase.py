"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .detailfield import DetailField, DetailFieldTypedDict
from .displayfield import DisplayField, DisplayFieldTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class VirtualCaseTypedDict(TypedDict):
    id: NotRequired[str]
    r"""ID of the case"""
    detail_field: NotRequired[List[DetailFieldTypedDict]]
    r"""detail fields"""
    display_field: NotRequired[List[DisplayFieldTypedDict]]
    r"""display fields"""
    dynamic_cluster_id: NotRequired[str]
    r"""Cluster id"""
    title: NotRequired[str]
    r"""name of the case"""
    virtual_case_id: NotRequired[str]
    r"""virtual case id"""


class VirtualCase(BaseModel):
    id: Optional[str] = None
    r"""ID of the case"""

    detail_field: Annotated[
        Optional[List[DetailField]], pydantic.Field(alias="detailField")
    ] = None
    r"""detail fields"""

    display_field: Annotated[
        Optional[List[DisplayField]], pydantic.Field(alias="displayField")
    ] = None
    r"""display fields"""

    dynamic_cluster_id: Annotated[
        Optional[str], pydantic.Field(alias="dynamicClusterId")
    ] = None
    r"""Cluster id"""

    title: Optional[str] = None
    r"""name of the case"""

    virtual_case_id: Annotated[Optional[str], pydantic.Field(alias="virtualCaseId")] = (
        None
    )
    r"""virtual case id"""

"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .tagcategory import TagCategory, TagCategoryTypedDict
from egain_api_python.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PublishViewTagCategoryTypedDict(TypedDict):
    tag_category: NotRequired[List[TagCategoryTypedDict]]


class PublishViewTagCategory(BaseModel):
    tag_category: Annotated[
        Optional[List[TagCategory]], pydantic.Field(alias="tagCategory")
    ] = None


class PublishViewTypedDict(TypedDict):
    name: NotRequired[str]
    r"""name of the publish view"""
    id: NotRequired[str]
    tag_categories: NotRequired[List[PublishViewTagCategoryTypedDict]]
    r"""Tag categories are comprised of both tags and tag groups.<br><br>Note that the total number of tag and tag groups cannot exceed 20."""


class PublishView(BaseModel):
    name: Optional[str] = None
    r"""name of the publish view"""

    id: Optional[str] = None

    tag_categories: Annotated[
        Optional[List[PublishViewTagCategory]], pydantic.Field(alias="tagCategories")
    ] = None
    r"""Tag categories are comprised of both tags and tag groups.<br><br>Note that the total number of tag and tag groups cannot exceed 20."""

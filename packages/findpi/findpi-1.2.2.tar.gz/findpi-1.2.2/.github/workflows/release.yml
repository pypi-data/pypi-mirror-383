name: Release and Publish to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Build package
      run: uv build

    - name: Install twine
      run: uv add twine --dev

    - name: Verify version matches tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        TAG_VERSION=$(echo $GITHUB_REF | sed 's|refs/tags/v||')
        PACKAGE_VERSION=$(uv run python -c "import findpi; print(findpi.__version__)")
        echo "Tag version: $TAG_VERSION"
        echo "Package version: $PACKAGE_VERSION"
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "Version mismatch: tag=$TAG_VERSION, package=$PACKAGE_VERSION"
          exit 1
        fi

    - name: List dist contents
      run: ls -la dist/

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: uv run twine upload dist/*

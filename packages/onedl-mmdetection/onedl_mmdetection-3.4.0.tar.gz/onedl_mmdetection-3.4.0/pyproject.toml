
[project]
name = "onedl-mmdetection"
version = "3.4.0"
description = "OneDL Detection Toolbox and Benchmark"
readme = "README.md"
authors = [
    { name = "OneDL MMDetection Contributors", email = "oss-team@vbti.nl" }
]
license = "Apache-2.0"
requires-python = ">=3.10"
keywords = ["computer vision", "object detection", "instance segmentation"]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "imgaug",
    "matplotlib",
    "numpy",
    "pycocotools",
    "scipy",
    "shapely",
    "six",
    "terminaltables",
    "tqdm"
]

[dependency-groups]
build = [
    "cython",
    "numpy"
]
tests = [
    "asynctest",
    "cityscapesscripts",
    "codecov",
    "faster-coco-eval",
    "imagecorruptions",
    "instaboostfast",
    "interrogate",
    "kwarray",
    "memory_profiler",
    # "mmtrack @ git+https://github.com/open-mmlab/mmtracking@dev-1.x",
    "nltk",
    "onnx==1.18.0",
    "onnxruntime>=1.8.0",
    "panopticapi @ git+https://github.com/cocodataset/panopticapi.git",
    "parameterized",
    "prettytable",
    "protobuf",
    "psutil",
    "pytest",
    "transformers==4.53.3",
    "ubelt",
    "xdoctest>=0.10.0",
]
docs = [
    "docutils==0.16.0",
    "myst-parser",
    "pytorch_sphinx_theme @ git+https://github.com/VBTI-development/onedl_sphinx_theme.git",
    "sphinx",
    "sphinx-copybutton",
    "sphinx_markdown_tables",
    "sphinx_rtd_theme",
    "urllib3"
]
readthedocs = [
    "onedl-mmcv>=2.0.0",
    "onedl-mmengine>=0.10.8rc1",
    "scipy",
    "torch",
    "torchvision",
    "urllib3"
]

[project.optional-dependencies]
albu = [
    "albumentations~=1.4"
]
multimodal = [
    "fairscale",
    "jsonlines",
    "nltk",
    "pycocoevalcap",
    "transformers==4.53.3"
]
mminstall = [
    "onedl-mmcv>=2.0.0",
    "onedl-mmengine>=0.8.3,<1.0.0",
]
optional = [
    "cityscapesscripts",
    "emoji",
    "fairscale",
    "faster-coco-eval",
    "imagecorruptions",
    "scikit-learn",
]
torch = [ "torch", "torchvision" ]
tracking = [
    "onedl-mmpretrain",
    "motmetrics",
    "numpy",
    "scikit-learn",
    "seaborn",
    "lap",
]

[project.urls]
Homepage = "https://github.com/VBTI-development/onedl-mmdetection"
Repository = "https://github.com/VBTI-development/onedl-mmdetection"
Documentation = "https://onedl-mmdetection.readthedocs.io/en/latest/"

[tools.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["mmdet", "mmdet.*"]
exclude = ['configs', 'tools', 'demo', 'tests']
namespaces = false

[tool.uv]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.isort]
line_length = 79
multi_line_output = 0
extra_standard_library = ["setuptools"]
known_first_party = ["mmdet"]
known_third_party = ["PIL","asynctest","cityscapesscripts","cv2","gather_models","matplotlib","mmcv","mmengine","numpy","onnx","onnxruntime","pycocotools","parameterized","pytest","pytorch_sphinx_theme","requests","scipy","seaborn","six","terminaltables","torch","ts","yaml"]
no_lines_before = ["STDLIB", "LOCALFOLDER"]
default_section = "THIRDPARTY"  # codespell:ignore

[tool.yapf]
based_on_style = "pep8"
blank_line_before_nested_class_or_def = true
split_before_expression_after_opening_paren = true

[tool.codespell]
skip = "*.ipynb,configs/v3det/category_name_13204_v3det_2023_v1.txt,**/labels_names.json,tools/dataset_converters/zhiyuan_objv2_train_names_fix.csv"
quiet-level = 3
ignore-words-list = "patten,nd,ty,mot,hist,formating,winn,gool,datas,wan,confids,TOOD,tood,ba,warmup,nam,DOTA,dota,conveyer,PRES"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--xdoctest --xdoctest-style=auto"
norecursedirs = ".git ignore build __pycache__ data docker docs .eggs"
filterwarnings = [
    "default",
    "ignore:.*No cfgstr given in Cacher constructor or call.*:Warning",
    "ignore:.*Define the __nice__ method for.*:Warning"
]

name: Media Optimization

on:
  repository_dispatch:
    types: [media-optimization-trigger]
  workflow_dispatch:
    inputs:
      source_run_id:
        description: 'Run ID to download artifacts from'
        required: true
        type: string
      generate_gifs:
        description: 'Generate GIF previews'
        type: boolean
        default: true
      generate_thumbnails:
        description: 'Generate video thumbnails'
        type: boolean
        default: true

jobs:
  optimize:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download videos from generation workflow
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: media-generation.yml
          run_id: ${{ github.event.client_payload.run_id || inputs.source_run_id }}
          name_is_regexp: true
          name: 'media-videos-.*'
          path: media/output/
          skip_unpack: false

      - name: Check downloaded videos
        id: check_videos
        run: |
          if compgen -G "media/output/*.mp4" > /dev/null; then
            echo "found=true" >> "$GITHUB_OUTPUT"
            echo "✓ MP4 assets detected in media/output/"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
            echo "ℹ️  No MP4 assets available in media/output/"
          fi

      - name: No videos to optimise
        if: steps.check_videos.outputs.found != 'true'
        run: echo "Skipping optimisation steps (no input videos)."

      - name: List downloaded videos
        if: steps.check_videos.outputs.found == 'true'
        run: |
          echo "Downloaded videos:"
          find media/output -name "*.mp4" -type f -exec ls -lh {} \;

          # Move videos from subdirectories if needed
          find media/output -name "*.mp4" -type f -exec mv {} media/output/ \;

          echo ""
          echo "Videos in media/output/:"
          ls -lh media/output/*.mp4

      - name: Install ffmpeg
        if: steps.check_videos.outputs.found == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          ffmpeg -version

      - name: Optimize videos (HD, SD, Mobile)
        if: steps.check_videos.outputs.found == 'true'
        run: |
          echo "🎬 Optimizing videos..."
          chmod +x scripts/optimize_videos.sh
          ./scripts/optimize_videos.sh

          echo ""
          echo "Optimized videos:"
          find media/videos -name "*.mp4" -type f -exec ls -lh {} \;

      - name: Generate GIF previews
        if: ${{ steps.check_videos.outputs.found == 'true' && ((github.event_name == 'repository_dispatch' && github.event.client_payload.generate_gifs != 'false') || (github.event_name != 'repository_dispatch' && inputs.generate_gifs != 'false')) }}
        run: |
          echo "🎞️  Generating GIF previews..."
          chmod +x scripts/generate_gifs.sh

          # Generate 10s previews for all videos
          ./scripts/generate_gifs.sh --preview

          echo ""
          echo "Generated GIFs:"
          find media/gifs -name "*.gif" -type f -exec ls -lh {} \;

      - name: Generate thumbnails
        if: ${{ steps.check_videos.outputs.found == 'true' && ((github.event_name == 'repository_dispatch' && github.event.client_payload.generate_thumbnails != 'false') || (github.event_name != 'repository_dispatch' && inputs.generate_thumbnails != 'false')) }}
        run: |
          echo "📸 Generating video thumbnails..."

          mkdir -p media/thumbnails

          for video in media/output/*.mp4; do
            basename=$(basename "$video" .mp4)
            thumbnail="media/thumbnails/${basename}_thumb.jpg"

            echo "Creating thumbnail for $basename..."
            ffmpeg -i "$video" -ss 00:00:01 -vframes 1 -vf "scale=640:-1" "$thumbnail" -loglevel error

            echo "✓ $thumbnail"
          done

          echo ""
          echo "Generated thumbnails:"
          ls -lh media/thumbnails/*.jpg

      - name: Calculate size savings
        if: steps.check_videos.outputs.found == 'true'
        run: |
          echo "📊 Size comparison:"
          echo ""

          original_size=$(du -ch media/output/*.mp4 | grep total | awk '{print $1}')
          echo "Original videos:    $original_size"

          if [ -d media/videos/hd ]; then
            hd_size=$(du -ch media/videos/hd/*.mp4 2>/dev/null | grep total | awk '{print $1}' || echo "N/A")
            echo "HD (720p):          $hd_size"
          fi

          if [ -d media/videos/sd ]; then
            sd_size=$(du -ch media/videos/sd/*.mp4 2>/dev/null | grep total | awk '{print $1}' || echo "N/A")
            echo "SD (480p):          $sd_size"
          fi

          if [ -d media/videos/mobile ]; then
            mobile_size=$(du -ch media/videos/mobile/*.mp4 2>/dev/null | grep total | awk '{print $1}' || echo "N/A")
            echo "Mobile (360p):      $mobile_size"
          fi

          if [ -d media/gifs ]; then
            gif_size=$(du -ch media/gifs/*.gif 2>/dev/null | grep total | awk '{print $1}' || echo "N/A")
            echo "GIF previews:       $gif_size"
          fi

      - name: Upload optimized videos
        if: steps.check_videos.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: media-optimized-videos-${{ github.run_number }}
          path: media/videos/
          if-no-files-found: warn
          retention-days: 30
          compression-level: 0

      - name: Upload GIFs
        if: ${{ steps.check_videos.outputs.found == 'true' && ((github.event_name == 'repository_dispatch' && github.event.client_payload.generate_gifs != 'false') || (github.event_name != 'repository_dispatch' && inputs.generate_gifs != 'false')) }}
        uses: actions/upload-artifact@v4
        with:
          name: media-gifs-${{ github.run_number }}
          path: media/gifs/
          if-no-files-found: warn
          retention-days: 30
          compression-level: 6

      - name: Upload thumbnails
        if: ${{ steps.check_videos.outputs.found == 'true' && ((github.event_name == 'repository_dispatch' && github.event.client_payload.generate_thumbnails != 'false') || (github.event_name != 'repository_dispatch' && inputs.generate_thumbnails != 'false')) }}
        uses: actions/upload-artifact@v4
        with:
          name: media-thumbnails-${{ github.run_number }}
          path: media/thumbnails/
          if-no-files-found: warn
          retention-days: 30
          compression-level: 6

      - name: Generate summary
        run: |
          echo "## 🎨 Media Optimization Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "**Source Run:** ${{ github.event.client_payload.run_id || inputs.source_run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check_videos.outputs.found }}" != "true" ]; then
            echo "No media assets were available for optimisation." >> $GITHUB_STEP_SUMMARY
          else
            echo "### Generated Assets:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            if [ -d media/videos/hd ]; then
              if compgen -G "media/videos/hd/*.mp4" > /dev/null; then
                echo "**HD Videos (720p):**" >> $GITHUB_STEP_SUMMARY
                ls -lh media/videos/hd/*.mp4 | awk '{print "- " $9 " (" $5 ")"}' >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
              fi
            fi

            if [ -d media/videos/sd ]; then
              if compgen -G "media/videos/sd/*.mp4" > /dev/null; then
                echo "**SD Videos (480p):**" >> $GITHUB_STEP_SUMMARY
                ls -lh media/videos/sd/*.mp4 | awk '{print "- " $9 " (" $5 ")"}' >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
              fi
            fi

            if [ -d media/gifs ]; then
              if compgen -G "media/gifs/*.gif" > /dev/null; then
                echo "**GIF Previews:**" >> $GITHUB_STEP_SUMMARY
                ls -lh media/gifs/*.gif | awk '{print "- " $9 " (" $5 ")"}' >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          fi

          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "Download artifacts from the [Artifacts section](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) above." >> $GITHUB_STEP_SUMMARY

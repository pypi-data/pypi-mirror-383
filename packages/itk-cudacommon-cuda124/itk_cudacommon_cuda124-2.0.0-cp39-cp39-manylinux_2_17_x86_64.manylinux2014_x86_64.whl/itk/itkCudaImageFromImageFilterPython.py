# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _CudaCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImageFromImageFilterPython
else:
    import _itkCudaImageFromImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterCudaCommonPython
import itk.itkCudaImagePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkCovariantVectorPython
import itk.itkCudaImageDataManagerPython
import itk.itkCudaDataManagerPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourceCudaCommonPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkCudaImageFromImageFilterCVF22_New():
    return itkCudaImageFromImageFilterCVF22.New()

class itkCudaImageFromImageFilterCVF22(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF22CICVF22):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF22_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF22_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF22_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF22

        Create a new object of the class itkCudaImageFromImageFilterCVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF22 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF22_swigregister(itkCudaImageFromImageFilterCVF22)

def itkCudaImageFromImageFilterCVF23_New():
    return itkCudaImageFromImageFilterCVF23.New()

class itkCudaImageFromImageFilterCVF23(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF23CICVF23):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF23_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF23_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF23_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF23

        Create a new object of the class itkCudaImageFromImageFilterCVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF23 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF23_swigregister(itkCudaImageFromImageFilterCVF23)

def itkCudaImageFromImageFilterCVF24_New():
    return itkCudaImageFromImageFilterCVF24.New()

class itkCudaImageFromImageFilterCVF24(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF24CICVF24):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF24_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF24_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF24_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF24

        Create a new object of the class itkCudaImageFromImageFilterCVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF24 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF24_swigregister(itkCudaImageFromImageFilterCVF24)

def itkCudaImageFromImageFilterCVF32_New():
    return itkCudaImageFromImageFilterCVF32.New()

class itkCudaImageFromImageFilterCVF32(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF32CICVF32):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF32_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF32_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF32_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF32

        Create a new object of the class itkCudaImageFromImageFilterCVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF32 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF32_swigregister(itkCudaImageFromImageFilterCVF32)

def itkCudaImageFromImageFilterCVF33_New():
    return itkCudaImageFromImageFilterCVF33.New()

class itkCudaImageFromImageFilterCVF33(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF33CICVF33):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF33_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF33_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF33_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF33

        Create a new object of the class itkCudaImageFromImageFilterCVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF33 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF33_swigregister(itkCudaImageFromImageFilterCVF33)

def itkCudaImageFromImageFilterCVF34_New():
    return itkCudaImageFromImageFilterCVF34.New()

class itkCudaImageFromImageFilterCVF34(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF34CICVF34):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF34_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF34_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF34_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF34

        Create a new object of the class itkCudaImageFromImageFilterCVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF34 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF34_swigregister(itkCudaImageFromImageFilterCVF34)

def itkCudaImageFromImageFilterCVF42_New():
    return itkCudaImageFromImageFilterCVF42.New()

class itkCudaImageFromImageFilterCVF42(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF42CICVF42):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF42_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF42_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF42_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF42

        Create a new object of the class itkCudaImageFromImageFilterCVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF42 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF42_swigregister(itkCudaImageFromImageFilterCVF42)

def itkCudaImageFromImageFilterCVF43_New():
    return itkCudaImageFromImageFilterCVF43.New()

class itkCudaImageFromImageFilterCVF43(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF43CICVF43):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF43_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF43_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF43_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF43

        Create a new object of the class itkCudaImageFromImageFilterCVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF43 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF43_swigregister(itkCudaImageFromImageFilterCVF43)

def itkCudaImageFromImageFilterCVF44_New():
    return itkCudaImageFromImageFilterCVF44.New()

class itkCudaImageFromImageFilterCVF44(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterICVF44CICVF44):
    r"""Proxy of C++ itkCudaImageFromImageFilterCVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterCVF44_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterCVF44_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF44_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterCVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterCVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterCVF44

        Create a new object of the class itkCudaImageFromImageFilterCVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterCVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterCVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterCVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterCVF44 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterCVF44_swigregister(itkCudaImageFromImageFilterCVF44)

def itkCudaImageFromImageFilterD2_New():
    return itkCudaImageFromImageFilterD2.New()

class itkCudaImageFromImageFilterD2(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterID2CID2):
    r"""Proxy of C++ itkCudaImageFromImageFilterD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterD2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterD2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD2_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterD2

        Create a new object of the class itkCudaImageFromImageFilterD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterD2 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD2_swigregister(itkCudaImageFromImageFilterD2)

def itkCudaImageFromImageFilterD3_New():
    return itkCudaImageFromImageFilterD3.New()

class itkCudaImageFromImageFilterD3(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterID3CID3):
    r"""Proxy of C++ itkCudaImageFromImageFilterD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterD3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterD3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD3_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterD3

        Create a new object of the class itkCudaImageFromImageFilterD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterD3 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD3_swigregister(itkCudaImageFromImageFilterD3)

def itkCudaImageFromImageFilterD4_New():
    return itkCudaImageFromImageFilterD4.New()

class itkCudaImageFromImageFilterD4(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterID4CID4):
    r"""Proxy of C++ itkCudaImageFromImageFilterD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterD4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterD4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD4_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterD4

        Create a new object of the class itkCudaImageFromImageFilterD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterD4 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterD4_swigregister(itkCudaImageFromImageFilterD4)

def itkCudaImageFromImageFilterF2_New():
    return itkCudaImageFromImageFilterF2.New()

class itkCudaImageFromImageFilterF2(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIF2CIF2):
    r"""Proxy of C++ itkCudaImageFromImageFilterF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterF2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterF2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF2_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterF2

        Create a new object of the class itkCudaImageFromImageFilterF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterF2 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF2_swigregister(itkCudaImageFromImageFilterF2)

def itkCudaImageFromImageFilterF3_New():
    return itkCudaImageFromImageFilterF3.New()

class itkCudaImageFromImageFilterF3(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIF3CIF3):
    r"""Proxy of C++ itkCudaImageFromImageFilterF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterF3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterF3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF3_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterF3

        Create a new object of the class itkCudaImageFromImageFilterF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterF3 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF3_swigregister(itkCudaImageFromImageFilterF3)

def itkCudaImageFromImageFilterF4_New():
    return itkCudaImageFromImageFilterF4.New()

class itkCudaImageFromImageFilterF4(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIF4CIF4):
    r"""Proxy of C++ itkCudaImageFromImageFilterF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterF4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterF4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF4_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterF4

        Create a new object of the class itkCudaImageFromImageFilterF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterF4 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterF4_swigregister(itkCudaImageFromImageFilterF4)

def itkCudaImageFromImageFilterSS2_New():
    return itkCudaImageFromImageFilterSS2.New()

class itkCudaImageFromImageFilterSS2(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterISS2CISS2):
    r"""Proxy of C++ itkCudaImageFromImageFilterSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterSS2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterSS2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS2_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterSS2

        Create a new object of the class itkCudaImageFromImageFilterSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterSS2 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS2_swigregister(itkCudaImageFromImageFilterSS2)

def itkCudaImageFromImageFilterSS3_New():
    return itkCudaImageFromImageFilterSS3.New()

class itkCudaImageFromImageFilterSS3(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterISS3CISS3):
    r"""Proxy of C++ itkCudaImageFromImageFilterSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterSS3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterSS3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS3_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterSS3

        Create a new object of the class itkCudaImageFromImageFilterSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterSS3 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS3_swigregister(itkCudaImageFromImageFilterSS3)

def itkCudaImageFromImageFilterSS4_New():
    return itkCudaImageFromImageFilterSS4.New()

class itkCudaImageFromImageFilterSS4(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterISS4CISS4):
    r"""Proxy of C++ itkCudaImageFromImageFilterSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterSS4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterSS4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS4_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterSS4

        Create a new object of the class itkCudaImageFromImageFilterSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterSS4 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterSS4_swigregister(itkCudaImageFromImageFilterSS4)

def itkCudaImageFromImageFilterUC2_New():
    return itkCudaImageFromImageFilterUC2.New()

class itkCudaImageFromImageFilterUC2(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUC2CIUC2):
    r"""Proxy of C++ itkCudaImageFromImageFilterUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUC2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUC2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC2_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUC2

        Create a new object of the class itkCudaImageFromImageFilterUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUC2 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC2_swigregister(itkCudaImageFromImageFilterUC2)

def itkCudaImageFromImageFilterUC3_New():
    return itkCudaImageFromImageFilterUC3.New()

class itkCudaImageFromImageFilterUC3(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUC3CIUC3):
    r"""Proxy of C++ itkCudaImageFromImageFilterUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUC3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUC3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC3_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUC3

        Create a new object of the class itkCudaImageFromImageFilterUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUC3 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC3_swigregister(itkCudaImageFromImageFilterUC3)

def itkCudaImageFromImageFilterUC4_New():
    return itkCudaImageFromImageFilterUC4.New()

class itkCudaImageFromImageFilterUC4(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUC4CIUC4):
    r"""Proxy of C++ itkCudaImageFromImageFilterUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUC4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUC4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC4_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUC4

        Create a new object of the class itkCudaImageFromImageFilterUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUC4 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUC4_swigregister(itkCudaImageFromImageFilterUC4)

def itkCudaImageFromImageFilterUL2_New():
    return itkCudaImageFromImageFilterUL2.New()

class itkCudaImageFromImageFilterUL2(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUL2CIUL2):
    r"""Proxy of C++ itkCudaImageFromImageFilterUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUL2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUL2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL2_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUL2

        Create a new object of the class itkCudaImageFromImageFilterUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUL2 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL2_swigregister(itkCudaImageFromImageFilterUL2)

def itkCudaImageFromImageFilterUL3_New():
    return itkCudaImageFromImageFilterUL3.New()

class itkCudaImageFromImageFilterUL3(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUL3CIUL3):
    r"""Proxy of C++ itkCudaImageFromImageFilterUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUL3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUL3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL3_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUL3

        Create a new object of the class itkCudaImageFromImageFilterUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUL3 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL3_swigregister(itkCudaImageFromImageFilterUL3)

def itkCudaImageFromImageFilterUL4_New():
    return itkCudaImageFromImageFilterUL4.New()

class itkCudaImageFromImageFilterUL4(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUL4CIUL4):
    r"""Proxy of C++ itkCudaImageFromImageFilterUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUL4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUL4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL4_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUL4

        Create a new object of the class itkCudaImageFromImageFilterUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUL4 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUL4_swigregister(itkCudaImageFromImageFilterUL4)

def itkCudaImageFromImageFilterUS2_New():
    return itkCudaImageFromImageFilterUS2.New()

class itkCudaImageFromImageFilterUS2(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUS2CIUS2):
    r"""Proxy of C++ itkCudaImageFromImageFilterUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUS2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUS2_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS2_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUS2

        Create a new object of the class itkCudaImageFromImageFilterUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUS2 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS2_swigregister(itkCudaImageFromImageFilterUS2)

def itkCudaImageFromImageFilterUS3_New():
    return itkCudaImageFromImageFilterUS3.New()

class itkCudaImageFromImageFilterUS3(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUS3CIUS3):
    r"""Proxy of C++ itkCudaImageFromImageFilterUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUS3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUS3_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS3_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUS3

        Create a new object of the class itkCudaImageFromImageFilterUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUS3 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS3_swigregister(itkCudaImageFromImageFilterUS3)

def itkCudaImageFromImageFilterUS4_New():
    return itkCudaImageFromImageFilterUS4.New()

class itkCudaImageFromImageFilterUS4(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIUS4CIUS4):
    r"""Proxy of C++ itkCudaImageFromImageFilterUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterUS4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterUS4_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS4_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterUS4

        Create a new object of the class itkCudaImageFromImageFilterUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterUS4 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterUS4_swigregister(itkCudaImageFromImageFilterUS4)

def itkCudaImageFromImageFilterVF22_New():
    return itkCudaImageFromImageFilterVF22.New()

class itkCudaImageFromImageFilterVF22(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF22CIVF22):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF22_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF22_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF22_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF22

        Create a new object of the class itkCudaImageFromImageFilterVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF22 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF22_swigregister(itkCudaImageFromImageFilterVF22)

def itkCudaImageFromImageFilterVF23_New():
    return itkCudaImageFromImageFilterVF23.New()

class itkCudaImageFromImageFilterVF23(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF23CIVF23):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF23_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF23_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF23_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF23

        Create a new object of the class itkCudaImageFromImageFilterVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF23 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF23_swigregister(itkCudaImageFromImageFilterVF23)

def itkCudaImageFromImageFilterVF24_New():
    return itkCudaImageFromImageFilterVF24.New()

class itkCudaImageFromImageFilterVF24(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF24CIVF24):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF24_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF24_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF24_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF24

        Create a new object of the class itkCudaImageFromImageFilterVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF24 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF24_swigregister(itkCudaImageFromImageFilterVF24)

def itkCudaImageFromImageFilterVF32_New():
    return itkCudaImageFromImageFilterVF32.New()

class itkCudaImageFromImageFilterVF32(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF32CIVF32):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF32_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF32_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF32_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF32

        Create a new object of the class itkCudaImageFromImageFilterVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF32 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF32_swigregister(itkCudaImageFromImageFilterVF32)

def itkCudaImageFromImageFilterVF33_New():
    return itkCudaImageFromImageFilterVF33.New()

class itkCudaImageFromImageFilterVF33(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF33CIVF33):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF33_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF33_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF33_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF33

        Create a new object of the class itkCudaImageFromImageFilterVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF33 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF33_swigregister(itkCudaImageFromImageFilterVF33)

def itkCudaImageFromImageFilterVF34_New():
    return itkCudaImageFromImageFilterVF34.New()

class itkCudaImageFromImageFilterVF34(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF34CIVF34):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF34_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF34_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF34_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF34

        Create a new object of the class itkCudaImageFromImageFilterVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF34 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF34_swigregister(itkCudaImageFromImageFilterVF34)

def itkCudaImageFromImageFilterVF42_New():
    return itkCudaImageFromImageFilterVF42.New()

class itkCudaImageFromImageFilterVF42(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF42CIVF42):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF42_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF42_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF42_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF42

        Create a new object of the class itkCudaImageFromImageFilterVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF42 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF42_swigregister(itkCudaImageFromImageFilterVF42)

def itkCudaImageFromImageFilterVF43_New():
    return itkCudaImageFromImageFilterVF43.New()

class itkCudaImageFromImageFilterVF43(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF43CIVF43):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF43_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF43_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF43_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF43

        Create a new object of the class itkCudaImageFromImageFilterVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF43 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF43_swigregister(itkCudaImageFromImageFilterVF43)

def itkCudaImageFromImageFilterVF44_New():
    return itkCudaImageFromImageFilterVF44.New()

class itkCudaImageFromImageFilterVF44(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterIVF44CIVF44):
    r"""Proxy of C++ itkCudaImageFromImageFilterVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageFromImageFilterVF44_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageFromImageFilterVF44_Pointer"""
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF44_Clone(self)
    __swig_destroy__ = _itkCudaImageFromImageFilterPython.delete_itkCudaImageFromImageFilterVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageFromImageFilterVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageFromImageFilterVF44

        Create a new object of the class itkCudaImageFromImageFilterVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageFromImageFilterVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageFromImageFilterVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageFromImageFilterVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageFromImageFilterVF44 in _itkCudaImageFromImageFilterPython:
_itkCudaImageFromImageFilterPython.itkCudaImageFromImageFilterVF44_swigregister(itkCudaImageFromImageFilterVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cuda_image_from_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CudaImageFromImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.CudaImageFromImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def cuda_image_from_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.CudaCommon.CudaImageFromImageFilter
    cuda_image_from_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cuda_image_from_image_filter.__doc__ = filter_object.__doc__




"use strict";exports.id=417,exports.ids=[417],exports.modules={43417:(a,b,c)=>{c.r(b),c.d(b,{fromProcess:()=>k});var d=c(3014),e=c(38043),f=c(96742),g=c(79646),h=c(28354),i=c(75162);let j=async(a,b,c)=>{let d=b[a];if(b[a]){let e=d.credential_process;if(void 0!==e){let d=(0,h.promisify)(g.exec);try{let c,{stdout:f}=await d(e);try{c=JSON.parse(f.trim())}catch{throw Error(`Profile ${a} credential_process returned invalid JSON.`)}return((a,b,c)=>{if(1!==b.Version)throw Error(`Profile ${a} credential_process did not return Version 1.`);if(void 0===b.AccessKeyId||void 0===b.SecretAccessKey)throw Error(`Profile ${a} credential_process returned invalid credentials.`);if(b.Expiration){let c=new Date;if(new Date(b.Expiration)<c)throw Error(`Profile ${a} credential_process returned expired credentials.`)}let d=b.AccountId;!d&&c?.[a]?.aws_account_id&&(d=c[a].aws_account_id);let e={accessKeyId:b.AccessKeyId,secretAccessKey:b.SecretAccessKey,...b.SessionToken&&{sessionToken:b.SessionToken},...b.Expiration&&{expiration:new Date(b.Expiration)},...b.CredentialScope&&{credentialScope:b.CredentialScope},...d&&{accountId:d}};return(0,i.g)(e,"CREDENTIALS_PROCESS","w"),e})(a,c,b)}catch(a){throw new f.C(a.message,{logger:c})}}throw new f.C(`Profile ${a} did not contain credential_process.`,{logger:c})}throw new f.C(`Profile ${a} could not be found in shared credentials file.`,{logger:c})},k=(a={})=>async({callerClientConfig:b}={})=>{a.logger?.debug("@aws-sdk/credential-provider-process - fromProcess");let c=await (0,d.Y)(a);return j((0,e.Bz)({profile:a.profile??b?.profile}),c,a.logger)}}};
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0+dev"

[project]
name = "amauo"
dynamic = ["version"]
description = "Deploy Bacalhau compute nodes globally using AWS spot instances for cost-effective distributed computing"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    {name = "Amauo Team", email = "hello@amauo.dev"},
]
keywords = [
    "aws",
    "cloud",
    "deployment",
    "spot-instances",
    "bacalhau",
    "distributed-computing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Utilities",
]
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "boto3>=1.28.0",
    "botocore>=1.31.0",
    "types-boto3[ec2]>=1.40.21",
]


[project.urls]
Homepage = "https://tada.wang"
Documentation = "https://github.com/bacalhau-project/amauo#readme"
Repository = "https://github.com/bacalhau-project/amauo"
"Bug Tracker" = "https://github.com/bacalhau-project/amauo/issues"
"Project Site" = "https://tada.wang"

[project.scripts]
amauo = "amauo.cli:cli"



[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/amauo"]



[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"] # allow assert in tests
"src/amauo/_version.py" = ["ALL"] # ignore generated file

[tool.ruff.format]
exclude = ["src/amauo/_version.py"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "amauo._version"
ignore_errors = true

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "twine>=6.1.0",
    "types-pyyaml>=6.0.12.20250822",
]

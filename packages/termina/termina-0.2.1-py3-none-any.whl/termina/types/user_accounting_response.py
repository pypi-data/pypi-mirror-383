# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class UserAccountingResponse(UniversalBaseModel):
    """
    Represents the basic growth accounting metrics for the user count.
    """

    date: str = pydantic.Field()
    """
    The date of the entry.
    """

    active_users: int = pydantic.Field()
    """
    The number of active users in the period.
    """

    retained: typing.Optional[int] = pydantic.Field(default=None)
    """
    The number of retained users from the last period in the current period.
    """

    new: typing.Optional[int] = pydantic.Field(default=None)
    """
    The number of new users in the period.
    """

    resurrected: typing.Optional[int] = pydantic.Field(default=None)
    """
    The number of resurrected users in the period.
    """

    churned: typing.Optional[int] = pydantic.Field(default=None)
    """
    The number of churned users in the period.
    """

    cmgr_3: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cmgr3")] = pydantic.Field(
        default=None
    )
    """
    3-month user count growth rate, for monthly frequency.
    """

    cmgr_6: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cmgr6")] = pydantic.Field(
        default=None
    )
    """
    6-month user count growth rate, for monthly frequency.
    """

    cmgr_12: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cmgr12")] = pydantic.Field(
        default=None
    )
    """
    12-month user count growth rate, for monthly frequency.
    """

    cqgr_1: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cqgr1")] = pydantic.Field(
        default=None
    )
    """
    1-quarter user count growth rate, for quarterly frequency.
    """

    cqgr_2: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cqgr2")] = pydantic.Field(
        default=None
    )
    """
    2-quarter user count growth rate, for quarterly frequency.
    """

    cqgr_4: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="cqgr4")] = pydantic.Field(
        default=None
    )
    """
    4-quarter user count growth rate, for quarterly frequency.
    """

    logo_retention: typing.Optional[float] = pydantic.Field(default=None)
    """
    The logo retention rate, defined as retained / active over last period.
    """

    quick_ratio: typing.Optional[float] = pydantic.Field(default=None)
    """
    The quick ratio, defined as (resurrected + new) / churned.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

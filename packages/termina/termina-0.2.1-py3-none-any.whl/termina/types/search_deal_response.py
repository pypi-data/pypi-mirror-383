# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .benchmark_metric_response import BenchmarkMetricResponse


class SearchDealResponse(UniversalBaseModel):
    """
    Response model for deal search results.
    Returns flattened deal data directly from Elasticsearch without additional database queries.
    """

    deal_id: int
    group_id: int
    notes: typing.Optional[str] = None
    priority: typing.Optional[str] = None
    round_name: typing.Optional[str] = None
    round_amount: typing.Optional[int] = None
    round_target: typing.Optional[int] = None
    tags: typing.Optional[typing.List[str]] = None
    company_summary: typing.Optional[str] = None
    categories: typing.Optional[typing.List[str]] = None
    is_archived: typing.Optional[bool] = None
    created_at: typing.Optional[dt.datetime] = None
    updated_at: typing.Optional[dt.datetime] = None
    company_id: typing.Optional[int] = None
    company_name: typing.Optional[str] = None
    company_domain: typing.Optional[str] = None
    group_name: typing.Optional[str] = None
    group_account: typing.Optional[str] = None
    deal_lead_id: typing.Optional[int] = None
    deal_lead_name: typing.Optional[str] = None
    deal_lead_email: typing.Optional[str] = None
    benchmark_metrics: typing.Optional[typing.List[BenchmarkMetricResponse]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .band_response import BandResponse


class ScaleModel(UniversalBaseModel):
    raw_data: typing.List[typing.Dict[str, float]] = pydantic.Field()
    """
    Raw data points used to generate the scaling model. Dictionary of the two metrics, x then y.
    """

    pred: typing.List[typing.Dict[str, float]] = pydantic.Field()
    """
    Predicted center trend line of the scaling model. Dictioary of the two metrics, x then y.
    """

    bands: typing.List[BandResponse] = pydantic.Field()
    """
    Bands representing the range of the scaling model.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.financials_response import FinancialsResponse
from .raw_client import AsyncRawFinancialsClient, RawFinancialsClient


class FinancialsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawFinancialsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawFinancialsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawFinancialsClient
        """
        return self._raw_client

    def get(
        self, group_id: int, deal_id: int, *, request_options: typing.Optional[RequestOptions] = None
    ) -> FinancialsResponse:
        """
        Get the financials for the company associated with the deal.

        Parameters
        ----------
        group_id : int

        deal_id : int

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FinancialsResponse
            Successful Response

        Examples
        --------
        from termina import Termina

        client = Termina(
            token="YOUR_TOKEN",
        )
        client.financials.get(
            group_id=1,
            deal_id=1,
        )
        """
        _response = self._raw_client.get(group_id, deal_id, request_options=request_options)
        return _response.data


class AsyncFinancialsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawFinancialsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawFinancialsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawFinancialsClient
        """
        return self._raw_client

    async def get(
        self, group_id: int, deal_id: int, *, request_options: typing.Optional[RequestOptions] = None
    ) -> FinancialsResponse:
        """
        Get the financials for the company associated with the deal.

        Parameters
        ----------
        group_id : int

        deal_id : int

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FinancialsResponse
            Successful Response

        Examples
        --------
        import asyncio

        from termina import AsyncTermina

        client = AsyncTermina(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.financials.get(
                group_id=1,
                deal_id=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get(group_id, deal_id, request_options=request_options)
        return _response.data

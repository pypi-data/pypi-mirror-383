# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ConcentrationEndpointCdfDetail(UniversalBaseModel):
    method: str = pydantic.Field()
    """
    The method used. When 'top_user', the value represents the CDF at the exact value of a top user. When 'distribution_quantile', the value represents the CDF at an approximately evenly spaced quantile.
    """

    amount: float = pydantic.Field()
    """
    The amount for the CDF.
    """

    cdf_users: typing.Optional[float] = pydantic.Field(default=None)
    """
    The cumulative distribution function of the users, sorted smallest to largest. This evenly weights users by count, and represents (1 - top quantile) of the user
    """

    cdf_amount: typing.Optional[float] = pydantic.Field(default=None)
    """
    The cumulative distribution function of the amount, sorted smallest to largest. This tells us what percentage of all amount is held by the bottom x% of users.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .executive_profile_position import ExecutiveProfilePosition


class ExecutiveProfile(UniversalBaseModel):
    """
    A list of current executives, at the time the talent was pulled, their roles at the company, and their prior
    positions
    """

    person_id: str = pydantic.Field()
    """
    The unique LinkedIn profile id for the executive.
    """

    person_name: str = pydantic.Field()
    """
    The name of the executive.
    """

    profile_url: str = pydantic.Field()
    """
    The URL to the executive's LinkedIn profile.
    """

    thumbnail_url: typing.Optional[str] = pydantic.Field(default=None)
    """
    The URL to the executive's profile photo.
    """

    positions: typing.List[ExecutiveProfilePosition] = pydantic.Field()
    """
    A list of past and present positions held by the executive.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

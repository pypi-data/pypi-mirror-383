# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .column_metadata import ColumnMetadata


class ColumnsMetadataResponse(UniversalBaseModel):
    columns: typing.List[ColumnMetadata] = pydantic.Field()
    """
    A list of column metadata.
    """

    name_map: typing.Dict[str, ColumnMetadata] = pydantic.Field()
    """
    A mapping column names to their metadata for lookup convenience.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

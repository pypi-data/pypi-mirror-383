# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ExecutiveProfilesPositions(UniversalBaseModel):
    """
    Contains a list of past and present positions held by an executive at the company
    """

    company_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the company where a position was or is held.
    """

    is_target_company: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the company is the same as the company associated with the deal.
    """

    title: typing.Optional[str] = pydantic.Field(default=None)
    """
    The title of the position held at the company.
    """

    start_date: typing.Optional[str] = pydantic.Field(default=None)
    """
    The start date of the position.
    """

    end_date: typing.Optional[str] = pydantic.Field(default=None)
    """
    The end date of the position. If the position is current, this field is null.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

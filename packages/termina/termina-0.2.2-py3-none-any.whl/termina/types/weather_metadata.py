# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class WeatherMetadata(UniversalBaseModel):
    slug: str = pydantic.Field()
    """
    Slugified label for the weather indicator
    """

    label: str = pydantic.Field()
    """
    Label for the weather indicator
    """

    segmentation: str = pydantic.Field()
    """
    The segmentation type of the weather indicator
    """

    asof_date: str = pydantic.Field()
    """
    The date of the full revision of the input data for the indicator
    """

    indicator_start_date: str = pydantic.Field()
    """
    The earliest date a data point in the indicator is considered valid
    """

    countries: typing.Optional[typing.List[str]] = None
    categories: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    A list of categories the indicator covers - If null, the indicator includes all covered categories
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

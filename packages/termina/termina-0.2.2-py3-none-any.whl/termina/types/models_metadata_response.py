# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .model_metadata import ModelMetadata


class ModelsMetadataResponse(UniversalBaseModel):
    name: str = pydantic.Field()
    """
    The name of the **class** of models.
    """

    model_description: str = pydantic.Field()
    """
    A plain-english description of the class of models and what they represent.
    """

    available_models: typing.List[ModelMetadata] = pydantic.Field()
    """
    A list of implementations and variants of this class of models.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

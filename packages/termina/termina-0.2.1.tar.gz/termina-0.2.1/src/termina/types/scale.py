# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class Scale(UniversalBaseModel):
    metric: str = pydantic.Field()
    """
    The metric whose scale is used to subset the benchmark data.
    """

    low: float = pydantic.Field()
    """
    Low end of the scale.
    """

    high: float = pydantic.Field()
    """
    High end of the scale.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.12")
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.12...3.29)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS eccodes_memfs eccodes codes_info codes_count codes_split_file codes_export_resource grib_histogram grib_filter grib_ls grib_dump grib2ppm grib_set grib_get grib_get_data grib_copy grib_compare codes_parser grib_index_build bufr_index_build bufr_ls bufr_dump bufr_set bufr_get bufr_copy bufr_compare gts_get gts_compare gts_copy gts_dump gts_filter gts_ls metar_dump metar_ls metar_compare metar_get metar_filter metar_copy grib_count bufr_count gts_count codes_bufr_filter eccodes_f90)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target eccodes_memfs
add_library(eccodes_memfs SHARED IMPORTED)

set_target_properties(eccodes_memfs PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target eccodes
add_library(eccodes SHARED IMPORTED)

set_target_properties(eccodes PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "/usr/lib64/libm.so"
)

# Create imported target codes_info
add_executable(codes_info IMPORTED)

# Create imported target codes_count
add_executable(codes_count IMPORTED)

# Create imported target codes_split_file
add_executable(codes_split_file IMPORTED)

# Create imported target codes_export_resource
add_executable(codes_export_resource IMPORTED)

# Create imported target grib_histogram
add_executable(grib_histogram IMPORTED)

# Create imported target grib_filter
add_executable(grib_filter IMPORTED)

# Create imported target grib_ls
add_executable(grib_ls IMPORTED)

# Create imported target grib_dump
add_executable(grib_dump IMPORTED)

# Create imported target grib2ppm
add_executable(grib2ppm IMPORTED)

# Create imported target grib_set
add_executable(grib_set IMPORTED)

# Create imported target grib_get
add_executable(grib_get IMPORTED)

# Create imported target grib_get_data
add_executable(grib_get_data IMPORTED)

# Create imported target grib_copy
add_executable(grib_copy IMPORTED)

# Create imported target grib_compare
add_executable(grib_compare IMPORTED)

# Create imported target codes_parser
add_executable(codes_parser IMPORTED)

# Create imported target grib_index_build
add_executable(grib_index_build IMPORTED)

# Create imported target bufr_index_build
add_executable(bufr_index_build IMPORTED)

# Create imported target bufr_ls
add_executable(bufr_ls IMPORTED)

# Create imported target bufr_dump
add_executable(bufr_dump IMPORTED)

# Create imported target bufr_set
add_executable(bufr_set IMPORTED)

# Create imported target bufr_get
add_executable(bufr_get IMPORTED)

# Create imported target bufr_copy
add_executable(bufr_copy IMPORTED)

# Create imported target bufr_compare
add_executable(bufr_compare IMPORTED)

# Create imported target gts_get
add_executable(gts_get IMPORTED)

# Create imported target gts_compare
add_executable(gts_compare IMPORTED)

# Create imported target gts_copy
add_executable(gts_copy IMPORTED)

# Create imported target gts_dump
add_executable(gts_dump IMPORTED)

# Create imported target gts_filter
add_executable(gts_filter IMPORTED)

# Create imported target gts_ls
add_executable(gts_ls IMPORTED)

# Create imported target metar_dump
add_executable(metar_dump IMPORTED)

# Create imported target metar_ls
add_executable(metar_ls IMPORTED)

# Create imported target metar_compare
add_executable(metar_compare IMPORTED)

# Create imported target metar_get
add_executable(metar_get IMPORTED)

# Create imported target metar_filter
add_executable(metar_filter IMPORTED)

# Create imported target metar_copy
add_executable(metar_copy IMPORTED)

# Create imported target grib_count
add_executable(grib_count IMPORTED)

# Create imported target bufr_count
add_executable(bufr_count IMPORTED)

# Create imported target gts_count
add_executable(gts_count IMPORTED)

# Create imported target codes_bufr_filter
add_executable(codes_bufr_filter IMPORTED)

# Create imported target eccodes_f90
add_library(eccodes_f90 SHARED IMPORTED)

set_target_properties(eccodes_f90 PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
)

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/eccodes-targets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)

[project]
name = "chuk-virtual-fs"
version = "0.2"
description = "A secure, modular virtual filesystem designed for AI agent sandboxes"
readme = "README.md"
authors = [
    {name = "Chris Hay", email = "your.email@example.com"},
]
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["filesystem", "virtual", "sandbox", "ai", "security"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Filesystems",
    "Topic :: Security",
]
dependencies = [
    "python-dotenv>=1.1.0",
    "pyyaml>=6.0.1",
    "asyncio>=3.4.3",
    "aioboto3>=15.1.0",
    "pytest-cov>=6.0.0",
]

[project.optional-dependencies]
s3 = [
    "boto3>=1.28.0",
    "aioboto3>=12.0.0",
]
e2b = [
    "e2b-code-interpreter>=1.2.0",
]
test = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
]
dev = [
    # Testing
    "pytest>=8.3.5",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    
    # Code formatting and linting
    "ruff>=0.6.0",
    "black>=24.1.0",
    "isort>=5.12.0",
    
    # Type checking
    "mypy>=1.8.0",
    "types-requests>=2.31.0",
    
    # Security scanning  
    "bandit>=1.7.5",
    "bandit[toml]>=1.7.5",
    
    # Build and publishing
    "build>=1.0.0",
    "twine>=4.0.0",
    
    # Documentation (optional)
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.urls]
Homepage = "https://github.com/chrishayuk/chuk-virtual-fs"
"Bug Tracker" = "https://github.com/chrishayuk/chuk-virtual-fs/issues"
Documentation = "https://github.com/chrishayuk/chuk-virtual-fs#readme"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project.scripts]
snapshot-cli = "chuk_virtual_fs.cli.snapshot_cli:main"
template-cli = "chuk_virtual_fs.cli.template_cli:main"
s3-bucket-cli = "chuk_virtual_fs.cli.s3_bucket_cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["chuk_virtual_fs*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async",
]

[tool.black]
line-length = 88
target-version = ["py311", "py312"]

[tool.isort]
profile = "black"
line_length = 88

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "aioboto3.*",
    "botocore.*", 
    "boto3.*",
    "e2b.*",
]
ignore_missing_imports = true

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv.sources]
chuk-virtual-fs = { workspace = true }

[dependency-groups]
dev = [
    "pytest-cov>=6.0.0",
]

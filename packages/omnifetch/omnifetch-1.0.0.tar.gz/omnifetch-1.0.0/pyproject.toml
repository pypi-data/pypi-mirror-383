[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "omnifetch"
version = "1.0.0"
description = "Multi-source data retrieval with intelligent caching and storage backends"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Marco Bonoli", email = "marco@deinnovatie.com"}
]
keywords = ["data-management", "caching", "storage", "ibm-cos", "cloud-storage", "ttl", "multi-source"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "ibm-cos-sdk>=2.13.3",
    "filelock>=3.13.1",
    "pandas>=2.1.4",
    "xarray>=2023.12.0",
    "netCDF4>=1.6.5",
    "pyarrow>=14.0.1",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/deinnovatie/omnifetch"
Documentation = "https://github.com/deinnovatie/omnifetch#readme"
Repository = "https://github.com/deinnovatie/omnifetch"
"Bug Tracker" = "https://github.com/deinnovatie/omnifetch/issues"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | \.tox
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "W", "I", "N", "UP"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=omnifetch --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

Metadata-Version: 2.4
Name: moriarty-project
Version: 0.1.27
Summary: Client-side OSINT toolkit with forensic-grade evidence handling.
Project-URL: Homepage, https://github.com/DonatoReis/moriarty
Project-URL: Documentation, https://github.com/DonatoReis/moriarty#readme
Author: Moriarty Contributors
License: MIT
Keywords: cli,forensics,osint,security
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Security
Classifier: Topic :: Utilities
Requires-Python: >=3.11
Requires-Dist: aiodns>=3.0.0
Requires-Dist: aiofiles>=24.1.0
Requires-Dist: aiohttp>=3.9.0
Requires-Dist: aiolimiter>=1.1.0
Requires-Dist: aiosmtplib>=2.0.0
Requires-Dist: colorama>=0.4.6
Requires-Dist: dnspython>=2.5.0
Requires-Dist: email-validator>=2.0.0
Requires-Dist: httpx[http2]>=0.27.0
Requires-Dist: idna>=3.6
Requires-Dist: jsonpath-ng>=1.6.0
Requires-Dist: lxml>=5.3.0
Requires-Dist: netifaces-plus>=0.12.4
Requires-Dist: networkx>=3.2.0
Requires-Dist: orjson>=3.9.0
Requires-Dist: packaging>=25.0
Requires-Dist: phonenumbers>=8.13.0
Requires-Dist: pillow>=10.0.0
Requires-Dist: psutil>=5.9.0
Requires-Dist: pycryptodomex>=3.23.0
Requires-Dist: pydantic>=2.7.0
Requires-Dist: pyopenssl>=25.0.0
Requires-Dist: python3-nmap>=1.9.1
Requires-Dist: pyyaml>=6.0
Requires-Dist: rapidfuzz>=3.0.0
Requires-Dist: requests>=2.32.0
Requires-Dist: rich>=13.7.0
Requires-Dist: scapy>=2.5.0
Requires-Dist: selectolax>=0.3.20
Requires-Dist: structlog>=24.1.0
Requires-Dist: tqdm>=4.67.0
Requires-Dist: typer[all]>=0.12.0
Requires-Dist: uvloop>=0.19.0; platform_system != 'Windows'
Provides-Extra: capture
Requires-Dist: pypcap>=1.2.3; (platform_system == 'Linux' or platform_system == 'Windows') and extra == 'capture'
Requires-Dist: python-libpcap>=0.5; (platform_system == 'Darwin') and extra == 'capture'
Requires-Dist: python-wifi>=0.6.1; (platform_system == 'Linux' or platform_system == 'Windows') and extra == 'capture'
Requires-Dist: pywifi>=1.1.12; (platform_system == 'Linux' or platform_system == 'Windows') and extra == 'capture'
Provides-Extra: dev
Requires-Dist: cyclonedx-bom>=4.4.0; extra == 'dev'
Requires-Dist: deptry>=0.23.0; extra == 'dev'
Requires-Dist: hypothesis>=6.98.0; extra == 'dev'
Requires-Dist: mypy>=1.10.0; extra == 'dev'
Requires-Dist: pip-audit>=2.7.0; extra == 'dev'
Requires-Dist: pytest-xdist>=3.5.0; extra == 'dev'
Requires-Dist: pytest>=8.0.0; extra == 'dev'
Requires-Dist: ruff>=0.5.0; extra == 'dev'
Provides-Extra: headless
Requires-Dist: playwright>=1.40.0; extra == 'headless'
Provides-Extra: http3
Requires-Dist: aioquic>=0.9.0; extra == 'http3'
Provides-Extra: image
Requires-Dist: imagehash>=4.3.0; extra == 'image'
Provides-Extra: pdf
Requires-Dist: weasyprint>=60.0; extra == 'pdf'
Provides-Extra: sign
Requires-Dist: sigstore>=2.0.0; extra == 'sign'
Provides-Extra: stix
Requires-Dist: stix2>=3.0.0; extra == 'stix'
Description-Content-Type: text/markdown

# Moriarty - Ferramenta Avan√ßada de OSINT e Seguran√ßa

<!-- Banner -->
<p align="center">
  <a href="https://pypi.org/project/moriarty-project/">
    <img
      src="./assets/img/moriarty-banner.png"
      alt="Moriarty OSINT - Ferramenta avan√ßada de reconhecimento e an√°lise de seguran√ßa"
      width="60%"
      style="border: 1px solid #2d2d2d; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
  </a>
</p>

<!-- Subt√≠tulo -->
<p align="center">
  Ferramenta avan√ßada de reconhecimento e an√°lise de seguran√ßa para investiga√ß√µes OSINT e testes de penetra√ß√£o.
</p>

<!-- Badges -->
<p align="center">
  <a href="https://pypi.org/project/moriarty-project/">
    <img src="https://img.shields.io/badge/version-0.1.27-blue" alt="Version 0.1.27">
  </a>
  <a href="https://www.python.org/downloads/">
    <img src="https://img.shields.io/pypi/pyversions/moriarty-project?color=blue" alt="Python Versions">
  </a>
  <a href="https://opensource.org/licenses/MIT">
    <img src="https://img.shields.io/badge/License-MIT-yellow.svg" alt="License: MIT">
  </a>
  <a href="https://github.com/DonatoReis/moriarty/stargazers">
    <img src="https://img.shields.io/github/stars/DonatoReis/moriarty?style=social" alt="GitHub stars">
  </a>
</p>

<p align="center">
  <a href="#instala√ß√£o">Instala√ß√£o</a>
  &nbsp;&nbsp;&nbsp;‚Ä¢&nbsp;&nbsp;&nbsp;
  <a href="#uso">Uso</a>
  &nbsp;&nbsp;&nbsp;‚Ä¢&nbsp;&nbsp;&nbsp;
  <a href="#comandos">Comandos</a>
  &nbsp;&nbsp;&nbsp;‚Ä¢&nbsp;&nbsp;&nbsp;
  <a href="#contribuindo">Contribuindo</a>
</p>

## üåü Recursos Principais

- **Reconhecimento Passivo Avan√ßado**
  - Coleta de informa√ß√µes de m√∫ltiplas fontes OSINT
  - Descoberta de subdom√≠nios
  - An√°lise de certificados SSL/TLS
  - Coleta de metadados WHOIS/RDAP

- **Varredura de Seguran√ßa**
  - Varredura de portas com detec√ß√£o de servi√ßos
  - Detec√ß√£o de tecnologias web
  - Identifica√ß√£o de vulnerabilidades comuns
  - Teste de WAF/IPS/IDS

- **An√°lise de Amea√ßas**
  - Verifica√ß√£o de credenciais vazadas
  - An√°lise de reputa√ß√£o de dom√≠nios
  - Detec√ß√£o de amea√ßas conhecidas

## üöÄ Instala√ß√£o

### Pr√©-requisitos
- Python 3.13+ (vers√£o m√≠nima suportada)
- pip (gerenciador de pacotes do Python)

### Instala√ß√£o via pipx (recomendado para usu√°rios)
```bash
# Instalar usando pipx (recomendado para isolar o ambiente)
pipx install moriarty-project

# OU para instalar uma vers√£o espec√≠fica
# pipx install moriarty-project==0.1.27

# Verificar a instala√ß√£o
moriarty --help
```

### Instala√ß√£o via pip (usu√°rios avan√ßados)
```bash
# Instalar globalmente
pip install moriarty-project

# OU para instalar para o usu√°rio atual
# pip install --user moriarty

# Verificar a instala√ß√£o
moriarty --help
```

### Instala√ß√£o para desenvolvimento
```bash
# Clonar o reposit√≥rio
git clone https://github.com/DonatoReis/moriarty.git
cd moriarty

# Criar e ativar ambiente virtual (opcional, mas recomendado)
python -m venv venv
source venv/bin/activate  # No Windows: venv\Scripts\activate

# Instalar em modo de desenvolvimento
pip install -e .

# Instalar depend√™ncias de desenvolvimento
pip install -r requirements-dev.txt
```

## üíª Uso B√°sico

### Estrutura de Comandos
```
moriarty [OP√á√ïES] COMANDO [ARGUMENTOS] [OP√á√ïES-DO-COMANDO]
```

### Op√ß√µes Globais
- `--sign`: Assinar digitalmente os resultados
- `--verbose`: Mostrar informa√ß√µes detalhadas de execu√ß√£o
- `--concurrency INT`: N√∫mero m√°ximo de tarefas concorrentes (padr√£o: 50)
- `--timeout FLOAT`: Timeout por requisi√ß√£o em segundos (padr√£o: 8.0)
- `--proxy URL`: Usar proxy HTTP/SOCKS
- `--format FORMAT`: Formato de sa√≠da (table, json, yaml)
- `--output PATH`: Salvar sa√≠da em arquivo
- `--verbose`: Habilitar logs detalhados
- `--quiet`: Suprimir sa√≠da n√£o cr√≠tica

## üîç Comandos e Exemplos

### üìß Comandos de E-mail

#### `email check`
Valida um endere√ßo de e-mail usando heur√≠sticas de DNS e SMTP.

**Uso:**
```bash
moriarty email check usuario@exemplo.com
```

**Exemplo com op√ß√µes:**
```bash
# Verificar e-mail com modo verboso
moriarty email check --verbose usuario@exemplo.com

# Verificar e-mail e salvar resultado em JSON
moriarty email check usuario@exemplo.com --format json --output resultado.json
```

#### `email investigate`
Investiga um e-mail em m√∫ltiplas fontes (Gravatar, redes sociais, vazamentos).

**Uso:**
```bash
moriarty email investigate usuario@exemplo.com
```

**Exemplo:**
```bash
# Investiga√ß√£o completa com sa√≠da detalhada
moriarty email investigate --verbose usuario@exemplo.com
```

### üë§ Comandos de Usu√°rio

#### `user enum`
Enumera um nome de usu√°rio em m√∫ltiplos sites.

**Uso:**
```bash
moriarty user enum nomeusuario
```

**Exemplo com op√ß√µes:**
```bash
# Verificar disponibilidade em sites espec√≠ficos
moriarty user enum nomeusuario --sites github,twitter,instagram

# Salvar resultados em um arquivo
moriarty user enum nomeusuario --output resultados_usuario.json
```

## üõ†Ô∏è Comandos Principais

### `domain`
Comandos para an√°lise de dom√≠nios e redes.

#### `domain scan`
Varredura completa de dom√≠nio/IP.

**Uso:**
```bash
moriarty domain scan example.com [OP√á√ïES]
```

**Op√ß√µes:**
- `--modules`: M√≥dulos a serem executados (all,dns,subdiscover,wayback,ports,ssl,crawl,fuzzer,template-scan,vuln-scan,waf-detect)
- `--stealth`: N√≠vel de stealth (0-4)
- `--threads`: N√∫mero de threads concorrentes
- `--timeout`: Timeout em segundos

#### `domain recon`
Reconhecimento passivo de dom√≠nio.

**Uso:**
```bash
moriarty domain recon example.com [OP√á√ïES]
```

### `email`
Ferramentas para an√°lise de endere√ßos de e-mail.

#### `email check`
Verifica a validade e informa√ß√µes de um e-mail.

**Uso:**
```bash
moriarty email check user@example.com
```

### `intel`
Ferramentas de intelig√™ncia de amea√ßas.

#### `intel ioc`
Analisa Indicadores de Comprometimento (IOCs).

**Uso:**
```bash
moriarty intel ioc --file iocs.txt
```

## üõ†Ô∏è Exemplos

### 1. Varredura B√°sica de Dom√≠nio
```bash
moriarty domain scan example.com --stealth 2 --threads 50
```

### 2. Reconhecimento Passivo
```bash
moriarty domain recon example.com --output results.json
```

### 3. Verifica√ß√£o de E-mail
```bash
moriarty email check user@example.com --format json
```

### 4. An√°lise de IOC
```bash
moriarty intel ioc --file iocs.txt --output report.html
```

## üõ°Ô∏è Recursos de Seguran√ßa

### Modo Profissional
Ative o modo profissional para habilitar salvaguardas adicionais:
```bash
moriarty --professional-mode domain scan example.com
```

### Criptografia e Privacidade
- Suporte a conex√µes criptografadas (HTTPS/TLS)
- Op√ß√£o para reda√ß√£o de PII (Informa√ß√µes Pessoais Identific√°veis)
- Suporte a proxies e Tor

## ü§ù Contribuindo

Contribui√ß√µes s√£o bem-vindas! Siga estes passos:

1. Fa√ßa um fork do reposit√≥rio
2. Crie uma branch para sua feature (`git checkout -b feature/AmazingFeature`)
3. Fa√ßa commit das suas altera√ß√µes (`git commit -m 'Add some AmazingFeature'`)
4. Fa√ßa push para a branch (`git push origin feature/AmazingFeature`)
5. Abra um Pull Request

## üìÑ Licen√ßa

Distribu√≠do sob a licen√ßa MIT. Veja `LICENSE` para mais informa√ß√µes.

## üìß Contato

Equipe Moriarty - [contato@moriarty.dev](mailto:contato@moriarty.dev)

Link do Projeto: [https://github.com/DonatoReis/moriarty](https://github.com/DonatoReis/moriarty)

---

Este README foi gerado em 06/10/2023. Consulte a documenta√ß√£o online para informa√ß√µes mais recentes.

## üîç √çndice de Comandos Detalhados

### Comandos de Dom√≠nio
- `domain scan`: Varredura completa de dom√≠nio
- `domain recon`: Reconhecimento passivo
- `domain subdomains`: Enumera√ß√£o de subdom√≠nios
- `domain wayback`: An√°lise hist√≥rica via Wayback Machine
- `domain ports`: Varredura de portas
- `domain crawl`: Web crawling

### Comandos de E-mail
- `email check`: Valida√ß√£o de e-mail usando DNS/SMTP
- `email investigate`: An√°lise aprofundada em m√∫ltiplas fontes (Gravatar, redes sociais, vazamentos)

### Comandos de Usu√°rio
- `user enum`: Verifica disponibilidade de nome de usu√°rio em m√∫ltiplos sites

### Comandos de Intelig√™ncia
- `intel ioc`: An√°lise de IOCs
- `intel threat`: Verifica√ß√£o de amea√ßas

### Comandos de Rede
- `network dns`: Consultas DNS
- `network tls`: An√°lise TLS/SSL
- `network rdap`: Consultas RDAP

### Ferramentas
- `tools template`: Gerenciamento de templates
- `tools waf`: Testes de WAF

---

Para obter ajuda detalhada sobre qualquer comando, use:
```bash
moriarty [comando] --help
```

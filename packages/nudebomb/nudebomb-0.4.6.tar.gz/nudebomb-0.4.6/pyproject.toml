[project]
authors = [{ name = "AJ Slater", email = "aj@slater.net" }]
classifiers = [
  "Environment :: Console",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Multimedia :: Video :: Conversion",
]
dependencies = [
  "confuse~=2.0",
  "pycountry~=24.6",
  "python-dateutil~=2.8",
  "ruamel-yaml~=0.18",
  "treestamps~=2.2",
  "typing-extensions~=4.13",
]
description = "Strip unused languages from mkv files en mass"
keywords = ["mkv", "movie", "video", "srt", "audio", "subtitles"]
license = "GPL-3.0-only"
name = "nudebomb"
readme = "README.md"
requires-python = "<3.14,>=3.10"
version = "0.4.6"

[project.urls]
Documentation = "https://nudebomb.readthedocs.io/news/"
News = "https://nudebomb.readthedocs.io/"
Issues = "https://github.com/ajslater/nudebomb/issues"
Source = "https://github.com/ajslater/nudebomb"

[project.scripts]
nudebomb = "nudebomb.cli:main"

[dependency-groups]
dev = [
  "basedpyright~=1.30",
  "codespell~=2.1",
  "coverage[toml]~=7.0",
  "deepdiff~=8.4",
  "icecream~=2.1",
  "mkdocs~=1.6",
  "mkdocs-minify-plugin~=0.8",
  "neovim~=0.3",
  "pyclean~=3.1",
  "pytest-cov~=6.0",
  "pytest-gitignore~=1.3",
  "radon[toml]~=6.0",
  "ruff~=0.12",
  "toml-cli~=0.7",
  "ty>=0.0.1a16",
  "types-python-dateutil~=2.9",
  "vulture~=2.3",
]

[build-system]
requires = ["uv_build~=0.8.7"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-root = ""
source-include = [
  ".circlci/**",
  ".*ignore",
  ".shellcheckrc",
  "bin/**",
  "eslint.config.js",
  "frontend/**",
  "Makefile",
  "package-lock.json",
  "package.json",
  "tests/**",
  "uv.lock",
  "vulture_ignorelist.py",
]
source-exclude = ["**/*\\~", "**/.DS_Store"]
wheel-exclude = []

[tool.basedpyright]
exclude = [
  "**/.*",
  "**/__pycache__",
  "**/node_modules",
  "dist",
  "test-results",
  "typings",
  "vulture_ignorelist.py",
]
pythonVersion = "3.10"
failOnWarnings = false
reportAny = false
reportExplicitAny = false
reportImportCycles = true
reportIncompatibleUnannotatedOverride = true
reportMissingParameterType = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPrivateUsage = false # ruff does this
reportUnannotatedClassAttribute = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnusedCallResult = false
reportUnusedParameter = false # ruff does this

[tool.codespell]
builtin = "clear,rare,code"
check-hidden = true
ignore-words-list = "thead"
skip = ".*,*~,./dist,./node_modules,./package.json,./package-lock.json,./uv.lock,./test-results"

[tool.coverage.html]
directory = "test-results/coverage"

[tool.coverage.run]
source = ["nudebomb"]
branch = true
concurrency = ["multiprocessing"]
omit = [
  "*/.*",
  "*__pycache__*",
  "dist/*",
  "node_modules/*",
  "test-results/*",
  "typings/*",
  "vulture_ignorelist.py",
]

[tool.pytest.ini_options]
addopts = """
  --junitxml=test-results/pytest/junit.xml
  -ra
  --strict-config
  --strict-markers
  --cov
  --cov-append
  --cov-report=html
  --cov-report=term
"""
junit_family = "xunit2"
testpaths = "tests"

[tool.radon]
exclude = "*~,.*,.*/*,__pycache__/*,dist/*,node_modules/*,test-results/*,typings/*"

[tool.ruff]
extend-exclude = [
  "**/.*",
  "**/__pycache__",
  "dist",
  "test-results",
  "typings",
  "vulture_ignorelist.py",
]
target-version = "py310"

[tool.ruff.lint]
extend-ignore = [
  "BLE001",  # catch bare exception
  "COM812",  # missing trailing comma
  "COM819",  # prohibit trailing comma
  "D203",    # blank line before class docstring
  "D206",    # formatted
  "D212",    # first line multi line docstring.
  "E111",    # formatted
  "E114",    # formatted
  "E117",    # over-indented
  "E501",    # 88 char line
  "ISC001",  # formatted
  "PERF203", # try block in loop
  "S101",    # assert
  "W191",    # formatted
]
extend-select = [
  # "AIR",
  "ERA",
  # "FAST",
  # ########
  # flake8 #
  # ########
  "YTT",
  # "ANN",
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  # "CPY",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FIX",
  "FA",
  "INT",
  "ISC",
  "ICN",
  "LOG",
  # "G",
  "INP",
  "PIE",
  "PYI",
  "T20",
  "PT",
  # "Q", Formatted
  "RSE",
  "RET",
  "SLF",
  "SIM",
  "SLOT",
  "TID",
  # "TD",
  "TC",
  "ARG",
  "PTH",
  # ############
  # end flake8 #
  # ############
  "FLY",
  "I",
  "C90",
  # "NPY",
  # "PD",
  "N",
  "PERF",
  "E",
  "W",
  # "DOC",
  "D",
  "F",
  "PGH",
  "PLE",
  "PLR",
  "PLW",
  "UP",
  "FURB",
  "RUF",
  "TRY",
]
external = ["V101"]
task-tags = ["TODO", "FIXME", "XXX", "http", "HACK"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["SLF001", "T201", "T203"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ty.environment]
python = "./.venv"
python-version = "3.10"

[tool.ty.src]
exclude = [
  "**/.*",
  "**/__pycache__",
  "**/node_modules",
  "dist",
  "test-results",
  "typings",
  "vulture_ignorelist.py",
]

[tool.vulture]
exclude = [
  "*/.*",
  "*/__pycache__*",
  "*/node_modules*",
  "dist/",
  "test-results/",
  "typings/",
]
min_confidence = 61
sort_by_size = true

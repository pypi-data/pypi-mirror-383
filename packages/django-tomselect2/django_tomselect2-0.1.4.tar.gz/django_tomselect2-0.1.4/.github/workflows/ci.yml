name: CI

on:
  push:
    branches: [main, dev]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run ruff linting
        run: |
          uv run ruff check .
          uv run ruff format --check .

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for hatch-vcs versioning

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Build package
        run: |
          uv build
          uv run twine check dist/*

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install system dependencies
        run: sudo apt-get install -y gettext graphviz

      - name: Install dependencies
        run: uv sync --extra docs

      - name: Build docs
        run: uv run sphinx-build -W -b html docs docs/_build

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        django-version: ["4.2", "5.0", "5.1"]
        exclude:
          - python-version: "3.10"
            django-version: "5.1" # Django 5.1 requires Python 3.10+, but let's be conservative

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --extra test
          uv add "django~=${{ matrix.django-version }}.0"

      - name: Install Playwright browsers
        run: uv run playwright install --with-deps chromium

      - name: Run non-browser tests
        run: uv run pytest -m "not playwright"

      - name: Upload coverage (main matrix only)
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.13' && matrix.django-version == '5.1'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  playwright:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: uv sync --extra test

      - name: Install Playwright browsers
        run: uv run playwright install --with-deps

      - name: Run Playwright tests
        run: uv run pytest -m playwright

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Dependency Review
        uses: actions/dependency-review-action@v4

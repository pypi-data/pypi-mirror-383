name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "*"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: "Test with python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # windows
          - os: "windows-latest"
            python-version: "3.9"
            python: python
          - os: "windows-latest"
            python-version: "3.14"
            python: python
          # macos
          - os: "macos-latest"
            python-version: "3.9"
            python: python
          - os: "macos-latest"
            python-version: "3.14"
            python: python
          # ubuntu
          - os: ubuntu-latest
            python-version: "2.7"
            python: python2.7
          - os: ubuntu-latest
            python-version: "3.6"
            python: python
          - os: ubuntu-latest
            python-version: "3.7"
            python: python
          - os: ubuntu-latest
            python-version: "3.8"
            python: python
          - os: ubuntu-latest
            python-version: "3.9"
            python: python
          - os: ubuntu-latest
            python-version: "3.10"
            python: python
          - os: ubuntu-latest
            python-version: "3.11"
            python: python
          - os: ubuntu-latest
            python-version: "3.12"
            python: python
          - os: ubuntu-latest
            python-version: "3.13"
            python: python
          - os: ubuntu-latest
            python-version: "3.14"
            python: python
    steps:
      - uses: "actions/checkout@v5"
      # On Windows, we use the official setup-python action.
      # On macOS and Linux, we use mise to install Python versions so we can
      # test with old unsupported Pythons.
      - uses: "actions/setup-python@v6"
        with:
          python-version: "${{ matrix.python-version }}"
        if: matrix.os == 'windows-latest'
      - uses: jdx/mise-action@v3
        with:
          mise_toml: |
            [tools]
            python = "${{ matrix.python-version }}"
        if: matrix.os != 'windows-latest'
      - name: "Install dependencies"
        run: |
          ${{ matrix.python }} -VV
          ${{ matrix.python }} -m site
          ${{ matrix.python }} -m pip install -U pip setuptools wheel virtualenv tox tox-gh-actions
      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "${{ matrix.python }} -m tox"
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

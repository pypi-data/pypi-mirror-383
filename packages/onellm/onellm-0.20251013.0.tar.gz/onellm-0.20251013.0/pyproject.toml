[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "onellm"
dynamic = ["version"]
description = "A unified interface for interacting with large language models from various providers - a complete drop-in replacement for OpenAI's client"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "Ran Aroussi", email = "ran@aroussi.com"}
]
dependencies = [
    "requests>=2.25.0",
    "aiohttp>=3.8.0",
    "pydantic>=1.8.0",
    "PyYAML>=6.0.0",
    "openai>=1.0.0",
    "tiktoken>=0.3.0",
    "huggingface-hub>=0.19.0",
    "sentence-transformers>=2.0.0",
    "faiss-cpu>=1.7.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
"Homepage" = "https://github.com/muxi-ai/onellm"
"Documentation" = "https://docs.muxi.io"
"Issues" = "https://github.com/muxi-ai/onellm/issues"

[project.optional-dependencies]
all = [
    "anthropic>=0.5.0",
    "google-generativeai>=0.3.0",
    "boto3>=1.26.0",
    "llama-cpp-python>=0.2.0",
    "google-auth>=2.16.0",
    "google-cloud-aiplatform>=1.38.0",
]
bedrock = [
    "boto3>=1.26.0",
]
vertexai = [
    "google-auth>=2.16.0",
    "google-cloud-aiplatform>=1.38.0",
]
llama = [
    "llama-cpp-python>=0.2.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "ruff>=0.0.100",
    "python-dotenv>=0.19.0",
]

[project.scripts]
onellm = "onellm.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["onellm*"]

[tool.setuptools.dynamic]
version = {file = ["onellm/.version"]}

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "N", "W", "C90", "I", "B", "UP", "A"]
ignore = ["E501"]  # Line too long

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100

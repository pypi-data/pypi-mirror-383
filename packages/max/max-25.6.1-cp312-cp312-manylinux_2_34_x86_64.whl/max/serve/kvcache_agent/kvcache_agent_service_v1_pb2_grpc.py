# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from max.serve.kvcache_agent import kvcache_agent_service_v1_pb2 as max_dot_serve_dot_kvcache__agent_dot_kvcache__agent__service__v1__pb2


class KVCacheAgentServiceStub(object):
    """Service that exposes the KV Cache Agent state
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubscribeToUpdates = channel.unary_stream(
                '/max.serve.kvcache_agent.v1.KVCacheAgentService/SubscribeToUpdates',
                request_serializer=max_dot_serve_dot_kvcache__agent_dot_kvcache__agent__service__v1__pb2.SubscriptionRequest.SerializeToString,
                response_deserializer=max_dot_serve_dot_kvcache__agent_dot_kvcache__agent__service__v1__pb2.KVCacheStateUpdate.FromString,
                _registered_method=True)


class KVCacheAgentServiceServicer(object):
    """Service that exposes the KV Cache Agent state
    """

    def SubscribeToUpdates(self, request, context):
        """Allows subscribers to receive real-time cache state updates
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KVCacheAgentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubscribeToUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeToUpdates,
                    request_deserializer=max_dot_serve_dot_kvcache__agent_dot_kvcache__agent__service__v1__pb2.SubscriptionRequest.FromString,
                    response_serializer=max_dot_serve_dot_kvcache__agent_dot_kvcache__agent__service__v1__pb2.KVCacheStateUpdate.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'max.serve.kvcache_agent.v1.KVCacheAgentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('max.serve.kvcache_agent.v1.KVCacheAgentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KVCacheAgentService(object):
    """Service that exposes the KV Cache Agent state
    """

    @staticmethod
    def SubscribeToUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/max.serve.kvcache_agent.v1.KVCacheAgentService/SubscribeToUpdates',
            max_dot_serve_dot_kvcache__agent_dot_kvcache__agent__service__v1__pb2.SubscriptionRequest.SerializeToString,
            max_dot_serve_dot_kvcache__agent_dot_kvcache__agent__service__v1__pb2.KVCacheStateUpdate.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

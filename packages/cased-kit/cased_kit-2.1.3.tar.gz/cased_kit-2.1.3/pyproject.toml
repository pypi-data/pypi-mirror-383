[project]
name = "cased-kit"
version = "2.1.3"
description = "A modular toolkit for LLM-powered codebase understanding."
authors = [
    { name = "Cased", email = "ted@cased.com" }
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
dependencies = [
    "tree-sitter>=0.25.1",
    "tree-sitter-language-pack>=0.7.2",
    "pathspec>=0.11.1",
    "numpy>=1.25",
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.20",
    "typer>=0.9,<0.16",
    "click>=8.0,<8.2",
    "openai>=1.0.0",
    "tiktoken>=0.4.0",
    "anthropic>=0.20.0",
    "google-genai>=1.14.0",
    "python-hcl2>=7.2.0",
    "mcp>=1.8.0,<2.0.0",
    "redis>=5.0.0",
    "requests>=2.25.0",
    "pyyaml>=6.0",
]

[project.urls]
Homepage = "https://github.com/cased/kit"

[project.scripts]
kit = "kit.cli:app"
kit-dev-mcp = "kit.mcp.dev:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"kit.queries" = ["*/*.scm"]
"kit" = ["queries/*/*/*.scm"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "ruff>=0.11.9",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.0.20250515",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "asyncio: mark test as asyncio to run with pytest-asyncio",
    "integration: marks tests as integration tests (may be slower)",
    "llm: marks tests that call LLM APIs (expensive, requires API keys)",
    "expensive: marks tests that are expensive/slow to run",
    "performance: marks tests that measure performance characteristics",
    "ci_skip: marks tests that should be skipped in CI environments",
]

[tool.mypy]
ignore_missing_imports = true

[project.optional-dependencies]
dev = [
    "build", # build wheels
    "twine",  # publish to PyPI
]
test-api = [
    "fastapi", # For TestClient
    "pytest" # Already in core, but good to list for a test group
]
ml = [
    "sentence-transformers>=2.2.0",  # For VectorSearcher and DocstringIndexer
    "chromadb>=1.0.0",  # Vector database for semantic search (1.0+ required for Cloud)
]
all = [
    "sentence-transformers>=2.2.0",
    "chromadb>=1.0.0",
]

[tool.ruff]
# Set line length to 120 characters
line-length = 120
# Target Python 3.10 as specified in our requires-python
target-version = "py310"

# Configure linting
[tool.ruff.lint]
# Select these rule sets (categories)
select = ["E", "F", "W", "I", "RUF"]
ignore = []

# Configure isort rules
[tool.ruff.lint.isort]
known-first-party = ["kit", "cased_kit"]

# Configure formatter
[tool.ruff.format]
# Formatting uses line-length from the top level

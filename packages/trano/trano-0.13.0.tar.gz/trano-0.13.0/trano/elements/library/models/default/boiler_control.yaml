- classes:
  - BoilerControl
  component_template:
    bus:
      real_inputs:
      - component: sub1
        name: TStoTop
        port: u1
        target:
          main: |-
            element.controllable_element.name
      - component: greThr
        name: TStoBot
        port: u
        target:
          main: |-
            element.controllable_element.name
      - component: lesThrTOut
        name: TAirOut
        port: u
        target:
          main: |-
            element.controllable_element.name
      real_outputs:
      - component: booToReaBoi
        name: yBoiCon
        port: y
        target:
          main: |-
            element.controllable_element.name
      - component: booToReaPum
        name: yPumBoi
        port: y
        target:
          main: |-
            element.controllable_element.name
    category: control
    template: "\n    model BoilerControl{{ element.name | capitalize}}\n    extends\
      \ {{ package_name }}.Trano.Controls.ventilation.PartialBoilerControl;\n    {{bus_template}}\n\
      \    equation\n    {{bus_ports | safe}}\n     end BoilerControl{{ element.name\
      \ | capitalize}};\n     "
  figures: []
  library: default
  parameter_processing:
    function: default_parameters
  ports:
  - flow: undirected
    medium: data
    multi_connection: true
    names:
    - dataBus
    targets:
    - DataBus
    - System
    use_counter: false
  template: |2-

        {{package_name}}.Components.BaseClasses.BoilerControl{{ element.name | capitalize}}
        {{ element.name }}({{ macros.render_parameters(parameters) | safe}})
  variant: default
- classes:
  - BoilerControl
  component_template:
    bus:
      real_inputs:
      - component: sub1
        name: TStoTop
        port: u1
        target:
          main: |-
            element.controllable_element.name
      - component: greThr
        name: TStoBot
        port: u
        target:
          main: |-
            element.controllable_element.name
      - component: lesThrTOut
        name: TAirOut
        port: u
        target:
          main: |-
            element.controllable_element.name
      real_outputs:
      - component: booToReaBoi
        name: yBoiCon
        port: y
        target:
          main: |-
            element.controllable_element.name
      - component: booToReaPum
        name: yPumBoi
        port: y
        target:
          main: |-
            element.controllable_element.name
    category: control
    template: "\n    model BoilerControl{{ element.name | capitalize}}\n    extends\
      \ {{ package_name }}.Trano.Controls.ventilation.PartialBoilerControl;\n    {{bus_template}}\n\
      \    equation\n    {{bus_ports | safe}}\n     end BoilerControl{{ element.name\
      \ | capitalize}};\n     "
  figures: []
  library: default
  parameter_processing:
    function: default_parameters
  ports:
  - flow: undirected
    medium: data
    multi_connection: true
    names:
    - dataBus
    targets:
    - DataBus
    - System
    use_counter: false
  template: |2-

        {{package_name}}.Components.BaseClasses.BoilerControl{{ element.name | capitalize}}
        {{ element.name }}({{ macros.render_parameters(parameters) | safe}})
  variant: complex
- classes:
  - BoilerControl
  component_template:
    bus:
      real_inputs:
      - component: mulMax
        default: 25.0
        multi: true
        name: yPumBoi
        port: u
        target:
          main: element.pumps
          sub: name
      real_outputs:
      - component: booToRea
        name: y
        port: y
        target:
          main: |-
            element.controllable_element.name
    category: control
    template: |-
      model BoilerControl{{ element.name | capitalize}}
      Buildings.Controls.OBC.CDL.Reals.MultiMax
      mulMax(nin={{ element.pumps | length }})
      "Maximum radiator valve position"
      {% raw %}annotation (Placement(transformation(extent={{-76,-10},{-56,10}})));{% endraw %}
      Buildings.Controls.OBC.CDL.Reals.Hysteresis
      hysPum(uLow=0.01, uHigh=0.5)
      "Hysteresis for pump"
      {% raw %}annotation (Placement(transformation(extent={{-26,-10},{-6,10}})));{% endraw %}
      Buildings.Controls.OBC.CDL.Conversions.BooleanToReal booToRea
      "Conversion from boolean to real signal"
      {% raw %}annotation (Placement(transformation(extent={{14,-10},{34,10}})));{% endraw %}
      {{bus_template}}
      equation
      connect(mulMax.y,hysPum. u) {% raw %}annotation (Line(
      points={{-54,0},{-28,0}},
      color={0,0,127},
      smooth=Smooth.None));{% endraw %}
      connect(hysPum.y,booToRea. u)
      {% raw %}annotation (Line(points={{-4,0},{12,0}},   color={255,0,255}));{% endraw %}
      {% raw %}annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
      coordinateSystem(preserveAspectRatio=false)));{% endraw %}
      {{bus_ports | safe}}
      end BoilerControl{{ element.name | capitalize}};
  figures: []
  library: default
  parameter_processing:
    function: default_parameters
  ports:
  - flow: undirected
    medium: data
    multi_connection: true
    names:
    - dataBus
    targets:
    - DataBus
    - System
    use_counter: false
  template: |2-

        {{package_name}}.Components.BaseClasses.BoilerControl{{ element.name | capitalize}}
        {{ element.name }}
  variant: simple
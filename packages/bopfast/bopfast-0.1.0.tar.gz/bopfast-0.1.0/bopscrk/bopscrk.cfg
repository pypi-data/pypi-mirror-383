###################################################################################
## bopscrk.py - main configuration file                                          ##
## https://github.com/r3nt0n/bopscrk                                             ##
##-------------------------------------------------------------------------------##
## EXTENSIVE LEET charset made by r3nt0n, suggestions are welcome!               ##
## EXTENSIVE SEPARATORS and SPACE-REPLACEMENT charset from:                      ##
## https://owasp.org/www-community/password-special-characters                   ##
##-------------------------------------------------------------------------------##
## (!) WARNING: characters like % must be escaped (%%) to avoid syntax conflicts ##
###################################################################################

[GENERAL]
# Reserved for potential future uses

[COMBINATIONS]
# Enables extra combination and additions at beginning and end of words
# example: (john, doe) => 123john, john123, 123doe, doe123, john123doe doe123john
extra_combinations=false
# SEPARATORS CHARSET - Characters to use in extra-combinations
separators_chars=._-+&@!
separators_strings=!! 123
# To get extensive charsets, uncomment the following lines:
#separators_chars=!"#$%%&'()*+,-./:;<=>?@[\]^_`{|}~
#separators_strings=!! ¡¡ !!! ¡¡¡ ¡!¡ !¡! 123 1234 xXx XxX WwW wWw


[TRANSFORMS]
# LEET REPLACEMENT CHARSET
# characters to replace and correspondent substitute in leet transforms
leet_charset=a:4 e:3 i:1 o:0 s:$
# To get an extensive charset, uncomment the following line
# leet_charset=a:4 a:@ e:3 i:1 i:! i:¡ l:1 o:0 s:$ s:5 b:8 t:7 c:(

# RECURSIVE LEET TRANSFORMS - Enables a recursive call to leet_transforms() function
# Comment this line or set it to false in case you don't want to get all possible leet transforms
# (!) Warning: enabled with huge --max parameters (e.g.: greater than 18) could take several minutes
recursive_leet=true
extensive_case=false

[LYRICS]
# Remove all parenthesis in lyrics found before any transform
remove_parenthesis=true
# Produce words based on initial of each word in phrases found
# (if enabled with remove_parenthesis disabled, it can produce useless words)
take_initials=true
artist_split_by_word=true
artist_space_replacement=true
lyric_split_by_word=false
lyric_space_replacement=true
# SPACE REPLACEMENT CHARSET - Characters and/or strings to insert instead of spaces
# inside an artist name or a lyric phrase
# Comment two above lines or set it empty in order to don't replace spaces, just remove them
space_replacement_chars=._-+&@!
space_replacement_strings=
# To get an extensive charset, uncomment the following line
#space_replacement_chars=!"#$%%&'()*+,-./:;<=>?@[\]^_`{|}~

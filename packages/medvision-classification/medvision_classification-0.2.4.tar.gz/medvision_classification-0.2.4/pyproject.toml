[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "medvision-classification"
version = "0.2.4"
description = "A comprehensive PyTorch Lightning framework for medical image classification with support for 2D/3D images"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "weizhipeng", email = "weizhipeng@shu.edu.cn"},
]
keywords = ["medical imaging", "classification", "pytorch", "lightning", "deep learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "pytorch-lightning>=2.0.0",
    "lightning>=2.0.0",
    "numpy>=1.21.0",
    "pyyaml>=6.0",
    "tqdm>=4.64.0",
    "click>=8.0.0",
    "pillow>=9.0.0",
    "scikit-image>=0.19.0",
    "pandas>=1.4.0",
    "nibabel>=3.2.0",
    "SimpleITK>=2.2.0",
    "pydicom>=2.3.0",
    "monai>=1.3.0",
    "opencv-python>=4.7.0",
    "albumentations>=1.3.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "tensorboard>=2.10.0",
    "scikit-learn>=1.1.0",
    "scipy>=1.9.0",
    "torchmetrics>=0.11.0",
    "timm>=0.9.0",
    "efficientnet-pytorch>=0.7.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
all = [
    "wandb>=0.15.0",
    "onnx>=1.12.0",
    "onnxruntime>=1.12.0",
]

[project.urls]
Homepage = "https://github.com/Hi-Zhipeng/MedVision-classification"
Repository = "https://github.com/Hi-Zhipeng/MedVision-classification"
Documentation = "https://github.com/Hi-Zhipeng/MedVision-classification#readme"
"Bug Tracker" = "https://github.com/Hi-Zhipeng/MedVision-classification/issues"

[project.scripts]
medvision-cls = "medvision_cls.cli.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["medvision_cls*"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["medvision_cls"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=medvision_cls",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
]

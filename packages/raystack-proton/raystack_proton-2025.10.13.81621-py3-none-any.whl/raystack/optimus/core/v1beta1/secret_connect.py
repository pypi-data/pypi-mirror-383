# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: raystack/optimus/core/v1beta1/secret.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import raystack.optimus.core.v1beta1.secret_pb2 as raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2


class SecretService(Protocol):
    async def register_secret(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_secret(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_secrets(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_secret(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class SecretServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: SecretService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.SecretService/RegisterSecret": Endpoint.unary(
                    method=MethodInfo(
                        name="RegisterSecret",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register_secret,
                ),
                "/raystack.optimus.core.v1beta1.SecretService/UpdateSecret": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateSecret",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_secret,
                ),
                "/raystack.optimus.core.v1beta1.SecretService/ListSecrets": Endpoint.unary(
                    method=MethodInfo(
                        name="ListSecrets",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_secrets,
                ),
                "/raystack.optimus.core.v1beta1.SecretService/DeleteSecret": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteSecret",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_secret,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.SecretService"


class SecretServiceClient(ConnectClient):
    async def register_secret(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RegisterSecret",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_secret(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateSecret",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_secrets(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListSecrets",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_secret(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteSecret",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class SecretServiceSync(Protocol):
    def register_secret(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_secret(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_secrets(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_secret(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class SecretServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: SecretServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.SecretService/RegisterSecret": EndpointSync.unary(
                    method=MethodInfo(
                        name="RegisterSecret",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register_secret,
                ),
                "/raystack.optimus.core.v1beta1.SecretService/UpdateSecret": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateSecret",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_secret,
                ),
                "/raystack.optimus.core.v1beta1.SecretService/ListSecrets": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListSecrets",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_secrets,
                ),
                "/raystack.optimus.core.v1beta1.SecretService/DeleteSecret": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteSecret",
                        service_name="raystack.optimus.core.v1beta1.SecretService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_secret,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.SecretService"


class SecretServiceClientSync(ConnectClientSync):
    def register_secret(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RegisterSecret",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.RegisterSecretResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_secret(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateSecret",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.UpdateSecretResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_secrets(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListSecrets",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.ListSecretsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_secret(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteSecret",
                service_name="raystack.optimus.core.v1beta1.SecretService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_secret__pb2.DeleteSecretResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

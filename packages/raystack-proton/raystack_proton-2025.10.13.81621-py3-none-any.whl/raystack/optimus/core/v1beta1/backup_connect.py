# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: raystack/optimus/core/v1beta1/backup.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import raystack.optimus.core.v1beta1.backup_pb2 as raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2


class BackupService(Protocol):
    async def create_backup(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_backups(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_backup(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class BackupServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: BackupService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.BackupService/CreateBackup": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateBackup",
                        service_name="raystack.optimus.core.v1beta1.BackupService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_backup,
                ),
                "/raystack.optimus.core.v1beta1.BackupService/ListBackups": Endpoint.unary(
                    method=MethodInfo(
                        name="ListBackups",
                        service_name="raystack.optimus.core.v1beta1.BackupService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_backups,
                ),
                "/raystack.optimus.core.v1beta1.BackupService/GetBackup": Endpoint.unary(
                    method=MethodInfo(
                        name="GetBackup",
                        service_name="raystack.optimus.core.v1beta1.BackupService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_backup,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.BackupService"


class BackupServiceClient(ConnectClient):
    async def create_backup(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateBackup",
                service_name="raystack.optimus.core.v1beta1.BackupService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_backups(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListBackups",
                service_name="raystack.optimus.core.v1beta1.BackupService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_backup(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetBackup",
                service_name="raystack.optimus.core.v1beta1.BackupService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class BackupServiceSync(Protocol):
    def create_backup(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_backups(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_backup(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class BackupServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: BackupServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.BackupService/CreateBackup": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateBackup",
                        service_name="raystack.optimus.core.v1beta1.BackupService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_backup,
                ),
                "/raystack.optimus.core.v1beta1.BackupService/ListBackups": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListBackups",
                        service_name="raystack.optimus.core.v1beta1.BackupService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_backups,
                ),
                "/raystack.optimus.core.v1beta1.BackupService/GetBackup": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetBackup",
                        service_name="raystack.optimus.core.v1beta1.BackupService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_backup,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.BackupService"


class BackupServiceClientSync(ConnectClientSync):
    def create_backup(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateBackup",
                service_name="raystack.optimus.core.v1beta1.BackupService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.CreateBackupResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_backups(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListBackups",
                service_name="raystack.optimus.core.v1beta1.BackupService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.ListBackupsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_backup(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetBackup",
                service_name="raystack.optimus.core.v1beta1.BackupService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_backup__pb2.GetBackupResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

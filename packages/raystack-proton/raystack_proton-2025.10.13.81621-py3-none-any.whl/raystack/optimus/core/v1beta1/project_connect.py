# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: raystack/optimus/core/v1beta1/project.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import raystack.optimus.core.v1beta1.project_pb2 as raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2


class ProjectService(Protocol):
    async def register_project(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_projects(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_project(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class ProjectServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: ProjectService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.ProjectService/RegisterProject": Endpoint.unary(
                    method=MethodInfo(
                        name="RegisterProject",
                        service_name="raystack.optimus.core.v1beta1.ProjectService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register_project,
                ),
                "/raystack.optimus.core.v1beta1.ProjectService/ListProjects": Endpoint.unary(
                    method=MethodInfo(
                        name="ListProjects",
                        service_name="raystack.optimus.core.v1beta1.ProjectService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_projects,
                ),
                "/raystack.optimus.core.v1beta1.ProjectService/GetProject": Endpoint.unary(
                    method=MethodInfo(
                        name="GetProject",
                        service_name="raystack.optimus.core.v1beta1.ProjectService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_project,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.ProjectService"


class ProjectServiceClient(ConnectClient):
    async def register_project(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RegisterProject",
                service_name="raystack.optimus.core.v1beta1.ProjectService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_projects(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListProjects",
                service_name="raystack.optimus.core.v1beta1.ProjectService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_project(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetProject",
                service_name="raystack.optimus.core.v1beta1.ProjectService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class ProjectServiceSync(Protocol):
    def register_project(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_projects(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_project(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class ProjectServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: ProjectServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.ProjectService/RegisterProject": EndpointSync.unary(
                    method=MethodInfo(
                        name="RegisterProject",
                        service_name="raystack.optimus.core.v1beta1.ProjectService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register_project,
                ),
                "/raystack.optimus.core.v1beta1.ProjectService/ListProjects": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListProjects",
                        service_name="raystack.optimus.core.v1beta1.ProjectService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_projects,
                ),
                "/raystack.optimus.core.v1beta1.ProjectService/GetProject": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetProject",
                        service_name="raystack.optimus.core.v1beta1.ProjectService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_project,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.ProjectService"


class ProjectServiceClientSync(ConnectClientSync):
    def register_project(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RegisterProject",
                service_name="raystack.optimus.core.v1beta1.ProjectService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.RegisterProjectResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_projects(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListProjects",
                service_name="raystack.optimus.core.v1beta1.ProjectService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.ListProjectsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_project(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetProject",
                service_name="raystack.optimus.core.v1beta1.ProjectService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_project__pb2.GetProjectResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

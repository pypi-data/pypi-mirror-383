# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: raystack/optimus/core/v1beta1/runtime.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import raystack.optimus.core.v1beta1.runtime_pb2 as raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2


class RuntimeService(Protocol):
    async def version(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class RuntimeServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: RuntimeService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.RuntimeService/Version": Endpoint.unary(
                    method=MethodInfo(
                        name="Version",
                        service_name="raystack.optimus.core.v1beta1.RuntimeService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.version,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.RuntimeService"


class RuntimeServiceClient(ConnectClient):
    async def version(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Version",
                service_name="raystack.optimus.core.v1beta1.RuntimeService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class RuntimeServiceSync(Protocol):
    def version(self, request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest, ctx: RequestContext) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class RuntimeServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: RuntimeServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.optimus.core.v1beta1.RuntimeService/Version": EndpointSync.unary(
                    method=MethodInfo(
                        name="Version",
                        service_name="raystack.optimus.core.v1beta1.RuntimeService",
                        input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest,
                        output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.version,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.optimus.core.v1beta1.RuntimeService"


class RuntimeServiceClientSync(ConnectClientSync):
    def version(
        self,
        request: raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Version",
                service_name="raystack.optimus.core.v1beta1.RuntimeService",
                input=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionRequest,
                output=raystack_dot_optimus_dot_core_dot_v1beta1_dot_runtime__pb2.VersionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

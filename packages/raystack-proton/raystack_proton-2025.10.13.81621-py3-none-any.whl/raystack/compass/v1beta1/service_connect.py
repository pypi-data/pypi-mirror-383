# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: raystack/compass/v1beta1/service.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import raystack.compass.v1beta1.service_pb2 as raystack_dot_compass_dot_v1beta1_dot_service__pb2


class CompassService(Protocol):
    async def get_all_discussions(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_discussion(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_discussion(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def patch_discussion(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_all_comments(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def search_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def suggest_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_graph(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_all_types(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_all_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_asset_by_i_d(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def upsert_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def upsert_patch_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_asset_stargazers(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_asset_version_history(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_asset_by_version(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_asset_probe(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_user_starred_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_my_starred_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_my_starred_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def star_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def unstar_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_my_discussions(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_tag_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_tag_by_asset_and_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_tag_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_tag_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_all_tags_by_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_all_tag_templates(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_namespace(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_namespace(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_namespace(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_namespaces(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class CompassServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: CompassService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.compass.v1beta1.CompassService/GetAllDiscussions": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAllDiscussions",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_discussions,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateDiscussion": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateDiscussion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_discussion,
                ),
                "/raystack.compass.v1beta1.CompassService/GetDiscussion": Endpoint.unary(
                    method=MethodInfo(
                        name="GetDiscussion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_discussion,
                ),
                "/raystack.compass.v1beta1.CompassService/PatchDiscussion": Endpoint.unary(
                    method=MethodInfo(
                        name="PatchDiscussion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.patch_discussion,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateComment": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllComments": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAllComments",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_comments,
                ),
                "/raystack.compass.v1beta1.CompassService/GetComment": Endpoint.unary(
                    method=MethodInfo(
                        name="GetComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateComment": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteComment": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/SearchAssets": Endpoint.unary(
                    method=MethodInfo(
                        name="SearchAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.search_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/SuggestAssets": Endpoint.unary(
                    method=MethodInfo(
                        name="SuggestAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.suggest_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetGraph": Endpoint.unary(
                    method=MethodInfo(
                        name="GetGraph",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_graph,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllTypes": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAllTypes",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_types,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllAssets": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAllAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetByID": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAssetByID",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_by_i_d,
                ),
                "/raystack.compass.v1beta1.CompassService/UpsertAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="UpsertAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.upsert_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/UpsertPatchAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="UpsertPatchAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.upsert_patch_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetStargazers": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAssetStargazers",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_stargazers,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetVersionHistory": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAssetVersionHistory",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_version_history,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetByVersion": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAssetByVersion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_by_version,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateAssetProbe": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateAssetProbe",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_asset_probe,
                ),
                "/raystack.compass.v1beta1.CompassService/GetUserStarredAssets": Endpoint.unary(
                    method=MethodInfo(
                        name="GetUserStarredAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_user_starred_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetMyStarredAssets": Endpoint.unary(
                    method=MethodInfo(
                        name="GetMyStarredAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_my_starred_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetMyStarredAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="GetMyStarredAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_my_starred_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/StarAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="StarAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.star_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/UnstarAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="UnstarAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.unstar_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetMyDiscussions": Endpoint.unary(
                    method=MethodInfo(
                        name="GetMyDiscussions",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_my_discussions,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateTagAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateTagAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_tag_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetTagByAssetAndTemplate": Endpoint.unary(
                    method=MethodInfo(
                        name="GetTagByAssetAndTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_tag_by_asset_and_template,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateTagAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateTagAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_tag_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteTagAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteTagAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_tag_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllTagsByAsset": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAllTagsByAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_tags_by_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllTagTemplates": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAllTagTemplates",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_tag_templates,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateTagTemplate": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/GetTagTemplate": Endpoint.unary(
                    method=MethodInfo(
                        name="GetTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateTagTemplate": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteTagTemplate": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateNamespace": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateNamespace",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_namespace,
                ),
                "/raystack.compass.v1beta1.CompassService/GetNamespace": Endpoint.unary(
                    method=MethodInfo(
                        name="GetNamespace",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_namespace,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateNamespace": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateNamespace",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_namespace,
                ),
                "/raystack.compass.v1beta1.CompassService/ListNamespaces": Endpoint.unary(
                    method=MethodInfo(
                        name="ListNamespaces",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_namespaces,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.compass.v1beta1.CompassService"


class CompassServiceClient(ConnectClient):
    async def get_all_discussions(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllDiscussions",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_discussion(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateDiscussion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_discussion(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetDiscussion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def patch_discussion(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="PatchDiscussion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_all_comments(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllComments",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def search_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="SearchAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def suggest_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="SuggestAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_graph(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetGraph",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_all_types(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllTypes",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_all_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_asset_by_i_d(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetByID",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def upsert_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpsertAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def upsert_patch_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpsertPatchAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_asset_stargazers(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetStargazers",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_asset_version_history(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetVersionHistory",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_asset_by_version(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetByVersion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_asset_probe(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateAssetProbe",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_user_starred_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetUserStarredAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_my_starred_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetMyStarredAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_my_starred_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetMyStarredAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def star_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="StarAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def unstar_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UnstarAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_my_discussions(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetMyDiscussions",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_tag_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTagAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_tag_by_asset_and_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTagByAssetAndTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_tag_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTagAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_tag_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTagAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_all_tags_by_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllTagsByAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_all_tag_templates(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllTagTemplates",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_namespace(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateNamespace",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_namespace(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetNamespace",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_namespace(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateNamespace",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_namespaces(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListNamespaces",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class CompassServiceSync(Protocol):
    def get_all_discussions(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_discussion(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_discussion(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def patch_discussion(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_all_comments(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_comment(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def search_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def suggest_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_graph(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_all_types(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_all_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_asset_by_i_d(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def upsert_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def upsert_patch_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_asset_stargazers(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_asset_version_history(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_asset_by_version(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_asset_probe(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_user_starred_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_my_starred_assets(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_my_starred_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def star_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def unstar_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_my_discussions(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_tag_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_tag_by_asset_and_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_tag_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_tag_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_all_tags_by_asset(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_all_tag_templates(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_tag_template(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_namespace(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_namespace(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_namespace(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_namespaces(self, request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest, ctx: RequestContext) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class CompassServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: CompassServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.compass.v1beta1.CompassService/GetAllDiscussions": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAllDiscussions",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_discussions,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateDiscussion": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateDiscussion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_discussion,
                ),
                "/raystack.compass.v1beta1.CompassService/GetDiscussion": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetDiscussion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_discussion,
                ),
                "/raystack.compass.v1beta1.CompassService/PatchDiscussion": EndpointSync.unary(
                    method=MethodInfo(
                        name="PatchDiscussion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.patch_discussion,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateComment": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllComments": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAllComments",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_comments,
                ),
                "/raystack.compass.v1beta1.CompassService/GetComment": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateComment": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteComment": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteComment",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_comment,
                ),
                "/raystack.compass.v1beta1.CompassService/SearchAssets": EndpointSync.unary(
                    method=MethodInfo(
                        name="SearchAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.search_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/SuggestAssets": EndpointSync.unary(
                    method=MethodInfo(
                        name="SuggestAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.suggest_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetGraph": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetGraph",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_graph,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllTypes": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAllTypes",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_types,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllAssets": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAllAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetByID": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAssetByID",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_by_i_d,
                ),
                "/raystack.compass.v1beta1.CompassService/UpsertAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpsertAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.upsert_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/UpsertPatchAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpsertPatchAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.upsert_patch_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetStargazers": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAssetStargazers",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_stargazers,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetVersionHistory": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAssetVersionHistory",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_version_history,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAssetByVersion": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAssetByVersion",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_asset_by_version,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateAssetProbe": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateAssetProbe",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_asset_probe,
                ),
                "/raystack.compass.v1beta1.CompassService/GetUserStarredAssets": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetUserStarredAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_user_starred_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetMyStarredAssets": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetMyStarredAssets",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_my_starred_assets,
                ),
                "/raystack.compass.v1beta1.CompassService/GetMyStarredAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetMyStarredAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_my_starred_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/StarAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="StarAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.star_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/UnstarAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="UnstarAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.unstar_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetMyDiscussions": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetMyDiscussions",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_my_discussions,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateTagAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateTagAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_tag_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetTagByAssetAndTemplate": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetTagByAssetAndTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_tag_by_asset_and_template,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateTagAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateTagAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_tag_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteTagAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteTagAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_tag_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllTagsByAsset": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAllTagsByAsset",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_tags_by_asset,
                ),
                "/raystack.compass.v1beta1.CompassService/GetAllTagTemplates": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAllTagTemplates",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_all_tag_templates,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateTagTemplate": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/GetTagTemplate": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateTagTemplate": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/DeleteTagTemplate": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteTagTemplate",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_tag_template,
                ),
                "/raystack.compass.v1beta1.CompassService/CreateNamespace": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateNamespace",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_namespace,
                ),
                "/raystack.compass.v1beta1.CompassService/GetNamespace": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetNamespace",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_namespace,
                ),
                "/raystack.compass.v1beta1.CompassService/UpdateNamespace": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateNamespace",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_namespace,
                ),
                "/raystack.compass.v1beta1.CompassService/ListNamespaces": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListNamespaces",
                        service_name="raystack.compass.v1beta1.CompassService",
                        input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest,
                        output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_namespaces,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.compass.v1beta1.CompassService"


class CompassServiceClientSync(ConnectClientSync):
    def get_all_discussions(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllDiscussions",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllDiscussionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_discussion(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateDiscussion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateDiscussionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_discussion(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetDiscussion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetDiscussionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def patch_discussion(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="PatchDiscussion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.PatchDiscussionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_all_comments(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllComments",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllCommentsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_comment(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteComment",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteCommentResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def search_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="SearchAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SearchAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def suggest_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="SuggestAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.SuggestAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_graph(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetGraph",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetGraphResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_all_types(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllTypes",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTypesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_all_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_asset_by_i_d(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetByID",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByIDResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def upsert_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpsertAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def upsert_patch_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpsertPatchAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpsertPatchAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_asset_stargazers(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetStargazers",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetStargazersResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_asset_version_history(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetVersionHistory",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetVersionHistoryResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_asset_by_version(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAssetByVersion",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAssetByVersionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_asset_probe(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateAssetProbe",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateAssetProbeResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_user_starred_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetUserStarredAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetUserStarredAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_my_starred_assets(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetMyStarredAssets",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_my_starred_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetMyStarredAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyStarredAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def star_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="StarAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.StarAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def unstar_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UnstarAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UnstarAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_my_discussions(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetMyDiscussions",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetMyDiscussionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_tag_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTagAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_tag_by_asset_and_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTagByAssetAndTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagByAssetAndTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_tag_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTagAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_tag_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTagAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_all_tags_by_asset(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllTagsByAsset",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagsByAssetResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_all_tag_templates(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAllTagTemplates",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetAllTagTemplatesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_tag_template(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTagTemplate",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.DeleteTagTemplateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_namespace(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateNamespace",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.CreateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_namespace(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetNamespace",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.GetNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_namespace(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateNamespace",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.UpdateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_namespaces(
        self,
        request: raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListNamespaces",
                service_name="raystack.compass.v1beta1.CompassService",
                input=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesRequest,
                output=raystack_dot_compass_dot_v1beta1_dot_service__pb2.ListNamespacesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

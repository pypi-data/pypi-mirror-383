# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: raystack/stencil/v1beta1/stencil.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import raystack.stencil.v1beta1.stencil_pb2 as raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2


class StencilService(Protocol):
    async def list_namespaces(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_schemas(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def check_compatibility(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_schema_metadata(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_schema_metadata(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_latest_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_versions(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_version(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def search(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class StencilServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: StencilService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.stencil.v1beta1.StencilService/ListNamespaces": Endpoint.unary(
                    method=MethodInfo(
                        name="ListNamespaces",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_namespaces,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetNamespace": Endpoint.unary(
                    method=MethodInfo(
                        name="GetNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/CreateNamespace": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/UpdateNamespace": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/DeleteNamespace": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/ListSchemas": Endpoint.unary(
                    method=MethodInfo(
                        name="ListSchemas",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_schemas,
                ),
                "/raystack.stencil.v1beta1.StencilService/CreateSchema": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/CheckCompatibility": Endpoint.unary(
                    method=MethodInfo(
                        name="CheckCompatibility",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.check_compatibility,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetSchemaMetadata": Endpoint.unary(
                    method=MethodInfo(
                        name="GetSchemaMetadata",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_schema_metadata,
                ),
                "/raystack.stencil.v1beta1.StencilService/UpdateSchemaMetadata": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateSchemaMetadata",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_schema_metadata,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetLatestSchema": Endpoint.unary(
                    method=MethodInfo(
                        name="GetLatestSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_latest_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/DeleteSchema": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetSchema": Endpoint.unary(
                    method=MethodInfo(
                        name="GetSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/ListVersions": Endpoint.unary(
                    method=MethodInfo(
                        name="ListVersions",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_versions,
                ),
                "/raystack.stencil.v1beta1.StencilService/DeleteVersion": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteVersion",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_version,
                ),
                "/raystack.stencil.v1beta1.StencilService/Search": Endpoint.unary(
                    method=MethodInfo(
                        name="Search",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.search,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.stencil.v1beta1.StencilService"


class StencilServiceClient(ConnectClient):
    async def list_namespaces(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListNamespaces",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_schemas(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListSchemas",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def check_compatibility(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CheckCompatibility",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_schema_metadata(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetSchemaMetadata",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_schema_metadata(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateSchemaMetadata",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_latest_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetLatestSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_versions(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListVersions",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_version(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteVersion",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def search(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Search",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class StencilServiceSync(Protocol):
    def list_namespaces(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_namespace(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_schemas(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def check_compatibility(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_schema_metadata(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_schema_metadata(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_latest_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_schema(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_versions(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_version(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def search(self, request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest, ctx: RequestContext) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class StencilServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: StencilServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.stencil.v1beta1.StencilService/ListNamespaces": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListNamespaces",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_namespaces,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetNamespace": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/CreateNamespace": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/UpdateNamespace": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/DeleteNamespace": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteNamespace",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_namespace,
                ),
                "/raystack.stencil.v1beta1.StencilService/ListSchemas": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListSchemas",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_schemas,
                ),
                "/raystack.stencil.v1beta1.StencilService/CreateSchema": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/CheckCompatibility": EndpointSync.unary(
                    method=MethodInfo(
                        name="CheckCompatibility",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.check_compatibility,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetSchemaMetadata": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetSchemaMetadata",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_schema_metadata,
                ),
                "/raystack.stencil.v1beta1.StencilService/UpdateSchemaMetadata": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateSchemaMetadata",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_schema_metadata,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetLatestSchema": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetLatestSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_latest_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/DeleteSchema": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/GetSchema": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetSchema",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_schema,
                ),
                "/raystack.stencil.v1beta1.StencilService/ListVersions": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListVersions",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_versions,
                ),
                "/raystack.stencil.v1beta1.StencilService/DeleteVersion": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteVersion",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_version,
                ),
                "/raystack.stencil.v1beta1.StencilService/Search": EndpointSync.unary(
                    method=MethodInfo(
                        name="Search",
                        service_name="raystack.stencil.v1beta1.StencilService",
                        input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest,
                        output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.search,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.stencil.v1beta1.StencilService"


class StencilServiceClientSync(ConnectClientSync):
    def list_namespaces(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListNamespaces",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListNamespacesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_namespace(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteNamespace",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteNamespaceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_schemas(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListSchemas",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListSchemasResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CreateSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def check_compatibility(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CheckCompatibility",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.CheckCompatibilityResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_schema_metadata(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetSchemaMetadata",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaMetadataResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_schema_metadata(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateSchemaMetadata",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.UpdateSchemaMetadataResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_latest_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetLatestSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetLatestSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_schema(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetSchema",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.GetSchemaResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_versions(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListVersions",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.ListVersionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_version(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteVersion",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.DeleteVersionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def search(
        self,
        request: raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Search",
                service_name="raystack.stencil.v1beta1.StencilService",
                input=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchRequest,
                output=raystack_dot_stencil_dot_v1beta1_dot_stencil__pb2.SearchResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: raystack/entropy/v1beta1/resource.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import raystack.entropy.v1beta1.resource_pb2 as raystack_dot_entropy_dot_v1beta1_dot_resource__pb2


class ResourceService(Protocol):
    async def list_resources(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def apply_action(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    def get_log(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest, ctx: RequestContext) -> AsyncIterator[raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse]:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_resource_revisions(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class ResourceServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: ResourceService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.entropy.v1beta1.ResourceService/ListResources": Endpoint.unary(
                    method=MethodInfo(
                        name="ListResources",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_resources,
                ),
                "/raystack.entropy.v1beta1.ResourceService/GetResource": Endpoint.unary(
                    method=MethodInfo(
                        name="GetResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/CreateResource": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/UpdateResource": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/DeleteResource": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/ApplyAction": Endpoint.unary(
                    method=MethodInfo(
                        name="ApplyAction",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.apply_action,
                ),
                "/raystack.entropy.v1beta1.ResourceService/GetLog": Endpoint.server_stream(
                    method=MethodInfo(
                        name="GetLog",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_log,
                ),
                "/raystack.entropy.v1beta1.ResourceService/GetResourceRevisions": Endpoint.unary(
                    method=MethodInfo(
                        name="GetResourceRevisions",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_resource_revisions,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.entropy.v1beta1.ResourceService"


class ResourceServiceClient(ConnectClient):
    async def list_resources(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListResources",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def apply_action(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ApplyAction",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_log(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> AsyncIterator[raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse]:
        return self.execute_server_stream(
            request=request,
            method=MethodInfo(
                name="GetLog",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_resource_revisions(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetResourceRevisions",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class ResourceServiceSync(Protocol):
    def list_resources(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_resource(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def apply_action(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_log(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest, ctx: RequestContext) -> Iterator[raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse]:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_resource_revisions(self, request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest, ctx: RequestContext) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class ResourceServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: ResourceServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/raystack.entropy.v1beta1.ResourceService/ListResources": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListResources",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_resources,
                ),
                "/raystack.entropy.v1beta1.ResourceService/GetResource": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/CreateResource": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/UpdateResource": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/DeleteResource": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteResource",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_resource,
                ),
                "/raystack.entropy.v1beta1.ResourceService/ApplyAction": EndpointSync.unary(
                    method=MethodInfo(
                        name="ApplyAction",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.apply_action,
                ),
                "/raystack.entropy.v1beta1.ResourceService/GetLog": EndpointSync.server_stream(
                    method=MethodInfo(
                        name="GetLog",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_log,
                ),
                "/raystack.entropy.v1beta1.ResourceService/GetResourceRevisions": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetResourceRevisions",
                        service_name="raystack.entropy.v1beta1.ResourceService",
                        input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest,
                        output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_resource_revisions,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/raystack.entropy.v1beta1.ResourceService"


class ResourceServiceClientSync(ConnectClientSync):
    def list_resources(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListResources",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ListResourcesResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.CreateResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.UpdateResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_resource(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteResource",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.DeleteResourceResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def apply_action(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ApplyAction",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.ApplyActionResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_log(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> Iterator[raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse]:
        return self.execute_server_stream(
            request=request,
            method=MethodInfo(
                name="GetLog",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetLogResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_resource_revisions(
        self,
        request: raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetResourceRevisions",
                service_name="raystack.entropy.v1beta1.ResourceService",
                input=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsRequest,
                output=raystack_dot_entropy_dot_v1beta1_dot_resource__pb2.GetResourceRevisionsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

# SPDX-FileCopyrightText: UL Research Institutes
# SPDX-License-Identifier: Apache-2.0

stages:
  - test
  - build
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS
      when: never
    - when: always

variables:
  HELM_CHART_PATH: "."
  HELM_CHART_VERSION: "$CI_COMMIT_TAG"
  HELM_REPOSITORY_USERNAME: "gitlab-ci-token"
  HELM_REPOSITORY_PASSWORD: "$CI_JOB_TOKEN"
  HELM_REPOSITORY_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/helm/production"

.helm-script-install-helm: &helm-script-install-helm
  - >-
    curl -sS -o - https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
    | tar --strip-components 1 -xzf - linux-amd64/helm
  - install helm /usr/local/bin/
  - rm -f helm
  - helm version

.helm-base:
  image: "${CONTAINER_PROXY}alpine"
  before_script:
    - apk add --no-cache curl
    - *helm-script-install-helm

helm-docs:
  extends: .helm-base
  stage: test
  before_script:
    - apk add --no-cache curl
    - >-
      curl -sSL -o - https://github.com/norwoodj/helm-docs/releases/download/v1.7.0/helm-docs_1.7.0_Linux_x86_64.tar.gz
      | tar xzf - helm-docs
    - install helm-docs /usr/local/bin/
    - rm -f helm-docs
    - helm-docs --version
  script:
    - helm-docs
  artifacts:
    paths:
      - "${HELM_CHART_PATH}/README.md"

helm-lint:
  extends: .helm-base
  stage: test
  script:
    - helm lint "$HELM_CHART_PATH"

helm-cm-push:
  extends: .helm-base
  stage: deploy
  variables:
    HELM_REPO_USERNAME: "$HELM_REPOSITORY_USERNAME"
    HELM_REPO_PASSWORD: "$HELM_REPOSITORY_PASSWORD"
  script:
    - apk add --no-cache git
    - helm plugin install https://github.com/chartmuseum/helm-push
    - helm cm-push --version "$HELM_CHART_VERSION" --app-version "$HELM_CHART_VERSION" "$HELM_CHART_PATH" "$HELM_REPOSITORY_URL"
  rules:
    - if: $CI_COMMIT_TAG

[project]
name = "mcp-interviewer"
version = "0.0.12"
description = "A tool for analyzing and testing MCP (Model Context Protocol) servers and their tools"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.10.1",
    "openai>=1.93.3",
    "tiktoken>=0.11.0",
    "jsonschema>=4.0.0",
]

[dependency-groups]
dev = [
    "ruff>=0.1.0",
    "pre-commit>=4.3.0",
    "pyright>=1.1.403",
    "poethepoet>=0.37.0",
    "pytest>=8.4.2",
]

[project.scripts]
mcp-interviewer = "mcp_interviewer.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_interviewer"]

[tool.hatch.build]
include = [
    "src/**/*",
    "LICENSE",
    "README.md",
]
exclude = [
    ".DS_Store",
    "__pycache__",
    "*.pyc",
    "*.pyo",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["F", "I", "UP"]

[tool.poe.tasks]
format = "ruff format src"
formatcheck = "ruff format --check src"
lint = "ruff check src"
lintfix = "ruff check --fix src"
typecheck = "pyright src"
check = ["formatcheck",  "lint",  "typecheck"]
precommit = ["formatcheck",  "lint"]
fix = ["format", "lintfix"]
example = "mcp-interviewer --test --model gpt-4.1 'docker run -i --rm node:lts npx -y @modelcontextprotocol/server-everything'"

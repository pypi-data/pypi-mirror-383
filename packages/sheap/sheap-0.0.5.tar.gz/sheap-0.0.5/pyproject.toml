# BUILD

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Poetry

# Information required for building (sdist/wheel)
## Also renders on pypi as 'subtitle'
[tool.poetry]
name = "sheap"
version = "0.0.5"
description = "sheap: Spectral Handling and Estimation of AGN Parameters"
authors = ["Felipe Avila-Vera <felipe.avilav@postgrado.uv.cl>"]
maintainers = ["Felipe Avila-Vera <felipe.avilav@postgrado.uv.cl>"]
license = "AGPL-3.0-only"
readme = "README.rst"

homepage = "https://github.com/favila/sheap"
repository = "https://github.com/favila/sheap"
documentation = "https://sheap.readthedocs.io/"

keywords = [
    "python package",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Natural Language :: English",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
    "Typing :: Typed"
]

packages = [
    { include = "sheap" },
]

include = [
    { path = "tests", format = "sdist" },
    { path = "docs/**/*.rst", format = "sdist" },
    { path = "docs/conf.py", format = "sdist" },
    { path = "sheap/**/*.typed", format = "sdist" },
    { path = "sheap/stubs/*.pyi", format = "sdist" },
    "pyproject.toml",
    "LICENSE",
    "README.rst",
    "CONTRIBUTING.md",
    "CHANGELOG.rst",
]

exclude = [
    "docs/*",
    "requirements/*",
    "scripts/*.py",
    "tox.ini",
    ".circleci/config.yml",
    ".coveragerc",
    ".DS_Store",
    ".gitignore",
    ".prospector.yml",
    ".pylintrc",
    ".readthedocs.yml",
    ".scrutinizer.yml",
    ".travis.yml",
    "sheap/SuportData/sfddata/*.fits"
]

# PyPi url links, that appear in 'Project Links' section
[tool.poetry.urls]
"Bug Tracker" = "https://github.com/sheap/issues"
"CI: Github Actions" = "https://github.com/favila/sheap/actions"
"Documentation" = "https://sheap.readthedocs.io/"
"Source Code" = "https://github.com/favila/sheap"
"Changelog" = "https://github.com/favila/sheap/blob/master/CHANGELOG.rst"
"Code of Conduct" = "https://github.com/favila/sheap/blob/master/CONTRIBUTING.rst"


### Dependency Constraints, aka Requirements ###
[tool.poetry.dependencies]
python = ">=3.11,<3.13"
jax = "0.4.35"
optax = ">0.2.3"
sfdmap2 = "*"
astropy = ">=7.0"
matplotlib = ">=3.9.3"
numpy = ">=2.2.4"
pandas = "*"
uncertainties = "*"
tqdm = "*"

# Test: packages imported in test code and packages required for the "test runner"
pytest = { version = "^8.0.0", optional = true }
pytest-cov = { version = "^4.1.0", optional = true }
pytest-explicit = { version = "^1.0.1", optional = true }
pytest-xdist = { version = "^3.5.0", optional = true }
pytest-click = { version = "^1.1.0", optional = true }
pytest-run-subprocess = { version = "^0.10.0", optional = true }

# Type Checking
mypy = { version = "^1.8.0", optional = true }

# Docs: dev and build dependencies
sphinx = { version = ">=5.0,<8.3", optional = true }
sphinx-autodoc-typehints = { version = ">=1.10", optional = true }
sphinx-rtd-theme = { version = ">=1.2.0,<2.0", optional = true }
sphinxcontrib-spelling = { version = "~=7.3.3", optional = true }
sphinx-autobuild = { version = "^2021.3.14", optional = true }
sphinx-inline-tabs = { version = "^2023.4.21", optional = true, python = ">=3.12,<3.13" }
sphinxcontrib-mermaid = { version = "^0.9.2", optional = true, python = ">=3.12,<3.13" }
nbsphinx = "*"
myst_nb = "*"
# requests [security,tests] >= 2.8.1, == 2.8.* ; python_version < "2.7"
# poetry add 'griffe >=1.0.0 ; python_version >= "3.9"' --optional


### EXTRAS ###
[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-cov = "^4.0"
pytest-xdist = "^3.0"
coverage = "^7.0"
exceptiongroup = "^1.1" 
sphinx = ">=5.0"
click = { version = ">=8.1.0,<9.0", optional = true }
types-pyyaml = "^6.0.12.20250516"
nbsphinx = "*"
myst_nb = "*"
[tool.poetry.extras]
test = [
    "pytest",
    "pytest-cov",
    "pytest-explicit",
    "pytest-xdist",
    "pytest-click",
    "pytest-run-subprocess",
    "coverage"
    ,"exceptiongroup"]
typing = [
    "mypy",
    "types-requests",
    "pytest",
    "pytest-click",
]
docs = [
    "sphinx",
    "sphinx-autodoc-typehints",
    "sphinx-rtd-theme",
    "sphinxcontrib-spelling",
    "sphinx-inline-tabs",
    "sphinxcontrib-mermaid",
    "furo",
]
docslive = [
    "sphinx",
    "sphinx-autodoc-typehints",
    "sphinx-rtd-theme",
    "sphinxcontrib-spelling",
    "sphinx-inline-tabs",
    "sphinxcontrib-mermaid",
    "sphinx-autobuild",
]

[tool.poetry.scripts]
sheap = 'sheap.cli:main'

[tool.poetry.plugins."poetry.application.plugin"]
export = "poetry_plugin_export.plugins:ExportApplicationPlugin"

# TOOLS

[tool.poetry.group.typing.dependencies]
types-pyyaml = "^6.0.12.20250402"

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "--strict-markers"
markers = [
    "slow: Marks a slow test",
    "integration: Integration Tests",
    "network_bound: Require internet connection",
]
testpaths = [
    "tests",
]
explicit-only = [
    "integration",
    "network_bound",
]

[tool.black]
line-length = 95
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = 'black'

[tool.bandit]
tests = []
skips = [
    "B101",
]

[tool.mypy]
ignore_missing_imports = true      # quick blanket, or â€¦
check_untyped_defs = true
disallow_untyped_defs = true
warn_unused_ignores = true
ignore_errors = true

[[tool.mypy.overrides]]
module = ["optax.*", "jax.*", "astropy.*", "sfdmap2"]
ignore_missing_imports = true

[tool.software-release]
version_variable = "sheap/__init__.py:__version__"
##############################################################################
# KOPI-DOCKA — Configuration Template
#
# @file:        config-template.conf
# @description: Central application configuration
# @author:      Markus F. (TZERO78) & AI Assistants
# @repository:  https://github.com/TZERO78/kopi-docka
# @version:     1.0.0
#
# ------------------------------------------------------------------------------
# Copyright (c) 2025 Markus F. (TZERO78)
# MIT License: see LICENSE or https://opensource.org/licenses/MIT
# ==============================================================================
# Notes:
# - Encoding: UTF-8
# - 'parallel_workers = auto' uses RAM/CPU heuristics
# - 'exclude_patterns' are passed through to tar '--exclude'
# - Environment variables override config values where noted
# - Kopi-Docka uses its own Kopia profile for isolation
# ##############################################################################

[kopia]
# Repository location - where all backups are stored
# Kopia supports multiple storage backends directly
#
# LOCAL FILESYSTEM:
#   repository_path = /backup/kopia-repository
#   repository_path = /mnt/nas/backup/kopia
#   repository_path = /mnt/usb-drive/backups
#
# AWS S3 & S3-COMPATIBLE:
#   repository_path = s3://my-backup-bucket/kopia
#   repository_path = s3://backups.example.com/docker?endpoint=minio.local:9000
#   repository_path = s3://wasabi-bucket/kopia?endpoint=s3.wasabisys.com&region=eu-central-1
#
# BACKBLAZE B2:
#   repository_path = b2://my-b2-bucket/docker-backups
#   repository_path = b2://kopia-backups/production
#
# AZURE BLOB STORAGE:
#   repository_path = azure://backup-container/kopia
#   repository_path = azure://myaccount.blob.core.windows.net/container
#
# GOOGLE CLOUD STORAGE:
#   repository_path = gs://my-gcs-bucket/kopia
#   repository_path = gs://backups/docker-prod
#
# WEBDAV:
#   repository_path = webdav://user@nextcloud.example.com/remote.php/webdav/Backups
#   repository_path = webdav://nas.local/backup?password=secret
#
# SFTP/SSH:
#   repository_path = sftp://user@backup-server.com:/backup/kopia
#   repository_path = sftp://root@192.168.1.100:/mnt/storage/kopia
#
# RCLONE (access ANY rclone remote):
#   repository_path = rclone://remote-name:/path/to/repo
#   repository_path = rclone://gdrive:/Backup/Kopia
#   repository_path = rclone://onedrive:/Docker/Backups
#
# Note: Additional credentials may be needed via:
#   - Environment variables (AWS_ACCESS_KEY_ID, B2_ACCOUNT_ID, etc.)
#   - Kopia config files (~/.config/kopia/)
#   - First-run authentication prompts
repository_path = /backup/kopia-repository

# Repository password
# Default: kopia-docka (INSECURE - change after 'kopi-docka init'!)
#
# After initialization, change with:
#   kopi-docka change-password
#
# This will store the password securely in:
#   - systemd-creds (encrypted, recommended)
#   - Or plaintext file with chmod 600 (fallback)
#
# The config will then reference the secure storage location instead
# of containing the password directly.
password = kopia-docka

# Kopia profile name - allows multiple Kopia installations
# Default 'kopi-docka' isolates from other Kopia usage
# Change only if you need different profile name
profile = kopi-docka

# Compression algorithm - balance between speed and space
# Options:
#   - zstd: Best balance, modern algorithm (RECOMMENDED)
#   - gzip: Traditional, widely compatible
#   - s2: Fast compression, good for large files
#   - none: No compression (for pre-compressed data)
# Note: Higher compression = more CPU usage
compression = zstd

# Encryption algorithm - protects data at rest
# Options:
#   - AES256-GCM-HMAC-SHA256: Military-grade (RECOMMENDED)
#   - CHACHA20-POLY1305-HMAC-SHA256: Fast on all CPUs
#   - none: No encryption (NOT RECOMMENDED)
# WARNING: Cannot be changed after repository creation!
encryption = AES256-GCM-HMAC-SHA256

# Kopia cache directory - speeds up operations
# Should be on fast storage (SSD preferred)
# Default uses system cache location
cache_directory = /var/cache/kopi-docka

[backup]
# Base path for temporary kopia-docka data
# Used for database dumps and working files
# Supports tilde expansion (~)
# Examples:
#   base_path = /backup/kopi-docka
#   base_path = ~/kopi-docka-temp
#   base_path = /tmp/kopi-docka  # Use RAM disk for speed
base_path = /backup/kopi-docka

# Number of parallel backup workers
# Options:
#   - auto: Automatic based on CPU cores and RAM
#   - 1-32: Manual setting
# Auto calculation: min(CPU_cores/2, available_RAM_GB/2)
# Examples:
#   parallel_workers = auto  # 8-core/16GB → 4 workers
#   parallel_workers = 1     # Sequential (safest)
#   parallel_workers = 8     # High performance
parallel_workers = auto

# Container stop timeout in seconds
# Time to wait for graceful shutdown before force-kill
# Lower = risk of data corruption
# Higher = longer backup duration
stop_timeout = 30

# Container start timeout in seconds  
# Time to wait for container to start after restore
start_timeout = 60

# Enable database backups using native dump tools
# Supports: PostgreSQL, MySQL, MariaDB, MongoDB, Redis
database_backup = true

# Task timeout per volume backup (seconds)
# Maximum time for single volume tar operation
# 0 = no timeout (recommended for large volumes)
# Examples:
#   task_timeout = 0     # No limit
#   task_timeout = 3600  # 1 hour max per volume
task_timeout = 0

# Disaster recovery bundle - self-contained restore package
# Creates portable recovery kit with scripts and configs
update_recovery_bundle = false
recovery_bundle_path = /backup/recovery
recovery_bundle_retention = 3

# Exclusion patterns for volume backups (comma-separated)
# Passed to tar via --exclude parameter
# Common patterns to exclude:
#   - node_modules: Node.js dependencies
#   - *.tmp, *.temp: Temporary files
#   - cache, *cache*: Cache directories
#   - */__pycache__/*: Python cache
#   - .git: Git repositories
#   - *.log, logs/*: Log files
#   - lost+found: Filesystem recovery
# Examples:
#   exclude_patterns = node_modules, *.tmp, cache
#   exclude_patterns = */__pycache__/*, .git, *.log, lost+found
#   exclude_patterns = node_modules, .next, dist, build, *.tmp
exclude_patterns = 

# Pre/Post backup hooks - execute custom scripts
# Scripts receive environment variables:
#   - KOPI_DOCKA_UNIT_NAME: Name of backup unit
#   - KOPI_DOCKA_UNIT_TYPE: Type (container/stack)
#   - KOPI_DOCKA_ACTION: Current action (backup/restore)
# Must be absolute paths to executable files
# Examples:
#   pre_backup_hook = /usr/local/bin/notify-backup-start.sh
#   post_backup_hook = /usr/local/bin/sync-to-cloud.sh
pre_backup_hook = 
post_backup_hook = 

[docker]
# Docker socket path
# Requires read/write access
# Default works for standard Docker installations
socket = /var/run/docker.sock

# Docker Compose operation timeout (seconds)
# Time limit for compose up/down operations
compose_timeout = 300

# Remove stopped containers before backup
# WARNING: Destructive operation!
# Only enable if you understand the implications
prune_stopped_containers = false

[retention]
# Kopia snapshot retention policy (per backup unit)
# How many snapshots to keep for each time period
# Set to 0 to disable specific retention level
# Examples for different strategies:
#
# Standard (balanced):
daily = 7      # Keep 7 daily snapshots
weekly = 4     # Keep 4 weekly snapshots  
monthly = 12   # Keep 12 monthly snapshots
yearly = 5     # Keep 5 yearly snapshots
#
# Minimal (save space):
#   daily = 3
#   weekly = 2
#   monthly = 3
#   yearly = 1
#
# Extended (maximum protection):
#   daily = 30
#   weekly = 12
#   monthly = 24
#   yearly = 10

[logging]
# Logging level - controls output verbosity
# Levels (least to most verbose):
#   - CRITICAL: Only fatal errors
#   - ERROR: Errors that need attention
#   - WARNING: Important warnings
#   - INFO: Normal operation info (RECOMMENDED)
#   - DEBUG: Detailed debug output
level = INFO

# Optional log file path
# Leave empty to use only journald/console output
# Log rotation applies when file is specified
# Examples:
#   file = /var/log/kopi-docka.log
#   file = /var/log/kopi-docka/backup.log
#   file =   # Console/journald only
file = /var/log/kopi-docka.log

# Log rotation settings (when file is used)
# Maximum size per log file in MB
max_size_mb = 100

# Number of rotated log files to keep
# Older files are deleted automatically
backup_count = 5
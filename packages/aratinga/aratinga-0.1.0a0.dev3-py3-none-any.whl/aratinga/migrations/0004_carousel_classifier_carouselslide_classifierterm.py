# Generated by Django 5.1.2 on 2024-10-31 16:25

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('aratinga', '0003_alter_genericsettings_title_suffix'),
        ('wagtailimages', '0026_delete_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('show_controls', models.BooleanField(default=True, help_text='Shows arrows on the left and right of the carousel to advance next or previous slides.', verbose_name='Show controls')),
                ('show_indicators', models.BooleanField(default=True, help_text='Shows small indicators at the bottom of the carousel based on the number of slides.', verbose_name='Show indicators')),
            ],
            options={
                'verbose_name': 'Carousel',
            },
        ),
        migrations.CreateModel(
            name='Classifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Classifier',
                'verbose_name_plural': 'Classifiers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CarouselSlide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('background_color', models.CharField(blank=True, help_text='Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', max_length=255, verbose_name='Background color')),
                ('custom_css_class', models.CharField(blank=True, max_length=255, verbose_name='Custom CSS class')),
                ('custom_id', models.CharField(blank=True, max_length=255, verbose_name='Custom ID')),
                ('content', wagtail.fields.StreamField([('text', 0), ('button', 11), ('image', 13), ('image_link', 15), ('html', 16), ('download', 17), ('embed_video', 19), ('quote', 22), ('table', 24), ('google_map', 29), ('page_list', 34), ('page_preview', 36)], blank=True, block_lookup={0: ('aratinga.blocks.html_blocks.RichTextBlock', (), {'icon': 'ara-font'}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 4: ('wagtail.blocks.StructBlock', [[('custom_template', 1), ('custom_css_class', 2), ('custom_id', 3)]], {}), 5: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 6: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 7: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 10: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('settings', 4), ('page_link', 5), ('doc_link', 6), ('other_link', 7), ('button_title', 8), ('button_style', 9), ('button_size', 10)]], {}), 12: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 13: ('wagtail.blocks.StructBlock', [[('settings', 4), ('image', 12)]], {}), 14: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 15: ('wagtail.blocks.StructBlock', [[('settings', 4), ('page_link', 5), ('doc_link', 6), ('other_link', 7), ('button_title', 8), ('image', 12), ('alt_text', 14)]], {}), 16: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 17: ('wagtail.blocks.StructBlock', [[('settings', 4), ('button_style', 9), ('button_size', 10), ('downloadable_file', 6)]], {}), 18: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 19: ('wagtail.blocks.StructBlock', [[('settings', 4), ('url', 18)]], {}), 20: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 21: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 22: ('wagtail.blocks.StructBlock', [[('settings', 4), ('text', 20), ('author', 21)]], {}), 23: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 24: ('wagtail.blocks.StructBlock', [[('settings', 4), ('table', 23)]], {}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 26: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 28: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 29: ('wagtail.blocks.StructBlock', [[('settings', 4), ('search', 25), ('map_title', 26), ('place_id', 27), ('map_zoom_level', 28)]], {}), 30: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 31: ('aratinga.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 32: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'label': 'Show body preview', 'required': False}), 33: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 34: ('wagtail.blocks.StructBlock', [[('settings', 4), ('indexed_by', 30), ('classified_by', 31), ('show_preview', 32), ('num_posts', 33)]], {}), 35: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 36: ('wagtail.blocks.StructBlock', [[('settings', 4), ('page', 35)]], {})})),
                ('carousel', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_slides', to='aratinga.carousel', verbose_name='Carousel')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Carousel Slide',
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassifierTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('classifier', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='aratinga.classifier', verbose_name='Classifier')),
            ],
            options={
                'verbose_name': 'Classifier Term',
                'verbose_name_plural': 'Classifier Terms',
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]

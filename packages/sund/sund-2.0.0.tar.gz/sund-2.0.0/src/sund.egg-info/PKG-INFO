Metadata-Version: 2.4
Name: sund
Version: 2.0.0
Summary: A simulation toolbox for ODE and DAE systems, with focus on systems biology applications.
Author: ISB group @ Linköping University, Sasan Keshmiri, Gustav Magnusson
Author-email: William Lövfors <william.lovfors@liu.se>, Henrik Podéus <henrik.podeus.derelov@liu.se>
Maintainer-email: William Lövfors <william.lovfors@liu.se>, Henrik Podéus <henrik.podeus.derelov@liu.se>
License-Expression: MIT
Project-URL: Homepage, https://isbgroup.eu/sund-toolbox
Project-URL: Repository, https://gitlab.liu.se/ISBgroup/projects/sund
Keywords: sund,simulation,ODE,DAE,modeling,toolbox,systems biology
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: numpy>=2.0
Requires-Dist: setuptools>=80.0
Dynamic: license-file

# SUND toolbox

<img src="./logo/SUND_logo.png"
     alt="SUND logo"
     style="max-height:300px;width:100%;width:auto;display:block;margin:0 auto 1rem;" />

SUND (Simulation Using Nonlinear Dynamic models) is a Python package for high‑level, object‑oriented modeling and fast simulation of ODE/DAE systems with complex time‑dependent inputs and hierarchical model structures. Models compile against a SUNDIALS backend for performance and can be seamlessly connected by declaring inputs and outputs.

Supported Python: 3.10–3.14 on Linux (x86_64), Windows (x86_64) and macOS (Intel & ARM).

## Requirements

A C++ compiler (GCC, Clang, or MSVC) is required to install SUND and to compile models for efficient simulations. Pre-built wheels are not provided, as model compilation is performed locally. Ensure your system has a working C++ compiler before installing.

## Install

From PyPI (recommended once published) or local source:

```bash
pip install sund   # or: uv add sund
```

### Not on PyPI yet?

While the project is pending publication on PyPI you can install directly from the release archives hosted at:

<https://isbgroup.eu/sund-toolbox/releases/>

Latest build:

```bash
pip install https://isbgroup.eu/sund-toolbox/releases/sund-latest.tar.gz
```

Specific version (example):

```bash
pip install https://isbgroup.eu/sund-toolbox/releases/sund-2.0.0.tar.gz
```

Install from a built local source distribution (after `uv build --sdist`):

```bash
pip install dist/sund-<version>.tar.gz
```

## Quick start

Create, install and simulate a trivial model:

```python
import sund

# 1. Generate a template model file
sund.save_model_template("example_model.txt", model_name="Example")

# 2. Install (compiles → C extension module under sund/models)
sund.install_model("example_model.txt")

# 3. Load an instance
model = sund.load_model("Example")

# 4. Simulate (time vector in model time unit; default from template is 's')
sim = sund.Simulation(models=[model], time_vector=[0, 1, 2, 3], time_unit=model.time_unit)
sim.simulate()

print(sim.feature_values)  # numpy array of outputs/features
```

See the docs for activities (time‑varying inputs), multiple models, events, validation.

## Documentation

Full user & API docs: <https://isbgroup.eu/sund-toolbox> (versioned; latest alias always points to newest release).

## Model validation (optional)

Validate a model file or content before installing:

```python
import sund
results = sund.validate_model_file("example_model.txt", verbose=True)
```

## Development

Developer & maintainer details (architecture, CI publishing, docs versioning, release steps) live in `DEVELOPMENT.md`.

## History

Origins, milestones, and design context: see `docs/history.md` (versioned site History page). 

## License

MIT License (see `LICENSE.md`). Includes bundled SUNDIALS (BSD 3‑Clause) – see license file for details.

## Citation

If you use SUND in academic work, please cite the project (formal citation text will be added once available).

## Getting help

Open an issue or start a discussion on the project GitLab. Bug reports with a minimal reproducer and model snippet are appreciated.

Metadata-Version: 2.4
Name: mirix
Version: 0.1.5
Summary: Multi-Agent Personal Assistant with an Advanced Memory System
Home-page: https://github.com/Mirix-AI/MIRIX
Author: Mirix AI
Author-email: Mirix AI <yuwang@mirix.io>
Maintainer-email: Mirix AI <yuwang@mirix.io>
License: Apache License 2.0
Project-URL: Homepage, https://mirix.io
Project-URL: Documentation, https://docs.mirix.io
Project-URL: Repository, https://github.com/Mirix-AI/MIRIX
Project-URL: Issues, https://github.com/Mirix-AI/MIRIX/issues
Keywords: ai,memory,agent,llm,assistant,chatbot,multimodal
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Communications :: Chat
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pytz
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: openpyxl
Requires-Dist: Markdown
Requires-Dist: Pillow<11.0.0,>=10.2.0
Requires-Dist: scikit-image
Requires-Dist: openai<2.0.0,>=1.104.2
Requires-Dist: tiktoken
Requires-Dist: google-genai
Requires-Dist: python-dotenv
Requires-Dist: demjson3
Requires-Dist: pathvalidate
Requires-Dist: docstring_parser
Requires-Dist: sqlalchemy
Requires-Dist: pydantic-settings
Requires-Dist: jinja2
Requires-Dist: humps
Requires-Dist: composio
Requires-Dist: colorama
Requires-Dist: anthropic
Requires-Dist: httpx_sse
Requires-Dist: rapidfuzz
Requires-Dist: rank-bm25
Requires-Dist: psutil
Requires-Dist: llama_index
Requires-Dist: llama-index-embeddings-google-genai
Requires-Dist: fastapi>=0.104.1
Requires-Dist: uvicorn[standard]>=0.31.1
Requires-Dist: pydub
Requires-Dist: python-multipart
Requires-Dist: opentelemetry-api
Requires-Dist: opentelemetry-sdk
Requires-Dist: opentelemetry-exporter-otlp
Requires-Dist: opentelemetry-instrumentation-requests
Requires-Dist: SpeechRecognition
Requires-Dist: pg8000
Requires-Dist: pgvector
Requires-Dist: json_repair
Requires-Dist: rich<14.0.0,>=13.7.1
Requires-Dist: psycopg2-binary
Requires-Dist: anyio>=4.7.0
Requires-Dist: mcp
Requires-Dist: google-auth
Requires-Dist: google-auth-oauthlib
Requires-Dist: google-auth-httplib2
Requires-Dist: google-api-python-client
Requires-Dist: pytest<9.0.0,>=8.4.2
Requires-Dist: ruff<0.14.0,>=0.13.3
Requires-Dist: pyright<2.0.0,>=1.1.406
Requires-Dist: ipdb<0.14.0,>=0.13.13
Provides-Extra: dev
Requires-Dist: pytest>=6.0.0; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Provides-Extra: voice
Requires-Dist: SpeechRecognition; extra == "voice"
Requires-Dist: pydub; extra == "voice"
Provides-Extra: full
Requires-Dist: SpeechRecognition; extra == "full"
Requires-Dist: pydub; extra == "full"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

![Mirix Logo](https://github.com/RenKoya1/MIRIX/raw/main/assets/logo.png)

## MIRIX - Multi-Agent Personal Assistant with an Advanced Memory System

Your personal AI that builds memory through screen observation and natural conversation

| üåê [Website](https://mirix.io) | üìö [Documentation](https://docs.mirix.io) | üìÑ [Paper](https://arxiv.org/abs/2507.07957) |
<!-- | [Twitter/X](https://twitter.com/mirix_ai) | [Discord](https://discord.gg/mirix) | -->

---

### Key Features üî•

- **Multi-Agent Memory System:** Six specialized memory components (Core, Episodic, Semantic, Procedural, Resource, Knowledge Vault) managed by dedicated agents
- **Screen Activity Tracking:** Continuous visual data capture and intelligent consolidation into structured memories  
- **Privacy-First Design:** All long-term data stored locally with user-controlled privacy settings
- **Advanced Search:** PostgreSQL-native BM25 full-text search with vector similarity support
- **Multi-Modal Input:** Text, images, voice, and screen captures processed seamlessly

### Quick Start
**End-Users**: For end-users who want to build your own memory using MIRIX, please checkout the quick installation guide [here](https://docs.mirix.io/getting-started/installation/#quick-installation-dmg).

**Developers**: For users who want to apply our memory system as the backend, please check out our [Backend Usage](https://docs.mirix.io/user-guide/backend-usage/). Basically, you just need to run:
```
git clone git@github.com:Mirix-AI/MIRIX.git
cd MIRIX

# Create and activate virtual environment
python -m venv mirix_env
source mirix_env/bin/activate  # On Windows: mirix_env\Scripts\activate

pip install -r requirements.txt
```
Then you can run the following python code:
```python
from mirix.agent import AgentWrapper

# Initialize agent with configuration
agent = AgentWrapper("./mirix/configs/mirix.yaml")

# Send basic text information
agent.send_message(
    message="The moon now has a president.",
    memorizing=True,
    force_absorb_content=True
)
```
For more details, please refer to [Backend Usage](https://docs.mirix.io/user-guide/backend-usage/).

## Python SDK (NEW!) üéâ

We've created a simple Python SDK that makes it incredibly easy to integrate Mirix's memory capabilities into your applications:

### Installation
```bash
pip install mirix
```

### Quick Start with SDK
```python
from mirix import Mirix

# Initialize memory agent (defaults to Google Gemini 2.0 Flash)
memory_agent = Mirix(api_key="your-google-api-key")

# Add memories
memory_agent.add("The moon now has a president")
memory_agent.add("John loves Italian food and is allergic to peanuts")

# Chat with memory context
response = memory_agent.chat("Does the moon have a president?")
print(response)  # "Yes, according to my memory, the moon has a president."

response = memory_agent.chat("What does John like to eat?") 
print(response)  # "John loves Italian food. However, he's allergic to peanuts."
```

## License

Mirix is released under the Apache License 2.0. See the [LICENSE](LICENSE) file for more details.

## Contact

For questions, suggestions, or issues, please open an issue on the GitHub repository or contact us at `yuwang@mirix.io`

## Join Our Community

Connect with other Mirix users, share your thoughts, and get support:

### üí¨ Discord Community
Join our Discord server for real-time discussions, support, and community updates:
**[https://discord.gg/5HWyxJrh](https://discord.gg/5HWyxJrh)**

### üéØ Weekly Discussion Sessions
We host weekly discussion sessions where you can:
- Discuss issues and bugs
- Share ideas about future directions
- Get general consultations and support
- Connect with the development team and community

**üìÖ Schedule:** Friday nights, 8-9 PM PST  
**üîó Zoom Link:** [https://ucsd.zoom.us/j/96278791276](https://ucsd.zoom.us/j/96278791276)

### üì± WeChat Group
<div align="center">
<img src="frontend/public/wechat-qr.png" alt="WeChat QR Code" width="200"/><br/>
<strong>WeChat Group</strong>
</div>

## Star History

[![Star History Chart](https://api.star-history.com/svg?repos=Mirix-AI/MIRIX&type=Date)](https://star-history.com/#Mirix-AI/MIRIX.&Date)

## Acknowledgement
We would like to thank [Letta](https://github.com/letta-ai/letta) for open-sourcing their framework, which served as the foundation for the memory system in this project.

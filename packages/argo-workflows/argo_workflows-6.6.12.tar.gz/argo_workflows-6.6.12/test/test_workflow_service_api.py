"""
    Argo Workflows API

    Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/  # noqa: E501

    The version of the OpenAPI document: VERSION
    Generated by: https://openapi-generator.tech
"""


import unittest

import argo_workflows
from argo_workflows.api.workflow_service_api import WorkflowServiceApi  # noqa: E501


class TestWorkflowServiceApi(unittest.TestCase):
    """WorkflowServiceApi unit test stubs"""

    def setUp(self):
        self.api = WorkflowServiceApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_workflow(self):
        """Test case for create_workflow

        """
        pass

    def test_delete_workflow(self):
        """Test case for delete_workflow

        """
        pass

    def test_get_workflow(self):
        """Test case for get_workflow

        """
        pass

    def test_lint_workflow(self):
        """Test case for lint_workflow

        """
        pass

    def test_list_workflows(self):
        """Test case for list_workflows

        """
        pass

    def test_pod_logs(self):
        """Test case for pod_logs

        DEPRECATED: Cannot work via HTTP if podName is an empty string. Use WorkflowLogs.  # noqa: E501
        """
        pass

    def test_resubmit_workflow(self):
        """Test case for resubmit_workflow

        """
        pass

    def test_resume_workflow(self):
        """Test case for resume_workflow

        """
        pass

    def test_retry_workflow(self):
        """Test case for retry_workflow

        """
        pass

    def test_set_workflow(self):
        """Test case for set_workflow

        """
        pass

    def test_stop_workflow(self):
        """Test case for stop_workflow

        """
        pass

    def test_submit_workflow(self):
        """Test case for submit_workflow

        """
        pass

    def test_suspend_workflow(self):
        """Test case for suspend_workflow

        """
        pass

    def test_terminate_workflow(self):
        """Test case for terminate_workflow

        """
        pass

    def test_watch_events(self):
        """Test case for watch_events

        """
        pass

    def test_watch_workflows(self):
        """Test case for watch_workflows

        """
        pass

    def test_workflow_logs(self):
        """Test case for workflow_logs

        """
        pass


if __name__ == '__main__':
    unittest.main()

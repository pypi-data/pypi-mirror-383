//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-34841621
// Cuda compilation tools, release 12.6, V12.6.77
// Based on NVVM 7.0.1
//

.version 8.5
.target sm_52
.address_size 64

	// .globl	_Z13direct_raygenv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 top_object[4];
.global .align 4 .u32 random_seed;
.global .align 4 .u32 launch_offset;
.global .align 4 .u32 launch_face;
.global .align 4 .u32 Nbands_launch;
.global .align 4 .u32 Nbands_global;
.global .align 1 .b8 band_launch_flag[1];
.global .align 4 .u32 direct_ray_type;
.global .align 4 .u32 diffuse_ray_type;
.global .align 4 .u32 camera_ray_type;
.global .align 4 .u32 pixel_label_ray_type;
.global .align 4 .b8 launch_index[12];
.global .align 4 .b8 launch_dim[12];
.global .align 1 .b8 maskdata[1];
.global .align 1 .b8 masksize[1];
.global .align 1 .b8 maskID[1];
.global .align 1 .b8 uvdata[1];
.global .align 1 .b8 uvID[1];
.global .align 1 .b8 objectID[1];
.global .align 1 .b8 object_subdivisions[1];
.global .align 1 .b8 primitiveID[1];
.global .align 4 .u32 Nsources;
.global .align 1 .b8 source_fluxes[1];
.global .align 1 .b8 source_positions[1];
.global .align 1 .b8 source_rotations[1];
.global .align 1 .b8 source_widths[1];
.global .align 1 .b8 source_types[1];
.global .align 1 .b8 diffuse_flux[1];
.global .align 1 .b8 diffuse_extinction[1];
.global .align 1 .b8 diffuse_peak_dir[1];
.global .align 1 .b8 diffuse_dist_norm[1];
.global .align 1 .b8 Rsky[1];
.global .align 1 .b8 patch_vertices[1];
.global .align 1 .b8 patch_UUID[1];
.global .align 1 .b8 triangle_vertices[1];
.global .align 1 .b8 triangle_UUID[1];
.global .align 1 .b8 disk_UUID[1];
.global .align 1 .b8 tile_vertices[1];
.global .align 1 .b8 tile_UUID[1];
.global .align 1 .b8 voxel_vertices[1];
.global .align 1 .b8 voxel_UUID[1];
.global .align 1 .b8 bbox_vertices[1];
.global .align 1 .b8 bbox_UUID[1];
.global .align 4 .u32 Nprimitives;
.global .align 8 .b8 periodic_flag[8];
.global .align 1 .b8 twosided_flag[1];
.global .align 1 .b8 transform_matrix[1];
.global .align 1 .b8 primitive_type[1];
.global .align 1 .b8 primitive_solid_fraction[1];
.global .align 1 .b8 rho[1];
.global .align 1 .b8 tau[1];
.global .align 1 .b8 rho_cam[1];
.global .align 1 .b8 tau_cam[1];
.global .align 1 .b8 specular_exponent[1];
.global .align 1 .b8 specular_scale[1];
.global .align 4 .u32 specular_reflection_enabled;
.global .align 1 .b8 radiation_in[1];
.global .align 1 .b8 radiation_in_camera[1];
.global .align 1 .b8 radiation_out_top[1];
.global .align 1 .b8 radiation_out_bottom[1];
.global .align 1 .b8 scatter_buff_top[1];
.global .align 1 .b8 scatter_buff_bottom[1];
.global .align 1 .b8 scatter_buff_top_cam[1];
.global .align 1 .b8 scatter_buff_bottom_cam[1];
.global .align 1 .b8 camera_pixel_label[1];
.global .align 1 .b8 camera_pixel_depth[1];
.global .align 4 .u32 camera_ID;
.global .align 4 .u32 Ncameras;
.global .align 4 .b8 camera_position[12];
.global .align 8 .b8 camera_direction[8];
.global .align 4 .f32 camera_lens_diameter;
.global .align 4 .f32 FOV_aspect_ratio;
.global .align 4 .f32 camera_focal_length;
.global .align 4 .f32 camera_viewplane_length;
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11random_seedE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13launch_offsetE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11launch_faceE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13Nbands_launchE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13Nbands_globalE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15direct_ray_typeE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16diffuse_ray_typeE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15camera_ray_typeE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo20pixel_label_ray_typeE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 12};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 12};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8NsourcesE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11NprimitivesE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13periodic_flagE[8] = {82, 97, 121, 0, 8};
.global .align 4 .b8 _ZN21rti_internal_typeinfo27specular_reflection_enabledE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9camera_IDE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8NcamerasE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15camera_positionE[8] = {82, 97, 121, 0, 12};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16camera_directionE[8] = {82, 97, 121, 0, 8};
.global .align 4 .b8 _ZN21rti_internal_typeinfo20camera_lens_diameterE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16FOV_aspect_ratioE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19camera_focal_lengthE[8] = {82, 97, 121, 0, 4};
.global .align 4 .b8 _ZN21rti_internal_typeinfo23camera_viewplane_lengthE[8] = {82, 97, 121, 0, 4};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116};
.global .align 1 .b8 _ZN21rti_internal_typename11random_seedE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename13launch_offsetE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename11launch_faceE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename13Nbands_launchE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename13Nbands_globalE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename15direct_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename16diffuse_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename15camera_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename20pixel_label_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 51};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 51};
.global .align 1 .b8 _ZN21rti_internal_typename8NsourcesE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename11NprimitivesE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename13periodic_flagE[7] = {102, 108, 111, 97, 116, 50};
.global .align 1 .b8 _ZN21rti_internal_typename27specular_reflection_enabledE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename9camera_IDE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename8NcamerasE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116};
.global .align 1 .b8 _ZN21rti_internal_typename15camera_positionE[7] = {102, 108, 111, 97, 116, 51};
.global .align 1 .b8 _ZN21rti_internal_typename16camera_directionE[7] = {102, 108, 111, 97, 116, 50};
.global .align 1 .b8 _ZN21rti_internal_typename20camera_lens_diameterE[6] = {102, 108, 111, 97, 116};
.global .align 1 .b8 _ZN21rti_internal_typename16FOV_aspect_ratioE[6] = {102, 108, 111, 97, 116};
.global .align 1 .b8 _ZN21rti_internal_typename19camera_focal_lengthE[6] = {102, 108, 111, 97, 116};
.global .align 1 .b8 _ZN21rti_internal_typename23camera_viewplane_lengthE[6] = {102, 108, 111, 97, 116};
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11random_seedE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13launch_offsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11launch_faceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13Nbands_launchE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13Nbands_globalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15direct_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16diffuse_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15camera_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum20pixel_label_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8NsourcesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11NprimitivesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13periodic_flagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum27specular_reflection_enabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9camera_IDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8NcamerasE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15camera_positionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16camera_directionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum20camera_lens_diameterE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16FOV_aspect_ratioE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19camera_focal_lengthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum23camera_viewplane_lengthE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11random_seedE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13launch_offsetE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11launch_faceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13Nbands_launchE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13Nbands_globalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15direct_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16diffuse_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15camera_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic20pixel_label_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109};
.global .align 1 .b8 _ZN21rti_internal_semantic8NsourcesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11NprimitivesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13periodic_flagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic27specular_reflection_enabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9camera_IDE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8NcamerasE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15camera_positionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16camera_directionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic20camera_lens_diameterE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16FOV_aspect_ratioE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19camera_focal_lengthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic23camera_viewplane_lengthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11random_seedE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13launch_offsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11launch_faceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13Nbands_launchE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13Nbands_globalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15direct_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16diffuse_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15camera_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation20pixel_label_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8NsourcesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11NprimitivesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13periodic_flagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation27specular_reflection_enabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9camera_IDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8NcamerasE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15camera_positionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16camera_directionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation20camera_lens_diameterE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16FOV_aspect_ratioE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19camera_focal_lengthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation23camera_viewplane_lengthE[1];
.global .align 1 .b8 $str[12] = {111, 98, 106, 73, 68, 32, 61, 32, 37, 100, 10};
.global .align 1 .b8 $str$1[47] = {73, 110, 118, 97, 108, 105, 100, 32, 112, 114, 105, 109, 105, 116, 105, 118, 101, 32, 116, 121, 112, 101, 32, 105, 110, 32, 100, 105, 102, 102, 117, 115, 101, 32, 114, 97, 121, 32, 108, 97, 117, 110, 99, 104, 46, 10};

.visible .entry _Z13direct_raygenv()
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<81>;
	.reg .b16 	%rs<33>;
	.reg .f32 	%f<943>;
	.reg .b32 	%r<580>;
	.reg .f64 	%fd<66>;
	.reg .b64 	%rd<446>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd135, %SP, 0;
	add.u64 	%rd136, %SPL, 0;
	mov.u64 	%rd77, 8;
	mov.u64 	%rd134, 0;
	ld.global.u32 	%r73, [launch_index+8];
	mov.u64 	%rd53, 4;
	ld.global.u32 	%r74, [launch_dim+4];
	ld.global.u32 	%r75, [random_seed];
	shl.b32 	%r76, %r75, 4;
	mov.u32 	%r68, 4;
	add.s32 	%r77, %r76, -1556008596;
	add.s32 	%r78, %r75, -1640531527;
	shr.u32 	%r79, %r75, 5;
	add.s32 	%r80, %r79, -939442524;
	xor.b32  	%r81, %r77, %r78;
	xor.b32  	%r82, %r81, %r80;
	ld.global.u32 	%r83, [launch_index+4];
	mad.lo.s32 	%r84, %r73, %r74, %r83;
	ld.global.u32 	%r85, [launch_dim];
	ld.global.u32 	%r86, [launch_index];
	mad.lo.s32 	%r87, %r84, %r85, %r86;
	add.s32 	%r88, %r87, %r82;
	shl.b32 	%r89, %r88, 4;
	add.s32 	%r90, %r89, -1383041155;
	add.s32 	%r91, %r88, -1640531527;
	xor.b32  	%r92, %r90, %r91;
	shr.u32 	%r93, %r88, 5;
	add.s32 	%r94, %r93, 2123724318;
	xor.b32  	%r95, %r92, %r94;
	add.s32 	%r96, %r95, %r75;
	shl.b32 	%r97, %r96, 4;
	add.s32 	%r98, %r97, -1556008596;
	add.s32 	%r99, %r96, 1013904242;
	shr.u32 	%r100, %r96, 5;
	add.s32 	%r101, %r100, -939442524;
	xor.b32  	%r102, %r98, %r99;
	xor.b32  	%r103, %r102, %r101;
	add.s32 	%r104, %r103, %r88;
	shl.b32 	%r105, %r104, 4;
	add.s32 	%r106, %r105, -1383041155;
	add.s32 	%r107, %r104, 1013904242;
	xor.b32  	%r108, %r106, %r107;
	shr.u32 	%r109, %r104, 5;
	add.s32 	%r110, %r109, 2123724318;
	xor.b32  	%r111, %r108, %r110;
	add.s32 	%r112, %r111, %r96;
	shl.b32 	%r113, %r112, 4;
	add.s32 	%r114, %r113, -1556008596;
	add.s32 	%r115, %r112, -626627285;
	shr.u32 	%r116, %r112, 5;
	add.s32 	%r117, %r116, -939442524;
	xor.b32  	%r118, %r114, %r115;
	xor.b32  	%r119, %r118, %r117;
	add.s32 	%r120, %r119, %r104;
	shl.b32 	%r121, %r120, 4;
	add.s32 	%r122, %r121, -1383041155;
	add.s32 	%r123, %r120, -626627285;
	xor.b32  	%r124, %r122, %r123;
	shr.u32 	%r125, %r120, 5;
	add.s32 	%r126, %r125, 2123724318;
	xor.b32  	%r127, %r124, %r126;
	add.s32 	%r128, %r127, %r112;
	shl.b32 	%r129, %r128, 4;
	add.s32 	%r130, %r129, -1556008596;
	add.s32 	%r131, %r128, 2027808484;
	shr.u32 	%r132, %r128, 5;
	add.s32 	%r133, %r132, -939442524;
	xor.b32  	%r134, %r130, %r131;
	xor.b32  	%r135, %r134, %r133;
	add.s32 	%r136, %r135, %r120;
	shl.b32 	%r137, %r136, 4;
	add.s32 	%r138, %r137, -1383041155;
	add.s32 	%r139, %r136, 2027808484;
	xor.b32  	%r140, %r138, %r139;
	shr.u32 	%r141, %r136, 5;
	add.s32 	%r142, %r141, 2123724318;
	xor.b32  	%r143, %r140, %r142;
	add.s32 	%r144, %r143, %r128;
	shl.b32 	%r145, %r144, 4;
	add.s32 	%r146, %r145, -1556008596;
	add.s32 	%r147, %r144, 387276957;
	shr.u32 	%r148, %r144, 5;
	add.s32 	%r149, %r148, -939442524;
	xor.b32  	%r150, %r146, %r147;
	xor.b32  	%r151, %r150, %r149;
	add.s32 	%r152, %r151, %r136;
	shl.b32 	%r153, %r152, 4;
	add.s32 	%r154, %r153, -1383041155;
	add.s32 	%r155, %r152, 387276957;
	xor.b32  	%r156, %r154, %r155;
	shr.u32 	%r157, %r152, 5;
	add.s32 	%r158, %r157, 2123724318;
	xor.b32  	%r159, %r156, %r158;
	add.s32 	%r160, %r159, %r144;
	shl.b32 	%r161, %r160, 4;
	add.s32 	%r162, %r161, -1556008596;
	add.s32 	%r163, %r160, -1253254570;
	shr.u32 	%r164, %r160, 5;
	add.s32 	%r165, %r164, -939442524;
	xor.b32  	%r166, %r162, %r163;
	xor.b32  	%r167, %r166, %r165;
	add.s32 	%r168, %r167, %r152;
	shl.b32 	%r169, %r168, 4;
	add.s32 	%r170, %r169, -1383041155;
	add.s32 	%r171, %r168, -1253254570;
	xor.b32  	%r172, %r170, %r171;
	shr.u32 	%r173, %r168, 5;
	add.s32 	%r174, %r173, 2123724318;
	xor.b32  	%r175, %r172, %r174;
	add.s32 	%r176, %r175, %r160;
	shl.b32 	%r177, %r176, 4;
	add.s32 	%r178, %r177, -1556008596;
	add.s32 	%r179, %r176, 1401181199;
	shr.u32 	%r180, %r176, 5;
	add.s32 	%r181, %r180, -939442524;
	xor.b32  	%r182, %r178, %r179;
	xor.b32  	%r183, %r182, %r181;
	add.s32 	%r184, %r183, %r168;
	shl.b32 	%r185, %r184, 4;
	add.s32 	%r186, %r185, -1383041155;
	add.s32 	%r187, %r184, 1401181199;
	xor.b32  	%r188, %r186, %r187;
	shr.u32 	%r189, %r184, 5;
	add.s32 	%r190, %r189, 2123724318;
	xor.b32  	%r191, %r188, %r190;
	add.s32 	%r192, %r191, %r176;
	shl.b32 	%r193, %r192, 4;
	add.s32 	%r194, %r193, -1556008596;
	add.s32 	%r195, %r192, -239350328;
	shr.u32 	%r196, %r192, 5;
	add.s32 	%r197, %r196, -939442524;
	xor.b32  	%r198, %r194, %r195;
	xor.b32  	%r199, %r198, %r197;
	add.s32 	%r200, %r199, %r184;
	shl.b32 	%r201, %r200, 4;
	add.s32 	%r202, %r201, -1383041155;
	add.s32 	%r203, %r200, -239350328;
	xor.b32  	%r204, %r202, %r203;
	shr.u32 	%r205, %r200, 5;
	add.s32 	%r206, %r205, 2123724318;
	xor.b32  	%r207, %r204, %r206;
	add.s32 	%r208, %r207, %r192;
	shl.b32 	%r209, %r208, 4;
	add.s32 	%r210, %r209, -1556008596;
	add.s32 	%r211, %r208, -1879881855;
	shr.u32 	%r212, %r208, 5;
	add.s32 	%r213, %r212, -939442524;
	xor.b32  	%r214, %r210, %r211;
	xor.b32  	%r215, %r214, %r213;
	add.s32 	%r216, %r215, %r200;
	shl.b32 	%r217, %r216, 4;
	add.s32 	%r218, %r217, -1383041155;
	add.s32 	%r219, %r216, -1879881855;
	xor.b32  	%r220, %r218, %r219;
	shr.u32 	%r221, %r216, 5;
	add.s32 	%r222, %r221, 2123724318;
	xor.b32  	%r223, %r220, %r222;
	add.s32 	%r224, %r223, %r208;
	shl.b32 	%r225, %r224, 4;
	add.s32 	%r226, %r225, -1556008596;
	add.s32 	%r227, %r224, 774553914;
	shr.u32 	%r228, %r224, 5;
	add.s32 	%r229, %r228, -939442524;
	xor.b32  	%r230, %r226, %r227;
	xor.b32  	%r231, %r230, %r229;
	add.s32 	%r232, %r231, %r216;
	shl.b32 	%r233, %r232, 4;
	add.s32 	%r234, %r233, -1383041155;
	add.s32 	%r235, %r232, 774553914;
	xor.b32  	%r236, %r234, %r235;
	shr.u32 	%r237, %r232, 5;
	add.s32 	%r238, %r237, 2123724318;
	xor.b32  	%r239, %r236, %r238;
	add.s32 	%r240, %r239, %r224;
	shl.b32 	%r241, %r240, 4;
	add.s32 	%r242, %r241, -1556008596;
	add.s32 	%r243, %r240, -865977613;
	shr.u32 	%r244, %r240, 5;
	add.s32 	%r245, %r244, -939442524;
	xor.b32  	%r246, %r242, %r243;
	xor.b32  	%r247, %r246, %r245;
	add.s32 	%r248, %r247, %r232;
	shl.b32 	%r249, %r248, 4;
	add.s32 	%r250, %r249, -1383041155;
	add.s32 	%r251, %r248, -865977613;
	xor.b32  	%r252, %r250, %r251;
	shr.u32 	%r253, %r248, 5;
	add.s32 	%r254, %r253, 2123724318;
	xor.b32  	%r255, %r252, %r254;
	add.s32 	%r256, %r255, %r240;
	shl.b32 	%r257, %r256, 4;
	add.s32 	%r258, %r257, -1556008596;
	add.s32 	%r259, %r256, 1788458156;
	shr.u32 	%r260, %r256, 5;
	add.s32 	%r261, %r260, -939442524;
	xor.b32  	%r262, %r258, %r259;
	xor.b32  	%r263, %r262, %r261;
	add.s32 	%r264, %r263, %r248;
	shl.b32 	%r265, %r264, 4;
	add.s32 	%r266, %r265, -1383041155;
	add.s32 	%r267, %r264, 1788458156;
	xor.b32  	%r268, %r266, %r267;
	shr.u32 	%r269, %r264, 5;
	add.s32 	%r270, %r269, 2123724318;
	xor.b32  	%r271, %r268, %r270;
	add.s32 	%r272, %r271, %r256;
	shl.b32 	%r273, %r272, 4;
	add.s32 	%r274, %r273, -1556008596;
	add.s32 	%r275, %r272, 147926629;
	shr.u32 	%r276, %r272, 5;
	add.s32 	%r277, %r276, -939442524;
	xor.b32  	%r278, %r274, %r275;
	xor.b32  	%r279, %r278, %r277;
	add.s32 	%r280, %r279, %r264;
	shl.b32 	%r281, %r280, 4;
	add.s32 	%r282, %r281, -1383041155;
	add.s32 	%r283, %r280, 147926629;
	xor.b32  	%r284, %r282, %r283;
	shr.u32 	%r285, %r280, 5;
	add.s32 	%r286, %r285, 2123724318;
	xor.b32  	%r287, %r284, %r286;
	add.s32 	%r288, %r287, %r272;
	shl.b32 	%r289, %r288, 4;
	add.s32 	%r290, %r289, -1556008596;
	add.s32 	%r291, %r288, -1492604898;
	shr.u32 	%r292, %r288, 5;
	add.s32 	%r293, %r292, -939442524;
	xor.b32  	%r294, %r290, %r291;
	xor.b32  	%r295, %r294, %r293;
	add.s32 	%r296, %r295, %r280;
	shl.b32 	%r297, %r296, 4;
	add.s32 	%r298, %r297, -1383041155;
	add.s32 	%r299, %r296, -1492604898;
	xor.b32  	%r300, %r298, %r299;
	shr.u32 	%r301, %r296, 5;
	add.s32 	%r302, %r301, 2123724318;
	xor.b32  	%r303, %r300, %r302;
	add.s32 	%r304, %r303, %r288;
	shl.b32 	%r305, %r304, 4;
	add.s32 	%r306, %r305, -1556008596;
	add.s32 	%r307, %r304, 1161830871;
	shr.u32 	%r308, %r304, 5;
	add.s32 	%r309, %r308, -939442524;
	xor.b32  	%r310, %r306, %r307;
	xor.b32  	%r311, %r310, %r309;
	add.s32 	%r312, %r311, %r296;
	shl.b32 	%r313, %r312, 4;
	add.s32 	%r314, %r313, -1383041155;
	add.s32 	%r315, %r312, 1161830871;
	xor.b32  	%r316, %r314, %r315;
	shr.u32 	%r317, %r312, 5;
	add.s32 	%r318, %r317, 2123724318;
	xor.b32  	%r319, %r316, %r318;
	add.s32 	%r320, %r319, %r304;
	shl.b32 	%r321, %r320, 4;
	add.s32 	%r322, %r321, -1556008596;
	add.s32 	%r323, %r320, -478700656;
	shr.u32 	%r324, %r320, 5;
	add.s32 	%r325, %r324, -939442524;
	xor.b32  	%r326, %r322, %r323;
	xor.b32  	%r327, %r326, %r325;
	add.s32 	%r328, %r327, %r312;
	add.s64 	%rd1, %rd136, 16;
	st.local.u32 	[%rd136+16], %r328;
	ld.global.u32 	%r329, [launch_offset];
	add.s32 	%r330, %r73, %r329;
	cvt.u64.u32 	%rd131, %r330;
	mov.u64 	%rd137, primitiveID;
	cvta.global.u64 	%rd10, %rd137;
	mov.u32 	%r71, 1;
	// begin inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r71, %r68, %rd131, %rd134, %rd134, %rd134);
	// end inline asm
	ld.u32 	%r1, [%rd9];
	mov.u64 	%rd138, primitive_type;
	cvta.global.u64 	%rd16, %rd138;
	// begin inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r71, %r68, %rd131, %rd134, %rd134, %rd134);
	// end inline asm
	ld.u32 	%r2, [%rd15];
	mov.u64 	%rd139, uvID;
	cvta.global.u64 	%rd22, %rd139;
	// begin inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r71, %r68, %rd131, %rd134, %rd134, %rd134);
	// end inline asm
	ld.u32 	%rd3, [%rd21];
	mov.u64 	%rd140, transform_matrix;
	cvta.global.u64 	%rd28, %rd140;
	mov.u32 	%r67, 2;
	// begin inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd134, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f1, [%rd27];
	mov.u64 	%rd35, 1;
	// begin inline asm
	call (%rd33), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd35, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f2, [%rd33];
	mov.u64 	%rd41, 2;
	// begin inline asm
	call (%rd39), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd41, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f3, [%rd39];
	mov.u64 	%rd47, 3;
	// begin inline asm
	call (%rd45), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd47, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f4, [%rd45];
	// begin inline asm
	call (%rd51), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd53, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f5, [%rd51];
	mov.u64 	%rd59, 5;
	// begin inline asm
	call (%rd57), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd59, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f6, [%rd57];
	mov.u64 	%rd65, 6;
	// begin inline asm
	call (%rd63), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd65, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f7, [%rd63];
	mov.u64 	%rd71, 7;
	// begin inline asm
	call (%rd69), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd71, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f8, [%rd69];
	// begin inline asm
	call (%rd75), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd77, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f9, [%rd75];
	mov.u64 	%rd83, 9;
	// begin inline asm
	call (%rd81), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd83, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f10, [%rd81];
	mov.u64 	%rd89, 10;
	// begin inline asm
	call (%rd87), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd89, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f11, [%rd87];
	mov.u64 	%rd95, 11;
	// begin inline asm
	call (%rd93), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd95, %rd131, %rd134, %rd134);
	// end inline asm
	ld.f32 	%f12, [%rd93];
	mov.u64 	%rd101, 12;
	// begin inline asm
	call (%rd99), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd101, %rd131, %rd134, %rd134);
	// end inline asm
	mov.u64 	%rd107, 13;
	// begin inline asm
	call (%rd105), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd107, %rd131, %rd134, %rd134);
	// end inline asm
	mov.u64 	%rd113, 14;
	// begin inline asm
	call (%rd111), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd113, %rd131, %rd134, %rd134);
	// end inline asm
	mov.u64 	%rd119, 15;
	// begin inline asm
	call (%rd117), _rt_buffer_get_64, (%rd28, %r67, %r68, %rd119, %rd131, %rd134, %rd134);
	// end inline asm
	mov.u64 	%rd141, object_subdivisions;
	cvta.global.u64 	%rd124, %rd141;
	mov.u32 	%r72, 8;
	// begin inline asm
	call (%rd123), _rt_buffer_get_64, (%rd124, %r71, %r72, %rd131, %rd134, %rd134, %rd134);
	// end inline asm
	ld.u32 	%r3, [%rd123];
	// begin inline asm
	call (%rd129), _rt_buffer_get_64, (%rd124, %r71, %r72, %rd131, %rd134, %rd134, %rd134);
	// end inline asm
	ld.u32 	%r4, [%rd129+4];
	setp.lt.s32 	%p1, %r4, 1;
	@%p1 bra 	$L__BB0_87;

	mul.ftz.f32 	%f13, %f3, 0f00000000;
	cvt.rn.f32.s32 	%f201, %r3;
	rcp.approx.ftz.f32 	%f14, %f201;
	cvt.rn.f32.s32 	%f202, %r4;
	rcp.approx.ftz.f32 	%f15, %f202;
	mul.ftz.f32 	%f203, %f2, 0f00000000;
	fma.rn.ftz.f32 	%f204, %f1, 0f00000000, %f203;
	add.ftz.f32 	%f205, %f204, %f13;
	add.ftz.f32 	%f16, %f4, %f205;
	mul.ftz.f32 	%f206, %f6, 0f00000000;
	fma.rn.ftz.f32 	%f207, %f5, 0f00000000, %f206;
	mul.ftz.f32 	%f17, %f7, 0f00000000;
	add.ftz.f32 	%f208, %f207, %f17;
	add.ftz.f32 	%f18, %f8, %f208;
	mul.ftz.f32 	%f209, %f10, 0f00000000;
	fma.rn.ftz.f32 	%f210, %f9, 0f00000000, %f209;
	mul.ftz.f32 	%f19, %f11, 0f00000000;
	add.ftz.f32 	%f211, %f210, %f19;
	add.ftz.f32 	%f20, %f12, %f211;
	fma.rn.ftz.f32 	%f212, %f1, 0f00000000, %f2;
	add.ftz.f32 	%f213, %f212, %f13;
	add.ftz.f32 	%f214, %f4, %f213;
	fma.rn.ftz.f32 	%f215, %f5, 0f00000000, %f6;
	add.ftz.f32 	%f216, %f215, %f17;
	add.ftz.f32 	%f217, %f8, %f216;
	fma.rn.ftz.f32 	%f218, %f9, 0f00000000, %f10;
	add.ftz.f32 	%f219, %f218, %f19;
	add.ftz.f32 	%f220, %f12, %f219;
	add.ftz.f32 	%f221, %f1, %f2;
	add.ftz.f32 	%f222, %f221, %f13;
	add.ftz.f32 	%f223, %f4, %f222;
	add.ftz.f32 	%f224, %f5, %f6;
	add.ftz.f32 	%f225, %f224, %f17;
	add.ftz.f32 	%f226, %f8, %f225;
	add.ftz.f32 	%f227, %f9, %f10;
	add.ftz.f32 	%f228, %f227, %f19;
	add.ftz.f32 	%f229, %f12, %f228;
	sub.ftz.f32 	%f230, %f214, %f16;
	sub.ftz.f32 	%f231, %f217, %f18;
	sub.ftz.f32 	%f232, %f220, %f20;
	sub.ftz.f32 	%f233, %f223, %f214;
	sub.ftz.f32 	%f234, %f226, %f217;
	sub.ftz.f32 	%f235, %f229, %f220;
	mul.ftz.f32 	%f236, %f231, %f235;
	mul.ftz.f32 	%f237, %f232, %f234;
	sub.ftz.f32 	%f21, %f236, %f237;
	mul.ftz.f32 	%f238, %f232, %f233;
	mul.ftz.f32 	%f239, %f230, %f235;
	sub.ftz.f32 	%f22, %f238, %f239;
	mul.ftz.f32 	%f240, %f230, %f234;
	mul.ftz.f32 	%f241, %f231, %f233;
	sub.ftz.f32 	%f23, %f240, %f241;
	mul.ftz.f32 	%f242, %f22, %f22;
	fma.rn.ftz.f32 	%f243, %f21, %f21, %f242;
	fma.rn.ftz.f32 	%f24, %f23, %f23, %f243;
	fma.rn.ftz.f32 	%f244, %f2, 0f00000000, %f1;
	add.ftz.f32 	%f245, %f244, %f13;
	add.ftz.f32 	%f246, %f4, %f245;
	fma.rn.ftz.f32 	%f247, %f6, 0f00000000, %f5;
	add.ftz.f32 	%f248, %f247, %f17;
	add.ftz.f32 	%f249, %f8, %f248;
	fma.rn.ftz.f32 	%f250, %f10, 0f00000000, %f9;
	add.ftz.f32 	%f251, %f250, %f19;
	add.ftz.f32 	%f252, %f12, %f251;
	sub.ftz.f32 	%f253, %f246, %f16;
	sub.ftz.f32 	%f254, %f249, %f18;
	sub.ftz.f32 	%f255, %f252, %f20;
	mul.ftz.f32 	%f256, %f254, %f232;
	mul.ftz.f32 	%f257, %f255, %f231;
	sub.ftz.f32 	%f25, %f256, %f257;
	mul.ftz.f32 	%f258, %f255, %f230;
	mul.ftz.f32 	%f259, %f253, %f232;
	sub.ftz.f32 	%f26, %f258, %f259;
	mul.ftz.f32 	%f260, %f253, %f231;
	mul.ftz.f32 	%f261, %f254, %f230;
	sub.ftz.f32 	%f27, %f260, %f261;
	mul.ftz.f32 	%f262, %f26, %f26;
	fma.rn.ftz.f32 	%f263, %f25, %f25, %f262;
	fma.rn.ftz.f32 	%f28, %f27, %f27, %f263;
	sub.ftz.f32 	%f29, %f16, %f214;
	sub.ftz.f32 	%f30, %f18, %f217;
	sub.ftz.f32 	%f264, %f18, %f226;
	sub.ftz.f32 	%f31, %f20, %f220;
	sub.ftz.f32 	%f265, %f20, %f229;
	mul.ftz.f32 	%f266, %f20, %f264;
	mul.ftz.f32 	%f267, %f18, %f265;
	sub.ftz.f32 	%f32, %f266, %f267;
	mul.ftz.f32 	%f268, %f30, %f265;
	mul.ftz.f32 	%f269, %f31, %f264;
	sub.ftz.f32 	%f33, %f268, %f269;
	mul.ftz.f32 	%f270, %f20, %f30;
	mul.ftz.f32 	%f271, %f18, %f31;
	sub.ftz.f32 	%f34, %f270, %f271;
	mov.u32 	%r570, 0;
	rsqrt.approx.ftz.f32 	%f340, %f24;

$L__BB0_2:
	setp.lt.s32 	%p2, %r3, 1;
	@%p2 bra 	$L__BB0_86;

	mov.u32 	%r571, 0;
	bra.uni 	$L__BB0_4;

$L__BB0_18:
	setp.eq.s32 	%p12, %r2, 1;
	@%p12 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_19;

$L__BB0_31:
	setp.lt.ftz.f32 	%p19, %f55, %f56;
	selp.f32 	%f913, %f55, %f56, %p19;
	selp.f32 	%f914, %f56, %f55, %p19;
	mul.ftz.f32 	%f910, %f340, %f21;
	mul.ftz.f32 	%f911, %f340, %f22;
	mul.ftz.f32 	%f912, %f23, %f340;
	mov.u64 	%rd214, maskID;
	cvta.global.u64 	%rd209, %rd214;
	mov.u32 	%r381, 1;
	mov.u32 	%r382, 4;
	mov.u64 	%rd213, 0;
	// begin inline asm
	call (%rd208), _rt_buffer_get_64, (%rd209, %r381, %r382, %rd131, %rd213, %rd213, %rd213);
	// end inline asm
	ld.u32 	%r19, [%rd208];
	setp.lt.s32 	%p20, %r19, 0;
	@%p20 bra 	$L__BB0_41;

	mad.lo.s32 	%r385, %r570, %r3, %r1;
	add.s32 	%r386, %r385, %r571;
	cvt.u64.u32 	%rd217, %r386;
	mov.u64 	%rd221, primitive_solid_fraction;
	cvta.global.u64 	%rd216, %rd221;
	// begin inline asm
	call (%rd215), _rt_buffer_get_64, (%rd216, %r381, %r382, %rd217, %rd213, %rd213, %rd213);
	// end inline asm
	ld.f32 	%f341, [%rd215];
	setp.leu.ftz.f32 	%p21, %f341, 0f00000000;
	@%p21 bra 	$L__BB0_41;

	mov.u32 	%r387, 1;
	mov.u32 	%r388, 4;
	mov.u64 	%rd227, 0;
	// begin inline asm
	call (%rd222), _rt_buffer_get_64, (%rd216, %r387, %r388, %rd217, %rd227, %rd227, %rd227);
	// end inline asm
	ld.f32 	%f342, [%rd222];
	setp.geu.ftz.f32 	%p22, %f342, 0f3F800000;
	@%p22 bra 	$L__BB0_41;

	cvt.s64.s32 	%rd231, %r19;
	mov.u64 	%rd253, masksize;
	cvta.global.u64 	%rd230, %rd253;
	mov.u32 	%r396, 8;
	// begin inline asm
	call (%rd229), _rt_buffer_get_64, (%rd230, %r387, %r396, %rd231, %rd227, %rd227, %rd227);
	// end inline asm
	ld.v2.u32 	{%r398, %r399}, [%rd229];
	mov.u32 	%r576, 0;
	mov.u64 	%rd243, 1;
	mov.u64 	%rd254, uvdata;
	cvta.global.u64 	%rd236, %rd254;
	mov.u32 	%r395, 2;
	// begin inline asm
	call (%rd235), _rt_buffer_get_64, (%rd236, %r395, %r396, %rd227, %rd3, %rd227, %rd227);
	// end inline asm
	ld.v2.f32 	{%f343, %f344}, [%rd235];
	// begin inline asm
	call (%rd241), _rt_buffer_get_64, (%rd236, %r395, %r396, %rd243, %rd3, %rd227, %rd227);
	// end inline asm
	ld.v2.f32 	{%f345, %f346}, [%rd241];
	mov.u64 	%rd249, 2;
	// begin inline asm
	call (%rd247), _rt_buffer_get_64, (%rd236, %r395, %r396, %rd249, %rd3, %rd227, %rd227);
	// end inline asm
	ld.v2.f32 	{%f349, %f350}, [%rd247];
	sub.ftz.f32 	%f97, %f345, %f343;
	sub.ftz.f32 	%f98, %f346, %f344;
	sub.ftz.f32 	%f99, %f349, %f343;
	sub.ftz.f32 	%f100, %f350, %f344;
	add.s32 	%r402, %r398, -1;
	cvt.rn.f32.s32 	%f101, %r402;
	add.s32 	%r403, %r399, -1;
	cvt.rn.f32.s32 	%f102, %r403;
	cvt.u64.u32 	%rd7, %r19;

$L__BB0_35:
	mul.ftz.f32 	%f353, %f914, %f2;
	fma.rn.ftz.f32 	%f354, %f913, %f1, %f353;
	add.ftz.f32 	%f355, %f354, %f13;
	add.ftz.f32 	%f356, %f4, %f355;
	mul.ftz.f32 	%f357, %f914, %f6;
	fma.rn.ftz.f32 	%f358, %f913, %f5, %f357;
	add.ftz.f32 	%f359, %f358, %f17;
	add.ftz.f32 	%f360, %f8, %f359;
	mul.ftz.f32 	%f361, %f914, %f10;
	fma.rn.ftz.f32 	%f362, %f913, %f9, %f361;
	add.ftz.f32 	%f363, %f362, %f19;
	add.ftz.f32 	%f364, %f12, %f363;
	mul.ftz.f32 	%f369, %f264, %f364;
	mul.ftz.f32 	%f374, %f265, %f360;
	sub.ftz.f32 	%f375, %f369, %f374;
	mul.ftz.f32 	%f376, %f18, %f364;
	mul.ftz.f32 	%f377, %f20, %f360;
	sub.ftz.f32 	%f378, %f376, %f377;
	mul.ftz.f32 	%f379, %f31, %f360;
	mul.ftz.f32 	%f380, %f30, %f364;
	sub.ftz.f32 	%f381, %f379, %f380;
	sub.ftz.f32 	%f385, %f16, %f223;
	mul.ftz.f32 	%f386, %f385, %f381;
	fma.rn.ftz.f32 	%f387, %f29, %f375, %f386;
	fma.rn.ftz.f32 	%f388, %f33, %f356, %f387;
	rcp.approx.ftz.f32 	%f389, %f388;
	mul.ftz.f32 	%f390, %f16, %f375;
	mul.ftz.f32 	%f391, %f385, %f378;
	sub.ftz.f32 	%f392, %f390, %f391;
	mul.ftz.f32 	%f393, %f32, %f356;
	sub.ftz.f32 	%f394, %f392, %f393;
	mul.ftz.f32 	%f395, %f394, %f389;
	mul.ftz.f32 	%f396, %f16, %f381;
	fma.rn.ftz.f32 	%f397, %f29, %f378, %f396;
	fma.rn.ftz.f32 	%f398, %f34, %f356, %f397;
	mul.ftz.f32 	%f399, %f398, %f389;
	fma.rn.ftz.f32 	%f400, %f97, %f395, %f343;
	fma.rn.ftz.f32 	%f401, %f98, %f395, %f344;
	fma.rn.ftz.f32 	%f105, %f99, %f399, %f400;
	fma.rn.ftz.f32 	%f106, %f100, %f399, %f401;
	setp.lt.ftz.f32 	%p23, %f105, 0f00000000;
	setp.gt.ftz.f32 	%p24, %f105, 0f3F800000;
	or.pred  	%p25, %p23, %p24;
	setp.lt.ftz.f32 	%p26, %f106, 0f00000000;
	or.pred  	%p27, %p26, %p25;
	setp.gt.ftz.f32 	%p28, %f106, 0f3F800000;
	or.pred  	%p29, %p28, %p27;
	mov.u16 	%rs32, 1;
	@%p29 bra 	$L__BB0_37;

	mul.ftz.f32 	%f402, %f105, %f101;
	cvt.rmi.ftz.f32.f32 	%f403, %f402;
	cvt.rzi.ftz.u32.f32 	%r406, %f403;
	mov.f32 	%f404, 0f3F800000;
	sub.ftz.f32 	%f405, %f404, %f106;
	mul.ftz.f32 	%f406, %f405, %f102;
	cvt.rmi.ftz.f32.f32 	%f407, %f406;
	cvt.rzi.ftz.u32.f32 	%r407, %f407;
	cvt.u64.u32 	%rd257, %r406;
	cvt.u64.u32 	%rd258, %r407;
	mov.u64 	%rd261, maskdata;
	cvta.global.u64 	%rd256, %rd261;
	mov.u32 	%r404, 3;
	mov.u32 	%r405, 1;
	mov.u64 	%rd260, 0;
	// begin inline asm
	call (%rd255), _rt_buffer_get_64, (%rd256, %r404, %r405, %rd257, %rd258, %rd7, %rd260);
	// end inline asm
	ld.u8 	%rs32, [%rd255];

$L__BB0_37:
	and.b16  	%rs5, %rs32, 255;
	setp.ne.s16 	%p30, %rs5, 0;
	@%p30 bra 	$L__BB0_40;

	setp.gt.u32 	%p31, %r576, 9;
	@%p31 bra 	$L__BB0_41;

	ld.local.u32 	%r408, [%rd1];
	mad.lo.s32 	%r409, %r408, 1664525, 1013904223;
	and.b32  	%r410, %r409, 16777215;
	cvt.rn.f32.u32 	%f408, %r410;
	mov.f32 	%f409, 0f4B800000;
	div.approx.ftz.f32 	%f410, %f408, %f409;
	mad.lo.s32 	%r411, %r409, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r411;
	and.b32  	%r412, %r411, 16777215;
	cvt.rn.f32.u32 	%f411, %r412;
	div.approx.ftz.f32 	%f412, %f411, %f409;
	setp.lt.ftz.f32 	%p32, %f410, %f412;
	selp.f32 	%f913, %f410, %f412, %p32;
	selp.f32 	%f914, %f412, %f410, %p32;

$L__BB0_40:
	add.s32 	%r576, %r576, 1;
	setp.eq.s16 	%p33, %rs5, 0;
	@%p33 bra 	$L__BB0_35;
	bra.uni 	$L__BB0_41;

$L__BB0_19:
	setp.eq.s32 	%p13, %r2, 2;
	@%p13 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_20;

$L__BB0_22:
	mad.lo.s32 	%r377, %r7, 1664525, 1013904223;
	and.b32  	%r378, %r377, 16777215;
	cvt.rn.f32.u32 	%f325, %r378;
	mov.f32 	%f326, 0f4B800000;
	div.approx.ftz.f32 	%f327, %f325, %f326;
	mad.lo.s32 	%r379, %r377, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r379;
	and.b32  	%r380, %r379, 16777215;
	cvt.rn.f32.u32 	%f328, %r380;
	div.approx.ftz.f32 	%f329, %f328, %f326;
	fma.rn.ftz.f32 	%f75, %f327, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f76, %f329, 0f40000000, 0fBF800000;
	neg.ftz.f32 	%f904, %f76;
	setp.gt.ftz.f32 	%p15, %f75, %f904;
	@%p15 bra 	$L__BB0_27;
	bra.uni 	$L__BB0_23;

$L__BB0_27:
	setp.gt.ftz.f32 	%p18, %f75, %f76;
	@%p18 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	div.approx.ftz.f32 	%f905, %f76, %f75;
	mov.f32 	%f904, %f75;
	bra.uni 	$L__BB0_30;

$L__BB0_20:
	setp.ne.s32 	%p14, %r2, 4;
	@%p14 bra 	$L__BB0_41;

	mad.lo.s32 	%r376, %r7, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r376;
	bra.uni 	$L__BB0_41;

$L__BB0_23:
	setp.lt.ftz.f32 	%p16, %f75, %f76;
	@%p16 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_24;

$L__BB0_26:
	neg.ftz.f32 	%f904, %f75;
	div.approx.ftz.f32 	%f333, %f76, %f75;
	add.ftz.f32 	%f905, %f333, 0f40800000;
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	div.approx.ftz.f32 	%f334, %f75, %f76;
	mov.f32 	%f335, 0f40000000;
	sub.ftz.f32 	%f905, %f335, %f334;
	mov.f32 	%f904, %f76;
	bra.uni 	$L__BB0_30;

$L__BB0_24:
	setp.eq.ftz.f32 	%p17, %f76, 0f00000000;
	mov.f32 	%f905, 0f00000000;
	@%p17 bra 	$L__BB0_30;

	div.approx.ftz.f32 	%f331, %f75, %f76;
	mov.f32 	%f332, 0f40C00000;
	sub.ftz.f32 	%f905, %f332, %f331;

$L__BB0_30:
	cvt.ftz.f64.f32 	%fd2, %f905;
	mul.f64 	%fd3, %fd2, 0d3FE921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f336, %fd3;
	cos.approx.ftz.f32 	%f337, %f336;
	mul.ftz.f32 	%f913, %f904, %f337;
	sin.approx.ftz.f32 	%f338, %f336;
	mul.ftz.f32 	%f914, %f904, %f338;
	rsqrt.approx.ftz.f32 	%f339, %f28;
	mul.ftz.f32 	%f910, %f339, %f25;
	mul.ftz.f32 	%f911, %f339, %f26;
	mul.ftz.f32 	%f912, %f27, %f339;
	bra.uni 	$L__BB0_41;

$L__BB0_4:
	ld.local.u32 	%r333, [%rd1];
	mad.lo.s32 	%r334, %r333, 1664525, 1013904223;
	and.b32  	%r335, %r334, 16777215;
	cvt.rn.f32.u32 	%f272, %r335;
	mov.f32 	%f273, 0f4B800000;
	div.approx.ftz.f32 	%f55, %f272, %f273;
	mad.lo.s32 	%r7, %r334, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r7;
	and.b32  	%r336, %r7, 16777215;
	cvt.rn.f32.u32 	%f274, %r336;
	div.approx.ftz.f32 	%f56, %f274, %f273;
	setp.eq.s32 	%p3, %r2, 3;
	@%p3 bra 	$L__BB0_6;

	setp.ne.s32 	%p4, %r2, 0;
	@%p4 bra 	$L__BB0_18;

$L__BB0_6:
	cvt.rn.f32.s32 	%f878, %r570;
	fma.rn.ftz.f32 	%f877, %f15, %f878, 0fBF000000;
	mov.u64 	%rd147, 0;
	ld.global.u32 	%r339, [launch_dim];
	cvt.rn.f32.s32 	%f57, %r571;
	fma.rn.ftz.f32 	%f275, %f14, %f57, 0fBF000000;
	ld.global.u32 	%r340, [launch_index];
	cvt.rn.f32.u32 	%f276, %r340;
	mul.ftz.f32 	%f277, %f14, %f276;
	cvt.rn.f32.u32 	%f278, %r339;
	div.approx.ftz.f32 	%f279, %f277, %f278;
	add.ftz.f32 	%f280, %f275, %f279;
	mul.ftz.f32 	%f281, %f14, %f55;
	div.approx.ftz.f32 	%f282, %f281, %f278;
	add.ftz.f32 	%f913, %f280, %f282;
	ld.global.u32 	%r341, [launch_index+4];
	cvt.rn.f32.u32 	%f283, %r341;
	mul.ftz.f32 	%f284, %f15, %f283;
	ld.global.u32 	%r342, [launch_dim+4];
	cvt.rn.f32.u32 	%f285, %r342;
	div.approx.ftz.f32 	%f286, %f284, %f285;
	add.ftz.f32 	%f287, %f877, %f286;
	mul.ftz.f32 	%f288, %f15, %f56;
	div.approx.ftz.f32 	%f289, %f288, %f285;
	add.ftz.f32 	%f914, %f287, %f289;
	mov.u64 	%rd148, maskID;
	cvta.global.u64 	%rd143, %rd148;
	mov.u32 	%r337, 1;
	mov.u32 	%r338, 4;
	// begin inline asm
	call (%rd142), _rt_buffer_get_64, (%rd143, %r337, %r338, %rd131, %rd147, %rd147, %rd147);
	// end inline asm
	ld.s32 	%rd4, [%rd142];
	setp.lt.s64 	%p5, %rd4, 0;
	@%p5 bra 	$L__BB0_17;

	mad.lo.s32 	%r345, %r570, %r3, %r1;
	add.s32 	%r346, %r345, %r571;
	cvt.u64.u32 	%rd151, %r346;
	mov.u64 	%rd155, primitive_solid_fraction;
	cvta.global.u64 	%rd150, %rd155;
	// begin inline asm
	call (%rd149), _rt_buffer_get_64, (%rd150, %r337, %r338, %rd151, %rd147, %rd147, %rd147);
	// end inline asm
	ld.f32 	%f290, [%rd149];
	setp.leu.ftz.f32 	%p6, %f290, 0f00000000;
	@%p6 bra 	$L__BB0_17;

	mov.u32 	%r347, 1;
	mov.u32 	%r348, 4;
	mov.u64 	%rd161, 0;
	// begin inline asm
	call (%rd156), _rt_buffer_get_64, (%rd150, %r347, %r348, %rd151, %rd161, %rd161, %rd161);
	// end inline asm
	ld.f32 	%f291, [%rd156];
	setp.geu.ftz.f32 	%p7, %f291, 0f3F800000;
	@%p7 bra 	$L__BB0_17;

	mov.u64 	%rd169, masksize;
	cvta.global.u64 	%rd164, %rd169;
	mov.u32 	%r350, 8;
	// begin inline asm
	call (%rd163), _rt_buffer_get_64, (%rd164, %r347, %r350, %rd4, %rd161, %rd161, %rd161);
	// end inline asm
	ld.v2.u32 	{%r352, %r353}, [%rd163];
	mov.u32 	%r572, 0;
	add.s32 	%r356, %r352, -1;
	cvt.rn.f32.s32 	%f60, %r356;
	add.s32 	%r357, %r353, -1;
	cvt.rn.f32.s32 	%f61, %r357;

$L__BB0_10:
	cvt.u32.u64 	%r358, %rd3;
	setp.eq.s32 	%p8, %r358, -1;
	add.ftz.f32 	%f64, %f913, 0f3F000000;
	add.ftz.f32 	%f65, %f914, 0f3F000000;
	@%p8 bra 	$L__BB0_12;

	mov.u64 	%rd200, uvdata;
	cvta.global.u64 	%rd171, %rd200;
	mov.u32 	%r367, 2;
	mov.u32 	%r368, 8;
	mov.u64 	%rd199, 0;
	// begin inline asm
	call (%rd170), _rt_buffer_get_64, (%rd171, %r367, %r368, %rd199, %rd3, %rd199, %rd199);
	// end inline asm
	ld.v2.f32 	{%f292, %f293}, [%rd170];
	mov.u64 	%rd196, 1;
	// begin inline asm
	call (%rd176), _rt_buffer_get_64, (%rd171, %r367, %r368, %rd196, %rd3, %rd199, %rd199);
	// end inline asm
	ld.f32 	%f296, [%rd176];
	// begin inline asm
	call (%rd182), _rt_buffer_get_64, (%rd171, %r367, %r368, %rd199, %rd3, %rd199, %rd199);
	// end inline asm
	ld.f32 	%f297, [%rd182];
	sub.ftz.f32 	%f298, %f296, %f297;
	mov.u64 	%rd190, 2;
	// begin inline asm
	call (%rd188), _rt_buffer_get_64, (%rd171, %r367, %r368, %rd190, %rd3, %rd199, %rd199);
	// end inline asm
	ld.f32 	%f299, [%rd188+4];
	// begin inline asm
	call (%rd194), _rt_buffer_get_64, (%rd171, %r367, %r368, %rd196, %rd3, %rd199, %rd199);
	// end inline asm
	ld.f32 	%f300, [%rd194+4];
	sub.ftz.f32 	%f301, %f299, %f300;
	fma.rn.ftz.f32 	%f302, %f64, %f298, %f292;
	mul.ftz.f32 	%f303, %f302, %f60;
	cvt.rmi.ftz.f32.f32 	%f304, %f303;
	mov.f32 	%f305, 0f3F800000;
	sub.ftz.f32 	%f306, %f305, %f293;
	mul.ftz.f32 	%f307, %f65, %f301;
	sub.ftz.f32 	%f308, %f306, %f307;
	mul.ftz.f32 	%f309, %f308, %f61;
	cvt.rmi.ftz.f32.f32 	%f310, %f309;
	cvt.rzi.ftz.u32.f32 	%r574, %f310;
	cvt.rzi.ftz.u32.f32 	%r573, %f304;
	cvt.u32.u64 	%r575, %rd4;
	bra.uni 	$L__BB0_13;

$L__BB0_12:
	mul.ftz.f32 	%f311, %f64, %f60;
	cvt.rmi.ftz.f32.f32 	%f312, %f311;
	mov.f32 	%f313, 0f3F800000;
	sub.ftz.f32 	%f314, %f313, %f65;
	mul.ftz.f32 	%f315, %f314, %f61;
	cvt.rmi.ftz.f32.f32 	%f316, %f315;
	cvt.rzi.ftz.u32.f32 	%r573, %f312;
	cvt.rzi.ftz.u32.f32 	%r574, %f316;
	cvt.u32.u64 	%r575, %rd4;

$L__BB0_13:
	cvt.u64.u32 	%rd203, %r573;
	cvt.u64.u32 	%rd204, %r574;
	cvt.u64.u32 	%rd205, %r575;
	mov.u64 	%rd207, maskdata;
	cvta.global.u64 	%rd202, %rd207;
	mov.u32 	%r369, 3;
	mov.u32 	%r370, 1;
	mov.u64 	%rd206, 0;
	// begin inline asm
	call (%rd201), _rt_buffer_get_64, (%rd202, %r369, %r370, %rd203, %rd204, %rd205, %rd206);
	// end inline asm
	ld.u8 	%rs1, [%rd201];
	setp.ne.s16 	%p9, %rs1, 0;
	@%p9 bra 	$L__BB0_16;

	setp.gt.u32 	%p10, %r572, 9;
	@%p10 bra 	$L__BB0_17;

	cvt.rn.f32.s32 	%f879, %r570;
	ld.local.u32 	%r371, [%rd1];
	mad.lo.s32 	%r372, %r371, 1664525, 1013904223;
	and.b32  	%r373, %r372, 16777215;
	cvt.rn.f32.u32 	%f317, %r373;
	mov.f32 	%f318, 0f4B800000;
	div.approx.ftz.f32 	%f319, %f317, %f318;
	add.ftz.f32 	%f320, %f319, %f57;
	fma.rn.ftz.f32 	%f913, %f14, %f320, 0fBF000000;
	mad.lo.s32 	%r374, %r372, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r374;
	and.b32  	%r375, %r374, 16777215;
	cvt.rn.f32.u32 	%f321, %r375;
	div.approx.ftz.f32 	%f322, %f321, %f318;
	add.ftz.f32 	%f323, %f322, %f879;
	fma.rn.ftz.f32 	%f914, %f15, %f323, 0fBF000000;

$L__BB0_16:
	add.s32 	%r572, %r572, 1;
	setp.eq.s16 	%p11, %rs1, 0;
	@%p11 bra 	$L__BB0_10;

$L__BB0_17:
	rsqrt.approx.ftz.f32 	%f324, %f28;
	mul.ftz.f32 	%f910, %f324, %f25;
	mul.ftz.f32 	%f911, %f324, %f26;
	mul.ftz.f32 	%f912, %f27, %f324;

$L__BB0_41:
	mul.ftz.f32 	%f413, %f914, %f2;
	fma.rn.ftz.f32 	%f414, %f913, %f1, %f413;
	add.ftz.f32 	%f415, %f414, %f13;
	add.ftz.f32 	%f116, %f4, %f415;
	mul.ftz.f32 	%f416, %f914, %f6;
	fma.rn.ftz.f32 	%f417, %f913, %f5, %f416;
	add.ftz.f32 	%f418, %f417, %f17;
	add.ftz.f32 	%f117, %f8, %f418;
	mul.ftz.f32 	%f419, %f914, %f10;
	fma.rn.ftz.f32 	%f420, %f913, %f9, %f419;
	add.ftz.f32 	%f421, %f420, %f19;
	add.ftz.f32 	%f118, %f12, %f421;
	ld.global.u32 	%r413, [Nsources];
	setp.eq.s32 	%p34, %r413, 0;
	@%p34 bra 	$L__BB0_85;

	mov.u32 	%r577, 0;
	bra.uni 	$L__BB0_43;

$L__BB0_58:
	mul.ftz.f32 	%f489, %f927, %f927;
	fma.rn.ftz.f32 	%f490, %f926, %f926, %f489;
	fma.rn.ftz.f32 	%f491, %f928, %f928, %f490;
	sqrt.approx.ftz.f32 	%f929, %f491;
	rsqrt.approx.ftz.f32 	%f492, %f491;
	mul.ftz.f32 	%f926, %f926, %f492;
	mul.ftz.f32 	%f927, %f927, %f492;
	mul.ftz.f32 	%f928, %f928, %f492;
	ld.global.u32 	%r445, [launch_dim+4];
	ld.global.u32 	%r446, [launch_dim];
	mul.lo.s32 	%r447, %r445, %r446;
	cvt.rn.f64.u32 	%fd6, %r447;
	rcp.rn.f64 	%fd7, %fd6;
	mul.ftz.f32 	%f493, %f911, %f927;
	fma.rn.ftz.f32 	%f494, %f910, %f926, %f493;
	fma.rn.ftz.f32 	%f921, %f912, %f928, %f494;
	abs.ftz.f32 	%f495, %f921;
	cvt.ftz.f64.f32 	%fd8, %f495;
	mul.f64 	%fd9, %fd7, %fd8;
	mul.ftz.f32 	%f496, %f144, %f927;
	fma.rn.ftz.f32 	%f497, %f143, %f926, %f496;
	fma.rn.ftz.f32 	%f498, %f145, %f928, %f497;
	abs.ftz.f32 	%f499, %f498;
	cvt.ftz.f64.f32 	%fd10, %f499;
	mul.f64 	%fd11, %fd9, %fd10;
	mul.ftz.f32 	%f500, %f929, %f929;
	cvt.ftz.f64.f32 	%fd12, %f500;
	div.rn.f64 	%fd13, %fd11, %fd12;
	// begin inline asm
	call (%rd318), _rt_buffer_get_64, (%rd305, %r439, %r438, %rd264, %rd315, %rd315, %rd315);
	// end inline asm
	ld.f32 	%f501, [%rd318];
	cvt.ftz.f64.f32 	%fd14, %f501;
	mul.f64 	%fd15, %fd13, %fd14;
	// begin inline asm
	call (%rd324), _rt_buffer_get_64, (%rd305, %r439, %r438, %rd264, %rd315, %rd315, %rd315);
	// end inline asm
	ld.f32 	%f502, [%rd324];
	cvt.ftz.f64.f32 	%fd16, %f502;
	mul.f64 	%fd17, %fd15, %fd16;
	st.local.f64 	[%rd1+-16], %fd17;
	bra.uni 	$L__BB0_70;

$L__BB0_43:
	cvt.s64.s32 	%rd264, %r577;
	mov.u64 	%rd268, source_types;
	cvta.global.u64 	%rd263, %rd268;
	mov.u32 	%r415, 1;
	mov.u32 	%r416, 4;
	mov.u64 	%rd267, 0;
	// begin inline asm
	call (%rd262), _rt_buffer_get_64, (%rd263, %r415, %r416, %rd264, %rd267, %rd267, %rd267);
	// end inline asm
	ld.u32 	%r417, [%rd262];
	setp.eq.s32 	%p35, %r417, 0;
	@%p35 bra 	$L__BB0_69;

	// begin inline asm
	call (%rd269), _rt_buffer_get_64, (%rd263, %r415, %r416, %rd264, %rd267, %rd267, %rd267);
	// end inline asm
	ld.u32 	%r420, [%rd269];
	setp.eq.s32 	%p36, %r420, 1;
	@%p36 bra 	$L__BB0_61;

	mov.u32 	%r421, 1;
	mov.u32 	%r422, 4;
	mov.u64 	%rd281, 0;
	// begin inline asm
	call (%rd276), _rt_buffer_get_64, (%rd263, %r421, %r422, %rd264, %rd281, %rd281, %rd281);
	// end inline asm
	ld.u32 	%r423, [%rd276];
	setp.eq.s32 	%p37, %r423, 2;
	@%p37 bra 	$L__BB0_61;
	bra.uni 	$L__BB0_46;

$L__BB0_61:
	ld.local.u32 	%r473, [%rd1];
	mov.u64 	%rd382, 0;
	mad.lo.s32 	%r474, %r473, 1664525, 1013904223;
	and.b32  	%r475, %r474, 16777215;
	cvt.rn.f32.u32 	%f585, %r475;
	mov.f32 	%f586, 0f4B800000;
	div.approx.ftz.f32 	%f587, %f585, %f586;
	add.ftz.f32 	%f588, %f587, %f587;
	mov.f32 	%f589, 0f3F800000;
	sub.ftz.f32 	%f590, %f589, %f588;
	setp.lt.ftz.f32 	%p46, %f590, 0fBF800000;
	setp.gt.ftz.f32 	%p47, %f590, 0f3F800000;
	selp.f32 	%f591, 0f3F800000, %f590, %p47;
	selp.f32 	%f592, 0fBF800000, %f591, %p46;
	abs.ftz.f32 	%f593, %f592;
	neg.ftz.f32 	%f594, %f593;
	mov.f32 	%f595, 0f3F000000;
	fma.rn.ftz.f32 	%f596, %f595, %f594, %f595;
	rsqrt.approx.ftz.f32 	%f597, %f596;
	mul.ftz.f32 	%f598, %f596, %f597;
	mul.ftz.f32 	%f599, %f597, 0f3F000000;
	neg.ftz.f32 	%f600, %f598;
	fma.rn.ftz.f32 	%f601, %f600, %f599, %f595;
	fma.rn.ftz.f32 	%f602, %f598, %f601, %f598;
	setp.eq.ftz.f32 	%p48, %f593, 0f3F800000;
	selp.f32 	%f603, 0f00000000, %f602, %p48;
	setp.gt.ftz.f32 	%p49, %f593, 0f3F0F5C29;
	selp.f32 	%f604, %f603, %f593, %p49;
	mov.b32 	%r476, %f604;
	mov.b32 	%r477, %f592;
	and.b32  	%r478, %r477, -2147483648;
	or.b32  	%r479, %r478, %r476;
	mov.b32 	%f605, %r479;
	mul.ftz.f32 	%f606, %f605, %f605;
	mov.f32 	%f607, 0f3C8B1ABB;
	mov.f32 	%f608, 0f3D10ECEF;
	fma.rn.ftz.f32 	%f609, %f608, %f606, %f607;
	mov.f32 	%f610, 0f3CFC028C;
	fma.rn.ftz.f32 	%f611, %f609, %f606, %f610;
	mov.f32 	%f612, 0f3D372139;
	fma.rn.ftz.f32 	%f613, %f611, %f606, %f612;
	mov.f32 	%f614, 0f3D9993DB;
	fma.rn.ftz.f32 	%f615, %f613, %f606, %f614;
	mov.f32 	%f616, 0f3E2AAAC6;
	fma.rn.ftz.f32 	%f617, %f615, %f606, %f616;
	mul.ftz.f32 	%f618, %f617, %f606;
	fma.rn.ftz.f32 	%f619, %f618, %f605, %f605;
	neg.ftz.f32 	%f620, %f619;
	selp.f32 	%f621, %f619, %f620, %p49;
	mov.f32 	%f622, 0f3FD774EB;
	mov.f32 	%f623, 0f3F6EE581;
	fma.rn.ftz.f32 	%f624, %f623, %f622, %f621;
	setp.gt.ftz.f32 	%p50, %f592, 0f3F0F5C29;
	selp.f32 	%f625, %f619, %f624, %p50;
	add.ftz.f32 	%f626, %f625, %f625;
	selp.f32 	%f627, %f626, %f625, %p49;
	mad.lo.s32 	%r480, %r474, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r480;
	and.b32  	%r481, %r480, 16777215;
	cvt.rn.f32.u32 	%f628, %r481;
	div.approx.ftz.f32 	%f629, %f628, %f586;
	add.ftz.f32 	%f630, %f629, %f629;
	cvt.ftz.f64.f32 	%fd31, %f630;
	mul.f64 	%fd32, %fd31, 0d400921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f631, %fd32;
	mov.u64 	%rd383, source_widths;
	cvta.global.u64 	%rd372, %rd383;
	mov.u32 	%r470, 1;
	mov.u32 	%r469, 8;
	// begin inline asm
	call (%rd371), _rt_buffer_get_64, (%rd372, %r470, %r469, %rd264, %rd382, %rd382, %rd382);
	// end inline asm
	ld.f32 	%f632, [%rd371];
	mul.ftz.f32 	%f633, %f632, 0f3F000000;
	sin.approx.ftz.f32 	%f634, %f627;
	cos.approx.ftz.f32 	%f635, %f631;
	mul.ftz.f32 	%f636, %f634, %f635;
	sin.approx.ftz.f32 	%f637, %f631;
	mul.ftz.f32 	%f638, %f634, %f637;
	cos.approx.ftz.f32 	%f639, %f627;
	mov.u64 	%rd384, source_positions;
	cvta.global.u64 	%rd378, %rd384;
	mov.u32 	%r471, 12;
	// begin inline asm
	call (%rd377), _rt_buffer_get_64, (%rd378, %r470, %r471, %rd264, %rd382, %rd382, %rd382);
	// end inline asm
	ld.f32 	%f640, [%rd377];
	fma.rn.ftz.f32 	%f641, %f633, %f636, %f640;
	ld.f32 	%f642, [%rd377+4];
	fma.rn.ftz.f32 	%f643, %f633, %f638, %f642;
	ld.f32 	%f644, [%rd377+8];
	fma.rn.ftz.f32 	%f645, %f633, %f639, %f644;
	sub.ftz.f32 	%f646, %f641, %f116;
	sub.ftz.f32 	%f647, %f643, %f117;
	sub.ftz.f32 	%f648, %f645, %f118;
	mul.ftz.f32 	%f649, %f647, %f647;
	fma.rn.ftz.f32 	%f650, %f646, %f646, %f649;
	fma.rn.ftz.f32 	%f651, %f648, %f648, %f650;
	sqrt.approx.ftz.f32 	%f929, %f651;
	rsqrt.approx.ftz.f32 	%f652, %f651;
	mul.ftz.f32 	%f926, %f646, %f652;
	mul.ftz.f32 	%f927, %f647, %f652;
	mul.ftz.f32 	%f928, %f648, %f652;
	st.local.u64 	[%rd1+-16], %rd382;
	mul.ftz.f32 	%f653, %f911, %f927;
	fma.rn.ftz.f32 	%f654, %f910, %f926, %f653;
	fma.rn.ftz.f32 	%f921, %f912, %f928, %f654;
	mul.ftz.f32 	%f655, %f929, %f929;
	cvt.ftz.f64.f32 	%fd1, %f655;
	mov.u32 	%r578, 0;

$L__BB0_62:
	mov.u32 	%r579, 0;
	cvt.rn.f32.u32 	%f656, %r578;
	add.ftz.f32 	%f657, %f656, 0f3F000000;
	add.ftz.f32 	%f658, %f657, %f657;
	cvt.ftz.f64.f32 	%fd33, %f658;
	mul.f64 	%fd34, %fd33, 0d400921FB54442D18;
	div.rn.f64 	%fd35, %fd34, 0d4024000000000000;
	cvt.rn.ftz.f32.f64 	%f659, %fd35;
	cos.approx.ftz.f32 	%f170, %f659;
	sin.approx.ftz.f32 	%f171, %f659;

$L__BB0_63:
	cvt.rn.f32.u32 	%f660, %r579;
	add.ftz.f32 	%f661, %f660, 0f3F000000;
	mov.f32 	%f662, 0f3F000000;
	add.ftz.f32 	%f663, %f661, %f661;
	mov.f32 	%f664, 0f41200000;
	div.approx.ftz.f32 	%f665, %f663, %f664;
	mov.f32 	%f666, 0f3F800000;
	sub.ftz.f32 	%f667, %f666, %f665;
	setp.lt.ftz.f32 	%p51, %f667, 0fBF800000;
	setp.gt.ftz.f32 	%p52, %f667, 0f3F800000;
	selp.f32 	%f668, 0f3F800000, %f667, %p52;
	selp.f32 	%f669, 0fBF800000, %f668, %p51;
	abs.ftz.f32 	%f670, %f669;
	neg.ftz.f32 	%f671, %f670;
	fma.rn.ftz.f32 	%f672, %f662, %f671, %f662;
	rsqrt.approx.ftz.f32 	%f673, %f672;
	mul.ftz.f32 	%f674, %f672, %f673;
	mul.ftz.f32 	%f675, %f673, 0f3F000000;
	neg.ftz.f32 	%f676, %f674;
	fma.rn.ftz.f32 	%f677, %f676, %f675, %f662;
	fma.rn.ftz.f32 	%f678, %f674, %f677, %f674;
	setp.eq.ftz.f32 	%p53, %f670, 0f3F800000;
	selp.f32 	%f679, 0f00000000, %f678, %p53;
	setp.gt.ftz.f32 	%p54, %f670, 0f3F0F5C29;
	selp.f32 	%f680, %f679, %f670, %p54;
	mov.b32 	%r483, %f680;
	mov.b32 	%r484, %f669;
	and.b32  	%r485, %r484, -2147483648;
	or.b32  	%r486, %r485, %r483;
	mov.b32 	%f681, %r486;
	mul.ftz.f32 	%f682, %f681, %f681;
	mov.f32 	%f683, 0f3C8B1ABB;
	mov.f32 	%f684, 0f3D10ECEF;
	fma.rn.ftz.f32 	%f685, %f684, %f682, %f683;
	mov.f32 	%f686, 0f3CFC028C;
	fma.rn.ftz.f32 	%f687, %f685, %f682, %f686;
	mov.f32 	%f688, 0f3D372139;
	fma.rn.ftz.f32 	%f689, %f687, %f682, %f688;
	mov.f32 	%f690, 0f3D9993DB;
	fma.rn.ftz.f32 	%f691, %f689, %f682, %f690;
	mov.f32 	%f692, 0f3E2AAAC6;
	fma.rn.ftz.f32 	%f693, %f691, %f682, %f692;
	mul.ftz.f32 	%f694, %f693, %f682;
	fma.rn.ftz.f32 	%f695, %f694, %f681, %f681;
	neg.ftz.f32 	%f696, %f695;
	selp.f32 	%f697, %f695, %f696, %p54;
	mov.f32 	%f698, 0f3FD774EB;
	mov.f32 	%f699, 0f3F6EE581;
	fma.rn.ftz.f32 	%f700, %f699, %f698, %f697;
	setp.gt.ftz.f32 	%p55, %f669, 0f3F0F5C29;
	selp.f32 	%f701, %f695, %f700, %p55;
	add.ftz.f32 	%f702, %f701, %f701;
	selp.f32 	%f703, %f702, %f701, %p54;
	sin.approx.ftz.f32 	%f704, %f703;
	mul.ftz.f32 	%f705, %f704, %f170;
	mul.ftz.f32 	%f706, %f704, %f171;
	cos.approx.ftz.f32 	%f707, %f703;
	mul.ftz.f32 	%f708, %f927, %f706;
	fma.rn.ftz.f32 	%f709, %f926, %f705, %f708;
	fma.rn.ftz.f32 	%f172, %f928, %f707, %f709;
	setp.geu.ftz.f32 	%p56, %f172, 0f00000000;
	@%p56 bra 	$L__BB0_65;

	mov.u64 	%rd445, source_widths;
	cvta.global.u64 	%rd444, %rd445;
	mov.u64 	%rd396, 0;
	ld.global.u32 	%r491, [launch_dim];
	ld.global.u32 	%r492, [launch_dim+4];
	mul.lo.s32 	%r493, %r492, %r491;
	cvt.rn.f64.u32 	%fd36, %r493;
	rcp.rn.f64 	%fd37, %fd36;
	abs.ftz.f32 	%f710, %f921;
	cvt.ftz.f64.f32 	%fd38, %f710;
	mul.f64 	%fd39, %fd37, %fd38;
	abs.ftz.f32 	%f711, %f172;
	cvt.ftz.f64.f32 	%fd40, %f711;
	mul.f64 	%fd41, %fd39, %fd40;
	div.rn.f64 	%fd42, %fd41, %fd1;
	div.rn.f64 	%fd43, %fd42, 0d4059000000000000;
	mov.u32 	%r489, 1;
	mov.u32 	%r490, 8;
	// begin inline asm
	call (%rd385), _rt_buffer_get_64, (%rd444, %r489, %r490, %rd264, %rd396, %rd396, %rd396);
	// end inline asm
	ld.f32 	%f712, [%rd385];
	cvt.ftz.f64.f32 	%fd44, %f712;
	mul.f64 	%fd45, %fd43, %fd44;
	// begin inline asm
	call (%rd391), _rt_buffer_get_64, (%rd444, %r489, %r490, %rd264, %rd396, %rd396, %rd396);
	// end inline asm
	ld.f32 	%f713, [%rd391];
	cvt.ftz.f64.f32 	%fd46, %f713;
	ld.local.f64 	%fd47, [%rd1+-16];
	fma.rn.f64 	%fd48, %fd45, %fd46, %fd47;
	st.local.f64 	[%rd1+-16], %fd48;

$L__BB0_65:
	add.s32 	%r494, %r579, 1;
	cvt.rn.f32.u32 	%f714, %r494;
	add.ftz.f32 	%f715, %f714, 0f3F000000;
	add.ftz.f32 	%f717, %f715, %f715;
	div.approx.ftz.f32 	%f719, %f717, %f664;
	sub.ftz.f32 	%f721, %f666, %f719;
	setp.lt.ftz.f32 	%p57, %f721, 0fBF800000;
	setp.gt.ftz.f32 	%p58, %f721, 0f3F800000;
	selp.f32 	%f722, 0f3F800000, %f721, %p58;
	selp.f32 	%f723, 0fBF800000, %f722, %p57;
	abs.ftz.f32 	%f724, %f723;
	neg.ftz.f32 	%f725, %f724;
	fma.rn.ftz.f32 	%f726, %f662, %f725, %f662;
	rsqrt.approx.ftz.f32 	%f727, %f726;
	mul.ftz.f32 	%f728, %f726, %f727;
	mul.ftz.f32 	%f729, %f727, 0f3F000000;
	neg.ftz.f32 	%f730, %f728;
	fma.rn.ftz.f32 	%f731, %f730, %f729, %f662;
	fma.rn.ftz.f32 	%f732, %f728, %f731, %f728;
	setp.eq.ftz.f32 	%p59, %f724, 0f3F800000;
	selp.f32 	%f733, 0f00000000, %f732, %p59;
	setp.gt.ftz.f32 	%p60, %f724, 0f3F0F5C29;
	selp.f32 	%f734, %f733, %f724, %p60;
	mov.b32 	%r495, %f734;
	mov.b32 	%r496, %f723;
	and.b32  	%r497, %r496, -2147483648;
	or.b32  	%r498, %r497, %r495;
	mov.b32 	%f735, %r498;
	mul.ftz.f32 	%f736, %f735, %f735;
	fma.rn.ftz.f32 	%f739, %f684, %f736, %f683;
	fma.rn.ftz.f32 	%f741, %f739, %f736, %f686;
	fma.rn.ftz.f32 	%f743, %f741, %f736, %f688;
	fma.rn.ftz.f32 	%f745, %f743, %f736, %f690;
	fma.rn.ftz.f32 	%f747, %f745, %f736, %f692;
	mul.ftz.f32 	%f748, %f747, %f736;
	fma.rn.ftz.f32 	%f749, %f748, %f735, %f735;
	neg.ftz.f32 	%f750, %f749;
	selp.f32 	%f751, %f749, %f750, %p60;
	fma.rn.ftz.f32 	%f754, %f699, %f698, %f751;
	setp.gt.ftz.f32 	%p61, %f723, 0f3F0F5C29;
	selp.f32 	%f755, %f749, %f754, %p61;
	add.ftz.f32 	%f756, %f755, %f755;
	selp.f32 	%f757, %f756, %f755, %p60;
	sin.approx.ftz.f32 	%f758, %f757;
	mul.ftz.f32 	%f759, %f758, %f170;
	mul.ftz.f32 	%f760, %f758, %f171;
	cos.approx.ftz.f32 	%f761, %f757;
	mul.ftz.f32 	%f762, %f927, %f760;
	fma.rn.ftz.f32 	%f763, %f926, %f759, %f762;
	fma.rn.ftz.f32 	%f173, %f928, %f761, %f763;
	setp.geu.ftz.f32 	%p62, %f173, 0f00000000;
	@%p62 bra 	$L__BB0_67;

	mov.u64 	%rd443, source_widths;
	cvta.global.u64 	%rd442, %rd443;
	mov.u64 	%rd409, 0;
	ld.global.u32 	%r503, [launch_dim];
	ld.global.u32 	%r504, [launch_dim+4];
	mul.lo.s32 	%r505, %r504, %r503;
	cvt.rn.f64.u32 	%fd49, %r505;
	rcp.rn.f64 	%fd50, %fd49;
	abs.ftz.f32 	%f764, %f921;
	cvt.ftz.f64.f32 	%fd51, %f764;
	mul.f64 	%fd52, %fd50, %fd51;
	abs.ftz.f32 	%f765, %f173;
	cvt.ftz.f64.f32 	%fd53, %f765;
	mul.f64 	%fd54, %fd52, %fd53;
	div.rn.f64 	%fd55, %fd54, %fd1;
	div.rn.f64 	%fd56, %fd55, 0d4059000000000000;
	mov.u32 	%r501, 1;
	mov.u32 	%r502, 8;
	// begin inline asm
	call (%rd398), _rt_buffer_get_64, (%rd442, %r501, %r502, %rd264, %rd409, %rd409, %rd409);
	// end inline asm
	ld.f32 	%f766, [%rd398];
	cvt.ftz.f64.f32 	%fd57, %f766;
	mul.f64 	%fd58, %fd56, %fd57;
	// begin inline asm
	call (%rd404), _rt_buffer_get_64, (%rd442, %r501, %r502, %rd264, %rd409, %rd409, %rd409);
	// end inline asm
	ld.f32 	%f767, [%rd404];
	cvt.ftz.f64.f32 	%fd59, %f767;
	ld.local.f64 	%fd60, [%rd1+-16];
	fma.rn.f64 	%fd61, %fd58, %fd59, %fd60;
	st.local.f64 	[%rd1+-16], %fd61;

$L__BB0_67:
	add.s32 	%r579, %r579, 2;
	setp.ne.s32 	%p63, %r579, 10;
	@%p63 bra 	$L__BB0_63;

	add.s32 	%r578, %r578, 1;
	setp.lt.u32 	%p64, %r578, 10;
	@%p64 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_70;

$L__BB0_69:
	mov.u64 	%rd417, source_positions;
	cvta.global.u64 	%rd412, %rd417;
	mov.u32 	%r507, 12;
	// begin inline asm
	call (%rd411), _rt_buffer_get_64, (%rd412, %r415, %r507, %rd264, %rd267, %rd267, %rd267);
	// end inline asm
	ld.f32 	%f769, [%rd411];
	ld.f32 	%f770, [%rd411+4];
	mul.ftz.f32 	%f771, %f770, %f770;
	fma.rn.ftz.f32 	%f772, %f769, %f769, %f771;
	ld.f32 	%f773, [%rd411+8];
	fma.rn.ftz.f32 	%f774, %f773, %f773, %f772;
	rsqrt.approx.ftz.f32 	%f775, %f774;
	mul.ftz.f32 	%f926, %f769, %f775;
	mul.ftz.f32 	%f927, %f775, %f770;
	mul.ftz.f32 	%f928, %f775, %f773;
	ld.global.u32 	%r508, [launch_dim+4];
	ld.global.u32 	%r509, [launch_dim];
	mul.lo.s32 	%r510, %r508, %r509;
	cvt.rn.f64.u32 	%fd62, %r510;
	rcp.rn.f64 	%fd63, %fd62;
	mul.ftz.f32 	%f776, %f911, %f927;
	fma.rn.ftz.f32 	%f777, %f910, %f926, %f776;
	fma.rn.ftz.f32 	%f921, %f912, %f928, %f777;
	abs.ftz.f32 	%f778, %f921;
	cvt.ftz.f64.f32 	%fd64, %f778;
	mul.f64 	%fd65, %fd63, %fd64;
	st.local.f64 	[%rd1+-16], %fd65;
	mov.f32 	%f929, 0f6C4ECB8F;

$L__BB0_70:
	ld.global.u32 	%r27, [direct_ray_type];
	mad.lo.s32 	%r511, %r570, %r3, %r1;
	add.s32 	%r512, %r511, %r571;
	st.local.u32 	[%rd1+-8], %r512;
	mov.u16 	%rs7, 0;
	cvt.u16.u64 	%rs8, %rd264;
	st.local.v2.u8 	[%rd1+4], {%rs8, %rs7};
	setp.gt.ftz.f32 	%p65, %f921, 0f00000000;
	selp.u16 	%rs9, 1, 0, %p65;
	st.local.u8 	[%rd1+-4], %rs9;
	@%p65 bra 	$L__BB0_72;

	mov.u64 	%rd424, twosided_flag;
	cvta.global.u64 	%rd419, %rd424;
	mov.u32 	%r514, 1;
	mov.u64 	%rd423, 0;
	// begin inline asm
	call (%rd418), _rt_buffer_get_64, (%rd419, %r514, %r514, %rd131, %rd423, %rd423, %rd423);
	// end inline asm
	ld.u8 	%rs10, [%rd418];
	setp.ne.s16 	%p66, %rs10, 1;
	@%p66 bra 	$L__BB0_84;

$L__BB0_72:
	mov.u64 	%rd431, twosided_flag;
	cvta.global.u64 	%rd426, %rd431;
	mov.u32 	%r516, 1;
	mov.u64 	%rd430, 0;
	// begin inline asm
	call (%rd425), _rt_buffer_get_64, (%rd426, %r516, %r516, %rd131, %rd430, %rd430, %rd430);
	// end inline asm
	ld.u8 	%rs11, [%rd425];
	setp.eq.s16 	%p67, %rs11, 3;
	@%p67 bra 	$L__BB0_84;

	ld.global.u32 	%r517, [top_object];
	mov.f32 	%f785, 0f38D1B717;
	mov.u32 	%r519, 255;
	mov.u32 	%r520, 0;
	mov.u32 	%r521, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r517, %f116, %f117, %f118, %f926, %f927, %f928, %r27, %f785, %f929, %r519, %r520, %rd135, %r521);
	// end inline asm
	ld.local.u8 	%rs12, [%rd1+5];
	setp.eq.s16 	%p68, %rs12, 0;
	@%p68 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f795, %f796}, [%rd1+8];
	ld.local.f32 	%f789, [%rd1+16];
	mov.u16 	%rs13, 0;
	st.local.u8 	[%rd1+5], %rs13;
	ld.global.u32 	%r522, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r522, %f795, %f796, %f789, %f926, %f927, %f928, %r27, %f785, %f929, %r519, %r520, %rd135, %r521);
	// end inline asm
	ld.local.u8 	%rs14, [%rd1+5];
	setp.eq.s16 	%p69, %rs14, 0;
	@%p69 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f805, %f806}, [%rd1+8];
	mov.u32 	%r530, 0;
	ld.local.f32 	%f799, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs13;
	ld.global.u32 	%r527, [top_object];
	mov.f32 	%f803, 0f38D1B717;
	mov.u32 	%r529, 255;
	mov.u32 	%r531, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r527, %f805, %f806, %f799, %f926, %f927, %f928, %r27, %f803, %f929, %r529, %r530, %rd135, %r531);
	// end inline asm
	ld.local.u8 	%rs16, [%rd1+5];
	setp.eq.s16 	%p70, %rs16, 0;
	@%p70 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f815, %f816}, [%rd1+8];
	ld.local.f32 	%f809, [%rd1+16];
	mov.u16 	%rs17, 0;
	st.local.u8 	[%rd1+5], %rs17;
	ld.global.u32 	%r532, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r532, %f815, %f816, %f809, %f926, %f927, %f928, %r27, %f803, %f929, %r529, %r530, %rd135, %r531);
	// end inline asm
	ld.local.u8 	%rs18, [%rd1+5];
	setp.eq.s16 	%p71, %rs18, 0;
	@%p71 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f825, %f826}, [%rd1+8];
	mov.u32 	%r540, 0;
	ld.local.f32 	%f819, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs17;
	ld.global.u32 	%r537, [top_object];
	mov.f32 	%f823, 0f38D1B717;
	mov.u32 	%r539, 255;
	mov.u32 	%r541, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r537, %f825, %f826, %f819, %f926, %f927, %f928, %r27, %f823, %f929, %r539, %r540, %rd135, %r541);
	// end inline asm
	ld.local.u8 	%rs20, [%rd1+5];
	setp.eq.s16 	%p72, %rs20, 0;
	@%p72 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f835, %f836}, [%rd1+8];
	ld.local.f32 	%f829, [%rd1+16];
	mov.u16 	%rs21, 0;
	st.local.u8 	[%rd1+5], %rs21;
	ld.global.u32 	%r542, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r542, %f835, %f836, %f829, %f926, %f927, %f928, %r27, %f823, %f929, %r539, %r540, %rd135, %r541);
	// end inline asm
	ld.local.u8 	%rs22, [%rd1+5];
	setp.eq.s16 	%p73, %rs22, 0;
	@%p73 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f845, %f846}, [%rd1+8];
	mov.u32 	%r550, 0;
	ld.local.f32 	%f839, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs21;
	ld.global.u32 	%r547, [top_object];
	mov.f32 	%f843, 0f38D1B717;
	mov.u32 	%r549, 255;
	mov.u32 	%r551, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r547, %f845, %f846, %f839, %f926, %f927, %f928, %r27, %f843, %f929, %r549, %r550, %rd135, %r551);
	// end inline asm
	ld.local.u8 	%rs24, [%rd1+5];
	setp.eq.s16 	%p74, %rs24, 0;
	@%p74 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f855, %f856}, [%rd1+8];
	ld.local.f32 	%f849, [%rd1+16];
	mov.u16 	%rs25, 0;
	st.local.u8 	[%rd1+5], %rs25;
	ld.global.u32 	%r552, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r552, %f855, %f856, %f849, %f926, %f927, %f928, %r27, %f843, %f929, %r549, %r550, %rd135, %r551);
	// end inline asm
	ld.local.u8 	%rs26, [%rd1+5];
	setp.eq.s16 	%p75, %rs26, 0;
	@%p75 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f865, %f866}, [%rd1+8];
	mov.u32 	%r560, 0;
	ld.local.f32 	%f859, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs25;
	ld.global.u32 	%r557, [top_object];
	mov.f32 	%f863, 0f38D1B717;
	mov.u32 	%r559, 255;
	mov.u32 	%r561, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r557, %f865, %f866, %f859, %f926, %f927, %f928, %r27, %f863, %f929, %r559, %r560, %rd135, %r561);
	// end inline asm
	ld.local.u8 	%rs28, [%rd1+5];
	setp.eq.s16 	%p76, %rs28, 0;
	@%p76 bra 	$L__BB0_84;

	ld.local.v2.f32 	{%f875, %f876}, [%rd1+8];
	ld.local.f32 	%f869, [%rd1+16];
	mov.u16 	%rs29, 0;
	st.local.u8 	[%rd1+5], %rs29;
	ld.global.u32 	%r562, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r562, %f875, %f876, %f869, %f926, %f927, %f928, %r27, %f863, %f929, %r559, %r560, %rd135, %r561);
	// end inline asm
	ld.local.u8 	%rs30, [%rd1+5];
	setp.eq.s16 	%p77, %rs30, 0;
	@%p77 bra 	$L__BB0_84;

	st.local.u8 	[%rd1+5], %rs29;
	bra.uni 	$L__BB0_84;

$L__BB0_46:
	// begin inline asm
	call (%rd283), _rt_buffer_get_64, (%rd263, %r421, %r422, %rd264, %rd281, %rd281, %rd281);
	// end inline asm
	ld.u32 	%r426, [%rd283];
	setp.eq.s32 	%p38, %r426, 3;
	@%p38 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_47;

$L__BB0_59:
	mov.u64 	%rd355, source_rotations;
	cvta.global.u64 	%rd332, %rd355;
	mov.u32 	%r454, 1;
	mov.u32 	%r455, 12;
	mov.u64 	%rd354, 0;
	// begin inline asm
	call (%rd331), _rt_buffer_get_64, (%rd332, %r454, %r455, %rd264, %rd354, %rd354, %rd354);
	// end inline asm
	ld.f32 	%f503, [%rd331+8];
	cos.approx.ftz.f32 	%f504, %f503;
	ld.f32 	%f505, [%rd331+4];
	cos.approx.ftz.f32 	%f506, %f505;
	mul.ftz.f32 	%f507, %f504, %f506;
	sin.approx.ftz.f32 	%f508, %f505;
	mul.ftz.f32 	%f509, %f504, %f508;
	ld.f32 	%f510, [%rd331];
	sin.approx.ftz.f32 	%f511, %f510;
	mul.ftz.f32 	%f512, %f509, %f511;
	sin.approx.ftz.f32 	%f513, %f503;
	cos.approx.ftz.f32 	%f514, %f510;
	mul.ftz.f32 	%f515, %f513, %f514;
	sub.ftz.f32 	%f516, %f512, %f515;
	mul.ftz.f32 	%f517, %f509, %f514;
	fma.rn.ftz.f32 	%f518, %f511, %f513, %f517;
	mul.ftz.f32 	%f519, %f506, %f513;
	mul.ftz.f32 	%f520, %f508, %f513;
	mul.ftz.f32 	%f521, %f504, %f514;
	fma.rn.ftz.f32 	%f522, %f511, %f520, %f521;
	mul.ftz.f32 	%f523, %f520, %f514;
	mul.ftz.f32 	%f524, %f504, %f511;
	sub.ftz.f32 	%f525, %f523, %f524;
	mul.ftz.f32 	%f526, %f506, %f511;
	mul.ftz.f32 	%f527, %f506, %f514;
	ld.local.u32 	%r456, [%rd1];
	mad.lo.s32 	%r457, %r456, 1664525, 1013904223;
	and.b32  	%r458, %r457, 16777215;
	cvt.rn.f32.u32 	%f528, %r458;
	mov.f32 	%f529, 0f4B800000;
	div.approx.ftz.f32 	%f530, %f528, %f529;
	mad.lo.s32 	%r459, %r457, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r459;
	and.b32  	%r460, %r459, 16777215;
	cvt.rn.f32.u32 	%f531, %r460;
	div.approx.ftz.f32 	%f532, %f531, %f529;
	add.ftz.f32 	%f533, %f530, 0fBF000000;
	add.ftz.f32 	%f534, %f532, 0fBF000000;
	mov.u64 	%rd356, source_widths;
	cvta.global.u64 	%rd338, %rd356;
	mov.u32 	%r453, 8;
	// begin inline asm
	call (%rd337), _rt_buffer_get_64, (%rd338, %r454, %r453, %rd264, %rd354, %rd354, %rd354);
	// end inline asm
	ld.f32 	%f535, [%rd337];
	mul.ftz.f32 	%f536, %f533, %f535;
	// begin inline asm
	call (%rd343), _rt_buffer_get_64, (%rd338, %r454, %r453, %rd264, %rd354, %rd354, %rd354);
	// end inline asm
	ld.f32 	%f537, [%rd343+4];
	mul.ftz.f32 	%f538, %f534, %f537;
	mul.ftz.f32 	%f539, %f516, %f538;
	fma.rn.ftz.f32 	%f540, %f507, %f536, %f539;
	fma.rn.ftz.f32 	%f541, %f518, 0f00000000, %f540;
	add.ftz.f32 	%f542, %f541, 0f00000000;
	mul.ftz.f32 	%f543, %f522, %f538;
	fma.rn.ftz.f32 	%f544, %f519, %f536, %f543;
	fma.rn.ftz.f32 	%f545, %f525, 0f00000000, %f544;
	add.ftz.f32 	%f546, %f545, 0f00000000;
	mul.ftz.f32 	%f547, %f508, %f536;
	mul.ftz.f32 	%f548, %f526, %f538;
	sub.ftz.f32 	%f549, %f548, %f547;
	fma.rn.ftz.f32 	%f550, %f527, 0f00000000, %f549;
	add.ftz.f32 	%f551, %f550, 0f00000000;
	mul.ftz.f32 	%f552, %f516, 0f00000000;
	fma.rn.ftz.f32 	%f553, %f507, 0f00000000, %f552;
	add.ftz.f32 	%f554, %f518, %f553;
	add.ftz.f32 	%f154, %f554, 0f00000000;
	mul.ftz.f32 	%f555, %f522, 0f00000000;
	fma.rn.ftz.f32 	%f556, %f519, 0f00000000, %f555;
	add.ftz.f32 	%f557, %f525, %f556;
	add.ftz.f32 	%f155, %f557, 0f00000000;
	mul.ftz.f32 	%f558, %f508, 0f00000000;
	mul.ftz.f32 	%f559, %f526, 0f00000000;
	sub.ftz.f32 	%f560, %f559, %f558;
	add.ftz.f32 	%f561, %f560, %f527;
	add.ftz.f32 	%f156, %f561, 0f00000000;
	mov.u64 	%rd357, source_positions;
	cvta.global.u64 	%rd350, %rd357;
	// begin inline asm
	call (%rd349), _rt_buffer_get_64, (%rd350, %r454, %r455, %rd264, %rd354, %rd354, %rd354);
	// end inline asm
	ld.f32 	%f562, [%rd349];
	add.ftz.f32 	%f563, %f562, %f542;
	ld.f32 	%f564, [%rd349+4];
	add.ftz.f32 	%f565, %f564, %f546;
	ld.f32 	%f566, [%rd349+8];
	add.ftz.f32 	%f567, %f566, %f551;
	sub.ftz.f32 	%f926, %f563, %f116;
	sub.ftz.f32 	%f927, %f565, %f117;
	sub.ftz.f32 	%f928, %f567, %f118;
	mul.ftz.f32 	%f568, %f155, %f927;
	fma.rn.ftz.f32 	%f569, %f154, %f926, %f568;
	fma.rn.ftz.f32 	%f570, %f156, %f928, %f569;
	setp.gt.ftz.f32 	%p45, %f570, 0f00000000;
	@%p45 bra 	$L__BB0_84;

	mul.ftz.f32 	%f571, %f927, %f927;
	fma.rn.ftz.f32 	%f572, %f926, %f926, %f571;
	fma.rn.ftz.f32 	%f573, %f928, %f928, %f572;
	sqrt.approx.ftz.f32 	%f929, %f573;
	rsqrt.approx.ftz.f32 	%f574, %f573;
	mul.ftz.f32 	%f926, %f926, %f574;
	mul.ftz.f32 	%f927, %f927, %f574;
	mul.ftz.f32 	%f928, %f928, %f574;
	ld.global.u32 	%r465, [launch_dim+4];
	ld.global.u32 	%r466, [launch_dim];
	mul.lo.s32 	%r467, %r465, %r466;
	cvt.rn.f64.u32 	%fd18, %r467;
	rcp.rn.f64 	%fd19, %fd18;
	mul.ftz.f32 	%f575, %f911, %f927;
	fma.rn.ftz.f32 	%f576, %f910, %f926, %f575;
	fma.rn.ftz.f32 	%f921, %f912, %f928, %f576;
	abs.ftz.f32 	%f577, %f921;
	cvt.ftz.f64.f32 	%fd20, %f577;
	mul.f64 	%fd21, %fd19, %fd20;
	mul.ftz.f32 	%f578, %f155, %f927;
	fma.rn.ftz.f32 	%f579, %f154, %f926, %f578;
	fma.rn.ftz.f32 	%f580, %f156, %f928, %f579;
	abs.ftz.f32 	%f581, %f580;
	cvt.ftz.f64.f32 	%fd22, %f581;
	mul.f64 	%fd23, %fd21, %fd22;
	mul.ftz.f32 	%f582, %f929, %f929;
	cvt.ftz.f64.f32 	%fd24, %f582;
	div.rn.f64 	%fd25, %fd23, %fd24;
	// begin inline asm
	call (%rd358), _rt_buffer_get_64, (%rd338, %r454, %r453, %rd264, %rd354, %rd354, %rd354);
	// end inline asm
	ld.f32 	%f583, [%rd358];
	cvt.ftz.f64.f32 	%fd26, %f583;
	mul.f64 	%fd27, %fd25, %fd26;
	// begin inline asm
	call (%rd364), _rt_buffer_get_64, (%rd338, %r454, %r453, %rd264, %rd354, %rd354, %rd354);
	// end inline asm
	ld.f32 	%f584, [%rd364+4];
	cvt.ftz.f64.f32 	%fd28, %f584;
	mul.f64 	%fd29, %fd27, %fd28;
	div.rn.f64 	%fd30, %fd29, 0d400921FB54442D18;
	st.local.f64 	[%rd1+-16], %fd30;
	bra.uni 	$L__BB0_70;

$L__BB0_47:
	mov.u32 	%r427, 1;
	mov.u32 	%r428, 4;
	mov.u64 	%rd295, 0;
	// begin inline asm
	call (%rd290), _rt_buffer_get_64, (%rd263, %r427, %r428, %rd264, %rd295, %rd295, %rd295);
	// end inline asm
	ld.u32 	%r429, [%rd290];
	setp.eq.s32 	%p39, %r429, 4;
	@%p39 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	mov.u64 	%rd303, source_rotations;
	cvta.global.u64 	%rd298, %rd303;
	mov.u32 	%r431, 12;
	// begin inline asm
	call (%rd297), _rt_buffer_get_64, (%rd298, %r427, %r431, %rd264, %rd295, %rd295, %rd295);
	// end inline asm
	ld.f32 	%f424, [%rd297+8];
	cos.approx.ftz.f32 	%f425, %f424;
	ld.f32 	%f426, [%rd297+4];
	cos.approx.ftz.f32 	%f427, %f426;
	mul.ftz.f32 	%f124, %f425, %f427;
	sin.approx.ftz.f32 	%f125, %f426;
	mul.ftz.f32 	%f428, %f425, %f125;
	ld.f32 	%f429, [%rd297];
	sin.approx.ftz.f32 	%f430, %f429;
	mul.ftz.f32 	%f431, %f428, %f430;
	sin.approx.ftz.f32 	%f432, %f424;
	cos.approx.ftz.f32 	%f433, %f429;
	mul.ftz.f32 	%f434, %f432, %f433;
	sub.ftz.f32 	%f126, %f431, %f434;
	mul.ftz.f32 	%f435, %f428, %f433;
	fma.rn.ftz.f32 	%f127, %f430, %f432, %f435;
	mul.ftz.f32 	%f128, %f427, %f432;
	mul.ftz.f32 	%f436, %f125, %f432;
	mul.ftz.f32 	%f437, %f425, %f433;
	fma.rn.ftz.f32 	%f129, %f430, %f436, %f437;
	mul.ftz.f32 	%f438, %f436, %f433;
	mul.ftz.f32 	%f439, %f425, %f430;
	sub.ftz.f32 	%f130, %f438, %f439;
	mul.ftz.f32 	%f131, %f427, %f430;
	mul.ftz.f32 	%f132, %f427, %f433;
	ld.local.u32 	%r432, [%rd1];
	mad.lo.s32 	%r433, %r432, 1664525, 1013904223;
	and.b32  	%r434, %r433, 16777215;
	cvt.rn.f32.u32 	%f440, %r434;
	mov.f32 	%f441, 0f4B800000;
	div.approx.ftz.f32 	%f442, %f440, %f441;
	mad.lo.s32 	%r435, %r433, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r435;
	and.b32  	%r436, %r435, 16777215;
	cvt.rn.f32.u32 	%f443, %r436;
	div.approx.ftz.f32 	%f444, %f443, %f441;
	fma.rn.ftz.f32 	%f133, %f442, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f134, %f444, 0f40000000, 0fBF800000;
	neg.ftz.f32 	%f919, %f134;
	setp.gt.ftz.f32 	%p40, %f133, %f919;
	@%p40 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_50;

$L__BB0_54:
	setp.gt.ftz.f32 	%p43, %f133, %f134;
	@%p43 bra 	$L__BB0_56;
	bra.uni 	$L__BB0_55;

$L__BB0_56:
	div.approx.ftz.f32 	%f920, %f134, %f133;
	mov.f32 	%f919, %f133;
	bra.uni 	$L__BB0_57;

$L__BB0_48:
	mul.ftz.f32 	%f422, %f911, %f927;
	fma.rn.ftz.f32 	%f423, %f910, %f926, %f422;
	fma.rn.ftz.f32 	%f921, %f912, %f928, %f423;
	bra.uni 	$L__BB0_70;

$L__BB0_50:
	setp.lt.ftz.f32 	%p41, %f133, %f134;
	@%p41 bra 	$L__BB0_53;
	bra.uni 	$L__BB0_51;

$L__BB0_53:
	neg.ftz.f32 	%f919, %f133;
	div.approx.ftz.f32 	%f448, %f134, %f133;
	add.ftz.f32 	%f920, %f448, 0f40800000;
	bra.uni 	$L__BB0_57;

$L__BB0_55:
	div.approx.ftz.f32 	%f449, %f133, %f134;
	mov.f32 	%f450, 0f40000000;
	sub.ftz.f32 	%f920, %f450, %f449;
	mov.f32 	%f919, %f134;
	bra.uni 	$L__BB0_57;

$L__BB0_51:
	setp.eq.ftz.f32 	%p42, %f134, 0f00000000;
	mov.f32 	%f920, 0f00000000;
	@%p42 bra 	$L__BB0_57;

	div.approx.ftz.f32 	%f446, %f133, %f134;
	mov.f32 	%f447, 0f40C00000;
	sub.ftz.f32 	%f920, %f447, %f446;

$L__BB0_57:
	cvt.ftz.f64.f32 	%fd4, %f920;
	mul.f64 	%fd5, %fd4, 0d3FE921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f451, %fd5;
	cos.approx.ftz.f32 	%f452, %f451;
	mul.ftz.f32 	%f453, %f919, %f452;
	sin.approx.ftz.f32 	%f454, %f451;
	mul.ftz.f32 	%f455, %f919, %f454;
	mul.ftz.f32 	%f456, %f126, %f455;
	fma.rn.ftz.f32 	%f457, %f124, %f453, %f456;
	fma.rn.ftz.f32 	%f458, %f127, 0f00000000, %f457;
	add.ftz.f32 	%f459, %f458, 0f00000000;
	mul.ftz.f32 	%f460, %f129, %f455;
	fma.rn.ftz.f32 	%f461, %f128, %f453, %f460;
	fma.rn.ftz.f32 	%f462, %f130, 0f00000000, %f461;
	add.ftz.f32 	%f463, %f462, 0f00000000;
	mul.ftz.f32 	%f464, %f125, %f453;
	mul.ftz.f32 	%f465, %f131, %f455;
	sub.ftz.f32 	%f466, %f465, %f464;
	fma.rn.ftz.f32 	%f467, %f132, 0f00000000, %f466;
	add.ftz.f32 	%f468, %f467, 0f00000000;
	mul.ftz.f32 	%f469, %f126, 0f00000000;
	fma.rn.ftz.f32 	%f470, %f124, 0f00000000, %f469;
	add.ftz.f32 	%f471, %f127, %f470;
	add.ftz.f32 	%f143, %f471, 0f00000000;
	mul.ftz.f32 	%f472, %f129, 0f00000000;
	fma.rn.ftz.f32 	%f473, %f128, 0f00000000, %f472;
	add.ftz.f32 	%f474, %f130, %f473;
	add.ftz.f32 	%f144, %f474, 0f00000000;
	mul.ftz.f32 	%f475, %f131, 0f00000000;
	mul.ftz.f32 	%f476, %f125, 0f00000000;
	sub.ftz.f32 	%f477, %f475, %f476;
	add.ftz.f32 	%f478, %f477, %f132;
	add.ftz.f32 	%f145, %f478, 0f00000000;
	mov.u64 	%rd316, source_widths;
	cvta.global.u64 	%rd305, %rd316;
	mov.u32 	%r439, 1;
	mov.u32 	%r438, 8;
	mov.u64 	%rd315, 0;
	// begin inline asm
	call (%rd304), _rt_buffer_get_64, (%rd305, %r439, %r438, %rd264, %rd315, %rd315, %rd315);
	// end inline asm
	ld.f32 	%f479, [%rd304];
	mov.u64 	%rd317, source_positions;
	cvta.global.u64 	%rd311, %rd317;
	mov.u32 	%r440, 12;
	// begin inline asm
	call (%rd310), _rt_buffer_get_64, (%rd311, %r439, %r440, %rd264, %rd315, %rd315, %rd315);
	// end inline asm
	ld.f32 	%f480, [%rd310];
	fma.rn.ftz.f32 	%f481, %f479, %f459, %f480;
	ld.f32 	%f482, [%rd310+4];
	fma.rn.ftz.f32 	%f483, %f479, %f463, %f482;
	ld.f32 	%f484, [%rd310+8];
	fma.rn.ftz.f32 	%f485, %f479, %f468, %f484;
	sub.ftz.f32 	%f926, %f481, %f116;
	sub.ftz.f32 	%f927, %f483, %f117;
	sub.ftz.f32 	%f928, %f485, %f118;
	mul.ftz.f32 	%f486, %f144, %f927;
	fma.rn.ftz.f32 	%f487, %f143, %f926, %f486;
	fma.rn.ftz.f32 	%f488, %f145, %f928, %f487;
	setp.gt.ftz.f32 	%p44, %f488, 0f00000000;
	@%p44 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_58;

$L__BB0_84:
	cvt.u32.u64 	%r567, %rd264;
	add.s32 	%r577, %r567, 1;
	ld.global.u32 	%r568, [Nsources];
	setp.lt.u32 	%p78, %r577, %r568;
	@%p78 bra 	$L__BB0_43;

$L__BB0_85:
	add.s32 	%r571, %r571, 1;
	setp.lt.s32 	%p79, %r571, %r3;
	@%p79 bra 	$L__BB0_4;

$L__BB0_86:
	add.s32 	%r570, %r570, 1;
	setp.lt.s32 	%p80, %r570, %r4;
	@%p80 bra 	$L__BB0_2;

$L__BB0_87:
	ret;

}
	// .globl	_Z14diffuse_raygenv
.visible .entry _Z14diffuse_raygenv()
{
	.local .align 8 .b8 	__local_depot1[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<87>;
	.reg .b16 	%rs<55>;
	.reg .f32 	%f<796>;
	.reg .b32 	%r<562>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<280>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd7, %SPL, 0;
	ld.global.u32 	%r30, [launch_dim+4];
	ld.global.u32 	%r31, [launch_dim];
	mul.lo.s32 	%r1, %r30, %r31;
	ld.global.u32 	%r32, [launch_index+4];
	ld.global.u32 	%r33, [launch_index];
	mad.lo.s32 	%r34, %r32, %r31, %r33;
	ld.global.u32 	%r35, [launch_index+8];
	mad.lo.s32 	%r36, %r35, %r1, %r34;
	ld.global.u32 	%r37, [random_seed];
	shl.b32 	%r38, %r37, 4;
	add.s32 	%r39, %r38, -1556008596;
	add.s32 	%r40, %r37, -1640531527;
	shr.u32 	%r41, %r37, 5;
	add.s32 	%r42, %r41, -939442524;
	xor.b32  	%r43, %r39, %r40;
	xor.b32  	%r44, %r43, %r42;
	add.s32 	%r45, %r36, %r44;
	shl.b32 	%r46, %r45, 4;
	add.s32 	%r47, %r46, -1383041155;
	add.s32 	%r48, %r45, -1640531527;
	xor.b32  	%r49, %r47, %r48;
	shr.u32 	%r50, %r45, 5;
	add.s32 	%r51, %r50, 2123724318;
	xor.b32  	%r52, %r49, %r51;
	add.s32 	%r53, %r52, %r37;
	shl.b32 	%r54, %r53, 4;
	add.s32 	%r55, %r54, -1556008596;
	add.s32 	%r56, %r53, 1013904242;
	shr.u32 	%r57, %r53, 5;
	add.s32 	%r58, %r57, -939442524;
	xor.b32  	%r59, %r55, %r56;
	xor.b32  	%r60, %r59, %r58;
	add.s32 	%r61, %r60, %r45;
	shl.b32 	%r62, %r61, 4;
	add.s32 	%r63, %r62, -1383041155;
	add.s32 	%r64, %r61, 1013904242;
	xor.b32  	%r65, %r63, %r64;
	shr.u32 	%r66, %r61, 5;
	add.s32 	%r67, %r66, 2123724318;
	xor.b32  	%r68, %r65, %r67;
	add.s32 	%r69, %r68, %r53;
	shl.b32 	%r70, %r69, 4;
	add.s32 	%r71, %r70, -1556008596;
	add.s32 	%r72, %r69, -626627285;
	shr.u32 	%r73, %r69, 5;
	add.s32 	%r74, %r73, -939442524;
	xor.b32  	%r75, %r71, %r72;
	xor.b32  	%r76, %r75, %r74;
	add.s32 	%r77, %r76, %r61;
	shl.b32 	%r78, %r77, 4;
	add.s32 	%r79, %r78, -1383041155;
	add.s32 	%r80, %r77, -626627285;
	xor.b32  	%r81, %r79, %r80;
	shr.u32 	%r82, %r77, 5;
	add.s32 	%r83, %r82, 2123724318;
	xor.b32  	%r84, %r81, %r83;
	add.s32 	%r85, %r84, %r69;
	shl.b32 	%r86, %r85, 4;
	add.s32 	%r87, %r86, -1556008596;
	add.s32 	%r88, %r85, 2027808484;
	shr.u32 	%r89, %r85, 5;
	add.s32 	%r90, %r89, -939442524;
	xor.b32  	%r91, %r87, %r88;
	xor.b32  	%r92, %r91, %r90;
	add.s32 	%r93, %r92, %r77;
	shl.b32 	%r94, %r93, 4;
	add.s32 	%r95, %r94, -1383041155;
	add.s32 	%r96, %r93, 2027808484;
	xor.b32  	%r97, %r95, %r96;
	shr.u32 	%r98, %r93, 5;
	add.s32 	%r99, %r98, 2123724318;
	xor.b32  	%r100, %r97, %r99;
	add.s32 	%r101, %r100, %r85;
	shl.b32 	%r102, %r101, 4;
	add.s32 	%r103, %r102, -1556008596;
	add.s32 	%r104, %r101, 387276957;
	shr.u32 	%r105, %r101, 5;
	add.s32 	%r106, %r105, -939442524;
	xor.b32  	%r107, %r103, %r104;
	xor.b32  	%r108, %r107, %r106;
	add.s32 	%r109, %r108, %r93;
	shl.b32 	%r110, %r109, 4;
	add.s32 	%r111, %r110, -1383041155;
	add.s32 	%r112, %r109, 387276957;
	xor.b32  	%r113, %r111, %r112;
	shr.u32 	%r114, %r109, 5;
	add.s32 	%r115, %r114, 2123724318;
	xor.b32  	%r116, %r113, %r115;
	add.s32 	%r117, %r116, %r101;
	shl.b32 	%r118, %r117, 4;
	add.s32 	%r119, %r118, -1556008596;
	add.s32 	%r120, %r117, -1253254570;
	shr.u32 	%r121, %r117, 5;
	add.s32 	%r122, %r121, -939442524;
	xor.b32  	%r123, %r119, %r120;
	xor.b32  	%r124, %r123, %r122;
	add.s32 	%r125, %r124, %r109;
	shl.b32 	%r126, %r125, 4;
	add.s32 	%r127, %r126, -1383041155;
	add.s32 	%r128, %r125, -1253254570;
	xor.b32  	%r129, %r127, %r128;
	shr.u32 	%r130, %r125, 5;
	add.s32 	%r131, %r130, 2123724318;
	xor.b32  	%r132, %r129, %r131;
	add.s32 	%r133, %r132, %r117;
	shl.b32 	%r134, %r133, 4;
	add.s32 	%r135, %r134, -1556008596;
	add.s32 	%r136, %r133, 1401181199;
	shr.u32 	%r137, %r133, 5;
	add.s32 	%r138, %r137, -939442524;
	xor.b32  	%r139, %r135, %r136;
	xor.b32  	%r140, %r139, %r138;
	add.s32 	%r141, %r140, %r125;
	shl.b32 	%r142, %r141, 4;
	add.s32 	%r143, %r142, -1383041155;
	add.s32 	%r144, %r141, 1401181199;
	xor.b32  	%r145, %r143, %r144;
	shr.u32 	%r146, %r141, 5;
	add.s32 	%r147, %r146, 2123724318;
	xor.b32  	%r148, %r145, %r147;
	add.s32 	%r149, %r148, %r133;
	shl.b32 	%r150, %r149, 4;
	add.s32 	%r151, %r150, -1556008596;
	add.s32 	%r152, %r149, -239350328;
	shr.u32 	%r153, %r149, 5;
	add.s32 	%r154, %r153, -939442524;
	xor.b32  	%r155, %r151, %r152;
	xor.b32  	%r156, %r155, %r154;
	add.s32 	%r157, %r156, %r141;
	shl.b32 	%r158, %r157, 4;
	add.s32 	%r159, %r158, -1383041155;
	add.s32 	%r160, %r157, -239350328;
	xor.b32  	%r161, %r159, %r160;
	shr.u32 	%r162, %r157, 5;
	add.s32 	%r163, %r162, 2123724318;
	xor.b32  	%r164, %r161, %r163;
	add.s32 	%r165, %r164, %r149;
	shl.b32 	%r166, %r165, 4;
	add.s32 	%r167, %r166, -1556008596;
	add.s32 	%r168, %r165, -1879881855;
	shr.u32 	%r169, %r165, 5;
	add.s32 	%r170, %r169, -939442524;
	xor.b32  	%r171, %r167, %r168;
	xor.b32  	%r172, %r171, %r170;
	add.s32 	%r173, %r172, %r157;
	shl.b32 	%r174, %r173, 4;
	add.s32 	%r175, %r174, -1383041155;
	add.s32 	%r176, %r173, -1879881855;
	xor.b32  	%r177, %r175, %r176;
	shr.u32 	%r178, %r173, 5;
	add.s32 	%r179, %r178, 2123724318;
	xor.b32  	%r180, %r177, %r179;
	add.s32 	%r181, %r180, %r165;
	shl.b32 	%r182, %r181, 4;
	add.s32 	%r183, %r182, -1556008596;
	add.s32 	%r184, %r181, 774553914;
	shr.u32 	%r185, %r181, 5;
	add.s32 	%r186, %r185, -939442524;
	xor.b32  	%r187, %r183, %r184;
	xor.b32  	%r188, %r187, %r186;
	add.s32 	%r189, %r188, %r173;
	shl.b32 	%r190, %r189, 4;
	add.s32 	%r191, %r190, -1383041155;
	add.s32 	%r192, %r189, 774553914;
	xor.b32  	%r193, %r191, %r192;
	shr.u32 	%r194, %r189, 5;
	add.s32 	%r195, %r194, 2123724318;
	xor.b32  	%r196, %r193, %r195;
	add.s32 	%r197, %r196, %r181;
	shl.b32 	%r198, %r197, 4;
	add.s32 	%r199, %r198, -1556008596;
	add.s32 	%r200, %r197, -865977613;
	shr.u32 	%r201, %r197, 5;
	add.s32 	%r202, %r201, -939442524;
	xor.b32  	%r203, %r199, %r200;
	xor.b32  	%r204, %r203, %r202;
	add.s32 	%r205, %r204, %r189;
	shl.b32 	%r206, %r205, 4;
	add.s32 	%r207, %r206, -1383041155;
	add.s32 	%r208, %r205, -865977613;
	xor.b32  	%r209, %r207, %r208;
	shr.u32 	%r210, %r205, 5;
	add.s32 	%r211, %r210, 2123724318;
	xor.b32  	%r212, %r209, %r211;
	add.s32 	%r213, %r212, %r197;
	shl.b32 	%r214, %r213, 4;
	add.s32 	%r215, %r214, -1556008596;
	add.s32 	%r216, %r213, 1788458156;
	shr.u32 	%r217, %r213, 5;
	add.s32 	%r218, %r217, -939442524;
	xor.b32  	%r219, %r215, %r216;
	xor.b32  	%r220, %r219, %r218;
	add.s32 	%r221, %r220, %r205;
	shl.b32 	%r222, %r221, 4;
	add.s32 	%r223, %r222, -1383041155;
	add.s32 	%r224, %r221, 1788458156;
	xor.b32  	%r225, %r223, %r224;
	shr.u32 	%r226, %r221, 5;
	add.s32 	%r227, %r226, 2123724318;
	xor.b32  	%r228, %r225, %r227;
	add.s32 	%r229, %r228, %r213;
	shl.b32 	%r230, %r229, 4;
	add.s32 	%r231, %r230, -1556008596;
	add.s32 	%r232, %r229, 147926629;
	shr.u32 	%r233, %r229, 5;
	add.s32 	%r234, %r233, -939442524;
	xor.b32  	%r235, %r231, %r232;
	xor.b32  	%r236, %r235, %r234;
	add.s32 	%r237, %r236, %r221;
	shl.b32 	%r238, %r237, 4;
	add.s32 	%r239, %r238, -1383041155;
	add.s32 	%r240, %r237, 147926629;
	xor.b32  	%r241, %r239, %r240;
	shr.u32 	%r242, %r237, 5;
	add.s32 	%r243, %r242, 2123724318;
	xor.b32  	%r244, %r241, %r243;
	add.s32 	%r245, %r244, %r229;
	shl.b32 	%r246, %r245, 4;
	add.s32 	%r247, %r246, -1556008596;
	add.s32 	%r248, %r245, -1492604898;
	shr.u32 	%r249, %r245, 5;
	add.s32 	%r250, %r249, -939442524;
	xor.b32  	%r251, %r247, %r248;
	xor.b32  	%r252, %r251, %r250;
	add.s32 	%r253, %r252, %r237;
	shl.b32 	%r254, %r253, 4;
	add.s32 	%r255, %r254, -1383041155;
	add.s32 	%r256, %r253, -1492604898;
	xor.b32  	%r257, %r255, %r256;
	shr.u32 	%r258, %r253, 5;
	add.s32 	%r259, %r258, 2123724318;
	xor.b32  	%r260, %r257, %r259;
	add.s32 	%r261, %r260, %r245;
	shl.b32 	%r262, %r261, 4;
	add.s32 	%r263, %r262, -1556008596;
	add.s32 	%r264, %r261, 1161830871;
	shr.u32 	%r265, %r261, 5;
	add.s32 	%r266, %r265, -939442524;
	xor.b32  	%r267, %r263, %r264;
	xor.b32  	%r268, %r267, %r266;
	add.s32 	%r269, %r268, %r253;
	shl.b32 	%r270, %r269, 4;
	add.s32 	%r271, %r270, -1383041155;
	add.s32 	%r272, %r269, 1161830871;
	xor.b32  	%r273, %r271, %r272;
	shr.u32 	%r274, %r269, 5;
	add.s32 	%r275, %r274, 2123724318;
	xor.b32  	%r276, %r273, %r275;
	add.s32 	%r277, %r276, %r261;
	shl.b32 	%r278, %r277, 4;
	add.s32 	%r279, %r278, -1556008596;
	add.s32 	%r280, %r277, -478700656;
	shr.u32 	%r281, %r277, 5;
	add.s32 	%r282, %r281, -939442524;
	xor.b32  	%r283, %r279, %r280;
	xor.b32  	%r284, %r283, %r282;
	add.s32 	%r285, %r284, %r269;
	add.s64 	%rd1, %rd7, 16;
	st.local.u32 	[%rd7+16], %r285;
	ld.global.u32 	%r286, [launch_offset];
	add.s32 	%r2, %r35, %r286;
	ld.global.u32 	%r287, [launch_face];
	setp.eq.s32 	%p1, %r287, 0;
	@%p1 bra 	$L__BB1_1;
	bra.uni 	$L__BB1_2;

$L__BB1_1:
	cvt.u64.u32 	%rd10, %r2;
	mov.u64 	%rd14, twosided_flag;
	cvta.global.u64 	%rd9, %rd14;
	mov.u32 	%r289, 1;
	mov.u64 	%rd13, 0;
	// begin inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r289, %r289, %rd10, %rd13, %rd13, %rd13);
	// end inline asm
	ld.u8 	%rs4, [%rd8];
	setp.eq.s16 	%p2, %rs4, 0;
	@%p2 bra 	$L__BB1_79;

$L__BB1_2:
	cvt.u64.u32 	%rd137, %r2;
	mov.u64 	%rd141, primitiveID;
	cvta.global.u64 	%rd16, %rd141;
	mov.u32 	%r330, 1;
	mov.u32 	%r327, 4;
	mov.u64 	%rd140, 0;
	// begin inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r330, %r327, %rd137, %rd140, %rd140, %rd140);
	// end inline asm
	ld.u32 	%r3, [%rd15];
	mov.u64 	%rd142, primitive_type;
	cvta.global.u64 	%rd22, %rd142;
	// begin inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r330, %r327, %rd137, %rd140, %rd140, %rd140);
	// end inline asm
	ld.u32 	%r4, [%rd21];
	mov.u64 	%rd143, uvID;
	cvta.global.u64 	%rd28, %rd143;
	// begin inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r330, %r327, %rd137, %rd140, %rd140, %rd140);
	// end inline asm
	ld.u32 	%rd3, [%rd27];
	mov.u64 	%rd144, transform_matrix;
	cvta.global.u64 	%rd34, %rd144;
	mov.u32 	%r326, 2;
	// begin inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd140, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f1, [%rd33];
	mov.u64 	%rd41, 1;
	// begin inline asm
	call (%rd39), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd41, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f2, [%rd39];
	mov.u64 	%rd47, 2;
	// begin inline asm
	call (%rd45), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd47, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f3, [%rd45];
	mov.u64 	%rd53, 3;
	// begin inline asm
	call (%rd51), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd53, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f4, [%rd51];
	mov.u64 	%rd59, 4;
	// begin inline asm
	call (%rd57), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd59, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f5, [%rd57];
	mov.u64 	%rd65, 5;
	// begin inline asm
	call (%rd63), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd65, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f6, [%rd63];
	mov.u64 	%rd71, 6;
	// begin inline asm
	call (%rd69), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd71, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f7, [%rd69];
	mov.u64 	%rd77, 7;
	// begin inline asm
	call (%rd75), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd77, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f8, [%rd75];
	mov.u64 	%rd83, 8;
	// begin inline asm
	call (%rd81), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd83, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f9, [%rd81];
	mov.u64 	%rd89, 9;
	// begin inline asm
	call (%rd87), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd89, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f10, [%rd87];
	mov.u64 	%rd95, 10;
	// begin inline asm
	call (%rd93), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd95, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f11, [%rd93];
	mov.u64 	%rd101, 11;
	// begin inline asm
	call (%rd99), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd101, %rd137, %rd140, %rd140);
	// end inline asm
	ld.f32 	%f12, [%rd99];
	mov.u64 	%rd107, 12;
	// begin inline asm
	call (%rd105), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd107, %rd137, %rd140, %rd140);
	// end inline asm
	mov.u64 	%rd113, 13;
	// begin inline asm
	call (%rd111), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd113, %rd137, %rd140, %rd140);
	// end inline asm
	mov.u64 	%rd119, 14;
	// begin inline asm
	call (%rd117), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd119, %rd137, %rd140, %rd140);
	// end inline asm
	mov.u64 	%rd125, 15;
	// begin inline asm
	call (%rd123), _rt_buffer_get_64, (%rd34, %r326, %r327, %rd125, %rd137, %rd140, %rd140);
	// end inline asm
	mov.u64 	%rd145, object_subdivisions;
	cvta.global.u64 	%rd130, %rd145;
	mov.u32 	%r331, 8;
	// begin inline asm
	call (%rd129), _rt_buffer_get_64, (%rd130, %r330, %r331, %rd137, %rd140, %rd140, %rd140);
	// end inline asm
	ld.u32 	%r5, [%rd129];
	// begin inline asm
	call (%rd135), _rt_buffer_get_64, (%rd130, %r330, %r331, %rd137, %rd140, %rd140, %rd140);
	// end inline asm
	ld.u32 	%r6, [%rd135+4];
	setp.lt.s32 	%p3, %r6, 1;
	@%p3 bra 	$L__BB1_79;

	mul.ftz.f32 	%f142, %f2, 0f00000000;
	fma.rn.ftz.f32 	%f143, %f1, 0f00000000, %f142;
	mul.ftz.f32 	%f13, %f3, 0f00000000;
	add.ftz.f32 	%f144, %f143, %f13;
	add.ftz.f32 	%f14, %f4, %f144;
	mul.ftz.f32 	%f145, %f6, 0f00000000;
	fma.rn.ftz.f32 	%f146, %f5, 0f00000000, %f145;
	mul.ftz.f32 	%f15, %f7, 0f00000000;
	add.ftz.f32 	%f147, %f146, %f15;
	add.ftz.f32 	%f16, %f8, %f147;
	mul.ftz.f32 	%f148, %f10, 0f00000000;
	fma.rn.ftz.f32 	%f149, %f9, 0f00000000, %f148;
	mul.ftz.f32 	%f17, %f11, 0f00000000;
	add.ftz.f32 	%f150, %f149, %f17;
	add.ftz.f32 	%f18, %f12, %f150;
	fma.rn.ftz.f32 	%f151, %f2, 0f00000000, %f1;
	add.ftz.f32 	%f152, %f151, %f13;
	add.ftz.f32 	%f153, %f4, %f152;
	fma.rn.ftz.f32 	%f154, %f6, 0f00000000, %f5;
	add.ftz.f32 	%f155, %f154, %f15;
	add.ftz.f32 	%f156, %f8, %f155;
	fma.rn.ftz.f32 	%f157, %f10, 0f00000000, %f9;
	add.ftz.f32 	%f158, %f157, %f17;
	add.ftz.f32 	%f159, %f12, %f158;
	fma.rn.ftz.f32 	%f160, %f1, 0f00000000, %f2;
	add.ftz.f32 	%f161, %f160, %f13;
	add.ftz.f32 	%f162, %f4, %f161;
	fma.rn.ftz.f32 	%f163, %f5, 0f00000000, %f6;
	add.ftz.f32 	%f164, %f163, %f15;
	add.ftz.f32 	%f165, %f8, %f164;
	fma.rn.ftz.f32 	%f166, %f9, 0f00000000, %f10;
	add.ftz.f32 	%f167, %f166, %f17;
	add.ftz.f32 	%f168, %f12, %f167;
	sub.ftz.f32 	%f169, %f153, %f14;
	sub.ftz.f32 	%f170, %f156, %f16;
	sub.ftz.f32 	%f171, %f159, %f18;
	sub.ftz.f32 	%f172, %f162, %f14;
	sub.ftz.f32 	%f173, %f165, %f16;
	sub.ftz.f32 	%f174, %f168, %f18;
	mul.ftz.f32 	%f175, %f170, %f174;
	mul.ftz.f32 	%f176, %f171, %f173;
	sub.ftz.f32 	%f19, %f175, %f176;
	mul.ftz.f32 	%f177, %f171, %f172;
	mul.ftz.f32 	%f178, %f169, %f174;
	sub.ftz.f32 	%f20, %f177, %f178;
	mul.ftz.f32 	%f179, %f169, %f173;
	mul.ftz.f32 	%f180, %f170, %f172;
	sub.ftz.f32 	%f21, %f179, %f180;
	mul.ftz.f32 	%f181, %f20, %f20;
	fma.rn.ftz.f32 	%f182, %f19, %f19, %f181;
	fma.rn.ftz.f32 	%f22, %f21, %f21, %f182;
	cvt.rn.f32.s32 	%f183, %r5;
	rcp.approx.ftz.f32 	%f23, %f183;
	cvt.rn.f32.s32 	%f184, %r6;
	rcp.approx.ftz.f32 	%f24, %f184;
	add.ftz.f32 	%f185, %f1, %f2;
	add.ftz.f32 	%f186, %f185, %f13;
	add.ftz.f32 	%f187, %f4, %f186;
	add.ftz.f32 	%f188, %f5, %f6;
	add.ftz.f32 	%f189, %f188, %f15;
	add.ftz.f32 	%f190, %f8, %f189;
	add.ftz.f32 	%f191, %f9, %f10;
	add.ftz.f32 	%f192, %f191, %f17;
	add.ftz.f32 	%f193, %f12, %f192;
	sub.ftz.f32 	%f194, %f187, %f162;
	sub.ftz.f32 	%f195, %f190, %f165;
	sub.ftz.f32 	%f196, %f193, %f168;
	mul.ftz.f32 	%f197, %f173, %f196;
	mul.ftz.f32 	%f198, %f174, %f195;
	sub.ftz.f32 	%f25, %f197, %f198;
	mul.ftz.f32 	%f199, %f174, %f194;
	mul.ftz.f32 	%f200, %f172, %f196;
	sub.ftz.f32 	%f26, %f199, %f200;
	mul.ftz.f32 	%f201, %f172, %f195;
	mul.ftz.f32 	%f202, %f173, %f194;
	sub.ftz.f32 	%f27, %f201, %f202;
	mul.ftz.f32 	%f203, %f26, %f26;
	fma.rn.ftz.f32 	%f204, %f25, %f25, %f203;
	fma.rn.ftz.f32 	%f28, %f27, %f27, %f204;
	sub.ftz.f32 	%f29, %f14, %f162;
	sub.ftz.f32 	%f30, %f16, %f165;
	sub.ftz.f32 	%f205, %f16, %f190;
	sub.ftz.f32 	%f31, %f18, %f168;
	sub.ftz.f32 	%f206, %f18, %f193;
	mul.ftz.f32 	%f207, %f18, %f205;
	mul.ftz.f32 	%f208, %f16, %f206;
	sub.ftz.f32 	%f32, %f207, %f208;
	mul.ftz.f32 	%f209, %f30, %f206;
	mul.ftz.f32 	%f210, %f31, %f205;
	sub.ftz.f32 	%f33, %f209, %f210;
	mul.ftz.f32 	%f211, %f18, %f30;
	mul.ftz.f32 	%f212, %f16, %f31;
	sub.ftz.f32 	%f34, %f211, %f212;
	cvt.rn.f32.u32 	%f35, %r1;
	rcp.approx.ftz.f32 	%f213, %f35;
	cvt.ftz.f64.f32 	%fd1, %f213;
	mov.u32 	%r554, 0;
	rsqrt.approx.ftz.f32 	%f270, %f28;

$L__BB1_4:
	setp.lt.s32 	%p4, %r5, 1;
	@%p4 bra 	$L__BB1_78;

	mov.u32 	%r555, 0;

$L__BB1_6:
	ld.local.u32 	%r334, [%rd1];
	mad.lo.s32 	%r335, %r334, 1664525, 1013904223;
	and.b32  	%r336, %r335, 16777215;
	cvt.rn.f32.u32 	%f214, %r336;
	mov.f32 	%f215, 0f4B800000;
	div.approx.ftz.f32 	%f49, %f214, %f215;
	mad.lo.s32 	%r337, %r335, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r337;
	and.b32  	%r338, %r337, 16777215;
	cvt.rn.f32.u32 	%f216, %r338;
	div.approx.ftz.f32 	%f50, %f216, %f215;
	setp.lt.u32 	%p5, %r4, 5;
	@%p5 bra 	$L__BB1_8;

	add.u64 	%rd146, %SP, 40;
	add.u64 	%rd147, %SPL, 40;
	st.local.u32 	[%rd147], %r2;
	mov.u64 	%rd148, $str;
	cvta.global.u64 	%rd149, %rd148;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd149;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r339, [retval0+0];
	} // callseq 0
	mov.u64 	%rd150, $str$1;
	cvta.global.u64 	%rd151, %rd150;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd151;
	.param .b64 param1;
	st.param.b64 	[param1+0], 0;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r340, [retval0+0];
	} // callseq 1

$L__BB1_8:
	setp.eq.s32 	%p6, %r4, 3;
	@%p6 bra 	$L__BB1_10;

	setp.ne.s32 	%p7, %r4, 0;
	@%p7 bra 	$L__BB1_19;

$L__BB1_10:
	cvt.rn.f32.s32 	%f756, %r554;
	rsqrt.approx.ftz.f32 	%f218, %f22;
	mul.ftz.f32 	%f782, %f218, %f19;
	mul.ftz.f32 	%f783, %f218, %f20;
	mul.ftz.f32 	%f784, %f21, %f218;
	cvt.rn.f32.s32 	%f54, %r555;
	add.ftz.f32 	%f219, %f49, %f54;
	fma.rn.ftz.f32 	%f785, %f23, %f219, 0fBF000000;
	add.ftz.f32 	%f220, %f50, %f756;
	fma.rn.ftz.f32 	%f786, %f24, %f220, 0fBF000000;
	mov.u64 	%rd158, maskID;
	cvta.global.u64 	%rd153, %rd158;
	mov.u32 	%r341, 1;
	mov.u32 	%r342, 4;
	mov.u64 	%rd157, 0;
	// begin inline asm
	call (%rd152), _rt_buffer_get_64, (%rd153, %r341, %r342, %rd137, %rd157, %rd157, %rd157);
	// end inline asm
	ld.s32 	%rd4, [%rd152];
	setp.lt.s64 	%p8, %rd4, 0;
	mov.f32 	%f787, 0f00000000;
	@%p8 bra 	$L__BB1_40;

	mov.u64 	%rd165, masksize;
	cvta.global.u64 	%rd160, %rd165;
	mov.u32 	%r344, 8;
	// begin inline asm
	call (%rd159), _rt_buffer_get_64, (%rd160, %r341, %r344, %rd4, %rd157, %rd157, %rd157);
	// end inline asm
	ld.v2.u32 	{%r346, %r347}, [%rd159];
	mov.u32 	%r556, 0;
	add.s32 	%r350, %r346, -1;
	cvt.rn.f32.s32 	%f57, %r350;
	add.s32 	%r351, %r347, -1;
	cvt.rn.f32.s32 	%f58, %r351;

$L__BB1_12:
	cvt.u32.u64 	%r352, %rd3;
	setp.eq.s32 	%p9, %r352, -1;
	add.ftz.f32 	%f61, %f785, 0f3F000000;
	add.ftz.f32 	%f62, %f786, 0f3F000000;
	@%p9 bra 	$L__BB1_14;

	mov.u64 	%rd196, uvdata;
	cvta.global.u64 	%rd167, %rd196;
	mov.u32 	%r361, 2;
	mov.u32 	%r362, 8;
	mov.u64 	%rd195, 0;
	// begin inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r361, %r362, %rd195, %rd3, %rd195, %rd195);
	// end inline asm
	ld.v2.f32 	{%f221, %f222}, [%rd166];
	mov.u64 	%rd192, 1;
	// begin inline asm
	call (%rd172), _rt_buffer_get_64, (%rd167, %r361, %r362, %rd192, %rd3, %rd195, %rd195);
	// end inline asm
	ld.f32 	%f225, [%rd172];
	// begin inline asm
	call (%rd178), _rt_buffer_get_64, (%rd167, %r361, %r362, %rd195, %rd3, %rd195, %rd195);
	// end inline asm
	ld.f32 	%f226, [%rd178];
	sub.ftz.f32 	%f227, %f225, %f226;
	mov.u64 	%rd186, 2;
	// begin inline asm
	call (%rd184), _rt_buffer_get_64, (%rd167, %r361, %r362, %rd186, %rd3, %rd195, %rd195);
	// end inline asm
	ld.f32 	%f228, [%rd184+4];
	// begin inline asm
	call (%rd190), _rt_buffer_get_64, (%rd167, %r361, %r362, %rd192, %rd3, %rd195, %rd195);
	// end inline asm
	ld.f32 	%f229, [%rd190+4];
	sub.ftz.f32 	%f230, %f228, %f229;
	fma.rn.ftz.f32 	%f231, %f61, %f227, %f221;
	mul.ftz.f32 	%f232, %f231, %f57;
	cvt.rmi.ftz.f32.f32 	%f233, %f232;
	mov.f32 	%f234, 0f3F800000;
	sub.ftz.f32 	%f235, %f234, %f222;
	mul.ftz.f32 	%f236, %f62, %f230;
	sub.ftz.f32 	%f237, %f235, %f236;
	mul.ftz.f32 	%f238, %f237, %f58;
	cvt.rmi.ftz.f32.f32 	%f239, %f238;
	cvt.rzi.ftz.u32.f32 	%r558, %f239;
	cvt.rzi.ftz.u32.f32 	%r557, %f233;
	cvt.u32.u64 	%r559, %rd4;
	bra.uni 	$L__BB1_15;

$L__BB1_14:
	mul.ftz.f32 	%f240, %f61, %f57;
	cvt.rmi.ftz.f32.f32 	%f241, %f240;
	mov.f32 	%f242, 0f3F800000;
	sub.ftz.f32 	%f243, %f242, %f62;
	mul.ftz.f32 	%f244, %f243, %f58;
	cvt.rmi.ftz.f32.f32 	%f245, %f244;
	cvt.rzi.ftz.u32.f32 	%r557, %f241;
	cvt.rzi.ftz.u32.f32 	%r558, %f245;
	cvt.u32.u64 	%r559, %rd4;

$L__BB1_15:
	cvt.u64.u32 	%rd199, %r557;
	cvt.u64.u32 	%rd200, %r558;
	cvt.u64.u32 	%rd201, %r559;
	mov.u64 	%rd203, maskdata;
	cvta.global.u64 	%rd198, %rd203;
	mov.u32 	%r363, 3;
	mov.u32 	%r364, 1;
	mov.u64 	%rd202, 0;
	// begin inline asm
	call (%rd197), _rt_buffer_get_64, (%rd198, %r363, %r364, %rd199, %rd200, %rd201, %rd202);
	// end inline asm
	ld.u8 	%rs1, [%rd197];
	setp.ne.s16 	%p10, %rs1, 0;
	@%p10 bra 	$L__BB1_18;

	setp.gt.u32 	%p11, %r556, 9;
	@%p11 bra 	$L__BB1_40;

	cvt.rn.f32.s32 	%f757, %r554;
	ld.local.u32 	%r365, [%rd1];
	mad.lo.s32 	%r366, %r365, 1664525, 1013904223;
	and.b32  	%r367, %r366, 16777215;
	cvt.rn.f32.u32 	%f247, %r367;
	mov.f32 	%f248, 0f4B800000;
	div.approx.ftz.f32 	%f249, %f247, %f248;
	add.ftz.f32 	%f250, %f249, %f54;
	fma.rn.ftz.f32 	%f785, %f23, %f250, 0fBF000000;
	mad.lo.s32 	%r368, %r366, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r368;
	and.b32  	%r369, %r368, 16777215;
	cvt.rn.f32.u32 	%f251, %r369;
	div.approx.ftz.f32 	%f252, %f251, %f248;
	add.ftz.f32 	%f253, %f252, %f757;
	fma.rn.ftz.f32 	%f786, %f24, %f253, 0fBF000000;

$L__BB1_18:
	add.s32 	%r556, %r556, 1;
	setp.eq.s16 	%p12, %rs1, 0;
	@%p12 bra 	$L__BB1_12;
	bra.uni 	$L__BB1_40;

$L__BB1_19:
	setp.eq.s32 	%p13, %r4, 1;
	@%p13 bra 	$L__BB1_32;
	bra.uni 	$L__BB1_20;

$L__BB1_32:
	setp.lt.ftz.f32 	%p20, %f49, %f50;
	selp.f32 	%f785, %f49, %f50, %p20;
	selp.f32 	%f786, %f50, %f49, %p20;
	mul.ftz.f32 	%f782, %f270, %f25;
	mul.ftz.f32 	%f783, %f270, %f26;
	mul.ftz.f32 	%f784, %f27, %f270;
	mov.u64 	%rd210, maskID;
	cvta.global.u64 	%rd205, %rd210;
	mov.u32 	%r373, 1;
	mov.u32 	%r374, 4;
	mov.u64 	%rd209, 0;
	// begin inline asm
	call (%rd204), _rt_buffer_get_64, (%rd205, %r373, %r374, %rd137, %rd209, %rd209, %rd209);
	// end inline asm
	ld.u32 	%r20, [%rd204];
	setp.lt.s32 	%p21, %r20, 0;
	mov.f32 	%f787, 0f00000000;
	@%p21 bra 	$L__BB1_40;

	cvt.s64.s32 	%rd213, %r20;
	mov.u64 	%rd235, masksize;
	cvta.global.u64 	%rd212, %rd235;
	mov.u32 	%r382, 8;
	// begin inline asm
	call (%rd211), _rt_buffer_get_64, (%rd212, %r373, %r382, %rd213, %rd209, %rd209, %rd209);
	// end inline asm
	ld.v2.u32 	{%r384, %r385}, [%rd211];
	mov.u32 	%r560, 0;
	mov.u64 	%rd225, 1;
	mov.u64 	%rd236, uvdata;
	cvta.global.u64 	%rd218, %rd236;
	mov.u32 	%r381, 2;
	// begin inline asm
	call (%rd217), _rt_buffer_get_64, (%rd218, %r381, %r382, %rd209, %rd3, %rd209, %rd209);
	// end inline asm
	ld.v2.f32 	{%f271, %f272}, [%rd217];
	// begin inline asm
	call (%rd223), _rt_buffer_get_64, (%rd218, %r381, %r382, %rd225, %rd3, %rd209, %rd209);
	// end inline asm
	ld.v2.f32 	{%f273, %f274}, [%rd223];
	mov.u64 	%rd231, 2;
	// begin inline asm
	call (%rd229), _rt_buffer_get_64, (%rd218, %r381, %r382, %rd231, %rd3, %rd209, %rd209);
	// end inline asm
	ld.v2.f32 	{%f275, %f276}, [%rd229];
	add.s32 	%r388, %r384, -1;
	cvt.rn.f32.s32 	%f96, %r388;
	add.s32 	%r389, %r385, -1;
	cvt.rn.f32.s32 	%f97, %r389;
	cvt.u64.u32 	%rd5, %r20;

$L__BB1_34:
	mul.ftz.f32 	%f277, %f786, %f2;
	fma.rn.ftz.f32 	%f278, %f785, %f1, %f277;
	add.ftz.f32 	%f279, %f278, %f13;
	add.ftz.f32 	%f280, %f4, %f279;
	mul.ftz.f32 	%f281, %f786, %f6;
	fma.rn.ftz.f32 	%f282, %f785, %f5, %f281;
	add.ftz.f32 	%f283, %f282, %f15;
	add.ftz.f32 	%f284, %f8, %f283;
	mul.ftz.f32 	%f285, %f786, %f10;
	fma.rn.ftz.f32 	%f286, %f785, %f9, %f285;
	add.ftz.f32 	%f287, %f286, %f17;
	add.ftz.f32 	%f288, %f12, %f287;
	mul.ftz.f32 	%f293, %f205, %f288;
	mul.ftz.f32 	%f298, %f206, %f284;
	sub.ftz.f32 	%f299, %f293, %f298;
	mul.ftz.f32 	%f300, %f16, %f288;
	mul.ftz.f32 	%f301, %f18, %f284;
	sub.ftz.f32 	%f302, %f300, %f301;
	mul.ftz.f32 	%f303, %f31, %f284;
	mul.ftz.f32 	%f304, %f30, %f288;
	sub.ftz.f32 	%f305, %f303, %f304;
	sub.ftz.f32 	%f309, %f14, %f187;
	mul.ftz.f32 	%f310, %f309, %f305;
	fma.rn.ftz.f32 	%f311, %f29, %f299, %f310;
	fma.rn.ftz.f32 	%f312, %f33, %f280, %f311;
	rcp.approx.ftz.f32 	%f313, %f312;
	mul.ftz.f32 	%f314, %f14, %f299;
	mul.ftz.f32 	%f315, %f309, %f302;
	sub.ftz.f32 	%f316, %f314, %f315;
	mul.ftz.f32 	%f317, %f32, %f280;
	sub.ftz.f32 	%f318, %f316, %f317;
	mul.ftz.f32 	%f319, %f318, %f313;
	mul.ftz.f32 	%f320, %f14, %f305;
	fma.rn.ftz.f32 	%f321, %f29, %f302, %f320;
	fma.rn.ftz.f32 	%f322, %f34, %f280, %f321;
	mul.ftz.f32 	%f323, %f322, %f313;
	sub.ftz.f32 	%f324, %f273, %f271;
	sub.ftz.f32 	%f325, %f274, %f272;
	fma.rn.ftz.f32 	%f326, %f324, %f319, %f271;
	fma.rn.ftz.f32 	%f327, %f325, %f319, %f272;
	sub.ftz.f32 	%f328, %f275, %f271;
	sub.ftz.f32 	%f329, %f276, %f272;
	fma.rn.ftz.f32 	%f100, %f328, %f323, %f326;
	fma.rn.ftz.f32 	%f101, %f329, %f323, %f327;
	setp.lt.ftz.f32 	%p22, %f100, 0f00000000;
	setp.gt.ftz.f32 	%p23, %f100, 0f3F800000;
	or.pred  	%p24, %p22, %p23;
	setp.lt.ftz.f32 	%p25, %f101, 0f00000000;
	or.pred  	%p26, %p25, %p24;
	setp.gt.ftz.f32 	%p27, %f101, 0f3F800000;
	or.pred  	%p28, %p27, %p26;
	mov.u16 	%rs54, 1;
	@%p28 bra 	$L__BB1_36;

	mul.ftz.f32 	%f330, %f100, %f96;
	cvt.rmi.ftz.f32.f32 	%f331, %f330;
	cvt.rzi.ftz.u32.f32 	%r392, %f331;
	mov.f32 	%f332, 0f3F800000;
	sub.ftz.f32 	%f333, %f332, %f101;
	mul.ftz.f32 	%f334, %f333, %f97;
	cvt.rmi.ftz.f32.f32 	%f335, %f334;
	cvt.rzi.ftz.u32.f32 	%r393, %f335;
	cvt.u64.u32 	%rd239, %r392;
	cvt.u64.u32 	%rd240, %r393;
	mov.u64 	%rd243, maskdata;
	cvta.global.u64 	%rd238, %rd243;
	mov.u32 	%r390, 3;
	mov.u32 	%r391, 1;
	mov.u64 	%rd242, 0;
	// begin inline asm
	call (%rd237), _rt_buffer_get_64, (%rd238, %r390, %r391, %rd239, %rd240, %rd5, %rd242);
	// end inline asm
	ld.u8 	%rs54, [%rd237];

$L__BB1_36:
	and.b16  	%rs6, %rs54, 255;
	setp.ne.s16 	%p29, %rs6, 0;
	@%p29 bra 	$L__BB1_39;

	mov.f32 	%f787, 0f00000000;
	setp.gt.u32 	%p30, %r560, 9;
	@%p30 bra 	$L__BB1_40;

	ld.local.u32 	%r394, [%rd1];
	mad.lo.s32 	%r395, %r394, 1664525, 1013904223;
	and.b32  	%r396, %r395, 16777215;
	cvt.rn.f32.u32 	%f337, %r396;
	mov.f32 	%f338, 0f4B800000;
	div.approx.ftz.f32 	%f339, %f337, %f338;
	mad.lo.s32 	%r397, %r395, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r397;
	and.b32  	%r398, %r397, 16777215;
	cvt.rn.f32.u32 	%f340, %r398;
	div.approx.ftz.f32 	%f341, %f340, %f338;
	setp.lt.ftz.f32 	%p31, %f339, %f341;
	selp.f32 	%f785, %f339, %f341, %p31;
	selp.f32 	%f786, %f341, %f339, %p31;

$L__BB1_39:
	mov.f32 	%f787, 0f00000000;
	add.s32 	%r560, %r560, 1;
	setp.eq.s16 	%p32, %rs6, 0;
	@%p32 bra 	$L__BB1_34;
	bra.uni 	$L__BB1_40;

$L__BB1_20:
	setp.eq.s32 	%p14, %r4, 2;
	@%p14 bra 	$L__BB1_23;
	bra.uni 	$L__BB1_21;

$L__BB1_23:
	fma.rn.ftz.f32 	%f70, %f49, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f71, %f50, 0f40000000, 0fBF800000;
	neg.ftz.f32 	%f776, %f71;
	setp.gt.ftz.f32 	%p16, %f70, %f776;
	@%p16 bra 	$L__BB1_28;
	bra.uni 	$L__BB1_24;

$L__BB1_28:
	setp.gt.ftz.f32 	%p19, %f70, %f71;
	@%p19 bra 	$L__BB1_30;
	bra.uni 	$L__BB1_29;

$L__BB1_30:
	div.approx.ftz.f32 	%f777, %f71, %f70;
	mov.f32 	%f776, %f70;
	bra.uni 	$L__BB1_31;

$L__BB1_21:
	setp.ne.s32 	%p15, %r4, 4;
	@%p15 bra 	$L__BB1_40;

	add.ftz.f32 	%f785, %f49, 0fBF000000;
	add.ftz.f32 	%f786, %f50, 0fBF000000;
	ld.local.u32 	%r370, [%rd1];
	mad.lo.s32 	%r371, %r370, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r371;
	and.b32  	%r372, %r371, 16777215;
	cvt.rn.f32.u32 	%f255, %r372;
	mov.f32 	%f256, 0f4B800000;
	div.approx.ftz.f32 	%f257, %f255, %f256;
	add.ftz.f32 	%f787, %f257, 0fBF000000;
	bra.uni 	$L__BB1_40;

$L__BB1_24:
	setp.lt.ftz.f32 	%p17, %f70, %f71;
	@%p17 bra 	$L__BB1_27;
	bra.uni 	$L__BB1_25;

$L__BB1_27:
	neg.ftz.f32 	%f776, %f70;
	div.approx.ftz.f32 	%f261, %f71, %f70;
	add.ftz.f32 	%f777, %f261, 0f40800000;
	bra.uni 	$L__BB1_31;

$L__BB1_29:
	div.approx.ftz.f32 	%f262, %f70, %f71;
	mov.f32 	%f263, 0f40000000;
	sub.ftz.f32 	%f777, %f263, %f262;
	mov.f32 	%f776, %f71;
	bra.uni 	$L__BB1_31;

$L__BB1_25:
	setp.eq.ftz.f32 	%p18, %f71, 0f00000000;
	mov.f32 	%f777, 0f00000000;
	@%p18 bra 	$L__BB1_31;

	div.approx.ftz.f32 	%f259, %f70, %f71;
	mov.f32 	%f260, 0f40C00000;
	sub.ftz.f32 	%f777, %f260, %f259;

$L__BB1_31:
	cvt.ftz.f64.f32 	%fd2, %f777;
	mul.f64 	%fd3, %fd2, 0d3FE921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f265, %fd3;
	cos.approx.ftz.f32 	%f266, %f265;
	mul.ftz.f32 	%f785, %f776, %f266;
	sin.approx.ftz.f32 	%f267, %f265;
	mul.ftz.f32 	%f786, %f776, %f267;
	rsqrt.approx.ftz.f32 	%f268, %f22;
	mul.ftz.f32 	%f782, %f268, %f19;
	mul.ftz.f32 	%f783, %f268, %f20;
	mul.ftz.f32 	%f784, %f21, %f268;
	mov.f32 	%f787, 0f00000000;

$L__BB1_40:
	ld.global.u32 	%r399, [launch_index];
	cvt.rn.f32.u32 	%f343, %r399;
	ld.local.u32 	%r400, [%rd1];
	mad.lo.s32 	%r401, %r400, 1664525, 1013904223;
	and.b32  	%r402, %r401, 16777215;
	cvt.rn.f32.u32 	%f344, %r402;
	mov.f32 	%f345, 0f4B800000;
	div.approx.ftz.f32 	%f346, %f344, %f345;
	add.ftz.f32 	%f347, %f346, %f343;
	ld.global.u32 	%r403, [launch_dim];
	cvt.rn.f32.u32 	%f348, %r403;
	div.approx.ftz.f32 	%f112, %f347, %f348;
	ld.global.u32 	%r404, [launch_index+4];
	cvt.rn.f32.u32 	%f349, %r404;
	mad.lo.s32 	%r405, %r401, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r405;
	and.b32  	%r406, %r405, 16777215;
	cvt.rn.f32.u32 	%f350, %r406;
	div.approx.ftz.f32 	%f351, %f350, %f345;
	add.ftz.f32 	%f352, %f351, %f349;
	ld.global.u32 	%r407, [launch_dim+4];
	cvt.rn.f32.u32 	%f353, %r407;
	div.approx.ftz.f32 	%f113, %f352, %f353;
	setp.eq.s32 	%p33, %r4, 4;
	@%p33 bra 	$L__BB1_42;
	bra.uni 	$L__BB1_41;

$L__BB1_42:
	mov.f32 	%f387, 0f3F800000;
	sub.ftz.f32 	%f388, %f387, %f112;
	setp.lt.ftz.f32 	%p39, %f388, 0fBF800000;
	setp.gt.ftz.f32 	%p40, %f388, 0f3F800000;
	selp.f32 	%f389, 0f3F800000, %f388, %p40;
	selp.f32 	%f390, 0fBF800000, %f389, %p39;
	abs.ftz.f32 	%f391, %f390;
	neg.ftz.f32 	%f392, %f391;
	mov.f32 	%f393, 0f3F000000;
	fma.rn.ftz.f32 	%f394, %f393, %f392, %f393;
	rsqrt.approx.ftz.f32 	%f395, %f394;
	mul.ftz.f32 	%f396, %f394, %f395;
	mul.ftz.f32 	%f397, %f395, 0f3F000000;
	neg.ftz.f32 	%f398, %f396;
	fma.rn.ftz.f32 	%f399, %f398, %f397, %f393;
	fma.rn.ftz.f32 	%f400, %f396, %f399, %f396;
	setp.eq.ftz.f32 	%p41, %f391, 0f3F800000;
	selp.f32 	%f401, 0f00000000, %f400, %p41;
	setp.gt.ftz.f32 	%p42, %f391, 0f3F0F5C29;
	selp.f32 	%f402, %f401, %f391, %p42;
	mov.b32 	%r412, %f402;
	mov.b32 	%r413, %f390;
	and.b32  	%r414, %r413, -2147483648;
	or.b32  	%r415, %r414, %r412;
	mov.b32 	%f403, %r415;
	mul.ftz.f32 	%f404, %f403, %f403;
	mov.f32 	%f405, 0f3C8B1ABB;
	mov.f32 	%f406, 0f3D10ECEF;
	fma.rn.ftz.f32 	%f407, %f406, %f404, %f405;
	mov.f32 	%f408, 0f3CFC028C;
	fma.rn.ftz.f32 	%f409, %f407, %f404, %f408;
	mov.f32 	%f410, 0f3D372139;
	fma.rn.ftz.f32 	%f411, %f409, %f404, %f410;
	mov.f32 	%f412, 0f3D9993DB;
	fma.rn.ftz.f32 	%f413, %f411, %f404, %f412;
	mov.f32 	%f414, 0f3E2AAAC6;
	fma.rn.ftz.f32 	%f415, %f413, %f404, %f414;
	mul.ftz.f32 	%f416, %f415, %f404;
	fma.rn.ftz.f32 	%f417, %f416, %f403, %f403;
	neg.ftz.f32 	%f418, %f417;
	selp.f32 	%f419, %f417, %f418, %p42;
	mov.f32 	%f420, 0f3FD774EB;
	mov.f32 	%f421, 0f3F6EE581;
	fma.rn.ftz.f32 	%f422, %f421, %f420, %f419;
	setp.gt.ftz.f32 	%p43, %f390, 0f3F0F5C29;
	selp.f32 	%f423, %f417, %f422, %p43;
	add.ftz.f32 	%f424, %f423, %f423;
	selp.f32 	%f788, %f424, %f423, %p42;
	bra.uni 	$L__BB1_43;

$L__BB1_41:
	sqrt.approx.ftz.f32 	%f354, %f112;
	setp.lt.ftz.f32 	%p34, %f354, 0fBF800000;
	setp.gt.ftz.f32 	%p35, %f354, 0f3F800000;
	selp.f32 	%f355, 0f3F800000, %f354, %p35;
	selp.f32 	%f356, 0fBF800000, %f355, %p34;
	abs.ftz.f32 	%f357, %f356;
	neg.ftz.f32 	%f358, %f357;
	mov.f32 	%f359, 0f3F000000;
	fma.rn.ftz.f32 	%f360, %f359, %f358, %f359;
	rsqrt.approx.ftz.f32 	%f361, %f360;
	mul.ftz.f32 	%f362, %f360, %f361;
	mul.ftz.f32 	%f363, %f361, 0f3F000000;
	neg.ftz.f32 	%f364, %f362;
	fma.rn.ftz.f32 	%f365, %f364, %f363, %f359;
	fma.rn.ftz.f32 	%f366, %f362, %f365, %f362;
	setp.eq.ftz.f32 	%p36, %f357, 0f3F800000;
	selp.f32 	%f367, 0f00000000, %f366, %p36;
	setp.gt.ftz.f32 	%p37, %f357, 0f3F0F5C29;
	selp.f32 	%f368, %f367, %f357, %p37;
	mul.ftz.f32 	%f369, %f368, %f368;
	mov.f32 	%f370, 0f3C99CA97;
	mov.f32 	%f371, 0f3D4DD2F7;
	fma.rn.ftz.f32 	%f372, %f371, %f369, %f370;
	mov.f32 	%f373, 0f3D3F90E8;
	fma.rn.ftz.f32 	%f374, %f372, %f369, %f373;
	mov.f32 	%f375, 0f3D993CCF;
	fma.rn.ftz.f32 	%f376, %f374, %f369, %f375;
	mov.f32 	%f377, 0f3E2AAC04;
	fma.rn.ftz.f32 	%f378, %f376, %f369, %f377;
	mul.ftz.f32 	%f379, %f369, %f378;
	fma.rn.ftz.f32 	%f380, %f379, %f368, %f368;
	mul.ftz.f32 	%f381, %f380, 0fC0000000;
	mov.f32 	%f382, 0f3FD774EB;
	mov.f32 	%f383, 0f3F6EE581;
	fma.rn.ftz.f32 	%f384, %f383, %f382, %f381;
	selp.f32 	%f385, %f384, %f380, %p37;
	setp.le.ftz.f32 	%p38, %f385, 0f7F800000;
	mov.b32 	%r408, %f385;
	mov.b32 	%r409, %f356;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, %r408;
	mov.b32 	%f386, %r411;
	selp.f32 	%f788, %f386, %f385, %p38;

$L__BB1_43:
	setp.eq.s32 	%p86, %r4, 4;
	cvt.ftz.f64.f32 	%fd4, %f113;
	mul.f64 	%fd5, %fd4, 0d401921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f425, %fd5;
	cos.approx.ftz.f32 	%f426, %f425;
	sin.approx.ftz.f32 	%f427, %f788;
	mul.ftz.f32 	%f117, %f427, %f426;
	sin.approx.ftz.f32 	%f428, %f425;
	mul.ftz.f32 	%f118, %f427, %f428;
	cos.approx.ftz.f32 	%f119, %f788;
	@%p86 bra 	$L__BB1_76;
	bra.uni 	$L__BB1_44;

$L__BB1_76:
	mov.f32 	%f745, 0f3F000000;
	div.approx.ftz.f32 	%f746, %f745, %f35;
	cvt.ftz.f64.f32 	%fd6, %f746;
	st.local.f64 	[%rd1+-16], %fd6;
	mad.lo.s32 	%r552, %r554, %r5, %r3;
	add.s32 	%r553, %r552, %r555;
	st.local.u32 	[%rd1+-8], %r553;
	mov.u16 	%rs53, 0;
	st.local.u8 	[%rd1+-4], %rs53;
	st.local.v2.u8 	[%rd1+4], {%rs53, %rs53};
	mul.ftz.f32 	%f747, %f786, %f2;
	fma.rn.ftz.f32 	%f748, %f785, %f1, %f747;
	fma.rn.ftz.f32 	%f749, %f787, %f3, %f748;
	add.ftz.f32 	%f737, %f4, %f749;
	mul.ftz.f32 	%f750, %f786, %f6;
	fma.rn.ftz.f32 	%f751, %f785, %f5, %f750;
	fma.rn.ftz.f32 	%f752, %f787, %f7, %f751;
	add.ftz.f32 	%f738, %f8, %f752;
	mul.ftz.f32 	%f753, %f786, %f10;
	fma.rn.ftz.f32 	%f754, %f785, %f9, %f753;
	fma.rn.ftz.f32 	%f755, %f787, %f11, %f754;
	add.ftz.f32 	%f739, %f12, %f755;
	ld.global.u32 	%r543, [diffuse_ray_type];
	ld.global.u32 	%r542, [top_object];
	mov.f32 	%f743, 0f3727C5AC;
	mov.f32 	%f744, 0f6C4ECB8F;
	mov.u32 	%r549, 255;
	mov.u32 	%r550, 0;
	mov.u32 	%r551, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r542, %f737, %f738, %f739, %f117, %f118, %f119, %r543, %f743, %f744, %r549, %r550, %rd6, %r551);
	// end inline asm
	ld.global.u32 	%r548, [diffuse_ray_type];
	ld.global.u32 	%r547, [top_object];
	neg.ftz.f32 	%f742, %f119;
	neg.ftz.f32 	%f741, %f118;
	neg.ftz.f32 	%f740, %f117;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r547, %f737, %f738, %f739, %f740, %f741, %f742, %r548, %f743, %f744, %r549, %r550, %rd6, %r551);
	// end inline asm
	bra.uni 	$L__BB1_77;

$L__BB1_44:
	abs.ftz.f32 	%f120, %f782;
	setp.eq.ftz.f32 	%p45, %f120, 0f00000000;
	abs.ftz.f32 	%f121, %f783;
	setp.eq.ftz.f32 	%p46, %f121, 0f00000000;
	and.pred  	%p47, %p45, %p46;
	@%p47 bra 	$L__BB1_48;
	bra.uni 	$L__BB1_45;

$L__BB1_48:
	mov.b32 	%r426, %f782;
	shr.s32 	%r427, %r426, 31;
	and.b32  	%r428, %r427, 1078530011;
	mov.b32 	%r429, %f783;
	and.b32  	%r430, %r429, -2147483648;
	or.b32  	%r431, %r428, %r430;
	mov.b32 	%f789, %r431;
	bra.uni 	$L__BB1_49;

$L__BB1_45:
	setp.eq.ftz.f32 	%p48, %f120, 0f7F800000;
	setp.eq.ftz.f32 	%p49, %f121, 0f7F800000;
	and.pred  	%p50, %p48, %p49;
	@%p50 bra 	$L__BB1_47;
	bra.uni 	$L__BB1_46;

$L__BB1_47:
	mov.b32 	%r421, %f782;
	setp.lt.s32 	%p54, %r421, 0;
	selp.b32 	%r422, 1075235812, 1061752795, %p54;
	mov.b32 	%r423, %f783;
	and.b32  	%r424, %r423, -2147483648;
	or.b32  	%r425, %r422, %r424;
	mov.b32 	%f789, %r425;
	bra.uni 	$L__BB1_49;

$L__BB1_46:
	max.ftz.f32 	%f429, %f121, %f120;
	min.ftz.f32 	%f430, %f121, %f120;
	div.full.ftz.f32 	%f431, %f430, %f429;
	mul.rn.ftz.f32 	%f432, %f431, %f431;
	mov.f32 	%f433, 0fC0B59883;
	mov.f32 	%f434, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f435, %f432, %f434, %f433;
	mov.f32 	%f436, 0fC0D21907;
	fma.rn.ftz.f32 	%f437, %f435, %f432, %f436;
	mul.ftz.f32 	%f438, %f432, %f437;
	mul.ftz.f32 	%f439, %f431, %f438;
	add.ftz.f32 	%f440, %f432, 0f41355DC0;
	mov.f32 	%f441, 0f41E6BD60;
	fma.rn.ftz.f32 	%f442, %f440, %f432, %f441;
	mov.f32 	%f443, 0f419D92C8;
	fma.rn.ftz.f32 	%f444, %f442, %f432, %f443;
	rcp.approx.ftz.f32 	%f445, %f444;
	fma.rn.ftz.f32 	%f446, %f439, %f445, %f431;
	mov.f32 	%f447, 0f3FC90FDB;
	sub.ftz.f32 	%f448, %f447, %f446;
	setp.gt.ftz.f32 	%p51, %f121, %f120;
	selp.f32 	%f449, %f448, %f446, %p51;
	mov.b32 	%r416, %f782;
	setp.lt.s32 	%p52, %r416, 0;
	mov.f32 	%f450, 0f40490FDB;
	sub.ftz.f32 	%f451, %f450, %f449;
	selp.f32 	%f452, %f451, %f449, %p52;
	mov.b32 	%r417, %f452;
	mov.b32 	%r418, %f783;
	and.b32  	%r419, %r418, -2147483648;
	or.b32  	%r420, %r419, %r417;
	mov.b32 	%f453, %r420;
	add.ftz.f32 	%f454, %f120, %f121;
	setp.le.ftz.f32 	%p53, %f454, 0f7F800000;
	selp.f32 	%f789, %f453, %f454, %p53;

$L__BB1_49:
	setp.gt.ftz.f32 	%p55, %f784, 0f3F800000;
	selp.f32 	%f455, 0f3F800000, %f784, %p55;
	setp.lt.ftz.f32 	%p56, %f784, 0fBF800000;
	selp.f32 	%f456, 0fBF800000, %f455, %p56;
	abs.ftz.f32 	%f457, %f456;
	neg.ftz.f32 	%f458, %f457;
	mov.f32 	%f459, 0f3F000000;
	fma.rn.ftz.f32 	%f460, %f459, %f458, %f459;
	rsqrt.approx.ftz.f32 	%f461, %f460;
	mul.ftz.f32 	%f462, %f460, %f461;
	setp.gt.ftz.f32 	%p57, %f457, 0f3F0F5C29;
	mov.b32 	%r432, %f456;
	and.b32  	%r433, %r432, -2147483648;
	setp.eq.ftz.f32 	%p58, %f457, 0f3F800000;
	neg.ftz.f32 	%f463, %f462;
	mul.ftz.f32 	%f464, %f461, 0f3F000000;
	fma.rn.ftz.f32 	%f465, %f463, %f464, %f459;
	fma.rn.ftz.f32 	%f466, %f462, %f465, %f462;
	selp.f32 	%f467, 0f00000000, %f466, %p58;
	selp.f32 	%f468, %f467, %f457, %p57;
	mov.b32 	%r434, %f468;
	or.b32  	%r435, %r433, %r434;
	mov.b32 	%f469, %r435;
	mul.ftz.f32 	%f470, %f469, %f469;
	mov.f32 	%f471, 0f3C8B1ABB;
	mov.f32 	%f472, 0f3D10ECEF;
	fma.rn.ftz.f32 	%f473, %f472, %f470, %f471;
	mov.f32 	%f474, 0f3CFC028C;
	fma.rn.ftz.f32 	%f475, %f473, %f470, %f474;
	mov.f32 	%f476, 0f3D372139;
	fma.rn.ftz.f32 	%f477, %f475, %f470, %f476;
	mov.f32 	%f478, 0f3D9993DB;
	fma.rn.ftz.f32 	%f479, %f477, %f470, %f478;
	mov.f32 	%f480, 0f3E2AAAC6;
	fma.rn.ftz.f32 	%f481, %f479, %f470, %f480;
	mul.ftz.f32 	%f482, %f481, %f470;
	fma.rn.ftz.f32 	%f483, %f482, %f469, %f469;
	setp.gt.ftz.f32 	%p59, %f456, 0f3F0F5C29;
	neg.ftz.f32 	%f484, %f483;
	selp.f32 	%f485, %f483, %f484, %p57;
	mov.f32 	%f486, 0f3FD774EB;
	mov.f32 	%f487, 0f3F6EE581;
	fma.rn.ftz.f32 	%f488, %f487, %f486, %f485;
	selp.f32 	%f489, %f483, %f488, %p59;
	add.ftz.f32 	%f490, %f489, %f489;
	selp.f32 	%f491, %f490, %f489, %p57;
	cos.approx.ftz.f32 	%f492, %f789;
	cos.approx.ftz.f32 	%f493, %f491;
	fma.rn.ftz.f32 	%f494, %f492, %f493, 0f00000000;
	sin.approx.ftz.f32 	%f495, %f789;
	fma.rn.ftz.f32 	%f496, %f495, 0f80000000, %f494;
	sin.approx.ftz.f32 	%f497, %f491;
	fma.rn.ftz.f32 	%f498, %f497, 0f80000000, %f496;
	fma.rn.ftz.f32 	%f499, %f492, 0f00000000, 0f00000000;
	sub.ftz.f32 	%f500, %f499, %f495;
	add.ftz.f32 	%f501, %f500, 0f00000000;
	fma.rn.ftz.f32 	%f502, %f492, %f497, 0f00000000;
	fma.rn.ftz.f32 	%f503, %f495, 0f80000000, %f502;
	fma.rn.ftz.f32 	%f504, %f493, 0f00000000, %f503;
	fma.rn.ftz.f32 	%f505, %f495, %f493, 0f00000000;
	fma.rn.ftz.f32 	%f506, %f492, 0f00000000, %f505;
	fma.rn.ftz.f32 	%f507, %f497, 0f80000000, %f506;
	fma.rn.ftz.f32 	%f508, %f495, 0f00000000, 0f00000000;
	add.ftz.f32 	%f509, %f508, %f492;
	add.ftz.f32 	%f510, %f509, 0f00000000;
	fma.rn.ftz.f32 	%f511, %f495, %f497, 0f00000000;
	fma.rn.ftz.f32 	%f512, %f492, 0f00000000, %f511;
	fma.rn.ftz.f32 	%f513, %f493, 0f00000000, %f512;
	fma.rn.ftz.f32 	%f514, %f493, 0f00000000, 0f00000000;
	sub.ftz.f32 	%f515, %f514, %f497;
	fma.rn.ftz.f32 	%f516, %f497, 0f00000000, 0f00000000;
	add.ftz.f32 	%f517, %f516, %f493;
	mul.ftz.f32 	%f518, %f118, %f501;
	fma.rn.ftz.f32 	%f519, %f117, %f498, %f518;
	fma.rn.ftz.f32 	%f126, %f119, %f504, %f519;
	mul.ftz.f32 	%f520, %f118, %f510;
	fma.rn.ftz.f32 	%f521, %f117, %f507, %f520;
	fma.rn.ftz.f32 	%f127, %f119, %f513, %f521;
	mul.ftz.f32 	%f522, %f118, 0f00000000;
	fma.rn.ftz.f32 	%f523, %f117, %f515, %f522;
	fma.rn.ftz.f32 	%f128, %f119, %f517, %f523;
	st.local.f64 	[%rd1+-16], %fd1;
	mad.lo.s32 	%r436, %r554, %r5, %r3;
	add.s32 	%r437, %r436, %r555;
	st.local.u32 	[%rd1+-8], %r437;
	mov.u16 	%rs8, 0;
	st.local.v2.u8 	[%rd1+4], {%rs8, %rs8};
	mul.ftz.f32 	%f524, %f786, %f2;
	fma.rn.ftz.f32 	%f525, %f785, %f1, %f524;
	fma.rn.ftz.f32 	%f526, %f787, %f3, %f525;
	add.ftz.f32 	%f129, %f4, %f526;
	mul.ftz.f32 	%f527, %f786, %f6;
	fma.rn.ftz.f32 	%f528, %f785, %f5, %f527;
	fma.rn.ftz.f32 	%f529, %f787, %f7, %f528;
	add.ftz.f32 	%f130, %f8, %f529;
	mul.ftz.f32 	%f530, %f786, %f10;
	fma.rn.ftz.f32 	%f531, %f785, %f9, %f530;
	fma.rn.ftz.f32 	%f532, %f787, %f11, %f531;
	add.ftz.f32 	%f131, %f12, %f532;
	ld.global.u32 	%r561, [launch_face];
	setp.ne.s32 	%p60, %r561, 1;
	@%p60 bra 	$L__BB1_63;

	mov.u64 	%rd250, twosided_flag;
	cvta.global.u64 	%rd245, %rd250;
	mov.u32 	%r439, 1;
	mov.u64 	%rd249, 0;
	// begin inline asm
	call (%rd244), _rt_buffer_get_64, (%rd245, %r439, %r439, %rd137, %rd249, %rd249, %rd249);
	// end inline asm
	ld.u8 	%rs9, [%rd244];
	setp.eq.s16 	%p61, %rs9, 3;
	@%p61 bra 	$L__BB1_62;
	bra.uni 	$L__BB1_51;

$L__BB1_62:
	ld.global.u32 	%r561, [launch_face];

$L__BB1_63:
	setp.ne.s32 	%p72, %r561, 0;
	@%p72 bra 	$L__BB1_77;

	mov.u64 	%rd267, twosided_flag;
	cvta.global.u64 	%rd262, %rd267;
	mov.u32 	%r491, 1;
	mov.u64 	%rd266, 0;
	// begin inline asm
	call (%rd261), _rt_buffer_get_64, (%rd262, %r491, %r491, %rd137, %rd266, %rd266, %rd266);
	// end inline asm
	ld.u8 	%rs31, [%rd261];
	setp.ne.s16 	%p73, %rs31, 1;
	@%p73 bra 	$L__BB1_77;

	ld.global.u32 	%r27, [diffuse_ray_type];
	mov.u16 	%rs32, 0;
	st.local.u8 	[%rd1+-4], %rs32;
	ld.global.u32 	%r492, [top_object];
	neg.ftz.f32 	%f636, %f128;
	neg.ftz.f32 	%f635, %f127;
	neg.ftz.f32 	%f634, %f126;
	mov.f32 	%f637, 0f3727C5AC;
	mov.f32 	%f638, 0f6C4ECB8F;
	mov.u32 	%r494, 255;
	mov.u32 	%r495, 0;
	mov.u32 	%r496, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r492, %f129, %f130, %f131, %f634, %f635, %f636, %r27, %f637, %f638, %r494, %r495, %rd6, %r496);
	// end inline asm
	ld.local.u8 	%rs33, [%rd1+5];
	setp.eq.s16 	%p74, %rs33, 0;
	@%p74 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f647, %f648}, [%rd1+8];
	ld.local.f32 	%f641, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs32;
	ld.global.u32 	%r497, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r497, %f647, %f648, %f641, %f634, %f635, %f636, %r27, %f637, %f638, %r494, %r495, %rd6, %r496);
	// end inline asm
	ld.local.u8 	%rs35, [%rd1+5];
	setp.eq.s16 	%p75, %rs35, 0;
	@%p75 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f657, %f658}, [%rd1+8];
	mov.u32 	%r505, 0;
	ld.local.f32 	%f651, [%rd1+16];
	mov.u16 	%rs36, 0;
	st.local.u8 	[%rd1+5], %rs36;
	ld.global.u32 	%r502, [top_object];
	mov.f32 	%f655, 0f3727C5AC;
	mov.f32 	%f656, 0f6C4ECB8F;
	mov.u32 	%r504, 255;
	mov.u32 	%r506, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r502, %f657, %f658, %f651, %f634, %f635, %f636, %r27, %f655, %f656, %r504, %r505, %rd6, %r506);
	// end inline asm
	ld.local.u8 	%rs37, [%rd1+5];
	setp.eq.s16 	%p76, %rs37, 0;
	@%p76 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f667, %f668}, [%rd1+8];
	ld.local.f32 	%f661, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs36;
	ld.global.u32 	%r507, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r507, %f667, %f668, %f661, %f634, %f635, %f636, %r27, %f655, %f656, %r504, %r505, %rd6, %r506);
	// end inline asm
	ld.local.u8 	%rs39, [%rd1+5];
	setp.eq.s16 	%p77, %rs39, 0;
	@%p77 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f677, %f678}, [%rd1+8];
	mov.u32 	%r515, 0;
	ld.local.f32 	%f671, [%rd1+16];
	mov.u16 	%rs40, 0;
	st.local.u8 	[%rd1+5], %rs40;
	ld.global.u32 	%r512, [top_object];
	mov.f32 	%f675, 0f3727C5AC;
	mov.f32 	%f676, 0f6C4ECB8F;
	mov.u32 	%r514, 255;
	mov.u32 	%r516, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r512, %f677, %f678, %f671, %f634, %f635, %f636, %r27, %f675, %f676, %r514, %r515, %rd6, %r516);
	// end inline asm
	ld.local.u8 	%rs41, [%rd1+5];
	setp.eq.s16 	%p78, %rs41, 0;
	@%p78 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f687, %f688}, [%rd1+8];
	ld.local.f32 	%f681, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs40;
	ld.global.u32 	%r517, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r517, %f687, %f688, %f681, %f634, %f635, %f636, %r27, %f675, %f676, %r514, %r515, %rd6, %r516);
	// end inline asm
	ld.local.u8 	%rs43, [%rd1+5];
	setp.eq.s16 	%p79, %rs43, 0;
	@%p79 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f697, %f698}, [%rd1+8];
	mov.u32 	%r525, 0;
	ld.local.f32 	%f691, [%rd1+16];
	mov.u16 	%rs44, 0;
	st.local.u8 	[%rd1+5], %rs44;
	ld.global.u32 	%r522, [top_object];
	mov.f32 	%f695, 0f3727C5AC;
	mov.f32 	%f696, 0f6C4ECB8F;
	mov.u32 	%r524, 255;
	mov.u32 	%r526, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r522, %f697, %f698, %f691, %f634, %f635, %f636, %r27, %f695, %f696, %r524, %r525, %rd6, %r526);
	// end inline asm
	ld.local.u8 	%rs45, [%rd1+5];
	setp.eq.s16 	%p80, %rs45, 0;
	@%p80 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f707, %f708}, [%rd1+8];
	ld.local.f32 	%f701, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs44;
	ld.global.u32 	%r527, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r527, %f707, %f708, %f701, %f634, %f635, %f636, %r27, %f695, %f696, %r524, %r525, %rd6, %r526);
	// end inline asm
	ld.local.u8 	%rs47, [%rd1+5];
	setp.eq.s16 	%p81, %rs47, 0;
	@%p81 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f717, %f718}, [%rd1+8];
	mov.u32 	%r535, 0;
	ld.local.f32 	%f711, [%rd1+16];
	mov.u16 	%rs48, 0;
	st.local.u8 	[%rd1+5], %rs48;
	ld.global.u32 	%r532, [top_object];
	mov.f32 	%f715, 0f3727C5AC;
	mov.f32 	%f716, 0f6C4ECB8F;
	mov.u32 	%r534, 255;
	mov.u32 	%r536, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r532, %f717, %f718, %f711, %f634, %f635, %f636, %r27, %f715, %f716, %r534, %r535, %rd6, %r536);
	// end inline asm
	ld.local.u8 	%rs49, [%rd1+5];
	setp.eq.s16 	%p82, %rs49, 0;
	@%p82 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f727, %f728}, [%rd1+8];
	ld.local.f32 	%f721, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs48;
	ld.global.u32 	%r537, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r537, %f727, %f728, %f721, %f634, %f635, %f636, %r27, %f715, %f716, %r534, %r535, %rd6, %r536);
	// end inline asm
	ld.local.u8 	%rs51, [%rd1+5];
	setp.eq.s16 	%p83, %rs51, 0;
	@%p83 bra 	$L__BB1_77;

	mov.u16 	%rs52, 0;
	st.local.u8 	[%rd1+5], %rs52;
	bra.uni 	$L__BB1_77;

$L__BB1_51:
	ld.global.u32 	%r24, [diffuse_ray_type];
	mov.u16 	%rs10, 1;
	st.local.u8 	[%rd1+-4], %rs10;
	ld.global.u32 	%r440, [top_object];
	mov.f32 	%f539, 0f3727C5AC;
	mov.f32 	%f540, 0f6C4ECB8F;
	mov.u32 	%r442, 255;
	mov.u32 	%r443, 0;
	mov.u32 	%r444, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r440, %f129, %f130, %f131, %f126, %f127, %f128, %r24, %f539, %f540, %r442, %r443, %rd6, %r444);
	// end inline asm
	ld.local.u8 	%rs11, [%rd1+5];
	setp.eq.s16 	%p62, %rs11, 0;
	@%p62 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f549, %f550}, [%rd1+8];
	ld.local.f32 	%f543, [%rd1+16];
	mov.u16 	%rs12, 0;
	st.local.u8 	[%rd1+5], %rs12;
	ld.global.u32 	%r445, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r445, %f549, %f550, %f543, %f126, %f127, %f128, %r24, %f539, %f540, %r442, %r443, %rd6, %r444);
	// end inline asm
	ld.local.u8 	%rs13, [%rd1+5];
	setp.eq.s16 	%p63, %rs13, 0;
	@%p63 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f559, %f560}, [%rd1+8];
	mov.u32 	%r453, 0;
	ld.local.f32 	%f553, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs12;
	ld.global.u32 	%r450, [top_object];
	mov.f32 	%f557, 0f3727C5AC;
	mov.f32 	%f558, 0f6C4ECB8F;
	mov.u32 	%r452, 255;
	mov.u32 	%r454, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r450, %f559, %f560, %f553, %f126, %f127, %f128, %r24, %f557, %f558, %r452, %r453, %rd6, %r454);
	// end inline asm
	ld.local.u8 	%rs15, [%rd1+5];
	setp.eq.s16 	%p64, %rs15, 0;
	@%p64 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f569, %f570}, [%rd1+8];
	ld.local.f32 	%f563, [%rd1+16];
	mov.u16 	%rs16, 0;
	st.local.u8 	[%rd1+5], %rs16;
	ld.global.u32 	%r455, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r455, %f569, %f570, %f563, %f126, %f127, %f128, %r24, %f557, %f558, %r452, %r453, %rd6, %r454);
	// end inline asm
	ld.local.u8 	%rs17, [%rd1+5];
	setp.eq.s16 	%p65, %rs17, 0;
	@%p65 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f579, %f580}, [%rd1+8];
	mov.u32 	%r463, 0;
	ld.local.f32 	%f573, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs16;
	ld.global.u32 	%r460, [top_object];
	mov.f32 	%f577, 0f3727C5AC;
	mov.f32 	%f578, 0f6C4ECB8F;
	mov.u32 	%r462, 255;
	mov.u32 	%r464, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r460, %f579, %f580, %f573, %f126, %f127, %f128, %r24, %f577, %f578, %r462, %r463, %rd6, %r464);
	// end inline asm
	ld.local.u8 	%rs19, [%rd1+5];
	setp.eq.s16 	%p66, %rs19, 0;
	@%p66 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f589, %f590}, [%rd1+8];
	ld.local.f32 	%f583, [%rd1+16];
	mov.u16 	%rs20, 0;
	st.local.u8 	[%rd1+5], %rs20;
	ld.global.u32 	%r465, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r465, %f589, %f590, %f583, %f126, %f127, %f128, %r24, %f577, %f578, %r462, %r463, %rd6, %r464);
	// end inline asm
	ld.local.u8 	%rs21, [%rd1+5];
	setp.eq.s16 	%p67, %rs21, 0;
	@%p67 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f599, %f600}, [%rd1+8];
	mov.u32 	%r473, 0;
	ld.local.f32 	%f593, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs20;
	ld.global.u32 	%r470, [top_object];
	mov.f32 	%f597, 0f3727C5AC;
	mov.f32 	%f598, 0f6C4ECB8F;
	mov.u32 	%r472, 255;
	mov.u32 	%r474, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r470, %f599, %f600, %f593, %f126, %f127, %f128, %r24, %f597, %f598, %r472, %r473, %rd6, %r474);
	// end inline asm
	ld.local.u8 	%rs23, [%rd1+5];
	setp.eq.s16 	%p68, %rs23, 0;
	@%p68 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f609, %f610}, [%rd1+8];
	ld.local.f32 	%f603, [%rd1+16];
	mov.u16 	%rs24, 0;
	st.local.u8 	[%rd1+5], %rs24;
	ld.global.u32 	%r475, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r475, %f609, %f610, %f603, %f126, %f127, %f128, %r24, %f597, %f598, %r472, %r473, %rd6, %r474);
	// end inline asm
	ld.local.u8 	%rs25, [%rd1+5];
	setp.eq.s16 	%p69, %rs25, 0;
	@%p69 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f619, %f620}, [%rd1+8];
	mov.u32 	%r483, 0;
	ld.local.f32 	%f613, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs24;
	ld.global.u32 	%r480, [top_object];
	mov.f32 	%f617, 0f3727C5AC;
	mov.f32 	%f618, 0f6C4ECB8F;
	mov.u32 	%r482, 255;
	mov.u32 	%r484, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r480, %f619, %f620, %f613, %f126, %f127, %f128, %r24, %f617, %f618, %r482, %r483, %rd6, %r484);
	// end inline asm
	ld.local.u8 	%rs27, [%rd1+5];
	setp.eq.s16 	%p70, %rs27, 0;
	@%p70 bra 	$L__BB1_77;

	ld.local.v2.f32 	{%f629, %f630}, [%rd1+8];
	ld.local.f32 	%f623, [%rd1+16];
	mov.u16 	%rs28, 0;
	st.local.u8 	[%rd1+5], %rs28;
	ld.global.u32 	%r485, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r485, %f629, %f630, %f623, %f126, %f127, %f128, %r24, %f617, %f618, %r482, %r483, %rd6, %r484);
	// end inline asm
	ld.local.u8 	%rs29, [%rd1+5];
	setp.eq.s16 	%p71, %rs29, 0;
	@%p71 bra 	$L__BB1_77;

	st.local.u8 	[%rd1+5], %rs28;

$L__BB1_77:
	add.s32 	%r555, %r555, 1;
	setp.lt.s32 	%p84, %r555, %r5;
	@%p84 bra 	$L__BB1_6;

$L__BB1_78:
	add.s32 	%r554, %r554, 1;
	setp.lt.s32 	%p85, %r554, %r6;
	@%p85 bra 	$L__BB1_4;

$L__BB1_79:
	ret;

}
	// .globl	_Z13camera_raygenv
.visible .entry _Z13camera_raygenv()
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<23>;
	.reg .f32 	%f<227>;
	.reg .b32 	%r<317>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<24>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd3, %SPL, 0;
	ld.global.u32 	%r5, [launch_dim+8];
	ld.global.u32 	%r6, [launch_index+8];
	ld.global.u32 	%r7, [launch_dim+4];
	ld.global.u32 	%r8, [random_seed];
	shl.b32 	%r9, %r8, 4;
	add.s32 	%r10, %r9, -1556008596;
	add.s32 	%r11, %r8, -1640531527;
	shr.u32 	%r12, %r8, 5;
	add.s32 	%r13, %r12, -939442524;
	xor.b32  	%r14, %r10, %r11;
	xor.b32  	%r15, %r14, %r13;
	ld.global.u32 	%r16, [launch_index+4];
	mad.lo.s32 	%r1, %r6, %r7, %r16;
	ld.global.u32 	%r2, [launch_dim];
	ld.global.u32 	%r17, [launch_index];
	mad.lo.s32 	%r18, %r1, %r2, %r17;
	add.s32 	%r19, %r18, %r15;
	shl.b32 	%r20, %r19, 4;
	add.s32 	%r21, %r20, -1383041155;
	add.s32 	%r22, %r19, -1640531527;
	xor.b32  	%r23, %r21, %r22;
	shr.u32 	%r24, %r19, 5;
	add.s32 	%r25, %r24, 2123724318;
	xor.b32  	%r26, %r23, %r25;
	add.s32 	%r27, %r26, %r8;
	shl.b32 	%r28, %r27, 4;
	add.s32 	%r29, %r28, -1556008596;
	add.s32 	%r30, %r27, 1013904242;
	shr.u32 	%r31, %r27, 5;
	add.s32 	%r32, %r31, -939442524;
	xor.b32  	%r33, %r29, %r30;
	xor.b32  	%r34, %r33, %r32;
	add.s32 	%r35, %r34, %r19;
	shl.b32 	%r36, %r35, 4;
	add.s32 	%r37, %r36, -1383041155;
	add.s32 	%r38, %r35, 1013904242;
	xor.b32  	%r39, %r37, %r38;
	shr.u32 	%r40, %r35, 5;
	add.s32 	%r41, %r40, 2123724318;
	xor.b32  	%r42, %r39, %r41;
	add.s32 	%r43, %r42, %r27;
	shl.b32 	%r44, %r43, 4;
	add.s32 	%r45, %r44, -1556008596;
	add.s32 	%r46, %r43, -626627285;
	shr.u32 	%r47, %r43, 5;
	add.s32 	%r48, %r47, -939442524;
	xor.b32  	%r49, %r45, %r46;
	xor.b32  	%r50, %r49, %r48;
	add.s32 	%r51, %r50, %r35;
	shl.b32 	%r52, %r51, 4;
	add.s32 	%r53, %r52, -1383041155;
	add.s32 	%r54, %r51, -626627285;
	xor.b32  	%r55, %r53, %r54;
	shr.u32 	%r56, %r51, 5;
	add.s32 	%r57, %r56, 2123724318;
	xor.b32  	%r58, %r55, %r57;
	add.s32 	%r59, %r58, %r43;
	shl.b32 	%r60, %r59, 4;
	add.s32 	%r61, %r60, -1556008596;
	add.s32 	%r62, %r59, 2027808484;
	shr.u32 	%r63, %r59, 5;
	add.s32 	%r64, %r63, -939442524;
	xor.b32  	%r65, %r61, %r62;
	xor.b32  	%r66, %r65, %r64;
	add.s32 	%r67, %r66, %r51;
	shl.b32 	%r68, %r67, 4;
	add.s32 	%r69, %r68, -1383041155;
	add.s32 	%r70, %r67, 2027808484;
	xor.b32  	%r71, %r69, %r70;
	shr.u32 	%r72, %r67, 5;
	add.s32 	%r73, %r72, 2123724318;
	xor.b32  	%r74, %r71, %r73;
	add.s32 	%r75, %r74, %r59;
	shl.b32 	%r76, %r75, 4;
	add.s32 	%r77, %r76, -1556008596;
	add.s32 	%r78, %r75, 387276957;
	shr.u32 	%r79, %r75, 5;
	add.s32 	%r80, %r79, -939442524;
	xor.b32  	%r81, %r77, %r78;
	xor.b32  	%r82, %r81, %r80;
	add.s32 	%r83, %r82, %r67;
	shl.b32 	%r84, %r83, 4;
	add.s32 	%r85, %r84, -1383041155;
	add.s32 	%r86, %r83, 387276957;
	xor.b32  	%r87, %r85, %r86;
	shr.u32 	%r88, %r83, 5;
	add.s32 	%r89, %r88, 2123724318;
	xor.b32  	%r90, %r87, %r89;
	add.s32 	%r91, %r90, %r75;
	shl.b32 	%r92, %r91, 4;
	add.s32 	%r93, %r92, -1556008596;
	add.s32 	%r94, %r91, -1253254570;
	shr.u32 	%r95, %r91, 5;
	add.s32 	%r96, %r95, -939442524;
	xor.b32  	%r97, %r93, %r94;
	xor.b32  	%r98, %r97, %r96;
	add.s32 	%r99, %r98, %r83;
	shl.b32 	%r100, %r99, 4;
	add.s32 	%r101, %r100, -1383041155;
	add.s32 	%r102, %r99, -1253254570;
	xor.b32  	%r103, %r101, %r102;
	shr.u32 	%r104, %r99, 5;
	add.s32 	%r105, %r104, 2123724318;
	xor.b32  	%r106, %r103, %r105;
	add.s32 	%r107, %r106, %r91;
	shl.b32 	%r108, %r107, 4;
	add.s32 	%r109, %r108, -1556008596;
	add.s32 	%r110, %r107, 1401181199;
	shr.u32 	%r111, %r107, 5;
	add.s32 	%r112, %r111, -939442524;
	xor.b32  	%r113, %r109, %r110;
	xor.b32  	%r114, %r113, %r112;
	add.s32 	%r115, %r114, %r99;
	shl.b32 	%r116, %r115, 4;
	add.s32 	%r117, %r116, -1383041155;
	add.s32 	%r118, %r115, 1401181199;
	xor.b32  	%r119, %r117, %r118;
	shr.u32 	%r120, %r115, 5;
	add.s32 	%r121, %r120, 2123724318;
	xor.b32  	%r122, %r119, %r121;
	add.s32 	%r123, %r122, %r107;
	shl.b32 	%r124, %r123, 4;
	add.s32 	%r125, %r124, -1556008596;
	add.s32 	%r126, %r123, -239350328;
	shr.u32 	%r127, %r123, 5;
	add.s32 	%r128, %r127, -939442524;
	xor.b32  	%r129, %r125, %r126;
	xor.b32  	%r130, %r129, %r128;
	add.s32 	%r131, %r130, %r115;
	shl.b32 	%r132, %r131, 4;
	add.s32 	%r133, %r132, -1383041155;
	add.s32 	%r134, %r131, -239350328;
	xor.b32  	%r135, %r133, %r134;
	shr.u32 	%r136, %r131, 5;
	add.s32 	%r137, %r136, 2123724318;
	xor.b32  	%r138, %r135, %r137;
	add.s32 	%r139, %r138, %r123;
	shl.b32 	%r140, %r139, 4;
	add.s32 	%r141, %r140, -1556008596;
	add.s32 	%r142, %r139, -1879881855;
	shr.u32 	%r143, %r139, 5;
	add.s32 	%r144, %r143, -939442524;
	xor.b32  	%r145, %r141, %r142;
	xor.b32  	%r146, %r145, %r144;
	add.s32 	%r147, %r146, %r131;
	shl.b32 	%r148, %r147, 4;
	add.s32 	%r149, %r148, -1383041155;
	add.s32 	%r150, %r147, -1879881855;
	xor.b32  	%r151, %r149, %r150;
	shr.u32 	%r152, %r147, 5;
	add.s32 	%r153, %r152, 2123724318;
	xor.b32  	%r154, %r151, %r153;
	add.s32 	%r155, %r154, %r139;
	shl.b32 	%r156, %r155, 4;
	add.s32 	%r157, %r156, -1556008596;
	add.s32 	%r158, %r155, 774553914;
	shr.u32 	%r159, %r155, 5;
	add.s32 	%r160, %r159, -939442524;
	xor.b32  	%r161, %r157, %r158;
	xor.b32  	%r162, %r161, %r160;
	add.s32 	%r163, %r162, %r147;
	shl.b32 	%r164, %r163, 4;
	add.s32 	%r165, %r164, -1383041155;
	add.s32 	%r166, %r163, 774553914;
	xor.b32  	%r167, %r165, %r166;
	shr.u32 	%r168, %r163, 5;
	add.s32 	%r169, %r168, 2123724318;
	xor.b32  	%r170, %r167, %r169;
	add.s32 	%r171, %r170, %r155;
	shl.b32 	%r172, %r171, 4;
	add.s32 	%r173, %r172, -1556008596;
	add.s32 	%r174, %r171, -865977613;
	shr.u32 	%r175, %r171, 5;
	add.s32 	%r176, %r175, -939442524;
	xor.b32  	%r177, %r173, %r174;
	xor.b32  	%r178, %r177, %r176;
	add.s32 	%r179, %r178, %r163;
	shl.b32 	%r180, %r179, 4;
	add.s32 	%r181, %r180, -1383041155;
	add.s32 	%r182, %r179, -865977613;
	xor.b32  	%r183, %r181, %r182;
	shr.u32 	%r184, %r179, 5;
	add.s32 	%r185, %r184, 2123724318;
	xor.b32  	%r186, %r183, %r185;
	add.s32 	%r187, %r186, %r171;
	shl.b32 	%r188, %r187, 4;
	add.s32 	%r189, %r188, -1556008596;
	add.s32 	%r190, %r187, 1788458156;
	shr.u32 	%r191, %r187, 5;
	add.s32 	%r192, %r191, -939442524;
	xor.b32  	%r193, %r189, %r190;
	xor.b32  	%r194, %r193, %r192;
	add.s32 	%r195, %r194, %r179;
	shl.b32 	%r196, %r195, 4;
	add.s32 	%r197, %r196, -1383041155;
	add.s32 	%r198, %r195, 1788458156;
	xor.b32  	%r199, %r197, %r198;
	shr.u32 	%r200, %r195, 5;
	add.s32 	%r201, %r200, 2123724318;
	xor.b32  	%r202, %r199, %r201;
	add.s32 	%r203, %r202, %r187;
	shl.b32 	%r204, %r203, 4;
	add.s32 	%r205, %r204, -1556008596;
	add.s32 	%r206, %r203, 147926629;
	shr.u32 	%r207, %r203, 5;
	add.s32 	%r208, %r207, -939442524;
	xor.b32  	%r209, %r205, %r206;
	xor.b32  	%r210, %r209, %r208;
	add.s32 	%r211, %r210, %r195;
	shl.b32 	%r212, %r211, 4;
	add.s32 	%r213, %r212, -1383041155;
	add.s32 	%r214, %r211, 147926629;
	xor.b32  	%r215, %r213, %r214;
	shr.u32 	%r216, %r211, 5;
	add.s32 	%r217, %r216, 2123724318;
	xor.b32  	%r218, %r215, %r217;
	add.s32 	%r219, %r218, %r203;
	shl.b32 	%r220, %r219, 4;
	add.s32 	%r221, %r220, -1556008596;
	add.s32 	%r222, %r219, -1492604898;
	shr.u32 	%r223, %r219, 5;
	add.s32 	%r224, %r223, -939442524;
	xor.b32  	%r225, %r221, %r222;
	xor.b32  	%r226, %r225, %r224;
	add.s32 	%r227, %r226, %r211;
	shl.b32 	%r228, %r227, 4;
	add.s32 	%r229, %r228, -1383041155;
	add.s32 	%r230, %r227, -1492604898;
	xor.b32  	%r231, %r229, %r230;
	shr.u32 	%r232, %r227, 5;
	add.s32 	%r233, %r232, 2123724318;
	xor.b32  	%r234, %r231, %r233;
	add.s32 	%r235, %r234, %r219;
	shl.b32 	%r236, %r235, 4;
	add.s32 	%r237, %r236, -1556008596;
	add.s32 	%r238, %r235, 1161830871;
	shr.u32 	%r239, %r235, 5;
	add.s32 	%r240, %r239, -939442524;
	xor.b32  	%r241, %r237, %r238;
	xor.b32  	%r242, %r241, %r240;
	add.s32 	%r243, %r242, %r227;
	shl.b32 	%r244, %r243, 4;
	add.s32 	%r245, %r244, -1383041155;
	add.s32 	%r246, %r243, 1161830871;
	xor.b32  	%r247, %r245, %r246;
	shr.u32 	%r248, %r243, 5;
	add.s32 	%r249, %r248, 2123724318;
	xor.b32  	%r250, %r247, %r249;
	add.s32 	%r251, %r250, %r235;
	shl.b32 	%r252, %r251, 4;
	add.s32 	%r253, %r252, -1556008596;
	add.s32 	%r254, %r251, -478700656;
	shr.u32 	%r255, %r251, 5;
	add.s32 	%r256, %r255, -939442524;
	xor.b32  	%r257, %r253, %r254;
	xor.b32  	%r258, %r257, %r256;
	add.s32 	%r259, %r258, %r243;
	add.s64 	%rd1, %rd3, 16;
	mad.lo.s32 	%r260, %r259, 1664525, 1013904223;
	and.b32  	%r261, %r260, 16777215;
	cvt.rn.f32.u32 	%f24, %r261;
	mov.f32 	%f25, 0f4B800000;
	div.approx.ftz.f32 	%f26, %f24, %f25;
	mad.lo.s32 	%r3, %r260, 1664525, 1013904223;
	st.local.u32 	[%rd3+16], %r3;
	and.b32  	%r262, %r3, 16777215;
	cvt.rn.f32.u32 	%f27, %r262;
	div.approx.ftz.f32 	%f28, %f27, %f25;
	ld.global.f32 	%f29, [FOV_aspect_ratio];
	rcp.approx.ftz.f32 	%f30, %f29;
	cvt.rn.f32.u32 	%f31, %r16;
	add.ftz.f32 	%f32, %f26, %f31;
	cvt.rn.f32.s32 	%f33, %r7;
	div.approx.ftz.f32 	%f34, %f32, %f33;
	add.ftz.f32 	%f35, %f34, 0fBF000000;
	cvt.rn.f32.u32 	%f36, %r6;
	add.ftz.f32 	%f37, %f28, %f36;
	cvt.rn.f32.s32 	%f38, %r5;
	div.approx.ftz.f32 	%f39, %f37, %f38;
	mov.f32 	%f40, 0f3F000000;
	sub.ftz.f32 	%f41, %f40, %f39;
	mul.ftz.f32 	%f42, %f30, %f41;
	ld.global.f32 	%f43, [camera_viewplane_length];
	div.approx.ftz.f32 	%f44, %f35, %f43;
	ld.global.f32 	%f1, [camera_focal_length];
	mul.ftz.f32 	%f2, %f1, %f44;
	div.approx.ftz.f32 	%f3, %f42, %f43;
	ld.global.f32 	%f4, [camera_lens_diameter];
	setp.leu.ftz.f32 	%p1, %f4, 0f00000000;
	mov.f32 	%f225, 0f00000000;
	mov.f32 	%f226, %f225;
	@%p1 bra 	$L__BB2_10;

	mad.lo.s32 	%r263, %r3, 1664525, 1013904223;
	and.b32  	%r264, %r263, 16777215;
	cvt.rn.f32.u32 	%f45, %r264;
	div.approx.ftz.f32 	%f47, %f45, %f25;
	mad.lo.s32 	%r265, %r263, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r265;
	and.b32  	%r266, %r265, 16777215;
	cvt.rn.f32.u32 	%f48, %r266;
	div.approx.ftz.f32 	%f49, %f48, %f25;
	fma.rn.ftz.f32 	%f5, %f47, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f6, %f49, 0f40000000, 0fBF800000;
	neg.ftz.f32 	%f223, %f6;
	setp.gt.ftz.f32 	%p2, %f5, %f223;
	@%p2 bra 	$L__BB2_6;
	bra.uni 	$L__BB2_2;

$L__BB2_6:
	setp.gt.ftz.f32 	%p5, %f5, %f6;
	@%p5 bra 	$L__BB2_8;
	bra.uni 	$L__BB2_7;

$L__BB2_8:
	div.approx.ftz.f32 	%f224, %f6, %f5;
	mov.f32 	%f223, %f5;
	bra.uni 	$L__BB2_9;

$L__BB2_2:
	setp.lt.ftz.f32 	%p3, %f5, %f6;
	@%p3 bra 	$L__BB2_5;
	bra.uni 	$L__BB2_3;

$L__BB2_5:
	neg.ftz.f32 	%f223, %f5;
	div.approx.ftz.f32 	%f53, %f6, %f5;
	add.ftz.f32 	%f224, %f53, 0f40800000;
	bra.uni 	$L__BB2_9;

$L__BB2_7:
	div.approx.ftz.f32 	%f54, %f5, %f6;
	mov.f32 	%f55, 0f40000000;
	sub.ftz.f32 	%f224, %f55, %f54;
	mov.f32 	%f223, %f6;
	bra.uni 	$L__BB2_9;

$L__BB2_3:
	setp.eq.ftz.f32 	%p4, %f6, 0f00000000;
	mov.f32 	%f224, 0f00000000;
	@%p4 bra 	$L__BB2_9;

	div.approx.ftz.f32 	%f51, %f5, %f6;
	mov.f32 	%f52, 0f40C00000;
	sub.ftz.f32 	%f224, %f52, %f51;

$L__BB2_9:
	cvt.ftz.f64.f32 	%fd1, %f224;
	mul.f64 	%fd2, %fd1, 0d3FE921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f56, %fd2;
	cos.approx.ftz.f32 	%f57, %f56;
	mul.ftz.f32 	%f58, %f223, %f57;
	sin.approx.ftz.f32 	%f59, %f56;
	mul.ftz.f32 	%f60, %f223, %f59;
	mul.ftz.f32 	%f61, %f58, 0f3F000000;
	mul.ftz.f32 	%f225, %f61, %f4;
	mul.ftz.f32 	%f62, %f60, 0f3F000000;
	mul.ftz.f32 	%f226, %f4, %f62;

$L__BB2_10:
	add.u64 	%rd14, %SP, 0;
	ld.global.v2.f32 	{%f71, %f72}, [camera_direction];
	mov.u32 	%r270, 0;
	cvt.ftz.f64.f32 	%fd3, %f71;
	add.f64 	%fd4, %fd3, 0dBFF921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f75, %fd4;
	cvt.ftz.f64.f32 	%fd5, %f72;
	mov.f64 	%fd6, 0d3FF921FB54442D18;
	sub.f64 	%fd7, %fd6, %fd5;
	cvt.rn.ftz.f32.f64 	%f76, %fd7;
	sin.approx.ftz.f32 	%f77, %f75;
	cos.approx.ftz.f32 	%f78, %f75;
	sin.approx.ftz.f32 	%f79, %f76;
	cos.approx.ftz.f32 	%f80, %f76;
	fma.rn.ftz.f32 	%f81, %f80, %f78, 0f00000000;
	fma.rn.ftz.f32 	%f82, %f79, 0f80000000, %f81;
	fma.rn.ftz.f32 	%f83, %f77, 0f80000000, %f82;
	fma.rn.ftz.f32 	%f84, %f80, 0f00000000, 0f00000000;
	sub.ftz.f32 	%f85, %f84, %f79;
	add.ftz.f32 	%f86, %f85, 0f00000000;
	fma.rn.ftz.f32 	%f87, %f80, %f77, 0f00000000;
	fma.rn.ftz.f32 	%f88, %f79, 0f80000000, %f87;
	fma.rn.ftz.f32 	%f89, %f78, 0f00000000, %f88;
	fma.rn.ftz.f32 	%f90, %f79, %f78, 0f00000000;
	fma.rn.ftz.f32 	%f91, %f80, 0f00000000, %f90;
	fma.rn.ftz.f32 	%f92, %f77, 0f80000000, %f91;
	fma.rn.ftz.f32 	%f93, %f79, 0f00000000, 0f00000000;
	add.ftz.f32 	%f94, %f93, %f80;
	add.ftz.f32 	%f95, %f94, 0f00000000;
	fma.rn.ftz.f32 	%f96, %f79, %f77, 0f00000000;
	fma.rn.ftz.f32 	%f97, %f80, 0f00000000, %f96;
	fma.rn.ftz.f32 	%f98, %f78, 0f00000000, %f97;
	fma.rn.ftz.f32 	%f99, %f78, 0f00000000, 0f00000000;
	sub.ftz.f32 	%f100, %f99, %f77;
	fma.rn.ftz.f32 	%f101, %f77, 0f00000000, 0f00000000;
	add.ftz.f32 	%f102, %f101, %f78;
	mul.ftz.f32 	%f103, %f225, %f86;
	fma.rn.ftz.f32 	%f104, %f83, 0f00000000, %f103;
	fma.rn.ftz.f32 	%f105, %f226, %f89, %f104;
	mul.ftz.f32 	%f106, %f225, %f95;
	fma.rn.ftz.f32 	%f107, %f92, 0f00000000, %f106;
	fma.rn.ftz.f32 	%f108, %f226, %f98, %f107;
	mul.ftz.f32 	%f109, %f225, 0f00000000;
	fma.rn.ftz.f32 	%f110, %f100, 0f00000000, %f109;
	fma.rn.ftz.f32 	%f111, %f226, %f102, %f110;
	ld.global.f32 	%f112, [camera_position];
	add.ftz.f32 	%f63, %f105, %f112;
	ld.global.f32 	%f113, [camera_position+4];
	add.ftz.f32 	%f64, %f108, %f113;
	ld.global.f32 	%f114, [camera_position+8];
	add.ftz.f32 	%f65, %f111, %f114;
	sub.ftz.f32 	%f115, %f2, %f225;
	mul.ftz.f32 	%f116, %f115, %f86;
	fma.rn.ftz.f32 	%f117, %f1, %f83, %f116;
	mul.ftz.f32 	%f118, %f1, %f3;
	sub.ftz.f32 	%f119, %f118, %f226;
	fma.rn.ftz.f32 	%f120, %f119, %f89, %f117;
	mul.ftz.f32 	%f121, %f115, %f95;
	fma.rn.ftz.f32 	%f122, %f1, %f92, %f121;
	fma.rn.ftz.f32 	%f123, %f119, %f98, %f122;
	mul.ftz.f32 	%f124, %f115, 0f00000000;
	fma.rn.ftz.f32 	%f125, %f1, %f100, %f124;
	fma.rn.ftz.f32 	%f126, %f119, %f102, %f125;
	mul.ftz.f32 	%f127, %f123, %f123;
	fma.rn.ftz.f32 	%f128, %f120, %f120, %f127;
	fma.rn.ftz.f32 	%f129, %f126, %f126, %f128;
	rsqrt.approx.ftz.f32 	%f130, %f129;
	mul.ftz.f32 	%f66, %f120, %f130;
	mul.ftz.f32 	%f67, %f123, %f130;
	mul.ftz.f32 	%f68, %f126, %f130;
	cvt.rn.f32.u32 	%f131, %r2;
	rcp.approx.ftz.f32 	%f132, %f131;
	cvt.ftz.f64.f32 	%fd8, %f132;
	st.local.f64 	[%rd1+-16], %fd8;
	st.local.u32 	[%rd1+-8], %r1;
	mov.u16 	%rs1, 1;
	st.local.u8 	[%rd1+-4], %rs1;
	mov.u16 	%rs2, 0;
	st.local.v2.u8 	[%rd1+4], {%rs2, %rs2};
	ld.global.u32 	%r4, [camera_ray_type];
	ld.global.u32 	%r267, [top_object];
	mov.f32 	%f69, 0f3727C5AC;
	mov.f32 	%f70, 0f6C4ECB8F;
	mov.u32 	%r269, 255;
	mov.u32 	%r271, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r267, %f63, %f64, %f65, %f66, %f67, %f68, %r4, %f69, %f70, %r269, %r270, %rd14, %r271);
	// end inline asm
	ld.local.u8 	%rs3, [%rd1+5];
	setp.eq.s16 	%p6, %rs3, 0;
	@%p6 bra 	$L__BB2_21;

	add.u64 	%rd15, %SP, 0;
	ld.local.v2.f32 	{%f141, %f142}, [%rd1+8];
	ld.local.f32 	%f135, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs2;
	ld.global.u32 	%r272, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r272, %f141, %f142, %f135, %f66, %f67, %f68, %r4, %f69, %f70, %r269, %r270, %rd15, %r271);
	// end inline asm
	ld.local.u8 	%rs5, [%rd1+5];
	setp.eq.s16 	%p7, %rs5, 0;
	@%p7 bra 	$L__BB2_21;

	add.u64 	%rd16, %SP, 0;
	ld.local.v2.f32 	{%f151, %f152}, [%rd1+8];
	mov.u32 	%r280, 0;
	ld.local.f32 	%f145, [%rd1+16];
	mov.u16 	%rs6, 0;
	st.local.u8 	[%rd1+5], %rs6;
	ld.global.u32 	%r277, [top_object];
	mov.f32 	%f149, 0f3727C5AC;
	mov.f32 	%f150, 0f6C4ECB8F;
	mov.u32 	%r279, 255;
	mov.u32 	%r281, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r277, %f151, %f152, %f145, %f66, %f67, %f68, %r4, %f149, %f150, %r279, %r280, %rd16, %r281);
	// end inline asm
	ld.local.u8 	%rs7, [%rd1+5];
	setp.eq.s16 	%p8, %rs7, 0;
	@%p8 bra 	$L__BB2_21;

	add.u64 	%rd17, %SP, 0;
	ld.local.v2.f32 	{%f161, %f162}, [%rd1+8];
	ld.local.f32 	%f155, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs6;
	ld.global.u32 	%r282, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r282, %f161, %f162, %f155, %f66, %f67, %f68, %r4, %f149, %f150, %r279, %r280, %rd17, %r281);
	// end inline asm
	ld.local.u8 	%rs9, [%rd1+5];
	setp.eq.s16 	%p9, %rs9, 0;
	@%p9 bra 	$L__BB2_21;

	add.u64 	%rd18, %SP, 0;
	ld.local.v2.f32 	{%f171, %f172}, [%rd1+8];
	mov.u32 	%r290, 0;
	ld.local.f32 	%f165, [%rd1+16];
	mov.u16 	%rs10, 0;
	st.local.u8 	[%rd1+5], %rs10;
	ld.global.u32 	%r287, [top_object];
	mov.f32 	%f169, 0f3727C5AC;
	mov.f32 	%f170, 0f6C4ECB8F;
	mov.u32 	%r289, 255;
	mov.u32 	%r291, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r287, %f171, %f172, %f165, %f66, %f67, %f68, %r4, %f169, %f170, %r289, %r290, %rd18, %r291);
	// end inline asm
	ld.local.u8 	%rs11, [%rd1+5];
	setp.eq.s16 	%p10, %rs11, 0;
	@%p10 bra 	$L__BB2_21;

	add.u64 	%rd19, %SP, 0;
	ld.local.v2.f32 	{%f181, %f182}, [%rd1+8];
	ld.local.f32 	%f175, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs10;
	ld.global.u32 	%r292, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r292, %f181, %f182, %f175, %f66, %f67, %f68, %r4, %f169, %f170, %r289, %r290, %rd19, %r291);
	// end inline asm
	ld.local.u8 	%rs13, [%rd1+5];
	setp.eq.s16 	%p11, %rs13, 0;
	@%p11 bra 	$L__BB2_21;

	add.u64 	%rd20, %SP, 0;
	ld.local.v2.f32 	{%f191, %f192}, [%rd1+8];
	mov.u32 	%r300, 0;
	ld.local.f32 	%f185, [%rd1+16];
	mov.u16 	%rs14, 0;
	st.local.u8 	[%rd1+5], %rs14;
	ld.global.u32 	%r297, [top_object];
	mov.f32 	%f189, 0f3727C5AC;
	mov.f32 	%f190, 0f6C4ECB8F;
	mov.u32 	%r299, 255;
	mov.u32 	%r301, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r297, %f191, %f192, %f185, %f66, %f67, %f68, %r4, %f189, %f190, %r299, %r300, %rd20, %r301);
	// end inline asm
	ld.local.u8 	%rs15, [%rd1+5];
	setp.eq.s16 	%p12, %rs15, 0;
	@%p12 bra 	$L__BB2_21;

	add.u64 	%rd21, %SP, 0;
	ld.local.v2.f32 	{%f201, %f202}, [%rd1+8];
	ld.local.f32 	%f195, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs14;
	ld.global.u32 	%r302, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r302, %f201, %f202, %f195, %f66, %f67, %f68, %r4, %f189, %f190, %r299, %r300, %rd21, %r301);
	// end inline asm
	ld.local.u8 	%rs17, [%rd1+5];
	setp.eq.s16 	%p13, %rs17, 0;
	@%p13 bra 	$L__BB2_21;

	add.u64 	%rd22, %SP, 0;
	ld.local.v2.f32 	{%f211, %f212}, [%rd1+8];
	mov.u32 	%r310, 0;
	ld.local.f32 	%f205, [%rd1+16];
	mov.u16 	%rs18, 0;
	st.local.u8 	[%rd1+5], %rs18;
	ld.global.u32 	%r307, [top_object];
	mov.f32 	%f209, 0f3727C5AC;
	mov.f32 	%f210, 0f6C4ECB8F;
	mov.u32 	%r309, 255;
	mov.u32 	%r311, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r307, %f211, %f212, %f205, %f66, %f67, %f68, %r4, %f209, %f210, %r309, %r310, %rd22, %r311);
	// end inline asm
	ld.local.u8 	%rs19, [%rd1+5];
	setp.eq.s16 	%p14, %rs19, 0;
	@%p14 bra 	$L__BB2_21;

	add.u64 	%rd23, %SP, 0;
	ld.local.v2.f32 	{%f221, %f222}, [%rd1+8];
	ld.local.f32 	%f215, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs18;
	ld.global.u32 	%r312, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r312, %f221, %f222, %f215, %f66, %f67, %f68, %r4, %f209, %f210, %r309, %r310, %rd23, %r311);
	// end inline asm
	ld.local.u8 	%rs21, [%rd1+5];
	setp.eq.s16 	%p15, %rs21, 0;
	@%p15 bra 	$L__BB2_21;

	mov.u16 	%rs22, 0;
	st.local.u8 	[%rd1+5], %rs22;

$L__BB2_21:
	ret;

}
	// .globl	_Z18pixel_label_raygenv
.visible .entry _Z18pixel_label_raygenv()
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<23>;
	.reg .f32 	%f<178>;
	.reg .b32 	%r<306>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<23>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd3, 0;
	ld.global.u32 	%r7, [launch_index+8];
	ld.global.u32 	%r8, [launch_dim+4];
	ld.global.u32 	%r9, [launch_index+4];
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	ld.global.u32 	%r11, [launch_dim+8];
	ld.global.u32 	%r12, [random_seed];
	shl.b32 	%r13, %r12, 4;
	add.s32 	%r14, %r13, -1556008596;
	add.s32 	%r15, %r12, -1640531527;
	shr.u32 	%r16, %r12, 5;
	add.s32 	%r17, %r16, -939442524;
	xor.b32  	%r18, %r14, %r15;
	xor.b32  	%r19, %r18, %r17;
	add.s32 	%r20, %r10, %r19;
	shl.b32 	%r21, %r20, 4;
	add.s32 	%r22, %r21, -1383041155;
	add.s32 	%r23, %r20, -1640531527;
	xor.b32  	%r24, %r22, %r23;
	shr.u32 	%r25, %r20, 5;
	add.s32 	%r26, %r25, 2123724318;
	xor.b32  	%r27, %r24, %r26;
	add.s32 	%r28, %r27, %r12;
	shl.b32 	%r29, %r28, 4;
	add.s32 	%r30, %r29, -1556008596;
	add.s32 	%r31, %r28, 1013904242;
	shr.u32 	%r32, %r28, 5;
	add.s32 	%r33, %r32, -939442524;
	xor.b32  	%r34, %r30, %r31;
	xor.b32  	%r35, %r34, %r33;
	add.s32 	%r36, %r35, %r20;
	shl.b32 	%r37, %r36, 4;
	add.s32 	%r38, %r37, -1383041155;
	add.s32 	%r39, %r36, 1013904242;
	xor.b32  	%r40, %r38, %r39;
	shr.u32 	%r41, %r36, 5;
	add.s32 	%r42, %r41, 2123724318;
	xor.b32  	%r43, %r40, %r42;
	add.s32 	%r44, %r43, %r28;
	shl.b32 	%r45, %r44, 4;
	add.s32 	%r46, %r45, -1556008596;
	add.s32 	%r47, %r44, -626627285;
	shr.u32 	%r48, %r44, 5;
	add.s32 	%r49, %r48, -939442524;
	xor.b32  	%r50, %r46, %r47;
	xor.b32  	%r51, %r50, %r49;
	add.s32 	%r52, %r51, %r36;
	shl.b32 	%r53, %r52, 4;
	add.s32 	%r54, %r53, -1383041155;
	add.s32 	%r55, %r52, -626627285;
	xor.b32  	%r56, %r54, %r55;
	shr.u32 	%r57, %r52, 5;
	add.s32 	%r58, %r57, 2123724318;
	xor.b32  	%r59, %r56, %r58;
	add.s32 	%r60, %r59, %r44;
	shl.b32 	%r61, %r60, 4;
	add.s32 	%r62, %r61, -1556008596;
	add.s32 	%r63, %r60, 2027808484;
	shr.u32 	%r64, %r60, 5;
	add.s32 	%r65, %r64, -939442524;
	xor.b32  	%r66, %r62, %r63;
	xor.b32  	%r67, %r66, %r65;
	add.s32 	%r68, %r67, %r52;
	shl.b32 	%r69, %r68, 4;
	add.s32 	%r70, %r69, -1383041155;
	add.s32 	%r71, %r68, 2027808484;
	xor.b32  	%r72, %r70, %r71;
	shr.u32 	%r73, %r68, 5;
	add.s32 	%r74, %r73, 2123724318;
	xor.b32  	%r75, %r72, %r74;
	add.s32 	%r76, %r75, %r60;
	shl.b32 	%r77, %r76, 4;
	add.s32 	%r78, %r77, -1556008596;
	add.s32 	%r79, %r76, 387276957;
	shr.u32 	%r80, %r76, 5;
	add.s32 	%r81, %r80, -939442524;
	xor.b32  	%r82, %r78, %r79;
	xor.b32  	%r83, %r82, %r81;
	add.s32 	%r84, %r83, %r68;
	shl.b32 	%r85, %r84, 4;
	add.s32 	%r86, %r85, -1383041155;
	add.s32 	%r87, %r84, 387276957;
	xor.b32  	%r88, %r86, %r87;
	shr.u32 	%r89, %r84, 5;
	add.s32 	%r90, %r89, 2123724318;
	xor.b32  	%r91, %r88, %r90;
	add.s32 	%r92, %r91, %r76;
	shl.b32 	%r93, %r92, 4;
	add.s32 	%r94, %r93, -1556008596;
	add.s32 	%r95, %r92, -1253254570;
	shr.u32 	%r96, %r92, 5;
	add.s32 	%r97, %r96, -939442524;
	xor.b32  	%r98, %r94, %r95;
	xor.b32  	%r99, %r98, %r97;
	add.s32 	%r100, %r99, %r84;
	shl.b32 	%r101, %r100, 4;
	add.s32 	%r102, %r101, -1383041155;
	add.s32 	%r103, %r100, -1253254570;
	xor.b32  	%r104, %r102, %r103;
	shr.u32 	%r105, %r100, 5;
	add.s32 	%r106, %r105, 2123724318;
	xor.b32  	%r107, %r104, %r106;
	add.s32 	%r108, %r107, %r92;
	shl.b32 	%r109, %r108, 4;
	add.s32 	%r110, %r109, -1556008596;
	add.s32 	%r111, %r108, 1401181199;
	shr.u32 	%r112, %r108, 5;
	add.s32 	%r113, %r112, -939442524;
	xor.b32  	%r114, %r110, %r111;
	xor.b32  	%r115, %r114, %r113;
	add.s32 	%r116, %r115, %r100;
	shl.b32 	%r117, %r116, 4;
	add.s32 	%r118, %r117, -1383041155;
	add.s32 	%r119, %r116, 1401181199;
	xor.b32  	%r120, %r118, %r119;
	shr.u32 	%r121, %r116, 5;
	add.s32 	%r122, %r121, 2123724318;
	xor.b32  	%r123, %r120, %r122;
	add.s32 	%r124, %r123, %r108;
	shl.b32 	%r125, %r124, 4;
	add.s32 	%r126, %r125, -1556008596;
	add.s32 	%r127, %r124, -239350328;
	shr.u32 	%r128, %r124, 5;
	add.s32 	%r129, %r128, -939442524;
	xor.b32  	%r130, %r126, %r127;
	xor.b32  	%r131, %r130, %r129;
	add.s32 	%r132, %r131, %r116;
	shl.b32 	%r133, %r132, 4;
	add.s32 	%r134, %r133, -1383041155;
	add.s32 	%r135, %r132, -239350328;
	xor.b32  	%r136, %r134, %r135;
	shr.u32 	%r137, %r132, 5;
	add.s32 	%r138, %r137, 2123724318;
	xor.b32  	%r139, %r136, %r138;
	add.s32 	%r140, %r139, %r124;
	shl.b32 	%r141, %r140, 4;
	add.s32 	%r142, %r141, -1556008596;
	add.s32 	%r143, %r140, -1879881855;
	shr.u32 	%r144, %r140, 5;
	add.s32 	%r145, %r144, -939442524;
	xor.b32  	%r146, %r142, %r143;
	xor.b32  	%r147, %r146, %r145;
	add.s32 	%r148, %r147, %r132;
	shl.b32 	%r149, %r148, 4;
	add.s32 	%r150, %r149, -1383041155;
	add.s32 	%r151, %r148, -1879881855;
	xor.b32  	%r152, %r150, %r151;
	shr.u32 	%r153, %r148, 5;
	add.s32 	%r154, %r153, 2123724318;
	xor.b32  	%r155, %r152, %r154;
	add.s32 	%r156, %r155, %r140;
	shl.b32 	%r157, %r156, 4;
	add.s32 	%r158, %r157, -1556008596;
	add.s32 	%r159, %r156, 774553914;
	shr.u32 	%r160, %r156, 5;
	add.s32 	%r161, %r160, -939442524;
	xor.b32  	%r162, %r158, %r159;
	xor.b32  	%r163, %r162, %r161;
	add.s32 	%r164, %r163, %r148;
	shl.b32 	%r165, %r164, 4;
	add.s32 	%r166, %r165, -1383041155;
	add.s32 	%r167, %r164, 774553914;
	xor.b32  	%r168, %r166, %r167;
	shr.u32 	%r169, %r164, 5;
	add.s32 	%r170, %r169, 2123724318;
	xor.b32  	%r171, %r168, %r170;
	add.s32 	%r172, %r171, %r156;
	shl.b32 	%r173, %r172, 4;
	add.s32 	%r174, %r173, -1556008596;
	add.s32 	%r175, %r172, -865977613;
	shr.u32 	%r176, %r172, 5;
	add.s32 	%r177, %r176, -939442524;
	xor.b32  	%r178, %r174, %r175;
	xor.b32  	%r179, %r178, %r177;
	add.s32 	%r180, %r179, %r164;
	shl.b32 	%r181, %r180, 4;
	add.s32 	%r182, %r181, -1383041155;
	add.s32 	%r183, %r180, -865977613;
	xor.b32  	%r184, %r182, %r183;
	shr.u32 	%r185, %r180, 5;
	add.s32 	%r186, %r185, 2123724318;
	xor.b32  	%r187, %r184, %r186;
	add.s32 	%r188, %r187, %r172;
	shl.b32 	%r189, %r188, 4;
	add.s32 	%r190, %r189, -1556008596;
	add.s32 	%r191, %r188, 1788458156;
	shr.u32 	%r192, %r188, 5;
	add.s32 	%r193, %r192, -939442524;
	xor.b32  	%r194, %r190, %r191;
	xor.b32  	%r195, %r194, %r193;
	add.s32 	%r196, %r195, %r180;
	shl.b32 	%r197, %r196, 4;
	add.s32 	%r198, %r197, -1383041155;
	add.s32 	%r199, %r196, 1788458156;
	xor.b32  	%r200, %r198, %r199;
	shr.u32 	%r201, %r196, 5;
	add.s32 	%r202, %r201, 2123724318;
	xor.b32  	%r203, %r200, %r202;
	add.s32 	%r204, %r203, %r188;
	shl.b32 	%r205, %r204, 4;
	add.s32 	%r206, %r205, -1556008596;
	add.s32 	%r207, %r204, 147926629;
	shr.u32 	%r208, %r204, 5;
	add.s32 	%r209, %r208, -939442524;
	xor.b32  	%r210, %r206, %r207;
	xor.b32  	%r211, %r210, %r209;
	add.s32 	%r212, %r211, %r196;
	shl.b32 	%r213, %r212, 4;
	add.s32 	%r214, %r213, -1383041155;
	add.s32 	%r215, %r212, 147926629;
	xor.b32  	%r216, %r214, %r215;
	shr.u32 	%r217, %r212, 5;
	add.s32 	%r218, %r217, 2123724318;
	xor.b32  	%r219, %r216, %r218;
	add.s32 	%r220, %r219, %r204;
	shl.b32 	%r221, %r220, 4;
	add.s32 	%r222, %r221, -1556008596;
	add.s32 	%r223, %r220, -1492604898;
	shr.u32 	%r224, %r220, 5;
	add.s32 	%r225, %r224, -939442524;
	xor.b32  	%r226, %r222, %r223;
	xor.b32  	%r227, %r226, %r225;
	add.s32 	%r228, %r227, %r212;
	shl.b32 	%r229, %r228, 4;
	add.s32 	%r230, %r229, -1383041155;
	add.s32 	%r231, %r228, -1492604898;
	xor.b32  	%r232, %r230, %r231;
	shr.u32 	%r233, %r228, 5;
	add.s32 	%r234, %r233, 2123724318;
	xor.b32  	%r235, %r232, %r234;
	add.s32 	%r236, %r235, %r220;
	shl.b32 	%r237, %r236, 4;
	add.s32 	%r238, %r237, -1556008596;
	add.s32 	%r239, %r236, 1161830871;
	shr.u32 	%r240, %r236, 5;
	add.s32 	%r241, %r240, -939442524;
	xor.b32  	%r242, %r238, %r239;
	xor.b32  	%r243, %r242, %r241;
	add.s32 	%r244, %r243, %r228;
	shl.b32 	%r245, %r244, 4;
	add.s32 	%r246, %r245, -1383041155;
	add.s32 	%r247, %r244, 1161830871;
	xor.b32  	%r248, %r246, %r247;
	shr.u32 	%r249, %r244, 5;
	add.s32 	%r250, %r249, 2123724318;
	xor.b32  	%r251, %r248, %r250;
	add.s32 	%r252, %r251, %r236;
	shl.b32 	%r253, %r252, 4;
	add.s32 	%r254, %r253, -1556008596;
	add.s32 	%r255, %r252, -478700656;
	shr.u32 	%r256, %r252, 5;
	add.s32 	%r257, %r256, -939442524;
	xor.b32  	%r258, %r254, %r255;
	xor.b32  	%r259, %r258, %r257;
	add.s32 	%r260, %r259, %r244;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	add.s64 	%rd1, %rd4, 16;
	st.local.u32 	[%rd4+16], %r260;
	ld.global.f32 	%f12, [FOV_aspect_ratio];
	rcp.approx.ftz.f32 	%f13, %f12;
	cvt.rn.f32.u32 	%f14, %r9;
	add.ftz.f32 	%f15, %f14, 0f3F000000;
	mov.f32 	%f16, 0f3F000000;
	cvt.rn.f32.s32 	%f17, %r8;
	div.approx.ftz.f32 	%f18, %f15, %f17;
	add.ftz.f32 	%f19, %f18, 0fBF000000;
	cvt.rn.f32.u32 	%f20, %r7;
	add.ftz.f32 	%f21, %f20, 0f3F000000;
	cvt.rn.f32.s32 	%f22, %r11;
	div.approx.ftz.f32 	%f23, %f21, %f22;
	sub.ftz.f32 	%f24, %f16, %f23;
	mul.ftz.f32 	%f25, %f13, %f24;
	ld.global.f32 	%f26, [camera_viewplane_length];
	div.approx.ftz.f32 	%f27, %f19, %f26;
	div.approx.ftz.f32 	%f28, %f25, %f26;
	ld.global.v2.f32 	{%f29, %f30}, [camera_direction];
	mov.u32 	%r5, 0;
	cvt.ftz.f64.f32 	%fd1, %f29;
	add.f64 	%fd2, %fd1, 0dBFF921FB54442D18;
	cvt.rn.ftz.f32.f64 	%f33, %fd2;
	cvt.ftz.f64.f32 	%fd3, %f30;
	mov.f64 	%fd4, 0d3FF921FB54442D18;
	sub.f64 	%fd5, %fd4, %fd3;
	cvt.rn.ftz.f32.f64 	%f34, %fd5;
	sin.approx.ftz.f32 	%f35, %f33;
	cos.approx.ftz.f32 	%f36, %f33;
	sin.approx.ftz.f32 	%f37, %f34;
	cos.approx.ftz.f32 	%f38, %f34;
	fma.rn.ftz.f32 	%f39, %f38, %f36, 0f00000000;
	fma.rn.ftz.f32 	%f40, %f37, 0f80000000, %f39;
	fma.rn.ftz.f32 	%f41, %f35, 0f80000000, %f40;
	fma.rn.ftz.f32 	%f42, %f38, 0f00000000, 0f00000000;
	sub.ftz.f32 	%f43, %f42, %f37;
	add.ftz.f32 	%f44, %f43, 0f00000000;
	fma.rn.ftz.f32 	%f45, %f38, %f35, 0f00000000;
	fma.rn.ftz.f32 	%f46, %f37, 0f80000000, %f45;
	fma.rn.ftz.f32 	%f47, %f36, 0f00000000, %f46;
	fma.rn.ftz.f32 	%f48, %f37, %f36, 0f00000000;
	fma.rn.ftz.f32 	%f49, %f38, 0f00000000, %f48;
	fma.rn.ftz.f32 	%f50, %f35, 0f80000000, %f49;
	fma.rn.ftz.f32 	%f51, %f37, 0f00000000, 0f00000000;
	add.ftz.f32 	%f52, %f51, %f38;
	add.ftz.f32 	%f53, %f52, 0f00000000;
	fma.rn.ftz.f32 	%f54, %f37, %f35, 0f00000000;
	fma.rn.ftz.f32 	%f55, %f38, 0f00000000, %f54;
	fma.rn.ftz.f32 	%f56, %f36, 0f00000000, %f55;
	fma.rn.ftz.f32 	%f57, %f36, 0f00000000, 0f00000000;
	sub.ftz.f32 	%f58, %f57, %f35;
	fma.rn.ftz.f32 	%f59, %f35, 0f00000000, 0f00000000;
	add.ftz.f32 	%f60, %f59, %f36;
	ld.global.f32 	%f61, [camera_focal_length];
	mul.ftz.f32 	%f62, %f61, %f27;
	mul.ftz.f32 	%f63, %f61, %f28;
	mul.ftz.f32 	%f64, %f44, 0f00000000;
	fma.rn.ftz.f32 	%f65, %f41, 0f00000000, %f64;
	fma.rn.ftz.f32 	%f66, %f47, 0f00000000, %f65;
	mul.ftz.f32 	%f67, %f53, 0f00000000;
	fma.rn.ftz.f32 	%f68, %f50, 0f00000000, %f67;
	fma.rn.ftz.f32 	%f69, %f56, 0f00000000, %f68;
	fma.rn.ftz.f32 	%f70, %f58, 0f00000000, 0f00000000;
	fma.rn.ftz.f32 	%f71, %f60, 0f00000000, %f70;
	ld.global.f32 	%f72, [camera_position];
	add.ftz.f32 	%f4, %f66, %f72;
	ld.global.f32 	%f73, [camera_position+4];
	add.ftz.f32 	%f5, %f69, %f73;
	ld.global.f32 	%f74, [camera_position+8];
	add.ftz.f32 	%f6, %f71, %f74;
	mul.ftz.f32 	%f75, %f62, %f44;
	fma.rn.ftz.f32 	%f76, %f61, %f41, %f75;
	fma.rn.ftz.f32 	%f77, %f63, %f47, %f76;
	mul.ftz.f32 	%f78, %f62, %f53;
	fma.rn.ftz.f32 	%f79, %f61, %f50, %f78;
	fma.rn.ftz.f32 	%f80, %f63, %f56, %f79;
	mul.ftz.f32 	%f81, %f62, 0f00000000;
	fma.rn.ftz.f32 	%f82, %f61, %f58, %f81;
	fma.rn.ftz.f32 	%f83, %f63, %f60, %f82;
	mul.ftz.f32 	%f84, %f80, %f80;
	fma.rn.ftz.f32 	%f85, %f77, %f77, %f84;
	fma.rn.ftz.f32 	%f86, %f83, %f83, %f85;
	rsqrt.approx.ftz.f32 	%f87, %f86;
	mul.ftz.f32 	%f7, %f77, %f87;
	mul.ftz.f32 	%f8, %f80, %f87;
	mul.ftz.f32 	%f9, %f83, %f87;
	st.local.u64 	[%rd4], %rd3;
	st.local.u32 	[%rd4+8], %r10;
	mov.u16 	%rs1, 1;
	st.local.u8 	[%rd4+12], %rs1;
	mov.u16 	%rs2, 0;
	st.local.v2.u8 	[%rd4+20], {%rs2, %rs2};
	ld.global.u32 	%r1, [pixel_label_ray_type];
	ld.global.u32 	%r2, [top_object];
	mov.f32 	%f10, 0f3727C5AC;
	mov.f32 	%f11, 0f6C4ECB8F;
	mov.u32 	%r4, 255;
	mov.u32 	%r6, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r2, %f4, %f5, %f6, %f7, %f8, %f9, %r1, %f10, %f11, %r4, %r5, %rd2, %r6);
	// end inline asm
	ld.local.u8 	%rs3, [%rd4+21];
	setp.eq.s16 	%p1, %rs3, 0;
	@%p1 bra 	$L__BB3_11;

	add.u64 	%rd14, %SP, 0;
	ld.local.v2.f32 	{%f96, %f97}, [%rd1+8];
	ld.local.f32 	%f90, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs2;
	ld.global.u32 	%r261, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r261, %f96, %f97, %f90, %f7, %f8, %f9, %r1, %f10, %f11, %r4, %r5, %rd14, %r6);
	// end inline asm
	ld.local.u8 	%rs5, [%rd1+5];
	setp.eq.s16 	%p2, %rs5, 0;
	@%p2 bra 	$L__BB3_11;

	add.u64 	%rd15, %SP, 0;
	ld.local.v2.f32 	{%f106, %f107}, [%rd1+8];
	mov.u32 	%r269, 0;
	ld.local.f32 	%f100, [%rd1+16];
	mov.u16 	%rs6, 0;
	st.local.u8 	[%rd1+5], %rs6;
	ld.global.u32 	%r266, [top_object];
	mov.f32 	%f104, 0f3727C5AC;
	mov.f32 	%f105, 0f6C4ECB8F;
	mov.u32 	%r268, 255;
	mov.u32 	%r270, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r266, %f106, %f107, %f100, %f7, %f8, %f9, %r1, %f104, %f105, %r268, %r269, %rd15, %r270);
	// end inline asm
	ld.local.u8 	%rs7, [%rd1+5];
	setp.eq.s16 	%p3, %rs7, 0;
	@%p3 bra 	$L__BB3_11;

	add.u64 	%rd16, %SP, 0;
	ld.local.v2.f32 	{%f116, %f117}, [%rd1+8];
	ld.local.f32 	%f110, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs6;
	ld.global.u32 	%r271, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r271, %f116, %f117, %f110, %f7, %f8, %f9, %r1, %f104, %f105, %r268, %r269, %rd16, %r270);
	// end inline asm
	ld.local.u8 	%rs9, [%rd1+5];
	setp.eq.s16 	%p4, %rs9, 0;
	@%p4 bra 	$L__BB3_11;

	add.u64 	%rd17, %SP, 0;
	ld.local.v2.f32 	{%f126, %f127}, [%rd1+8];
	mov.u32 	%r279, 0;
	ld.local.f32 	%f120, [%rd1+16];
	mov.u16 	%rs10, 0;
	st.local.u8 	[%rd1+5], %rs10;
	ld.global.u32 	%r276, [top_object];
	mov.f32 	%f124, 0f3727C5AC;
	mov.f32 	%f125, 0f6C4ECB8F;
	mov.u32 	%r278, 255;
	mov.u32 	%r280, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r276, %f126, %f127, %f120, %f7, %f8, %f9, %r1, %f124, %f125, %r278, %r279, %rd17, %r280);
	// end inline asm
	ld.local.u8 	%rs11, [%rd1+5];
	setp.eq.s16 	%p5, %rs11, 0;
	@%p5 bra 	$L__BB3_11;

	add.u64 	%rd18, %SP, 0;
	ld.local.v2.f32 	{%f136, %f137}, [%rd1+8];
	ld.local.f32 	%f130, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs10;
	ld.global.u32 	%r281, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r281, %f136, %f137, %f130, %f7, %f8, %f9, %r1, %f124, %f125, %r278, %r279, %rd18, %r280);
	// end inline asm
	ld.local.u8 	%rs13, [%rd1+5];
	setp.eq.s16 	%p6, %rs13, 0;
	@%p6 bra 	$L__BB3_11;

	add.u64 	%rd19, %SP, 0;
	ld.local.v2.f32 	{%f146, %f147}, [%rd1+8];
	mov.u32 	%r289, 0;
	ld.local.f32 	%f140, [%rd1+16];
	mov.u16 	%rs14, 0;
	st.local.u8 	[%rd1+5], %rs14;
	ld.global.u32 	%r286, [top_object];
	mov.f32 	%f144, 0f3727C5AC;
	mov.f32 	%f145, 0f6C4ECB8F;
	mov.u32 	%r288, 255;
	mov.u32 	%r290, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r286, %f146, %f147, %f140, %f7, %f8, %f9, %r1, %f144, %f145, %r288, %r289, %rd19, %r290);
	// end inline asm
	ld.local.u8 	%rs15, [%rd1+5];
	setp.eq.s16 	%p7, %rs15, 0;
	@%p7 bra 	$L__BB3_11;

	add.u64 	%rd20, %SP, 0;
	ld.local.v2.f32 	{%f156, %f157}, [%rd1+8];
	ld.local.f32 	%f150, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs14;
	ld.global.u32 	%r291, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r291, %f156, %f157, %f150, %f7, %f8, %f9, %r1, %f144, %f145, %r288, %r289, %rd20, %r290);
	// end inline asm
	ld.local.u8 	%rs17, [%rd1+5];
	setp.eq.s16 	%p8, %rs17, 0;
	@%p8 bra 	$L__BB3_11;

	add.u64 	%rd21, %SP, 0;
	ld.local.v2.f32 	{%f166, %f167}, [%rd1+8];
	mov.u32 	%r299, 0;
	ld.local.f32 	%f160, [%rd1+16];
	mov.u16 	%rs18, 0;
	st.local.u8 	[%rd1+5], %rs18;
	ld.global.u32 	%r296, [top_object];
	mov.f32 	%f164, 0f3727C5AC;
	mov.f32 	%f165, 0f6C4ECB8F;
	mov.u32 	%r298, 255;
	mov.u32 	%r300, 40;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r296, %f166, %f167, %f160, %f7, %f8, %f9, %r1, %f164, %f165, %r298, %r299, %rd21, %r300);
	// end inline asm
	ld.local.u8 	%rs19, [%rd1+5];
	setp.eq.s16 	%p9, %rs19, 0;
	@%p9 bra 	$L__BB3_11;

	add.u64 	%rd22, %SP, 0;
	ld.local.v2.f32 	{%f176, %f177}, [%rd1+8];
	ld.local.f32 	%f170, [%rd1+16];
	st.local.u8 	[%rd1+5], %rs18;
	ld.global.u32 	%r301, [top_object];
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r301, %f176, %f177, %f170, %f7, %f8, %f9, %r1, %f164, %f165, %r298, %r299, %rd22, %r300);
	// end inline asm
	ld.local.u8 	%rs21, [%rd1+5];
	setp.eq.s16 	%p10, %rs21, 0;
	@%p10 bra 	$L__BB3_11;

	mov.u16 	%rs22, 0;
	st.local.u8 	[%rd1+5], %rs22;

$L__BB3_11:
	ret;

}


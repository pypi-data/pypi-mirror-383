# coding: utf-8

"""
    RobotnikAI API

    Documentation of API endpoints of RobotnikAI for SDK

    The version of the OpenAPI document: 0.2.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from robotnikai.models.integration import Integration

class TestIntegration(unittest.TestCase):
    """Integration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Integration:
        """Test Integration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Integration`
        """
        model = Integration()
        if include_optional:
            return Integration(
                id = 56,
                integration_id = '',
                type = robotnikai.models.integration_type.IntegrationType(
                    code = '', 
                    name = '', 
                    icon = '', ),
                name = '',
                tags = [
                    ''
                    ],
                categories = [
                    robotnikai.models.integration_category.IntegrationCategory(
                        id = 56, 
                        name = '', 
                        slug = 'z', )
                    ],
                version = '',
                icon = '',
                description = '',
                website_url = '',
                account_fields = None,
                dependencies = None,
                configuration_form = None,
                activated = True,
                owner = 56,
                connected_accounts = None,
                api_base_url = '',
                account = None,
                openapi_json_scheme_url = '',
                api_docs_url = '',
                countries = [
                    ''
                    ],
                is_global = True,
                is_sandbox = True,
                api_schema = '',
                is_official = True,
                client_id = '',
                secret = '',
                access_token_url = '',
                authorize_url = '',
                identity_url = '',
                scope = '',
                oauth_basic_auth = True,
                oauth_pkce_enabled = True,
                accept_header = '',
                api_key = '',
                api_key_distribution = 'header',
                api_key_query_param_key = '',
                api_key_body_param_key = '',
                api_auth_header_name = '',
                api_auth_header_key = '',
                hmac_algorithm = 'sha1',
                hmac_fields = [
                    ''
                    ],
                hmac_separator = '',
                hmac_header_placeholder = '',
                hmac_custom_signature_field = '',
                hmac_key_format = 'base64',
                status_check_url = '',
                wsdl_document_url = '',
                wsdl_auth_method = '',
                wsdl_custom_auth = '',
                extra_headers = None
            )
        else:
            return Integration(
                integration_id = '',
                name = '',
                version = '',
        )
        """

    def testIntegration(self):
        """Test Integration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

[tool.poetry]
name = "python-roborock"
version = "2.54.0"
description = "A package to control Roborock vacuums."
authors = ["humbertogontijo <humbertogontijo@users.noreply.github.com>"]
license = "GPL-3.0-only"
readme = "README.md"
repository = "https://github.com/humbertogontijo/python-roborock"
documentation = "https://python-roborock.readthedocs.io/"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
]
packages = [{include = "roborock"}]
keywords = ["roborock", "vacuum", "homeassistant"]

[tool.poetry.scripts]
roborock = "roborock.cli:main"

[tool.poetry.dependencies]
python = "^3.11"
click = ">=8"
aiohttp = "^3.8.2"
async-timeout = "*"
pycryptodome = "^3.18"
pycryptodomex = {version = "^3.18", markers = "sys_platform == 'darwin'"}
paho-mqtt = ">=1.6.1,<3.0.0"
construct = "^2.10.57"
vacuum-map-parser-roborock = "*"
pyrate-limiter = "^3.7.0"
aiomqtt = "^2.3.2"
click-shell = "^2.1"


[build-system]
requires = ["poetry-core==1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = ">=1.1.0"
pytest = "*"
pre-commit = ">=3.5,<5.0"
mypy = "*"
ruff = "*"
codespell = "*"
pyshark = "^0.6"
aioresponses = "^0.7.7"
freezegun = "^1.5.1"
pytest-timeout = "^2.3.1"
syrupy = "^4.9.1"
pdoc = "^15.0.4"

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:tool.poetry.version"]
build_command = "pip install poetry && poetry build"
[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "chore",
    "docs",
    "feat",
    "fix",
    "refactor"
]
major_tags= ["refactor"]

[tool.ruff]
ignore = ["F403", "E741"]
line-length = 120
select=["E", "F", "UP", "I"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
timeout = 30
log_format = "%(asctime)s.%(msecs)03d %(levelname)s (%(threadName)s) [%(name)s] %(message)s"

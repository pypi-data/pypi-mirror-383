[project]
name = "clishelf"
description = "A CLI tools and hooks on my shelf"
readme = "README.md"
requires-python = ">=3.10"
dynamic = []
keywords = [
    "utility",
    "cli",
]
authors = [
    { name = "korawica", email = "korawich.anu@gmail.com" },
]
classifiers = [
    "Topic :: Utilities",
    "Natural Language :: English",
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "click>=8.1.8",
    "PyYAML>=6.0.3",
    "rtoml>=0.12.0",
]
version = "0.3.0"

[project.optional-dependencies]
test = [
    "pytest",
    "clishelf[all]",
    "requests",
]
all = [
    "pre-commit>=4.0.0",
    "bump2version==1.0.1",
]
latest = [
    "click==8.1.8",
    "PyYAML==6.0.3",
    "rtoml==0.12.0",
]

[project.urls]
Homepage = "https://github.com/korawica/clishelf/"
"Source Code" = "https://github.com/korawica/clishelf/"

[project.scripts]
shelf = "clishelf.__main__:main"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.shelf.version]
version = "./clishelf/__about__.py"
changelog = "CHANGELOG.md"
files = [
    "README.md",
]
commit_msg_format = "- {subject}"

[tool.coverage.run]
branch = true
concurrency = [
    "thread",
    "multiprocessing",
]
parallel = true
context = "${CONTEXT}"
source = [
    "clishelf",
]
omit = [
    "clishelf/__main__.py",
    "clishelf/__about__.py",
    "clishelf/cli.py",
    "script.py",
]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == \"__main__\":",
]

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "clishelf/__about__.py"

[tool.pdm.build]
excludes = [
    "/.github",
    "/.pre-commit-config.yaml",
    "/.pre-commit-hooks.yaml",
    "/script.py",
]

[tool.pytest.ini_options]
console_output_style = "count"
filterwarnings = [
    "error",
]
addopts = [
    "--strict-config",
    "--strict-markers",
]

[tool.mypy]
python_version = "3.10"
files = [
    "clishelf",
]
show_error_codes = true
pretty = true
strict = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.black]
line-length = 80
target-version = [
    "py310",
]
exclude = "/(\n    \\.git\n    | \\.__pycache__\n    | \\.idea\n    | \\.ruff_cache\n    | \\.mypy_cache\n    | \\.pytest_cache\n    | \\.venv\n    | \\venv\n)/\n"

[tool.ruff]
line-length = 80

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "C",
    "B",
]
ignore = [
    "E501",
    "B008",
    "C901",
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
]
"clishelf/version.py" = [
    "F401",
]

name: Create and Publish Release

on:
  push:
    branches:
      - main

jobs:
  create_and_publish_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create the release and tag
      id-token: write # For authentication with PyPI

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Required for setuptools_scm

      - name: Get latest version and calculate next
        id: get_next_version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Remove 'v' prefix and split into parts
          VERSION_PARTS=$(echo $LATEST_TAG | sed 's/^v//' | tr '.' '\n')
          MAJOR=$(echo $VERSION_PARTS | awk '{print $1}')
          MINOR=$(echo $VERSION_PARTS | awk '{print $2}')
          PATCH=$(echo $VERSION_PARTS | awk '{print $3}')

          # Increment patch version
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="v${MAJOR}.${MINOR}.${NEXT_PATCH}"
          echo "Next version: $NEXT_VERSION"

          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Create new tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a ${{ steps.get_next_version.outputs.NEXT_VERSION }} -m "Release ${{ steps.get_next_version.outputs.NEXT_VERSION }}"
          git push origin ${{ steps.get_next_version.outputs.NEXT_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.9"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools_scm build twine

      - name: Build package
        run: python -m build

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_next_version.outputs.NEXT_VERSION }}
          name: Release ${{ steps.get_next_version.outputs.NEXT_VERSION }}
          generateReleaseNotes: true
          artifacts: "dist/*"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.13.0

      # - name: Set up Conda
      #   uses: conda-incubator/setup-miniconda@v3
      #   with:
      #     python-version: 3.9
      #     auto-update-conda: true
      #     auto-activate-base: false

      # - name: Build and upload Conda package
      #   shell: bash -l {0}
      #   run: |
      #     conda install -c conda-forge conda-build anaconda-client -y
      #     conda install -c conda-forge --file conda/meta.yaml --yes
      #     export GIT_TAG=${{ steps.get_next_version.outputs.NEXT_VERSION }}
      #     conda build conda --output-folder conda-dist
      #     anaconda login --with-token ${{ secrets.CONDA_TOKEN }}
      #     anaconda upload conda-dist/**/*.tar.bz2 --label main --skip-existing

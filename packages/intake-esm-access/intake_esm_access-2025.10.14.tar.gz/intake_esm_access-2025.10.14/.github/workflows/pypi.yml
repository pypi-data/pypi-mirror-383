name: Build and Upload intake-esm to PyPI

on:
  release:
    types:
      - published
  push:

jobs:
  pypi:
    name: build and deploy to PyPI
    if: github.repository == 'ACCESS-NRI/intake-esm' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: "ubuntu-latest"
    outputs:
      intake-esm-version: ${{ steps.verify.outputs.intake-esm-version }}
    permissions:
      id-token: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v5.0.0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install build dependencies
        run: python -m pip install build twine

      - name: Build distributions
        shell: bash -l {0}
        run: |
          git clean -xdf
          pyproject-build
        
      - name: Check built artifacts
        run: |
          python -m twine check dist/*
          pwd
          if [ -f dist/intake-esm-unknown.tar.gz ]; then
            echo "❌ INVALID VERSION NUMBER"
            exit 1
          else
            echo "✅ Looks good"
          fi

      - name: Verify the built dist/wheel is valid
        id: verify
        run: |
          python -m pip install --upgrade pip
          python -m pip install dist/intake_esm*.whl
          python -c "import intake_esm; print(intake_esm.__version__)"
          echo "intake-esm-version=$(python -c "import intake_esm; print(intake_esm.__version__)")" >> $GITHUB_OUTPUT

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  conda:
    name: build and deploy to conda
    needs: pypi
    if: always() && needs.pypi.result == 'success'
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout source
        uses: actions/checkout@v5.0.0

      - name: Setup conda environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          python-version: 3.11
          environment-file: .conda/environment.yml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
          
      - name: Enforce .tar.bz2 packages
        shell: bash
        run: |
            cat > ~/.condarc << EOF
            conda-build:
                pkg_format: .tar.bz2
            channels:
                - accessnri
                - conda-forge
                - nodefaults
            EOF

      - name: Build and upload the conda package
        uses: uibcdf/action-build-and-upload-conda-packages@v1.4.0
        with:
          meta_yaml_dir: .conda
          python-version: 3.11
          user: accessnri
          label: main
          token: ${{ secrets.anaconda_token }}

[build-system]
    requires = ["setuptools>=75.0", "setuptools_scm>=8.1", "wheel", "versioneer"]

[project]
    classifiers = [
        "Development Status :: 4 - Beta",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: Apache Software License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
        "Programming Language :: Python",
        "Topic :: Scientific/Engineering",
    ]
    description = "An intake plugin for parsing an Earth System Model (ESM) catalog and loading netCDF files and/or Zarr stores into Xarray datasets. This is the ACCESS-NRI bleeding edge fork."
    keywords = ["catalog", "intake", "xarray"]
    license = { text = "Apache Software License 2.0" }
    maintainers = [{ name = "ACCESS-NRI", email = "charles.turner@anu.edu.au" }]
    name = "intake-esm-access"
    readme = "README.md"
    requires-python = ">=3.10"


    dependencies = [
        "dask[complete]>=2024.12",
        "fastprogress>=1.0.0",
        "fsspec>=2024.12",
        "intake>=2.0.0",
        "itables",
        "netCDF4>=1.5.5",
        "pandas>=2.1.0",
        "polars>=1.24.0",
        "pydantic>=2.0",
        "pydap!=3.5.5",
        "requests>=2.24.0",
        "xarray>=2024.10",
        "zarr>=2.12,!=3.0.*",
    ]

    dynamic = ["version"]

[project.entry-points."intake.drivers"]
    esm_datasource = "intake_esm.source:ESMDataSource"
    esm_datastore  = "intake_esm.core:esm_datastore"

[project.urls]
    Documentation = "https://intake-esm.readthedocs.io"
    Homepage      = "https://intake-esm.readthedocs.io"
    Source        = "https://github.com/access-nri/intake-esm"
    Tracker       = "https://github.com/access-nri/intake-esm/issues"

[tool.setuptools.packages.find]
    include = ["intake_esm*"]

[tool.setuptools.package-data]
    intake_esm = ["py.typed"]

[tool.setuptools_scm]
    fallback_version  = "999"
    local_scheme      = "node-and-date"
    version_scheme    = "post-release"
    write_to          = "intake_esm/_version.py"
    write_to_template = '__version__ = "{version}"'

[tool.ruff]
    extend-include = ["*.ipynb"]
    line-length    = 100
    target-version = "py310"

    builtins = ["ellipsis"]
    # Exclude a variety of commonly ignored directories.
    exclude = [
        ".bzr",
        ".direnv",
        ".eggs",
        ".git",
        ".git-rewrite",
        ".hg",
        ".ipynb_checkpoints",
        ".mypy_cache",
        ".nox",
        ".pants.d",
        ".pyenv",
        ".pytest_cache",
        ".pytype",
        ".ruff_cache",
        ".svn",
        ".tox",
        ".venv",
        ".vscode",
        "__pypackages__",
        "_build",
        "buck-out",
        "build",
        "dist",
        "node_modules",
        "site-packages",
        "venv",
    ]
[tool.ruff.lint]
    ignore = [
        "E501", # Conflicts with ruff format
        "E721", # Comparing types instead of isinstance
        "E741", # Ambiguous variable names
    ]
    per-file-ignores = {}
    select = [
        # Pyflakes
        "F",
        # Pycodestyle
        "E",
        "W",
        # isort
        "I",
        # Pyupgrade
        "UP",
    ]

[tool.ruff.lint.mccabe]
    max-complexity = 18

[tool.ruff.lint.isort]
    combine-as-imports = true
    known-first-party  = ["intake_esm"]

[tool.ruff.format]
    docstring-code-format = true
    quote-style           = "single"

[tool.ruff.lint.pydocstyle]
    convention = "numpy"

[tool.pytest.ini_options]
    addopts              = "--cov=./ --cov-report=xml --verbose"
    console_output_style = "count"
    markers              = "network: tests requiring a network connection"

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "intake_esm/_version.py"
versionfile_build = "intake_esm/_version.py"
tag_prefix = "v"
parentdir_prefix = "intake-esm-"


[tool.coverage.run]
    omit = [
        "tests/*",
        "docs/*",
        "*/_version.py",
        "versioneer.py",
    ]
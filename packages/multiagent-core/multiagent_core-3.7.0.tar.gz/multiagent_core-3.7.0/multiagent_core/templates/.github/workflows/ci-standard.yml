name: CI - Standard Quality Checks

on:
  push:
    branches: [ main, develop, 'feature/*', 'agent-*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js (if package.json exists)
      if: hashFiles('package.json') != ''
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Python (if requirements.txt or pyproject.toml exists)
      if: hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != ''
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      if: hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != ''
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f pyproject.toml ]; then pip install -e .; fi
    
    - name: Install Node dependencies
      if: hashFiles('package.json') != ''
      run: npm ci
    
    - name: Run ops qa (if available)
      if: hashFiles('scripts/ops') != ''
      run: ./scripts/ops qa
      
    - name: Lint Python (fallback if no ops script)
      if: hashFiles('scripts/ops') == '' && (hashFiles('**/*.py') != '' || hashFiles('pyproject.toml') != '')
      run: |
        python -m flake8 . || echo "flake8 not available, skipping"
        python -m black --check . || echo "black not available, skipping"
        python -m mypy . || echo "mypy not available, skipping"
    
    - name: Lint JavaScript/TypeScript (fallback if no ops script)
      if: hashFiles('scripts/ops') == '' && hashFiles('package.json') != ''
      run: |
        npm run lint || echo "No lint script found"
        npm run type-check || echo "No type-check script found"
    
    - name: Run tests
      run: |
        if [ -f scripts/ops ]; then
          ./scripts/ops test
        elif [ -f package.json ] && npm run | grep -q test; then
          npm test
        elif command -v pytest >/dev/null 2>&1; then
          pytest
        else
          echo "No test command found"
        fi
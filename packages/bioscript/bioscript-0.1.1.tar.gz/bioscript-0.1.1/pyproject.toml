[project]
name = "bioscript"
dynamic = ["version"]
description = "A library for analyzing biological scripts and genetic data"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "Apache-2.0" }
authors = [
    { name = "BioScript Contributors" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = []

[project.scripts]
bioscript = "bioscript.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.8.0",
    "mypy>=1.11.0",
    "vulture>=2.11",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatchling.build.targets.wheel]
packages = ["src/bioscript"]

[tool.hatch.version]
path = "src/bioscript/__init__.py"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes (includes unused imports, variables)
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
]
ignore = [
    "E501", # line too long (handled by formatter)
    "E741", # ambiguous variable names (I/D are standard in bioinformatics)
    "E743", # ambiguous function names (I/D are standard in bioinformatics)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*" = ["D"]         # no docstrings required in tests
"src/bioscript/types.py" = ["N802"]  # nucleotide/indel names (A, T, C, G, I, D) are standard

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
]

[tool.coverage.run]
source = ["bioscript"]
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true

[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
ignore_errors = true

[tool.vulture]
min_confidence = 80
paths = ["src", "tests"]
exclude = [".venv/", ".git/", "__pycache__/"]
ignore_names = ["test_*", "Test*"]

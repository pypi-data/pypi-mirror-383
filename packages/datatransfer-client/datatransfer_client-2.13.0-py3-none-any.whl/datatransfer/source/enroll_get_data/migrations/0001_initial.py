# coding: utf-8
# Generated by Django 2.2.3 on 2019-12-19 07:59
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [('get_data', '0003_auto_20191219_0759'), ]

    operations = [
        migrations.CreateModel(
            name='EnrollGetDataPreschoolEducation',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('regional_id', models.BigIntegerField(
                    verbose_name='Региональный идентификатор')),
                ('person_contingent_id', models.BigIntegerField(
                    verbose_name='Идентификатор записи в КО.')),
                ('get_data_external_id', models.BigIntegerField(
                    verbose_name='Персона из КО')),
                ('name', models.CharField(
                    max_length=500,
                    verbose_name='Название образовательной организации')),
                ('enroll_date', models.DateField(
                    verbose_name='Дата зачисления')),
                ('created', models.DateTimeField(
                    default=datetime.datetime.now,
                    verbose_name='Дата/время создания/обновления')),
                ('status', models.SmallIntegerField(
                    choices=[(0, 'Ожидает решения'), (1, 'Отказано'), (
                        2, 'Принято')],
                    default=0,
                    verbose_name='Статус записи')),
                ('session', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='get_data.GetDataSession',
                    verbose_name='Сессия обмена данными')),
            ],
            options={'abstract': False, }, ),
        migrations.CreateModel(
            name='EnrollGetDataMiddleEducation',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('regional_id', models.BigIntegerField(
                    verbose_name='Региональный идентификатор')),
                ('person_contingent_id', models.BigIntegerField(
                    verbose_name='Идентификатор записи в КО.')),
                ('get_data_external_id', models.BigIntegerField(
                    verbose_name='Персона из КО')),
                ('name', models.CharField(
                    max_length=500,
                    verbose_name='Название образовательной организации')),
                ('enroll_date', models.DateField(
                    verbose_name='Дата зачисления')),
                ('created', models.DateTimeField(
                    default=datetime.datetime.now,
                    verbose_name='Дата/время создания/обновления')),
                ('status', models.SmallIntegerField(
                    choices=[(0, 'Ожидает решения'), (1, 'Отказано'), (
                        2, 'Принято')],
                    default=0,
                    verbose_name='Статус записи')),
                ('session', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='get_data.GetDataSession',
                    verbose_name='Сессия обмена данными')),
            ],
            options={'abstract': False, }, ),
        migrations.CreateModel(
            name='EnrollGetDataMainEducation',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('regional_id', models.BigIntegerField(
                    verbose_name='Региональный идентификатор')),
                ('person_contingent_id', models.BigIntegerField(
                    verbose_name='Идентификатор записи в КО.')),
                ('get_data_external_id', models.BigIntegerField(
                    verbose_name='Персона из КО')),
                ('name', models.CharField(
                    max_length=500,
                    verbose_name='Название образовательной организации')),
                ('enroll_date', models.DateField(
                    verbose_name='Дата зачисления')),
                ('created', models.DateTimeField(
                    default=datetime.datetime.now,
                    verbose_name='Дата/время создания/обновления')),
                ('status', models.SmallIntegerField(
                    choices=[(0, 'Ожидает решения'), (1, 'Отказано'), (
                        2, 'Принято')],
                    default=0,
                    verbose_name='Статус записи')),
                ('session', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='get_data.GetDataSession',
                    verbose_name='Сессия обмена данными')),
            ],
            options={'abstract': False, }, ),
        migrations.CreateModel(
            name='EnrollGetDataDeclarationDocument',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('get_data_external_id', models.BigIntegerField(
                    verbose_name='Персона из КО')),
                ('regional_id', models.BigIntegerField(
                    verbose_name='Региональный идентификатор')),
                ('source_id', models.BigIntegerField(
                    verbose_name='Идентификатор источника данных РС')),
                ('external_id', models.BigIntegerField(
                    verbose_name='Идентификатор записи в РИС')),
                ('created', models.DateTimeField(
                    default=datetime.datetime.now,
                    verbose_name='Дата/время создания/обновления')),
                ('type', models.CharField(
                    blank=True, max_length=4096, null=True,
                    verbose_name='Тип')),
                ('series', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Серия')),
                ('number', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Номер')),
                ('issuer', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Кем выдан')),
                ('issue_date', models.DateField(
                    blank=True, null=True, verbose_name='Дата выдачи')),
                ('status', models.SmallIntegerField(
                    choices=[(0, 'Ожидает решения'), (1, 'Отказано'), (
                        2, 'Принято')],
                    default=0,
                    verbose_name='Статус записи')),
                ('session', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='get_data.GetDataSession',
                    verbose_name='Сессия обмена данными')),
            ],
            options={
                'verbose_name': 'Документ удостоверяющий личность',
                'verbose_name_plural': 'Документы удостоверяющие личность',
            }, ),
        migrations.CreateModel(
            name='EnrollGetDataDeclaration',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('status', models.SmallIntegerField(
                    choices=[(0, 'Ожидает решения'), (1, 'Отказано'), (
                        2, 'Принято')],
                    default=0,
                    verbose_name='Статус записи')),
                ('created', models.DateTimeField(
                    default=datetime.datetime.now,
                    verbose_name='Дата/время создания/обновления')),
                ('regional_id', models.BigIntegerField(
                    verbose_name='Региональный идентификатор')),
                ('source_id', models.BigIntegerField(
                    verbose_name='Идентификатор источника данных РС')),
                ('external_id', models.BigIntegerField(
                    verbose_name='Идентификатор записи в РИС')),
                ('federal_id', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Федеральный идентификатор')),
                ('first_name', models.CharField(
                    blank=True, max_length=4096, null=True,
                    verbose_name='Имя')),
                ('middle_name', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Отчество')),
                ('last_name', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Фамилия')),
                ('gender', models.CharField(
                    blank=True, max_length=15, null=True, verbose_name='Пол')),
                ('birth_date', models.DateField(
                    blank=True, null=True, verbose_name='Дата рождения')),
                ('snils', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='СНИЛС')),
                ('citizenship', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Наличие гражданства')),
                ('registration_address_place', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Населенный пункт')),
                ('registration_address_street', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Улица')),
                ('registration_address_house', models.CharField(
                    blank=True, max_length=4096, null=True,
                    verbose_name='Дом')),
                ('registration_address_flat', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Квартира')),
                ('registration_address', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Адрес')),
                ('residence_address_place', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Населенный пункт')),
                ('residence_address_street', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Улица')),
                ('residence_address_house', models.CharField(
                    blank=True, max_length=4096, null=True,
                    verbose_name='Дом')),
                ('residence_address_flat', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Квартира')),
                ('residence_address', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Адрес')),
                ('actual_address_place', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Населенный пункт')),
                ('actual_address_street', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Улица')),
                ('actual_address_house', models.CharField(
                    blank=True, max_length=4096, null=True,
                    verbose_name='Дом')),
                ('actual_address_flat', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Квартира')),
                ('actual_address', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Адрес')),
                ('health_group', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Группа здоровья')),
                ('disability_group', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Группа инвалидности')),
                ('disability_expiration_date', models.DateField(
                    null=True,
                    verbose_name='Срок действия группы инвалидности')),
                ('disability_reason', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Причина инвалидности')),
                ('adaptation_program', models.CharField(
                    blank=True,
                    max_length=4096,
                    null=True,
                    verbose_name='Потребность в адаптированной программе обучения'
                )),
                ('training_type_in_cure', models.PositiveSmallIntegerField(
                    blank=True,
                    choices=[(1, 'Обучение на дому'), (
                        2, 'Обучение в медицинской организации'
                    ), (3,
                        'Обучение в организации, осуществляющей лечение, оздоровление и (или) отдых'
                        )],
                    null=True,
                    verbose_name='Вид обучения при длительном лечении')),
                ('session', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='get_data.GetDataSession',
                    verbose_name='Сессия обмена данными')),
            ],
            options={
                'verbose_name': 'Персона из Контингента',
                'verbose_name_plural': 'Персоны из Контингента',
            }, ),
    ]

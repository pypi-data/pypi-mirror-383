name: Deploy to Staging

on:
  push:
    branches: [main]
  workflow_dispatch:  # Allow manual triggers

jobs:
  deploy:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Confiture
        run: |
          pip install confiture psycopg[binary]

      - name: Check migration status
        run: |
          confiture migrate status --env staging
        env:
          STAGING_DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          STAGING_DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          STAGING_DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}

      - name: Dry-run migration
        run: |
          confiture migrate up --env staging --dry-run | tee dry-run.log
        env:
          STAGING_DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          STAGING_DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          STAGING_DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}

      - name: Upload dry-run log
        uses: actions/upload-artifact@v3
        with:
          name: staging-dry-run
          path: dry-run.log

      - name: Backup staging database
        run: |
          pg_dump -h $STAGING_DB_HOST -U $STAGING_DB_USER -d $STAGING_DB_NAME > staging-backup-$(date +%Y%m%d-%H%M%S).sql
        env:
          STAGING_DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
          STAGING_DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          PGPASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}

      - name: Apply migrations
        run: |
          confiture migrate up --env staging --verbose
        env:
          STAGING_DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          STAGING_DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          STAGING_DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}

      - name: Verify deployment
        run: |
          ./scripts/verify_migration.sh staging
        env:
          STAGING_DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          STAGING_DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          STAGING_DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}

      - name: Run smoke tests
        run: |
          pytest tests/integration/ --env staging -v
        env:
          STAGING_DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          STAGING_DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          STAGING_DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}

      - name: Notify on success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ Staging deployment successful",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Staging Deployment Successful*\n\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Actor:* ${{ github.actor }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "❌ Staging deployment failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Staging Deployment Failed*\n\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Actor:* ${{ github.actor }}\n\n*Action:* Review logs and rollback if necessary"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

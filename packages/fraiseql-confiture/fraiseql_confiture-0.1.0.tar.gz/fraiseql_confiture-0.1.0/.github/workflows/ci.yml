name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    name: Test Python 3.11 on Linux
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: confiture_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build Rust extension
        run: uv run maturin develop

      - name: Create test databases
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE confiture_test;"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE confiture_source_test;"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE confiture_target_test;"

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/confiture_test
          SOURCE_DB_URL: postgresql://postgres:postgres@localhost:5432/confiture_source_test
          TARGET_DB_URL: postgresql://postgres:postgres@localhost:5432/confiture_target_test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: confiture_test
        run: uv run pytest tests/ -v --cov=confiture --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  lint:
    name: Lint and format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run ruff check
        run: uv run ruff check .

      - name: Run ruff format check
        run: uv run ruff format --check .

      - name: Run mypy
        run: uv run mypy python/confiture/

  test-pure-python:
    name: Test pure Python fallback
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies and package (Python only)
        run: |
          uv sync --all-extras
          # Remove Rust extension if built
          rm -f python/confiture/_core.*.so || true

      - name: Run tests (Python fallback)
        run: |
          uv run python -c "from confiture.core.builder import HAS_RUST; assert not HAS_RUST, 'Rust extension should not be loaded'; print('âœ“ Testing pure Python fallback')"
          uv run pytest tests/unit/ -v -k "not performance"

  cargo-test:
    name: Cargo test (Rust)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

      - name: Run cargo fmt check
        run: cargo fmt --check

      # Note: cargo test is skipped because PyO3 tests require Python context
      # Python integration tests are run in the main test job with maturin

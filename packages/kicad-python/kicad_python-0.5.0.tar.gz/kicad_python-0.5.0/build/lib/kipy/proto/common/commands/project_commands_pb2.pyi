"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

This program source code file is part of KiCad, a free EDA CAD application.

Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
import builtins
import collections.abc
from ... import common
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetNetClasses(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___GetNetClasses = GetNetClasses

@typing.final
class NetClassesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NET_CLASSES_FIELD_NUMBER: builtins.int

    @property
    def net_classes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common.types.project_settings_pb2.NetClass]:
        ...

    def __init__(self, *, net_classes: collections.abc.Iterable[common.types.project_settings_pb2.NetClass] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['net_classes', b'net_classes']) -> None:
        ...
global___NetClassesResponse = NetClassesResponse

@typing.final
class SetNetClasses(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NET_CLASSES_FIELD_NUMBER: builtins.int
    MERGE_MODE_FIELD_NUMBER: builtins.int
    merge_mode: common.types.base_types_pb2.MapMergeMode.ValueType
    'Whether to merge or replace the existing netclasses with the contents of this message\n    Note that this only happens at the level of netclass name: for example, if merge_mode is set to\n    MMM_MERGE, the design has netclasses ["Default", "HV"], and this message has netclasses\n    ["Default", "LV"], the resulting set will be ["Default", "HV", "LV"] -- the Default netclass\n    will have its properties replaced with those in this message, the "LV" netclass will be added,\n    and the "HV" netclass will be left alone.  If merge_mode is set to MMM_REPLACE, the "HV" class\n    will be erased.  Note that there must always be a "Default" netclass, so it will not be erased\n    even if merge_mode is MMM_REPLACE and there is no "Default" class specified in this message.\n    '

    @property
    def net_classes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common.types.project_settings_pb2.NetClass]:
        ...

    def __init__(self, *, net_classes: collections.abc.Iterable[common.types.project_settings_pb2.NetClass] | None=..., merge_mode: common.types.base_types_pb2.MapMergeMode.ValueType=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['merge_mode', b'merge_mode', 'net_classes', b'net_classes']) -> None:
        ...
global___SetNetClasses = SetNetClasses

@typing.final
class ExpandTextVariables(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DOCUMENT_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int

    @property
    def document(self) -> common.types.base_types_pb2.DocumentSpecifier:
        ...

    @property
    def text(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, document: common.types.base_types_pb2.DocumentSpecifier | None=..., text: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['document', b'document']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['document', b'document', 'text', b'text']) -> None:
        ...
global___ExpandTextVariables = ExpandTextVariables

@typing.final
class ExpandTextVariablesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int

    @property
    def text(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, text: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['text', b'text']) -> None:
        ...
global___ExpandTextVariablesResponse = ExpandTextVariablesResponse

@typing.final
class GetTextVariables(google.protobuf.message.Message):
    """returns kiapi.common.project.TextVariables"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DOCUMENT_FIELD_NUMBER: builtins.int

    @property
    def document(self) -> common.types.base_types_pb2.DocumentSpecifier:
        ...

    def __init__(self, *, document: common.types.base_types_pb2.DocumentSpecifier | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['document', b'document']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['document', b'document']) -> None:
        ...
global___GetTextVariables = GetTextVariables

@typing.final
class SetTextVariables(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DOCUMENT_FIELD_NUMBER: builtins.int
    VARIABLES_FIELD_NUMBER: builtins.int
    MERGE_MODE_FIELD_NUMBER: builtins.int
    merge_mode: common.types.base_types_pb2.MapMergeMode.ValueType
    'Whether to merge or replace the existing text variables map with the contents of this message'

    @property
    def document(self) -> common.types.base_types_pb2.DocumentSpecifier:
        ...

    @property
    def variables(self) -> common.types.project_settings_pb2.TextVariables:
        ...

    def __init__(self, *, document: common.types.base_types_pb2.DocumentSpecifier | None=..., variables: common.types.project_settings_pb2.TextVariables | None=..., merge_mode: common.types.base_types_pb2.MapMergeMode.ValueType=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['document', b'document', 'variables', b'variables']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['document', b'document', 'merge_mode', b'merge_mode', 'variables', b'variables']) -> None:
        ...
global___SetTextVariables = SetTextVariables
{"version":3,"file":"MainLayout-BSXhOKyI.js","sources":["../../src/components/layout/Head.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n    <div class=\"header-left\">\n      <img src=\"@/assets/icons/logo@2x.png\" alt=\"Logo\" class=\"logo\"/>\n    </div>\n    <div class=\"header-center\">\n      <div class=\"project-info\" v-if=\"currentProject\">\n        <div class=\"project-name\" @click=\"startEditName\" v-if=\"!isEditingName\">\n          <el-icon class=\"edit-icon\" v-show=\"currentProject.username==userStore.userInfo?.username\">\n            <Edit/>\n          </el-icon>\n          <el-tooltip\n            :content=\"currentProject.name\"\n            placement=\"bottom\"\n            :show-after=\"500\"\n            :hide-after=\"500\"\n          >\n            <span class=\"truncate-name\">{{ currentProject.name }}</span>\n          </el-tooltip>\n        </div>\n        <div class=\"project-name-edit\" v-else>\n          <el-input\n             :disabled=\"currentProject.username!=userStore.userInfo?.username\"\n              v-model=\"editingName\"\n              size=\"small\"\n              class=\"name-edit-input\"\n              placeholder=\"输入项目名称\"\n              @blur=\"saveProjectName\"\n              @keyup.enter=\"saveProjectName\"\n              :maxlength=\"100\"\n              :show-word-limit=\"true\"\n              ref=\"nameInputRef\"\n          />\n        </div>\n        <div class=\"project-type\" :class=\"{\n          'detection-type': currentProject.type_abbreviation === 'DET',\n          'segmentation-type': currentProject.type_abbreviation === 'SEG',\n          'classification-type': currentProject.type_abbreviation === 'CLS',\n          'instance-type': currentProject.type_abbreviation === 'INS'\n        }\">{{ currentProject.type_full }}\n        </div>\n      </div>\n    </div>\n    <div class=\"header-right\">\n      <!-- 统一的按钮组容器 -->\n      <div class=\"action-buttons-group\">\n        <el-button text class=\"header-action-btn\" @click=\"backToProjects\" v-if=\"currentProject\">\n          <el-icon><ArrowLeft /></el-icon>\n          返回项目管理\n        </el-button>\n        \n        <div class=\"button-divider\" v-if=\"currentProject\"></div>\n        \n        <el-button text class=\"header-action-btn\" @click=\"showRunning\">\n          <el-icon><Monitor /></el-icon>\n          排队状况\n        </el-button>\n      </div>\n      \n      <el-dropdown trigger=\"click\">\n        <div class=\"user-info\">\n          <span class=\"user-name\">{{ userName }}</span>\n          <div class=\"user-avatar\">\n            {{ userInitial }}\n          </div>\n          <el-icon class=\"arrow-icon\">\n            <ArrowDown/>\n          </el-icon>\n        </div>\n        <template #dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item @click=\"handleChangePassword\">\n              <el-icon>\n                <UserFilled/>\n              </el-icon>\n              修改密码\n            </el-dropdown-item>\n            <el-dropdown-item @click=\"handleLogout\">\n              <el-icon>\n                <SwitchButton/>\n              </el-icon>\n              退出登录\n            </el-dropdown-item>\n            <el-dropdown-item divided disabled>\n              <span class=\"version-text\">版本号：{{ version }}</span>\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n    </div>\n\n    <el-dialog\n        v-model=\"showPasswordDialog\"\n        title=\"修改密码\"\n        width=\"450px\"\n        :close-on-click-modal=\"false\"\n        class=\"password-dialog\"\n        destroy-on-close\n    >\n      <el-form\n          ref=\"passwordFormRef\"\n          :model=\"passwordForm\"\n          :rules=\"passwordRules\"\n          label-width=\"100px\"\n          @keyup.enter=\"submitPasswordChange\"\n      >\n        <el-form-item label=\"原密码\" prop=\"oldPassword\">\n          <el-input\n              v-model=\"passwordForm.oldPassword\"\n              type=\"password\"\n              placeholder=\"请输入原密码\"\n              show-password\n          />\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input\n              v-model=\"passwordForm.newPassword\"\n              type=\"password\"\n              placeholder=\"请输入新密码\"\n              show-password\n          />\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input\n              v-model=\"passwordForm.confirmPassword\"\n              type=\"password\"\n              placeholder=\"请再次输入新密码\"\n              show-password\n          />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"showPasswordDialog = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitPasswordChange\">确认</el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 排队状况对话框 -->\n    <el-dialog \n      title=\"任务排队状况\" \n      v-model=\"isShowRunning\"\n      width=\"1000px\"\n      :close-on-click-modal=\"false\"\n      class=\"queue-status-dialog\"\n    >\n      <div class=\"queue-container\">\n        <!-- 运行中任务 -->\n        <div class=\"queue-section\">\n          <div class=\"section-header running\">\n            <div class=\"header-content\">\n              <el-icon class=\"status-icon\"><Monitor /></el-icon>\n              <span class=\"section-title\">运行中</span>\n              <el-tag type=\"success\" size=\"small\" round>{{ runningData.length }}</el-tag>\n            </div>\n          </div>\n          <div class=\"table-container\">\n            <el-table \n              :data=\"runningData\" \n              :show-header=\"runningData.length > 0\"\n              max-height=\"300\"\n              class=\"queue-table\"\n              :empty-text=\"'暂无运行中的任务'\"\n            >\n              <el-table-column prop=\"project_id\" label=\"项目ID\" width=\"80\">\n                <template #default=\"{ row }\">\n                  <el-tag size=\"small\" effect=\"plain\">{{ row.project_id }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"job_id\" label=\"任务ID\" width=\"80\">\n                <template #default=\"{ row }\">\n                  <el-tag size=\"small\" type=\"primary\" effect=\"plain\">{{ row.job_id }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"project_name\" label=\"项目名\">\n                <template #default=\"{ row }\">\n                  <el-tooltip\n                    :content=\"row.project_name\"\n                    placement=\"top-start\"\n                    :show-after=\"300\"\n                    :hide-after=\"100\"\n                    :disabled=\"!isTextOverflow(row.project_name)\"\n                  >\n                    <span class=\"text-ellipsis\">{{ row.project_name }}</span>\n                  </el-tooltip>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"job_name\" label=\"任务名\">\n                <template #default=\"{ row }\">\n                  <el-tooltip\n                    :content=\"row.job_name\"\n                    placement=\"top-start\"\n                    :show-after=\"300\"\n                    :hide-after=\"100\"\n                    :disabled=\"!isTextOverflow(row.job_name)\"\n                  >\n                    <span class=\"text-ellipsis\">{{ row.job_name }}</span>\n                  </el-tooltip>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"user\" label=\"用户\" width=\"100\">\n              </el-table-column>\n              <el-table-column prop=\"job_type\" label=\"任务类型\" width=\"80\">\n                <template #default=\"{ row }\">\n                  <el-tag \n                    size=\"small\" \n                    :type=\"getJobTypeTagType(row.job_type)\"\n                    effect=\"light\"\n                    :class=\"`job-type-${row.job_type}`\"\n                  >\n                    {{ getJobTypeLabel(row.job_type) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"状态\" width=\"100\">\n                <template #default>\n                  <div class=\"status-indicator running\">\n                    <div class=\"status-dot\"></div>\n                    <span>运行中</span>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </div>\n\n        <!-- 等待中任务 -->\n        <div class=\"queue-section\">\n          <div class=\"section-header pending\">\n            <div class=\"header-content\">\n              <el-icon class=\"status-icon\"><Clock /></el-icon>\n              <span class=\"section-title\">等待中</span>\n              <el-tag type=\"warning\" size=\"small\" round>{{ pendingData.length }}</el-tag>\n            </div>\n          </div>\n          <div class=\"table-container\">\n            <el-table \n              :data=\"pendingData\" \n              :show-header=\"pendingData.length > 0\"\n              max-height=\"300\"\n              class=\"queue-table\"\n              :empty-text=\"'暂无等待中的任务'\"\n            >\n              <el-table-column prop=\"project_id\" label=\"项目ID\" width=\"80\">\n                <template #default=\"{ row }\">\n                  <el-tag size=\"small\" effect=\"plain\">{{ row.project_id }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"job_id\" label=\"任务ID\" width=\"80\">\n                <template #default=\"{ row }\">\n                  <el-tag size=\"small\" type=\"primary\" effect=\"plain\">{{ row.job_id }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"project_name\" label=\"项目名\">\n                <template #default=\"{ row }\">\n                  <el-tooltip\n                    :content=\"row.project_name\"\n                    placement=\"top-start\"\n                    :show-after=\"300\"\n                    :hide-after=\"100\"\n                    :disabled=\"!isTextOverflow(row.project_name)\"\n                  >\n                    <span class=\"text-ellipsis\">{{ row.project_name }}</span>\n                  </el-tooltip>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"job_name\" label=\"任务名\">\n                <template #default=\"{ row }\">\n                  <el-tooltip\n                    :content=\"row.job_name\"\n                    placement=\"top-start\"\n                    :show-after=\"300\"\n                    :hide-after=\"100\"\n                    :disabled=\"!isTextOverflow(row.job_name)\"\n                  >\n                    <span class=\"text-ellipsis\">{{ row.job_name }}</span>\n                  </el-tooltip>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"user\" label=\"用户\" width=\"100\">\n              </el-table-column>\n              <el-table-column prop=\"job_type\" label=\"任务类型\" width=\"80\">\n                <template #default=\"{ row }\">\n                  <el-tag \n                    size=\"small\" \n                    :type=\"getJobTypeTagType(row.job_type)\"\n                    effect=\"light\"\n                    :class=\"`job-type-${row.job_type}`\"\n                  >\n                    {{ getJobTypeLabel(row.job_type) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"状态\" width=\"100\">\n                <template #default>\n                  <div class=\"status-indicator pending\">\n                    <div class=\"status-dot\"></div>\n                    <span>等待中</span>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, nextTick, ref, watch} from 'vue';\nimport {useRouter, useRoute} from 'vue-router';\nimport {ElMessage, ElMessageBox} from 'element-plus';\nimport {ArrowDown, ArrowLeft, Edit, SwitchButton, UserFilled, Monitor, Clock} from '@element-plus/icons-vue';\nimport {changePassword} from '@/api/auth';\nimport {useUserStore} from '@/stores/user';\nimport {useProjectStore} from '@/stores/project';\nimport {useSampleStore} from '@/stores/sample.store';\nimport {storeToRefs} from 'pinia';\nimport {updateName} from '@/api/project';\nimport {validateName, validateConfirmPassword} from '@/utils/validator';\nimport { getJobList } from '@/api/all';\n\n// 获取版本号\nconst version = ref(window.RUNTIME_CONFIG?.VERSION || 'v1.0.0');\n\nconst router = useRouter();\nconst route = useRoute();\nconst userStore = useUserStore();\nconst projectStore = useProjectStore();\nconst sampleStore = useSampleStore();\nconst {currentProject} = storeToRefs(projectStore);\n\nconst userName = ref(userStore.userInfo?.username || '未登录');\n\n// 计算用户名首字母\nconst userInitial = computed(() => {\n  const name = userName.value;\n  if (!name || name === '未登录') return '?';\n  \n  // 如果是中文，取第一个字符\n  if (/[\\u4e00-\\u9fa5]/.test(name)) {\n    return name.charAt(0);\n  }\n  \n  // 如果是英文，取第一个字母并转大写\n  return name.charAt(0).toUpperCase();\n});\n\n// 项目名称编辑相关\nconst isEditingName = ref(false);\nconst editingName = ref('');\nconst nameInputRef = ref();\n\n// 监听 currentProject 变化，当值为空时重置编辑状态\nwatch(() => currentProject.value, (newVal) => {\n  if (!newVal) {\n    isEditingName.value = false;\n    editingName.value = '';\n  }\n}, { immediate: true });\n\n// 监听路由变化，当访问用户列表页面时清空 currentProject\nwatch(() => route.path, (newPath) => {\n  if (newPath === '/user/list' && currentProject.value) {\n    projectStore.clearCurrentProject();\n  }\n}, { immediate: true });\n\n// 项目名称验证\nconst validateProjectName = (value: string) => {\n  return validateName(value, (sanitized) => {\n    editingName.value = sanitized;\n  });\n};\n\n// 返回项目管理页面\nconst backToProjects = () => {\n  // 检查admin用户权限\n  if (userStore.userInfo?.username === 'admin') {\n    ElMessage.warning('管理员账号无权访问项目页面');\n    return;\n  }\n  \n  const isUploading = sampleStore.isUploading;\n  const isShowUploadingTip = sampleStore.showUploadingTip;\n\n  if(isUploading && isShowUploadingTip){\n    ElMessageBox.confirm(\n        '当前有上传任务正在进行中，离开页面将中断上传。是否确认离开？',\n        '提示',\n        {\n          confirmButtonText: '确认离开',\n          cancelButtonText: '取消',\n          type: 'warning',\n        }\n      ).then(() => {\n        sampleStore.setShowUploadingTip(false);\n        // 重置筛选条件\n        (sampleStore as any).resetFilterConditions();\n        (sampleStore as any).resetAnalysisFilterConditions();\n        \n        // 清理持久化存储中的筛选条件数据\n        try {\n          const sampleStoreKey = 'sample';\n          const persistedData = localStorage.getItem(sampleStoreKey);\n          if (persistedData) {\n            const parsed = JSON.parse(persistedData);\n            // 清空筛选相关的字段，保留其他数据\n            if (parsed.filterConditions) {\n              delete parsed.filterConditions;\n            }\n            if (parsed.analysisFilterConditions) {\n              delete parsed.analysisFilterConditions;\n            }\n            localStorage.setItem(sampleStoreKey, JSON.stringify(parsed));\n          }\n        } catch (error) {\n          console.warn('清理持久化筛选条件失败:', error);\n        }\n        \n        // 清除当前项目信息\n        projectStore.clearCurrentProject();\n        (sampleStore as any).clearProjectSampleState(Number(currentProject.value?.id || ''));\n        router.push('/project');\n      }).catch(() => {\n        // 取消离开\n      });\n  } else {\n    // 重置筛选条件\n    (sampleStore as any).resetFilterConditions();\n    (sampleStore as any).resetAnalysisFilterConditions();\n    \n    // 清理持久化存储中的筛选条件数据\n    try {\n      const sampleStoreKey = 'sample';\n      const persistedData = localStorage.getItem(sampleStoreKey);\n      if (persistedData) {\n        const parsed = JSON.parse(persistedData);\n        // 清空筛选相关的字段，保留其他数据\n        if (parsed.filterConditions) {\n          delete parsed.filterConditions;\n        }\n        if (parsed.analysisFilterConditions) {\n          delete parsed.analysisFilterConditions;\n        }\n        localStorage.setItem(sampleStoreKey, JSON.stringify(parsed));\n      }\n    } catch (error) {\n      console.warn('清理持久化筛选条件失败:', error);\n    }\n    \n    // 清除当前项目信息\n    projectStore.clearCurrentProject();\n    (sampleStore as any).resetFilterParams();\n    (sampleStore as any).clearProjectSampleState(Number(currentProject.value?.id || ''));\n    router.push('/project');\n  }\n};\n\n// 开始编辑项目名称\nconst startEditName = () => {\n  if(currentProject.value?.username!=userStore.userInfo?.username)return;\n  if (!currentProject.value) return;\n  isEditingName.value = true;\n  editingName.value = currentProject.value.name;\n  // 使用nextTick确保输入框渲染后再获取焦点\n  nextTick(() => {\n    nameInputRef.value?.focus();\n  });\n};\n\n// 保存项目名称\nconst saveProjectName = async () => {\n  if (!currentProject.value || !editingName.value.trim()) {\n    isEditingName.value = false;\n    editingName.value = currentProject.value?.name || '';\n    return;\n  }\n\n  // 如果名称没有变化，直接返回\n  if (editingName.value === currentProject.value.name) {\n    isEditingName.value = false;\n    return;\n  }\n\n  // 验证项目名称\n  if (!validateProjectName(editingName.value)) {\n    return;\n  }\n\n  try {\n    const {data} = await updateName({\n      project_id: Number(currentProject.value.id),\n      name: editingName.value.trim()\n    });\n\n    if (data.code === 200) {\n      // 更新store中的项目名称\n      projectStore.updateCurrentProject({\n        ...currentProject.value,\n        name: editingName.value.trim()\n      });\n      ElMessage.success('项目名称修改成功');\n    } else {\n      ElMessage.error(data.msg || '项目名称修改失败');\n      editingName.value = currentProject.value.name;\n    }\n  } catch (error: any) {\n    ElMessage.error(error?.message || '项目名称修改失败');\n    editingName.value = currentProject.value.name;\n  } finally {\n    isEditingName.value = false;\n  }\n};\n\nconst handleLogout = async () => {\n  try {\n    await ElMessageBox.confirm('确认退出登录吗？', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    });\n\n    try {\n      // 清空用户状态\n      await userStore.logout();\n      \n      // 同时清空项目状态\n      projectStore.clearCurrentProject();\n      \n      // 跳转到登录页\n      router.push('/');\n      ElMessage.success('已退出登录');\n    } catch (error: any) {\n      // 即使出错也清空项目状态\n      projectStore.clearCurrentProject();\n      ElMessage.error(error?.message || '退出失败，请重试');\n    }\n  } catch {\n    // 用户取消登出\n  }\n};\n\nconst showPasswordDialog = ref(false);\n\n// 排队状况相关\nconst isShowRunning = ref(false);\nconst pendingData = ref([]);\nconst runningData = ref([]);\nconst passwordFormRef = ref();\nconst passwordForm = ref({\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n});\n\nconst validateConfirmPasswordRule = (_rule: any, value: string, callback: Function) => {\n  validateConfirmPassword(value, passwordForm.value.newPassword, callback);\n};\n\nconst passwordRules = {\n  oldPassword: [\n    {required: true, message: '请输入原密码', trigger: 'blur'},\n  ],\n  newPassword: [\n    {required: true, message: '请输入新密码', trigger: 'blur'},\n    {min: 6, max: 20, message: '密码长度应为 6-20 个字符', trigger: 'blur'},\n    { \n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])[A-Za-z\\d!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]{6,20}$/,\n      message: '密码必须包含大小写字母、数字和特殊字符,不能有空格/中文',\n      trigger: 'blur' \n    }\n  ],\n  confirmPassword: [\n    {required: true, message: '请再次输入密码', trigger: 'blur'},\n    {validator: validateConfirmPasswordRule, trigger: 'blur'}\n  ]\n};\n\nconst handleChangePassword = () => {\n  showPasswordDialog.value = true;\n};\n\nconst submitPasswordChange = async () => {\n  if (!passwordFormRef.value) return;\n\n  await passwordFormRef.value.validate(async (valid: boolean) => {\n    if (valid) {\n      try {\n        const {oldPassword, newPassword} = passwordForm.value;\n        if (!userStore.userInfo?.id) {\n          throw new Error('用户未登录，请先登录');\n        }\n        const {data:res} = await changePassword({\n          user_id: userStore.userInfo.id,\n          old_password: oldPassword,\n          new_password: newPassword\n        });\n        if(res.code==200){\n          ElMessage.success('密码修改成功');\n          showPasswordDialog.value = false;\n          passwordForm.value = {\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n          };\n        }else{\n          ElMessage.error(res.msg || '密码修改失败');\n        }\n      } catch (error: any) {\n        ElMessage.error(error?.message || '密码修改失败');\n      }\n    }\n  });\n};\n\nwatch(showPasswordDialog, (newVal) => {\n  if (!newVal) {\n    passwordForm.value = {\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    };\n  }\n});\n\n// 显示排队状况\nconst showRunning = () => {\n  isShowRunning.value = true;\n  getJobList().then(res => {\n    runningData.value = res.data.data['running'];\n    pendingData.value = res.data.data['pending'];\n  });\n};\n\n// 获取任务类型标签\nconst getJobTypeLabel = (jobType: string) => {\n  const map: Record<string, string> = {\n    'train': '模型训练',\n    'eval': '模型评估', \n    'export': '模型导出'\n  };\n  return map[jobType] || jobType;\n};\n\nconst getJobTypeTagType = (jobType: string) => {\n  const map: Record<string, string> = {\n    'train': '',\n    'eval': '',\n    'export': ''\n  };\n  return map[jobType] || '';\n};\n\n// 判断文本是否会溢出（简单判断：超过一定长度就认为可能溢出）\nconst isTextOverflow = (text: string) => {\n  if (!text) return false;\n  // 简单估算：中文字符按2个宽度计算，英文按1个宽度计算\n  // 表格列大概可以显示15-20个英文字符或7-10个中文字符\n  let width = 0;\n  for (let char of text) {\n    if (/[\\u4e00-\\u9fa5]/.test(char)) {\n      width += 2; // 中文字符\n    } else {\n      width += 1; // 英文字符和数字\n    }\n  }\n  return width > 16; // 超过16个英文字符宽度就显示tooltip\n};\n</script>\n\n<style scoped>\n.header {\n  height: 64px;\n  padding: 0 24px;\n  background: #fff;\n  border-bottom: 1px solid #e4e7ed;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.04);\n}\n\n/* 确保所有子元素垂直对齐 */\n.header > * {\n  display: flex;\n  align-items: center;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  margin-top: -4px;\n}\n\n.logo {\n  height: 24px;\n  width: auto;\n}\n\n.header-center {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  padding-left: 16px;\n}\n\n.project-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 5px;\n}\n\n.project-name {\n  font-size: 16px;\n  font-weight: 500;\n  color: #303133;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 0 8px;\n  height: 32px;\n  border-radius: 4px;\n  transition: background-color 0.3s;\n}\n\n.project-name:hover {\n  background-color: #f5f7fa;\n}\n\n.project-name .edit-icon {\n  font-size: 18px;\n  color: #909399;\n  opacity: 1;\n  margin-right: 4px;\n}\n\n.project-name-edit {\n  padding: 0 4px;\n  min-width: 200px;\n}\n\n.name-edit-input :deep(.el-input__wrapper) {\n  background-color: #f5f7fa;\n  border: 2px solid #409eff;\n  box-shadow: none;\n  padding: 0 8px;\n}\n\n.name-edit-input :deep(.el-input__inner) {\n  font-size: 16px;\n  font-weight: 500;\n  color: #303133;\n  height: 36px;\n}\n\n.edit-confirm-icon {\n  color: #67c23a;\n  font-size: 18px;\n  cursor: pointer;\n}\n\n.project-type {\n  font-size: 14px;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n}\n\n.detection-type {\n  background: linear-gradient(135deg, #816BFF 0%, #BA81FC 100%);\n}\n\n.segmentation-type {\n  background: linear-gradient(135deg, #4672FF 0%, #7DAAFC 100%);\n}\n\n.classification-type {\n  background: linear-gradient(135deg, #FF844F 0%, #FDD050 100%);\n}\n\n.instance-type {\n  background: linear-gradient(135deg, #FDD050, #956CEF);\n}\n\n/* 按钮组容器样式 */\n.action-buttons-group {\n  display: flex;\n  align-items: center;\n  background: rgba(240, 242, 255, 0.5);\n  border: 1px solid rgba(85, 95, 255, 0.1);\n  border-radius: 6px;\n  padding: 2px;\n  margin-right: 16px;\n  transition: all 0.3s ease;\n}\n\n.action-buttons-group:hover {\n  background: rgba(240, 242, 255, 0.8);\n  border-color: rgba(85, 95, 255, 0.2);\n}\n\n.button-divider {\n  width: 1px;\n  height: 16px;\n  background: rgba(85, 95, 255, 0.2);\n  margin: 0 4px;\n}\n\n/* 简洁的头部动作按钮样式 */\n.header-action-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  color: #606266;\n  padding: 0 12px;\n  height: 32px;\n  margin: 0;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n  font-weight: 500;\n}\n\n.header-action-btn:hover {\n  color: #555FFF;\n  background-color: rgba(85, 95, 255, 0.08);\n}\n\n.header-action-btn:focus {\n  color: #555FFF;\n  background-color: rgba(85, 95, 255, 0.08);\n}\n\n.header-action-btn .el-icon {\n  font-size: 16px;\n  margin-right: 5px;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 0px;\n  margin-top: 0;\n  padding-right: 8px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  margin-top: -4px;\n  gap: 6px;\n  cursor: pointer;\n  padding: 0 8px;\n  height: 32px;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n}\n\n.user-info:hover {\n  background-color: #F2F3F5;\n}\n\n.user-info:hover .user-avatar {\n  box-shadow: 0 4px 12px rgba(85, 95, 255, 0.35);\n}\n\n.user-info:hover .user-avatar::before {\n  opacity: 1;\n}\n\n.user-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  font-size: 14px;\n  font-weight: 600;\n  background: linear-gradient(135deg, #555FFF 0%, #816BFF 50%, #BA81FC 100%);\n  box-shadow: 0 2px 8px rgba(85, 95, 255, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #ffffff;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  line-height: 1;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.user-avatar::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.2) 0%, transparent 50%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.user-name {\n  font-size: 16px;\n  color: #1D2129;\n}\n\n.arrow-icon {\n  font-size: 12px;\n  color: #86909C;\n}\n\n.setting-btn {\n  border: none;\n  color: #86909C;\n  padding: 8px;\n}\n\n.setting-btn:hover {\n  background-color: #F2F3F5;\n  color: #1D2129;\n}\n\n:deep(.el-dropdown-menu__item i) {\n  margin-right: 8px;\n}\n\n.version-text {\n  font-size: 12px;\n  color: #909399;\n}\n\n.password-dialog {\n  :deep(.el-dialog) {\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    background-color: #f9fafc;\n    position: relative;\n    z-index: 0;\n    padding: 0;\n  }\n\n  :deep(.el-dialog__header) {\n    background: linear-gradient(to top, rgba(255, 255, 255, 0) 0%, rgba(85, 95, 255, 0.3) 100%);\n    border-bottom: 1px solid #ebeef5;\n    padding: 20px;\n    color: #303133;\n    margin: 0;\n    border-radius: 8px 8px 0 0;\n\n    .el-dialog__title {\n      position: relative;\n      font-weight: 500;\n      font-size: 18px;\n      color: #303133;\n    }\n\n    .el-dialog__headerbtn {\n      position: relative;\n      z-index: 1;\n\n      .el-dialog__close {\n        color: #303133;\n        font-weight: bold;\n      }\n    }\n  }\n\n  :deep(.el-dialog__body) {\n    padding: 30px 40px 20px;\n    background-color: #f9fafc;\n  }\n\n  :deep(.el-form-item__label) {\n    font-weight: normal;\n    color: #333;\n    user-select: none; /* 防止标签文本被选中 */\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  :deep(.el-input__wrapper) {\n    box-shadow: 0 0 0 1px #dcdfe6 inset;\n    transition: all 0.2s;\n    background-color: #ffffff;\n    user-select: none; /* 防止文本选中 */\n\n    &:hover {\n      box-shadow: 0 0 0 1px #c0c4cc inset;\n    }\n\n    &.is-focus {\n      box-shadow: 0 0 0 1px #555FFF inset !important;\n    }\n  }\n\n  /* 防止密码输入框相关元素被意外选中 */\n  :deep(.el-input__inner) {\n    user-select: text; /* 输入框内容可以选中 */\n  }\n\n  :deep(.el-input__suffix) {\n    user-select: none; /* 后缀图标不可选中 */\n    pointer-events: auto; /* 确保图标可点击 */\n  }\n\n  :deep(.el-input__suffix-inner) {\n    user-select: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  :deep(.el-icon) {\n    user-select: none;\n    pointer-events: auto;\n    cursor: pointer;\n  }\n\n  :deep(.el-dialog__footer) {\n    border-top: 1px solid #ebeef5;\n    padding: 15px 20px;\n    margin-top: 10px;\n    background-color: #ffffff;\n  }\n\n  :deep(.el-form-item) {\n    margin-right: 25px;\n    margin-top: 30px;\n  }\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  padding: 10px 0;\n\n  .el-button {\n    &:not(.el-button--primary) {\n      border-color: #dcdfe6;\n      color: #606266;\n\n      &:hover {\n        color: #555FFF;\n        border-color: #d4d6ff;\n        background-color: #f5f5ff;\n      }\n    }\n\n    &.el-button--primary {\n      background: #555FFF;\n      border-color: #555FFF;\n\n      &:hover {\n        background: #6b74ff;\n        border-color: #6b74ff;\n      }\n    }\n  }\n}\n\n.truncate-name {\n  max-width: 320px;  /* 限制宽度 */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: inline-block;\n}\n\n.name-edit-input :deep(.el-input__count) {\n  background: transparent;\n  font-size: 12px;\n  color: #909399;\n  height: 20px;\n  line-height: 20px;\n  padding: 0 4px;\n}\n\n\n/* 排队状况对话框样式 */\n:deep(.queue-status-dialog) {\n  .el-dialog {\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  \n  .el-dialog__header {\n    padding: 24px 24px 16px;\n    border-bottom: 1px solid #f0f2f5;\n    background: linear-gradient(135deg, #fafbff 0%, #f8f9ff 100%);\n  }\n  \n  .el-dialog__body {\n    padding: 24px;\n    background: #fafbff;\n  }\n  \n  .el-dialog__title {\n    color: #303133;\n    font-weight: 600;\n    font-size: 18px;\n  }\n}\n\n.queue-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.queue-section {\n  background: #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  border: 1px solid #f0f2f5;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\n}\n\n.section-header {\n  padding: 16px 20px;\n  border-bottom: 1px solid #f0f2f5;\n  background: #fafbfc;\n  \n  &.running {\n    background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n    border-left: 4px solid #3b82f6;\n  }\n  \n  &.pending {\n    background: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%);\n    border-left: 4px solid #f59e0b;\n  }\n}\n\n.header-content {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.status-icon {\n  font-size: 18px;\n  \n  .running & {\n    color: #3b82f6;\n  }\n  \n  .pending & {\n    color: #f59e0b;\n  }\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #374151;\n  margin-right: 8px;\n}\n\n.table-container {\n  background: white;\n}\n\n.queue-table {\n  :deep(.el-table__body-wrapper) {\n    border-radius: 0;\n  }\n  \n  :deep(.el-table th) {\n    background-color: #f9fafb;\n    font-weight: 600;\n    color: #374151;\n    border-bottom: 1px solid #f0f2f5;\n  }\n  \n  :deep(.el-table tr:hover > td) {\n    background-color: #f9fafb;\n  }\n  \n  :deep(.el-table__empty-text) {\n    color: #9ca3af;\n    font-size: 14px;\n    padding: 40px 0;\n  }\n  \n  :deep(.el-table td) {\n    border-bottom: 1px solid #f0f2f5;\n  }\n}\n\n.status-indicator {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 13px;\n  \n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    \n    .running & {\n      background-color: #555fff;\n      animation: pulse 2s infinite;\n    }\n    \n    .pending & {\n      background-color: #ff9f43;\n      animation: pulse 2s infinite;\n    }\n  }\n  \n  span {\n    font-weight: 500;\n    \n    .running & {\n      color: #555fff;\n    }\n    \n    .pending & {\n      color: #ff9f43;\n    }\n  }\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  50% {\n    opacity: 0.7;\n    transform: scale(1.1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n/* 自定义任务类型标签样式 */\n:deep(.queue-table .el-tag) {\n  border-radius: 6px;\n  font-weight: 500;\n  \n  &.el-tag--small {\n    height: 24px;\n    line-height: 22px;\n    padding: 0 8px;\n  }\n  \n  /* 项目ID标签 */\n  &[class*=\"el-tag--\"]:not([class*=\"type\"]) {\n    background-color: #f0f2ff;\n    color: #555fff;\n    border-color: #d9dcff;\n    \n    &.el-tag--plain {\n      background-color: #f8f9ff;\n      border-color: #e8e9ff;\n    }\n  }\n  \n  /* 任务ID标签 */\n  &.el-tag--primary {\n    background-color: #555fff;\n    color: white;\n    border-color: #555fff;\n    \n    &.el-tag--plain {\n      background-color: #f0f2ff;\n      color: #555fff;\n      border-color: #d9dcff;\n    }\n  }\n  \n  /* 任务类型标签 */\n  &.job-type-train {\n    background-color: #555fff15;\n    color: #555fff;\n    border-color: #555fff40;\n  }\n  \n  &.job-type-eval {\n    background-color: #ff9f4315;\n    color: #ff9f43;\n    border-color: #ff9f4340;\n  }\n  \n  &.job-type-export {\n    background-color: #8b5cf615;\n    color: #8b5cf6;\n    border-color: #8b5cf640;\n  }\n}\n\n/* 响应式设计 - 小屏幕适配 */\n@media (max-width: 768px) {\n  .header-right {\n    margin-top: 3px;\n  }\n  \n  .user-name {\n    display: none;\n  }\n  \n  .user-avatar {\n    width: 28px;\n    height: 28px;\n    font-size: 12px;\n  }\n}\n\n@media (max-width: 480px) {\n  .header {\n    padding: 0 12px;\n  }\n  \n  .user-avatar {\n    width: 26px;\n    height: 26px;\n    font-size: 11px;\n  }\n}\n\n/* 文本省略样式 */\n.text-ellipsis {\n  display: inline-block;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  vertical-align: top;\n}\n</style>\n"],"names":["version","ref","_a","router","useRouter","route","useRoute","userStore","useUserStore","projectStore","useProjectStore","sampleStore","useSampleStore","currentProject","storeToRefs","userName","_b","userInitial","computed","name","isEditingName","editingName","nameInputRef","watch","newVal","newPath","validateProjectName","value","validateName","sanitized","backToProjects","ElMessage","isUploading","isShowUploadingTip","ElMessageBox","sampleStoreKey","persistedData","parsed","error","startEditName","nextTick","saveProjectName","data","updateName","handleLogout","showPasswordDialog","isShowRunning","pendingData","runningData","passwordFormRef","passwordForm","passwordRules","_rule","callback","validateConfirmPassword","handleChangePassword","submitPasswordChange","valid","oldPassword","newPassword","res","changePassword","showRunning","getJobList","getJobTypeLabel","jobType","getJobTypeTagType","isTextOverflow","text","width","char"],"mappings":"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"}
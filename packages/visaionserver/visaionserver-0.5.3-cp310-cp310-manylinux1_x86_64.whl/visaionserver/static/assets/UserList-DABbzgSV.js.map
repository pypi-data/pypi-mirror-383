{"version":3,"file":"UserList-DABbzgSV.js","sources":["../../src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div class=\"user-list-container\">\n    <div class=\"page-header\">\n      <div class=\"title-section\">\n        <h2 class=\"page-title\">用户管理中心</h2>\n        <el-tag type=\"success\" effect=\"dark\" class=\"user-count\" round>\n          共 {{ total }} 位用户\n        </el-tag>\n      </div>\n      <div class=\"action-section\">\n        <div class=\"search-box\">\n          <el-input\n            v-model=\"searchQuery\"\n            placeholder=\"输入用户名搜索，多个用逗号分隔\"\n            clearable\n            @clear=\"clearSearch\"\n            @keyup.enter=\"handleSearch\"\n            class=\"search-input\"\n          />\n          <el-button @click=\"handleSearch\" :icon=\"Search\" style=\"background-color: #555FFF; color: white; border-color: #555FFF\">搜索</el-button>\n        </div>\n        <el-button type=\"success\" :icon=\"Plus\" class=\"add-user-btn\" @click=\"openAddUserDialog\">添加用户</el-button>\n      </div>\n    </div>\n    <div class=\"main-content\">\n\n    <el-card class=\"table-card\" shadow=\"hover\">\n      <el-table\n        v-loading=\"loading\"\n        :data=\"userList\"\n        style=\"width: 100%\"\n        border\n        stripe\n        highlight-current-row\n        class=\"user-table\"\n        empty-text=\"暂无用户数据\"\n        height=\"calc(100vh - 260px)\"\n        :max-height=\"'calc(100vh - 300px)'\"\n        :scrollbar-always-on=\"true\"\n      >\n        <el-table-column prop=\"username\" label=\"用户名\" min-width=\"120\">\n          <template #default=\"{ row }\">\n            <div class=\"user-info\">\n              <el-avatar :size=\"32\" :src=\"getUserAvatar(row.username)\" class=\"user-avatar\"></el-avatar>\n              <span class=\"username\">{{ row.username }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"role\" label=\"角色\" min-width=\"120\" align=\"center\">\n          <template #default=\"{ row }\">\n            <el-tag \n              :type=\"row.username === 'admin' ? 'danger' : 'success'\" \n              effect=\"dark\" \n              size=\"small\"\n              class=\"role-tag\"\n            >\n              {{ row.username === 'admin' ? '管理员' : '普通用户' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"created_at\" label=\"注册时间\" min-width=\"180\" align=\"center\">\n          <template #default=\"{ row }\">\n            <el-tooltip :content=\"formatFullDate(row.created_at)\" placement=\"top\">\n              <span class=\"time-info\">{{ formatDate(row.created_at) }}</span>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\" min-width=\"150\" align=\"center\">\n          <template #default=\"{ row }\">\n            <div class=\"action-buttons\">\n              <el-tooltip content=\"修改密码\" placement=\"top\">\n                <el-button\n                  type=\"warning\"\n                  :icon=\"Key\"\n                  circle\n                  size=\"small\"\n                  :disabled=\"row.role === 'admin'\"\n                  @click=\"handleChangePassword(row)\"\n                />\n              </el-tooltip>\n              <el-button v-if=\"row.is_active\" type=\"warning\" size=\"small\" @click=\"ban(row)\">禁用</el-button>\n              <el-button v-if=\"!row.is_active\" type=\"success\" size=\"small\" @click=\"activate(row)\">激活</el-button>\n            </div>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div class=\"table-footer\">\n      <el-pagination\n        v-model:current-page=\"currentPage\"\n        v-model:page-size=\"pageSize\"\n        background\n        :total=\"total\"\n        layout=\"prev, pager, next\"\n        @current-change=\"handleCurrentChange\"\n        class=\"pagination\"\n      />\n    </div>\n    </el-card>\n    </div>\n\n    <!-- 用户对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"dialogTitle\"\n      width=\"450px\"\n      destroy-on-close\n      @closed=\"resetForm\"\n      class=\"user-dialog\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"false\"\n    >\n      <el-form\n        ref=\"formRef\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"80px\"\n        @keyup.enter=\"submitForm\"\n        class=\"user-form\"\n        size=\"large\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input \n            v-model=\"form.username\" \n            placeholder=\"请输入用户名\" \n            :prefix-icon=\"User\"\n            :disabled=\"!isAddMode\"\n          />\n        </el-form-item>\n        <el-form-item :label=\"isAddMode ? '密码' : '新密码'\" prop=\"password\">\n          <el-input \n            v-model=\"form.password\" \n            type=\"password\" \n            :placeholder=\"isAddMode ? '请输入密码' : '请输入新密码'\" \n            show-password \n            :prefix-icon=\"isAddMode ? Lock : Key\"\n          />\n        </el-form-item>\n        \n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button \n            @click=\"dialogVisible = false\"\n            class=\"cancel-btn\"\n            size=\"large\"\n            plain\n            style=\"width: 120px;\"\n          >取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"submitForm\" \n            style=\"background-color: #555FFF; border-color: #555FFF; width: 120px; margin-bottom: 20px;\"\n            size=\"large\"\n            :loading=\"submitLoading\"\n          >\n            {{ isAddMode ? '创建' : '确认' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, computed } from 'vue';\nimport { Search, Plus, Check, Close, User, Lock, Message, Key } from '@element-plus/icons-vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport type { FormInstance, FormRules } from 'element-plus';\nimport { getUserList, createUser, changePassword, checkUsername, forbidden } from '@/api/auth';\nimport {useUserStore} from '@/stores/user';\n\nconst userStore = useUserStore();\n// 搜索相关\nconst searchQuery = ref('');\nconst loading = ref(false);\n\n// 分页相关\nconst currentPage = ref(1);\nconst pageSize = ref(10);\nconst total = ref(0);\n\n// 用户列表数据\nconst userList = ref([]);\n\n// 表单相关\nconst dialogVisible = ref(false);\nconst dialogTitle = ref('编辑用户');\nconst isAddMode = ref(false);\nconst formRef = ref<FormInstance>();\nconst submitLoading = ref(false);\nconst form = ref({\n  id: '',\n  username: '',\n  password: ''\n});\n\n// 自定义用户名验证\nconst validateUsername = async (rule: any, value: string, callback: any) => {\n  if(!isAddMode.value){\n    // callback()\n    return\n  }\n  // 检查用户名是否为空\n  if (!value) {\n    callback(new Error('请输入用户名'));\n    return;\n  }\n  \n  // 检查用户名是否已存在\n  try {\n    const response = await checkUsername(value);\n    if (response.data.data.exists) {\n      callback(new Error('该用户名已存在'));\n    } else {\n      callback();\n    }\n  } catch (error) {\n    callback(new Error('验证用户名时出错'));\n  }\n};\n// const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=$\\]{};':\"\\\\|,.<>\\/?]).{8,}$/;\n\n// 表单验证规则\nconst rules = ref<FormRules>({\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 2, max: 20, message: '用户名长度应为 2-20 个字符', trigger: 'blur' },\n    { pattern: /^[a-zA-Z0-9_-]+$/, message: '用户名只能包含字母、数字、下划线和横杠', trigger: 'blur' },\n    { validator: validateUsername, trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '密码长度应为 6-20 个字符', trigger: 'blur' },\n    { \n      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])[A-Za-z\\d!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]{6,20}$/,\n      // pattern:passwordRegex,\n      message: '密码必须包含大小写字母、数字和特殊字符,不能有空格/中文',\n      trigger: 'blur' \n    }\n  ]\n});\n\n// 生成用户头像\nconst getUserAvatar = (username: string) => {\n  // 根据用户名生成固定颜色\n  const colors = [\n    '#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399',\n    '#3963BC', '#41B883', '#B83939', '#6957AF', '#1E9FFF'\n  ];\n  const index = username.charCodeAt(0) % colors.length;\n  \n  // 返回空字符串表示使用默认头像\n  return '';\n};\n\n// 格式化日期（简洁版）\nconst formatDate = (date: string) => {\n  const d = new Date(date);\n  return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n};\n\n// 格式化日期（完整版）\nconst formatFullDate = (date: string) => {\n  return new Date(date).toLocaleString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n};\n\n// 获取用户列表\nconst fetchUserList = async () => {\n  loading.value = true;\n  try {\n      // 处理搜索查询，支持多个用户名用逗号分隔\n      let usernameArray;\n      if (searchQuery.value) {\n        // 将逗号分隔的字符串分割为数组，并去除空格\n        usernameArray = searchQuery.value.split(',').map(name => name.trim()).filter(name => name);\n      }\n      \n      const response = await getUserList({\n        skip: currentPage.value,\n        limit: pageSize.value,\n        username: usernameArray && usernameArray.length > 0 ? usernameArray : undefined\n      });\n    \n    if (response.data.code === 200) {\n      userList.value = response.data.data.data;\n      total.value = response.data.data.total;\n    } else {\n      ElMessage.error(response.data.message || '获取用户列表失败');\n    }\n  } catch (error: any) {\n    ElMessage.error(error.message || '获取用户列表失败');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 处理搜索\nconst handleSearch = () => {\n  currentPage.value = 1;\n  fetchUserList();\n};\n\n// 清空搜索\nconst clearSearch = () => {\n  searchQuery.value = '';\n  handleSearch();\n};\n\n// 处理页码变化\nconst handleCurrentChange = (val: number) => {\n  currentPage.value = val;\n  fetchUserList();\n};\n\n// 处理每页条数变化\nconst handleSizeChange = (val: number) => {\n  pageSize.value = val;\n  currentPage.value = 1;\n  fetchUserList();\n};\n\n// 打开添加用户对话框\nconst openAddUserDialog = () => {\n  dialogVisible.value = true;\n  dialogTitle.value = '注册';\n  isAddMode.value = true;\n  resetForm();\n};\n\n// 处理修改密码\nconst handleChangePassword = (row: any) => {\n  dialogVisible.value = true;\n  dialogTitle.value = '修改密码';\n  isAddMode.value = false;\n  resetForm();\n  form.value = {\n    id: row.id,\n    username: row.username,\n    password: ''\n  };\n};\n\n// 重置表单\nconst resetForm = () => {\n  if (formRef.value) {\n    formRef.value.resetFields();\n  }\n  form.value = {\n    id: '',\n    username: '',\n    password: ''\n  };\n};\n\n// 提交表单\nconst submitForm = async () => {\n  if (!formRef.value) return;\n  \n  submitLoading.value = true;\n  \n  try {\n    // 表单验证\n    await formRef.value.validate();\n    \n    // 根据模式调用不同的 API\n    if (isAddMode.value) {\n      const response = await createUser({\n        username: form.value.username.trim(),\n        password: form.value.password\n      });\n      \n      if (response.data.code === 200) {\n        ElMessage.success('用户创建成功');\n        dialogVisible.value = false;\n        fetchUserList();\n      } else {\n        ElMessage.error(response.data.msg || '创建用户失败');\n      }\n    } else {\n      const response = await changePassword({\n        username: form.value.username,\n        new_password: form.value.password\n      });\n      \n      if (response.data.code === 200) {\n        ElMessage.success('密码修改成功');\n        dialogVisible.value = false;\n\n        if(form.value.username === 'admin'){\n          // 强制退出，让用户重新登录\n          await userStore.logout();\n          window.location.reload();\n        }\n      } else {\n        ElMessage.error(response.data.msg || '修改密码失败');\n      }\n    }\n  } catch (error) {\n    console.error('创建用户失败:', error);\n    if (error.message) {\n      ElMessage.error(error.message);\n    } else {\n      ElMessage.error('用户名/密码错误，请检查输入!');\n    }\n  } finally {\n    submitLoading.value = false;\n  }\n};\nconst ban = (row)=>{\n ElMessageBox.confirm('确定禁用么?',\n    'Warning',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning',\n    }).then(res=>{\n      forbidden({id:row.id,is_active:false}).then(res=>{\n        fetchUserList();\n      })\n    })\n \n}\nconst activate = (row)=>{\n  ElMessageBox.confirm('确定激活么?',\n    'Warning',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning',\n    }).then(res=>{\n      forbidden({id:row.id,is_active:true}).then(res=>{\n        fetchUserList();\n      })\n    })\n \n}\n// 页面加载时获取用户列表\nonMounted(() => {\n  fetchUserList();\n});\n</script>\n\n<style scoped>\n/* 对话框样式 - 使用全局样式 */\n:global(.el-dialog__header) {\n  background: linear-gradient(to top, rgba(255, 255, 255, 0) 0%, rgba(85, 95, 255, 0.3) 100%);\n  border-bottom: 1px solid #ebeef5;\n  padding: 20px;\n  color: #303133;\n  margin: 0;\n  border-radius: 8px 8px 0 0;\n}\n\n:global(.el-dialog__title) {\n  font-size: 18px;\n  font-weight: 500;\n  color: #303133;\n}\n\n:global(.el-dialog) {\n  padding: 0;\n  overflow: hidden;\n}\n.user-list-container {\n  padding: 24px;\n  background-color: #f5f7fa; /* 保留基础背景色 */\n  height: calc(100vh - 65px); /* 适应高度 */\n  overflow: hidden;\n  transition: all 0.3s ease;\n  display: flex;\n  flex-direction: column;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #ebeef5;\n  flex-shrink: 0;\n  background: none !important; /* 强制移除任何背景样式 */\n}\n\n.main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.title-section {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.page-title {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  position: relative;\n}\n\n.page-title::after {\n  content: '';\n  position: absolute;\n  bottom: -8px;\n  left: 0;\n  width: 40px;\n  height: 3px;\n  background-color: #409eff;\n  border-radius: 3px;\n}\n\n.user-count {\n  font-size: 14px;\n  transition: all 0.3s ease;\n}\n\n.action-section {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.search-box {\n  display: flex;\n  gap: 8px;\n  transition: all 0.3s ease;\n}\n\n.search-input {\n  width: 240px;\n  transition: width 0.3s ease;\n}\n\n.search-input:focus {\n  width: 280px;\n}\n\n.table-card {\n  flex: 1;\n  margin-bottom: 0;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  transition: box-shadow 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.table-card:hover {\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n}\n\n.user-table {\n  flex: 1;\n  overflow: auto;\n  margin-bottom: 8px;\n}\n\n.el-table__body-wrapper {\n  overflow-y: auto !important;\n  max-height: calc(100vh - 320px) !important;\n}\n\n.table-footer {\n  display: flex;\n  justify-content: center;\n  padding: 12px 0;\n  border-top: 1px solid #ebeef5;\n  background-color: #fff;\n  min-height: 50px;\n}\n\n.pagination {\n  margin: 0;\n  padding: 8px 0;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  transition: transform 0.2s ease;\n}\n\n.user-info:hover {\n  transform: translateX(4px);\n}\n\n.user-avatar {\n  background-color: #e6f7ff;\n  color: #1890ff;\n  transition: transform 0.3s ease;\n}\n\n.user-avatar:hover {\n  transform: scale(1.1);\n}\n\n.username {\n  font-weight: 500;\n  transition: color 0.3s ease;\n}\n\n.username:hover {\n  color: #409eff;\n}\n\n.time-info {\n  color: #606266;\n  font-size: 13px;\n}\n\n.role-tag {\n  text-transform: capitalize;\n  transition: all 0.3s ease;\n}\n\n.action-buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  opacity: 0.8;\n  transition: opacity 0.3s ease;\n}\n\n.action-buttons:hover {\n  opacity: 1;\n}\n\n.user-dialog .el-dialog__body {\n  padding: 30px 40px 20px;\n  background-color: #f9fafc;\n}\n\n.user-dialog .el-dialog__footer {\n  border-top: 1px solid #ebeef5;\n  padding: 15px 20px;\n  margin-top: 10px;\n  background-color: #ffffff;\n}\n\n.user-dialog .el-form-item__label {\n  font-weight: normal;\n  color: #333;\n  user-select: none; /* 防止标签文本被选中 */\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n}\n\n.user-dialog .el-dialog {\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  background-color: #f9fafc;\n  position: relative;\n  z-index: 0;\n  padding: 0;\n}\n\n.user-dialog .el-input__wrapper {\n  box-shadow: 0 0 0 1px #dcdfe6 inset;\n  transition: all 0.2s;\n  background-color: #ffffff;\n  user-select: none; /* 防止文本选中 */\n}\n\n.user-dialog .el-input__wrapper:hover {\n  box-shadow: 0 0 0 1px #c0c4cc inset;\n}\n\n.user-dialog .el-input__wrapper.is-focus {\n  box-shadow: 0 0 0 1px #555FFF inset;\n}\n\n/* 防止密码输入框相关元素被意外选中 */\n.user-dialog .el-input__inner {\n  user-select: text; /* 输入框内容可以选中 */\n}\n\n.user-dialog .el-input__suffix {\n  user-select: none; /* 后缀图标不可选中 */\n  pointer-events: auto; /* 确保图标可点击 */\n}\n\n.user-dialog .el-input__suffix-inner {\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.user-dialog .el-icon {\n  user-select: none;\n  pointer-events: auto;\n  cursor: pointer;\n}\n\n.user-dialog .cancel-btn {\n  border-color: #dcdfe6;\n  color: #606266;\n}\n\n.user-dialog .cancel-btn:hover {\n  color: #555FFF;\n  border-color: #d4d6ff;\n  background-color: #f5f5ff;\n}\n\n.user-dialog .el-form-item {\n  margin-right: 25px;\n  margin-top: 25px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  padding: 10px 0;\n}\n\n\n.add-user-btn {\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n}\n\n.add-user-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: all 0.5s ease;\n}\n\n.add-user-btn:hover::before {\n  left: 100%;\n}\n</style>\n"],"names":["userStore","useUserStore","searchQuery","ref","loading","currentPage","pageSize","total","userList","dialogVisible","dialogTitle","isAddMode","formRef","submitLoading","form","rules","rule","value","callback","checkUsername","getUserAvatar","username","colors","formatDate","date","d","formatFullDate","fetchUserList","usernameArray","name","response","getUserList","ElMessage","error","handleSearch","clearSearch","handleCurrentChange","val","openAddUserDialog","resetForm","handleChangePassword","row","submitForm","createUser","changePassword","ban","ElMessageBox","res","forbidden","activate","onMounted"],"mappings":"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"}
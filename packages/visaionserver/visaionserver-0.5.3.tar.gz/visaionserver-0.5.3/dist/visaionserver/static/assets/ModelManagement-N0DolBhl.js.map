{"version":3,"file":"ModelManagement-N0DolBhl.js","sources":["../../src/views/models/ModelManagement.vue"],"sourcesContent":["<template>\n  <div class=\"model-management-container\">\n    <div class=\"model-management-content\">\n      <h2 class=\"page-title\" style=\"width: 90px;float:left\">模型管理 <!-- <el-link @click=\"goToPath\">测试</el-link> --></h2>\n      <div class=\"min-h-screen bg-gray-50 px-6 py-8\">\n    <div class=\"mx-auto max-w-7xl\">\n      <el-table :data=\"tableData\" class=\"w-full\" v-loading=\"tableLoading\" element-loading-text=\"加载中...\">\n        <el-table-column prop=\"name\" label=\"训练名称\" min-width=\"180\" />\n        \n        <el-table-column prop=\"status\" label=\"训练状态\" width=\"120\">\n          <template #default=\"{ row }\">\n            <div class=\"flex items-center\">\n              <el-tag\n                :type=\"getStatusType(row.status)\"\n                effect=\"light\"\n                size=\"small\"\n                class=\"whitespace-nowrap\"\n              >\n                <!-- <div class=\"flex items-center gap-1\">\n                  <div :class=\"getStatusDotClass(row.status)\" class=\"h-2 w-2 rounded-full\"></div> -->\n                  {{ row.status }}\n                <!-- </div> -->\n              </el-tag>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"训练集\" min-width=\"180\">\n          <template #default=\"{ row }\">\n            <div class=\"flex flex-wrap gap-2\">\n              <!-- <el-tag v-for=\"item in row.train_sets\" :key=\"item\" size=\"small\" effect=\"plain\">\n                {{ item.name }}\n              </el-tag> -->\n              <el-tooltip v-for=\"item in row.train_sets\" :content=\"item.updated_at>row.finish_time?'样本/标注已更新':item.name\">\n                <el-tag  :key=\"item\" size=\"small\" effect=\"plain\" :type=\"item.updated_at>row.finish_time?'warning':'primary'\">\n                                {{ item.name }}\n              </el-tag>\n              </el-tooltip>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"验证集\" min-width=\"180\">\n          <template #default=\"{ row }\">\n            <div class=\"flex flex-wrap gap-2\">\n              <el-tooltip v-for=\"item in row.val_sets\" :content=\"item.updated_at>row.finish_time?'样本/标注已更新':item.name\">\n                <el-tag  :key=\"item\" size=\"small\" effect=\"plain\" :type=\"item.updated_at>row.finish_time?'warning':'primary'\">\n                                {{ item.name }}\n              </el-tag>\n              </el-tooltip>\n              \n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column  label=\"创建人\" width=\"120\" >\n          <template #default=\"scope\">\n            {{  scope.row.username}}\n          </template>\n          </el-table-column>\n        <el-table-column prop=\"create_time\" label=\"创建时间\" width=\"180\" />\n\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <div class=\"flex items-center gap-2\">\n              <el-button text size=\"small\" type=\"primary\" style=\"padding:0\" @click=\"goToDetail(scope.row)\">\n                详情\n              </el-button>\n              <el-button :disabled=\"scope.row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.PENDING]\n             || scope.row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.RUNNING]\n             || scope.row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.COMPLETED]\" text size=\"small\" type=\"primary\" style=\"padding:0\" @click=\"goToUpdate(scope.row)\">\n                修改\n              </el-button>\n              <el-button v-if=\"!scope.row['isStart']\" :disabled=\"scope.row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.PENDING]\n             || scope.row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.RUNNING]\" text size=\"small\" type=\"primary\" style=\"padding:0\"  @click=\"startJobFunc(scope.row)\">\n                启动\n              </el-button>\n              <el-button v-if=\"scope.row['isStart']\" text size=\"small\" type=\"danger\" style=\"padding:0\"  @click=\"jobStopFunc(scope.row)\">\n                停止\n              </el-button>\n              <!-- <el-button text size=\"small\" type=\"primary\" class=\"!rounded-button whitespace-nowrap\">\n                星标\n              </el-button> -->\n              <el-dropdown style=\"margin-left: 8px;\">\n    <span class=\"el-dropdown-link\">\n     <el-icon style=\"color:blue;margin-top:6px\"><More /></el-icon>\n    </span>\n    <template #dropdown>\n      <el-dropdown-menu>\n        <el-dropdown-item @click=\"handleDelete(scope.row)\">删除</el-dropdown-item>\n        <el-dropdown-item @click=\"goToClone(scope.row)\">克隆</el-dropdown-item>\n        \n      </el-dropdown-menu>\n    </template>\n  </el-dropdown>\n              <!-- <el-button :disabled=\"scope.row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.PENDING]\n              || scope.row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.RUNNING]\" text size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row)\">\n                删除\n              </el-button>\n              <el-button text size=\"small\" type=\"primary\" style=\"padding:0\" @click=\"goToClone(scope.row)\">\n                克隆\n              </el-button> -->\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination style=\"margin-top:8px\" background layout=\"prev, pager, next\" :total=\"totalCount\" @current-change=\"changePage\"/>\n    </div>\n  </div>\n      <el-row>\n        \n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRouter } from 'vue-router';\nimport {jobStart,getModelList,getJobStatus} from '@/api/all'\nimport {ref,onMounted, onUnmounted} from 'vue'\nimport { ENUM_JOB_STATUS, JOB_STATUS_LABEL } from '../../utils/const';\nimport { useModelStore } from '@/stores/modules/model';\nimport { useProjectStore } from '@/stores/project';\nimport { deleteModel, jobStop, runJob } from '../../api/all';\nimport { ElLoading, ElMessageBox } from 'element-plus'\nimport { More } from '@element-plus/icons-vue';\nconst projectStore = useProjectStore()\nconst modelStore = useModelStore()\nconst router = useRouter();\nconst totalCount = ref(0)\nconst tableLoading = ref(false)\nlet statusInterval = null\nlet currentProjectId = 1\nconst tableData = ref<Any[]>([\n  // {\n  //   name: '图像大模型v1.0-20250110',\n  //   status: '未开始',\n  //   trainingSets: ['数据集一'],\n  //   validationSets: ['数据集一'],\n  //   creator: 'zhangshan',\n  //   createTime: '2025-10-10 12:30:00'\n  // },\n  // {\n  //   name: '图像大模型v1.0-20250111',\n  //   status: '训练完成',\n  //   trainingSets: ['数据集一', '数据集二'],\n  //   validationSets: ['数据集一', '数据集二'],\n  //   creator: 'zhangshan',\n  //   createTime: '2025-10-10 12:30:00'\n  // },\n  // {\n  //   name: '图像大模型v1.0-20250112',\n  //   status: '训练完成',\n  //   trainingSets: ['数据集一', '数据集二'],\n  //   validationSets: ['数据集一', '数据集二'],\n  //   creator: 'zhangshan',\n  //   createTime: '2025-10-10 12:30:00'\n  // },\n  // {\n  //   name: '图像大模型v1.0-20250111',\n  //   status: '训练失败',\n  //   trainingSets: ['数据集一', '数据集二'],\n  //   validationSets: ['数据集一', '数据集二'],\n  //   creator: 'zhangshan',\n  //   createTime: '2025-10-10 12:30:00'\n  // },\n  // {\n  //   name: '图像大模型v1.0-20250112',\n  //   status: '运行中',\n  //   trainingSets: ['数据集一', '数据集二'],\n  //   validationSets: ['数据集一', '数据集二'],\n  //   creator: 'zhangshan',\n  //   createTime: '2025-10-10 12:30:00'\n  // }\n]);\nconst changePage = (page)=>{\n  getModelListFunc(page)\n}\nconst getStatusType = (status: string) => {\n  const map: Record<string, string> = {\n    '未开始1': 'info',\n    '已完成1': 'success',\n    '已终止': 'danger',\n    '运行中1': ''\n  };\n  return map[status];\n};\n\nconst getStatusDotClass = (status: string) => {\n  const map: Record<string, string> = {\n    '未开始': 'bg-blue-400',\n    '训练完成': 'bg-green-400',\n    '训练失败': 'bg-red-400',\n    '运行中': 'bg-purple-400'\n  };\n  return map[status];\n};\n\nconst getJobTypeLabel = (jobType: string) => {\n  const map: Record<string, string> = {\n    'train': '模型训练',\n    'eval': '模型评估',\n    'export': '模型导出'\n  };\n  return map[jobType] || jobType;\n};\n\nconst getJobTypeTagType = (jobType: string) => {\n  const map: Record<string, string> = {\n    'train': '',\n    'eval': '',\n    'export': ''\n  };\n  return map[jobType] || '';\n};\nconst goToUpload = () => {\n  router.push('/sample/upload');\n};\nconst goToPath = () => {\n  let param = {\n  \"project_id\": 1,\n  \"job_id\": 1,\n  \"job_type\": \"train\",\n  \"job_args\": {\n    \"page\": [\n      {\n        \"label\": \"Data Setting\",\n        \"label_cn\": \"数据配置\",\n        \"info\": \"Data Config\",\n        \"info_cn\": \"数据配置\",\n        \"children\": [\n          {\n            \"type\": \"inputNumber\",\n            \"key\": \"VISAION_BATCH_SIZE\",\n            \"advanced\": false,\n            \"label\": \"BatchSize\",\n            \"label_cn\": \"批次大小\",\n            \"info\": \"BatchSize\",\n            \"info_cn\": \"每次迭代在训练集中抽取batchsize个样本数参与训练\",\n            \"value\": 2,\n            \"precision\": 0,\n            \"min\": 1,\n            \"max\": 1024\n          },\n          {\n            \"type\": \"inputNumber\",\n            \"key\": \"VISAION_NEG_RATIO\",\n            \"advanced\": false,\n            \"label\": \"NegRatio\",\n            \"label_cn\": \"负样本比例\",\n            \"info\": \"Negative Ratio\",\n            \"info_cn\": \"背景样本数量 / batchsize\",\n            \"value\": 0.2,\n            \"precision\": 3,\n            \"min\": 0.1,\n            \"max\": 1\n          }\n        ]\n      },\n      {\n        \"label\": \"Job Setting\",\n        \"label_cn\": \"任务配置\",\n        \"info\": \"Job Setting\",\n        \"info_cn\": \"任务配置\",\n        \"children\": [\n          {\n            \"type\": \"inputNumber\",\n            \"key\": \"VISAION_MAX_ITERS\",\n            \"advanced\": false,\n            \"label\": \"Total Iter\",\n            \"label_cn\": \"迭代次数\",\n            \"info\": \"Total number of iter loop\",\n            \"info_cn\": \"一个iteration等于使用batchsize个样本训练一次, 此处填写训练过程中共迭代多少轮\",\n            \"value\": 3000,\n            \"precision\": 0,\n            \"min\": 20,\n            \"max\": 1000000\n          },\n          {\n            \"type\": \"inputNumber\",\n            \"key\": \"VISAION_INTERVAL\",\n            \"advanced\": true,\n            \"label\": \"Checkpoint Interval\",\n            \"label_cn\": \"评测并保存权重间隔\",\n            \"info\": \"save checkpoint every interval iterations\",\n            \"info_cn\": \"每隔一定轮次评测并保存权重\",\n            \"value\": 1000,\n            \"precision\": 0,\n            \"min\": 1,\n            \"max\": 10000000\n          },\n          {\n            \"type\": \"inputNumber\",\n            \"key\": \"VISAION_LR\",\n            \"advanced\": false,\n            \"label\": \"Learning Rate\",\n            \"label_cn\": \"初始学习率\",\n            \"info\": \"learning rate on begin\",\n            \"info_cn\": \"设置一个初始学习率，将以此为基准对学习率进行处理\",\n            \"value\": 0.001,\n            \"precision\": 8,\n            \"min\": 1e-10,\n            \"max\": 0.9\n          },\n          {\n            \"type\": \"inputNumber\",\n            \"key\": \"VISAION_WEIGHT_DECAY\",\n            \"advanced\": true,\n            \"label\": \"Weight Decay\",\n            \"label_cn\": \"权重衰减\",\n            \"info\": \"Weight Decay\",\n            \"info_cn\": \"为了防止学习率过大，在收敛到全局最优点的时候会来回摆荡，所以要让学习率随着训练轮数不断按指数级下降，收敛梯度下降的学习步长\",\n            \"value\": 0.0005,\n            \"precision\": 4,\n            \"min\": 0.000001,\n            \"max\": 0.1\n          }\n        ]\n      }\n    ],\n    \"baseParam\": {\n      \"VISAION_TEMPLATE_TYPE\": \"det\",\n      \"VISAION_TEMPLATE_NAME_EN\": \"Detection Model(m)\",\n      \"VISAION_TEMPLATE_NAME_CN\": \"检测模型(中)\",\n      \"VISAION_TASK_TYPE\": \"det\",\n      \"VISAION_TEMPLATE_PATH\": \"C:/Users/dell/.visaion/templates\",\n      \"VISAION_TEMPLATE_NAME\": \"yolov8_m.py\",\n      \"VISAION_WORK_DIR\": \"C:/Users/dell/.visaion/projects/1/jobs/1/train\",\n      \"VISAION_AMP\": false,\n      \"VISAION_LOAD_FROM\": \"C:/Users/dell/.visaion/weights/mmyolov8m-oiv7.pth\",\n      \"VISAION_META_INFO\": [\n        {\n          \"color\": [\n            255,\n            215,\n            0,\n            255\n          ],\n          \"name\": \"overflow\"\n        },\n        {\n          \"color\": [\n            30,\n            144,\n            255,\n            255\n          ],\n          \"name\": \"collapse\"\n        }\n      ],\n      \"VISAION_EXPERIMENT_NAME\": \"test1\",\n      \"VISAION_IN_CHANNELS\": 3,\n      \"VISAION_NUM_CLASSES\": 2,\n      \"VISAION_TRAIN_DATA_ROOT\": [\n        \"C:/Users/dell/.visaion/projects/1/datasets/5617.json\"\n      ],\n      \"VISAION_VAL_DATA_ROOT\": [\n        \"C:/Users/dell/.visaion/projects/1/datasets/5617.json\"\n      ],\n      \"VISAION_TEST_DATA_ROOT\": [\n        \"C:/Users/dell/.visaion/projects/1/datasets/5617.json\"\n      ],\n      \"VISAION_COLOR_TYPE\": \"color\",\n      \"VISAION_BACKEND\": \"nccl\",\n      \"VISAION_NEED_GPUS\": 1\n    }\n  }\n}\n jobStart(param)\n  router.push('/sample/modeldetail');\n}\nconst goToDetail = (row)=>{\n  modelStore.setModel(row)\n  router.push({path:'/sample/modeldetail',query:{jid:row.id}});\n}\nconst goToClone = (row)=>{\n  modelStore.setModel(row)\n  router.push({path:'/sample/training',query:{from:'clone'}});\n}\nconst goToUpdate = (row)=>{\n  modelStore.setModel(row)\n  router.push({path:'/model/updateModel',query:{jid:row.id}});\n}\nconst updateStatus = ()=>{\n  let jobids=[]\n  let array = tableData.value\n  if (!array || array.length === 0) return;\n\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    console.log('element',element.status, typeof element.status)\n    // 主要是用来识别第一次进入时，没有转义的status\n    // if (!element.status || element.status in [1, 2, 3, 4, 5]) {\n      if (!element.status || [1, 2, 3, 4, 5].includes(element.status)) {\n      console.log('element-status',element.status)\n      jobids.push(element.id)\n    }\n    \n    // 主要是用来识别是否触发轮询\n    if (element.status === \"运行中\" || element.status === \"等待中\" || element.isStart) {\n      jobids.push(element.id)\n    }\n  }\n  if (jobids.length === 0) return;  \n\n  getJobStatus({project_id:projectStore.currentProject?.id,job_ids:jobids,job_type:'train'}).then(res=>{\n    let newdata = []\n    let mapStatus = res.data?.data\n    tableData.value.forEach(item=>{\n      if (!item.status) {\n        item['status'] = JOB_STATUS_LABEL[1]\n      }\n      // 只更新有状态数据的项目\n      if (mapStatus && mapStatus[item.id] !== undefined) {\n        item['status'] = JOB_STATUS_LABEL[mapStatus[item.id]] \n        if (ENUM_JOB_STATUS.PENDING == mapStatus[item.id]||mapStatus[item.id]==ENUM_JOB_STATUS.RUNNING){\n          item['isStart'] = true\n        }else{\n          item['isStart'] = false\n        }\n      }\n      \n      newdata.push(item)\n    })\n    tableData.value = newdata\n  })\n}\nlet loadingInstance1\nconst startJobFuncTrue = (row)=>{\n  let param = {\n  \"project_id\": projectStore.currentProject?.id,\n  \"job_id\": row.id,\n  \"job_type\": \"train\",\n  \"job_args\": row.param\n}\n  // jobStart(param)\n   loadingInstance1 = ElLoading.service({\n        lock: true,\n        text: 'Loading',\n        background: 'rgba(0, 0, 0, 0.7)',\n    })\n  runJob({id:row.id,job_type:'train'}).then(res=>{\n    loadingInstance1.close() \n    row['isStart'] = true\n  }).catch(e=>{loadingInstance1.close()})\n}\nconst startJobFunc = (row)=>{\n  if(row.status==JOB_STATUS_LABEL[ENUM_JOB_STATUS.COMPLETED]){\n    ElMessageBox.confirm(\n    '训练完成的任务再次启动会覆盖已有数据,是否继续?',\n    'Warning',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning',\n    }\n  )\n    .then(()=>{\n       startJobFuncTrue(row)\n\n    })\n  }else{\n    startJobFuncTrue(row)\n  }\n  console.log(row)\n \n}\nconst jobStopFunc = (row)=>{\n  \n  jobStop({project_id:projectStore.currentProject?.id,job_id:row.id,job_type:'train'}).then(res=>{\n    row['isStart'] = false\n  })\n  // jobStop({project_id:1,job_id:1,job_type:'train'})\n}\nconst getModelListFunc = (page)=>{\n  tableLoading.value = true\n  getModelList({page:page,size:10,project_id:projectStore.currentProject?.id}).then(res=>{\n  tableData.value = res.data.data\n  totalCount.value = res.data.total\n  updateStatus()\n  }).finally(() => {\n    tableLoading.value = false\n  })\n}\nconst handleDelete = (row)=>{\n  ElMessageBox.confirm(\n    '确定删除么?',\n    'Warning',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning',\n    }\n  )\n    .then(()=>{\n      deleteModel(row.id).then(res=>{\n        getModelListFunc(1)\n      })\n    })\n}\nonMounted(()=>{\n  console.log('mounterd')\n  getModelListFunc(1)\n  statusInterval = setInterval(updateStatus,1800)\n})\nonUnmounted(()=>{\n  clearInterval(statusInterval)\n})\n</script>\n\n<style scoped>\n.model-management-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.model-management-content {\n  flex: 1;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);\n}\n\n.page-title {\n  font-size: 20px;\n  color: #303133;\n  margin-bottom: 24px;\n  font-weight: 500;\n}\n\n.placeholder-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 400px;\n}\n\n.empty-icon {\n  font-size: 60px;\n  color: #909399;\n}\n\n:deep(.el-empty__description) {\n  margin-top: 20px;\n}\n\n:deep(.el-empty__description p) {\n  font-size: 16px;\n  color: #606266;\n}\n:deep(:focus-visible) {\n  outline: none;\n}\n</style>\n"],"names":["projectStore","useProjectStore","modelStore","useModelStore","router","useRouter","totalCount","ref","tableLoading","statusInterval","tableData","changePage","page","getModelListFunc","getStatusType","status","goToDetail","row","goToClone","goToUpdate","updateStatus","jobids","array","index","element","getJobStatus","_a","res","newdata","mapStatus","item","JOB_STATUS_LABEL","ENUM_JOB_STATUS","loadingInstance1","startJobFuncTrue","ElLoading","runJob","e","startJobFunc","ElMessageBox","jobStopFunc","jobStop","getModelList","handleDelete","deleteModel","onMounted","onUnmounted"],"mappings":"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"}
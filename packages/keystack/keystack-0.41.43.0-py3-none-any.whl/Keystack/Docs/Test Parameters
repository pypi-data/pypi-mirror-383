Test parameters

Example:
    keystack run -playbook Samples/advance -domain QA -session_id myAwesomeTestId 


playbook:              The playbook to run.  Could be any of the below formats:
                          -playbook /opt/KeystackTests/Playbooks/DOMAIN=QA/Samples/qa.yml
                          -playbook DOMAIN=QA/Samples/qa.yml
                          -playbook Samples/qa -domain <playbook domain> 
               
domain:                The playbook's domain. Test results will be saved in the domain name
                       that you stated.
   
api_key:               CLI only: Running Keystack on CLI in secured mode requires this param with user's API-Key
   
session_id:            Tag the pipeline test session with a unique name identifier

pipeline:              The saved pipeline name to run

debug:                 The pipleine session ID and the result folder will be tagged with 
                       _debug and the pipeline session will not be tracked

abort_test_on_failure: Abort the test immediately on the first failure 

pause_on_failure:      Pause the test on each failure immediately for debugging. 
                       Requires user to click on pause-on-faiure in the KeystackUI when done
                       debugging to resume testing.

                       If the test was executed on the CLI terminal window, Keystack will show a file path to remove to 
                       resume testing. You could resume testing by removing the provide file on CLI or by using KeystackUI

                       For example on the CLI terminal window:

                       paused-on-failure! Go debug the issue. When done, remove the file: /opt/KeystackTests/Results/DOMAIN=Communal/PLAYBOOK=Samples-advance/10-09-2025-13:38:11:589291_5860/STAGE=Test_TASK=layer3_ENV=DOMAIN=Communal-Samples-demoEnv1/pausedOnFailure
 
aws_s3:                Upload test results to AWS S3 bucket when the test is done
 
jira:                  Automatically open or update a Jira bug defect upon encountering test case failures

verbose:               For CLI test executions. Show extra debug tracebacks.
   
email_results:         Email the test result summary when test is completed
                       This is a placeholder for now.  *Not working yet*
   
app_args:              The args that you would normally passed into a CLI command app inside double 
                       quotes. For example: Pytest args
                       Also, overwrites testcase yml file scriptCmdlineArgs.
   
test_configs:          Which reconfiguration data files to use for test-params inside scripts.
                       These are data files that get read in memory at test case run time and passed into the
                       running script to digest as key/value pair dicts

                       Usage: -test_configs <file name>  
                       Usage: -test_configs <file1>  -test_configs <file2>

include_loop_test_passed_results: Inlcude loop test results. Default=False
                                  Warning! This will take up storage space. The more iterations,
                                  the more data accumulated.
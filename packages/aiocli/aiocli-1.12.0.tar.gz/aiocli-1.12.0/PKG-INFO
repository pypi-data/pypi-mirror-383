Metadata-Version: 2.4
Name: aiocli
Version: 1.12.0
Summary: Simple and lightweight async console runner.
Author-email: ticdenis <navarrodenis940503@outlook.com>, yasti4 <adria_4_@hotmail.com>
Maintainer-email: ticdenis <navarrodenis940503@outlook.com>
License: MIT
Project-URL: documentation, https://aiopy.github.io/python-aiocli/
Project-URL: repository, https://github.com/aiopy/python-aiocli
Keywords: asyncio,async,aio,cli,console
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development
Classifier: Typing :: Typed
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: pre-commit>=4.3.0; extra == "dev"
Requires-Dist: tomli>=2.3.0; python_version < "3.11" and extra == "dev"
Requires-Dist: types-toml>=0.10.8.20240310; python_version < "3.11" and extra == "dev"
Provides-Extra: deploy
Requires-Dist: build>=1.3.0; extra == "deploy"
Requires-Dist: setuptools>=75.1.0; extra == "deploy"
Requires-Dist: twine>=6.2.0; extra == "deploy"
Requires-Dist: wheel>=0.45.1; extra == "deploy"
Provides-Extra: docs
Requires-Dist: mkdocs>=1.6.1; extra == "docs"
Requires-Dist: mkdocs-material>=9.6.21; extra == "docs"
Provides-Extra: fmt
Requires-Dist: black>=25.9.0; extra == "fmt"
Requires-Dist: isort<7.0.0; extra == "fmt"
Provides-Extra: security-analysis
Requires-Dist: bandit>=1.8.6; extra == "security-analysis"
Requires-Dist: liccheck>=0.9.2; extra == "security-analysis"
Requires-Dist: setuptools>=75.1.0; extra == "security-analysis"
Provides-Extra: static-analysis
Requires-Dist: mypy>=1.18.2; extra == "static-analysis"
Requires-Dist: pylint>=3.3.9; extra == "static-analysis"
Provides-Extra: test
Requires-Dist: nest-asyncio>=1.6.0; extra == "test"
Requires-Dist: psutil>=7.1.0; extra == "test"
Requires-Dist: pytest>=8.4.2; extra == "test"
Requires-Dist: pytest-asyncio>=1.2.0; extra == "test"
Requires-Dist: pytest-cov>=7.0.0; extra == "test"
Requires-Dist: pytest-xdist>=3.8.0; extra == "test"
Dynamic: license-file

# Async cli client/commander framework

[![PyPI version](https://badge.fury.io/py/aiocli.svg)](https://badge.fury.io/py/aiocli)
[![PyPIDownloads](https://static.pepy.tech/badge/aiocli)](https://pepy.tech/project/aiocli)
[![CI](https://github.com/aiopy/python-aiocli/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/aiopy/python-aiocli/actions/workflows/ci.yml)

aiocli is a Python library for simple and lightweight async console runner.

Full compatibility with argparse module and highly inspired by aiohttp module.

## Installation

Use the package manager [pip](https://pypi.org/project/aiocli/) to install aiocli.

```bash
pip install aiocli
```

## Documentation

- Visit [aiocli docs](https://aiopy.github.io/python-aiocli/).

## Usage

```python
from logging import getLogger, Logger, StreamHandler
from os import getenv

from aiocli.commander import run_app, Application, Depends, State

app = Application(state={
    'envs': {
        'LOGGER_NAME': str(getenv('LOGGER_NAME', 'example_app')),
        'LOGGER_LEVEL': str(getenv('LOGGER_LEVEL', 'INFO')),
    }
})

def _get_logger(state: State) -> Logger:
    logger = getLogger(state.get('envs')['LOGGER_NAME'])
    logger.setLevel(state.get('envs')['LOGGER_LEVEL'])
    handler = StreamHandler()
    logger.addHandler(handler)
    return logger

@app.command(name='greet:to', positionals=[('name', {'default': 'World!'})])
async def handle_greeting(name: str, logger: Logger = Depends(_get_logger)) -> int:
    logger.info(f'Hello {name}')
    return 0

@app.command(name='div', optionals=[('--a', {'type': float}), ('--b', {'type': float})])
async def handle_division(a: float, b: float, logger: Logger = Depends(_get_logger)) -> int:
    try:
        logger.info(f'Result {a} / {b} = {(a / b)}')
        return 0
    except BaseException as err:
        logger.error(f'Error: {err}')
        return 1

# python3 main.py <command> <positionals> <optionals>
if __name__ == '__main__':
    run_app(app)
```

## Requirements

- Python >= 3.10

## Contributing

Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.

Please make sure to update tests as appropriate.

## License

[MIT](https://github.com/aiopy/python-aiocli/blob/master/LICENSE)

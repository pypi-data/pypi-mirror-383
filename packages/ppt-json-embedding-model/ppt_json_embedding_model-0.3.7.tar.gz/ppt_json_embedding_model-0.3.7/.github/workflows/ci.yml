name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
    
    - name: Lint with flake8 (optional)
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
      continue-on-error: true
    
    - name: Test package installation
      run: |
        python -c "import embedding_model; print('Package imported successfully')"
        python -m embedding_model.cli.train --help
        python -m embedding_model.cli.search --help
        python -m embedding_model.cli.embed --help
    
    - name: Run basic functionality tests
      run: |
        # Create sample data for testing
        echo '{"id": "1", "title": "test", "description": "sample"}' > test_data.jsonl
        echo '{"id": "2", "title": "example", "description": "another sample"}' >> test_data.jsonl
        
        # Test training (just 1 epoch for speed) - use default config
        python -m embedding_model.cli.train --config src/embedding_model/config/default.yaml --data test_data.jsonl --out test_model.pt
        
        # Test that model was created
        test -f test_model.pt
        
        # Test embedding generation
        python -m embedding_model.cli.embed --model test_model.pt --input test_data.jsonl --output test_embeddings.npy
        
        # Test search
        python -m embedding_model.cli.search --model test_model.pt --data test_data.jsonl --query "test" --topk 2
        
        # Test adaptive search
        python -m embedding_model.cli.adaptive_search --model test_model.pt --data test_data.jsonl --analyze
    
    - name: Clean up test files
      run: |
        rm -f test_data.jsonl test_model.pt test_embeddings.npy

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "codesonor"
version = "0.4.0"
description = "AI-Powered GitHub Repository Analyzer with multi-LLM support, caching, quality scoring, export formats, watch mode, and interactive dashboard"
readme = "CLI_README.md"
authors = [{name = "Farhan Mir", email = "your.email@example.com"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
]
keywords = ["github", "repository", "analyzer", "ai", "code-analysis", "gemini", "cli", "quality", "caching"]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
    "google-generativeai>=0.3.2",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
# LLM Provider packages (install as needed)
gemini = ["google-generativeai>=0.3.0"]
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.18.0"]
mistral = ["mistralai>=0.1.0"]
groq = ["groq>=0.4.0"]

# Install all LLM providers
all-llm = [
    "google-generativeai>=0.3.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "mistralai>=0.1.0",
    "groq>=0.4.0",
]

# Development tools
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

# Web application dependencies
web = [
    "Flask>=3.0.0",
    "Flask-CORS>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/farhanmir/CodeSonor"
Repository = "https://github.com/farhanmir/CodeSonor"
"Bug Tracker" = "https://github.com/farhanmir/CodeSonor/issues"

[project.scripts]
codesonor = "codesonor.cli:cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
codesonor = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[project]
name = "architxt"
description = "ArchiTXT is a tool for structuring textual data into a valid database model. It is guided by a meta-grammar and uses an iterative process of tree rewriting."
authors = [
    { name = "Jacques Chabin", email = "jacques.chabin@univ-orleans.fr" },
    { name = "Mirian Halfeld-Ferrari", email = "mirian@univ-orleans.fr" },
    { name = "Nicolas Hiot", email = "nicolas.hiot@univ-orleans.fr" }
]
maintainers = [
    { name = "Nicolas Hiot", email = "nicolas.hiot@univ-orleans.fr" }
]
readme = "README.md"
license-files = ["LICEN[CS]E*", "AUTHORS.md", "CONTRIBUTORS.md"]
keywords = [
    "python",
    "nlp",
    "database",
    "structuration",
    "text mining",
    "text analysis",
    "data analysis"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed"
]

dynamic = []

requires-python = '>=3.10,<3.13'
dependencies = [
    'tqdm>=4.60',
    'nltk>=3.9,<4.0',
    'unidecode',
    'benepar',
    'pandas>=2.3.0,<3.0.0',
    'numpy>=1.16,<2.0',
    'levenshtein',
    'more-itertools',
    'pybrat>=0.1.7,<0.2.0',
    'mlflow>=3.1,<3.5',
    'psutil>=7.0.0,<8.0.0',
    'typer>=0.15.1,<0.18.0',
    'click<8.3.0',
    'rich>=13.9.4,<15.0.0',
    'antlr4-python3-runtime>=4.13,<5',
    'cachetools>=5.5.0,<6.0.0',
    'googletrans>=4.0.2,<5.0.0',
    'aiostream>=0.7,<0.8',
    'sqlalchemy>=2.0.39,<3.0.0',
    'spacy>=3.7.0,<4.0.0',
    'scispacy>=0.5.5,<0.6.0',
    'plotly<6.0',
    'xmltodict>=0.14.2,<1.1.0',
    'xlrd>=2.0.1,<3.0.0',
    'neo4j>=5.28.1,<6.0.0',
    'zodb>=6.0,<7.0',
    'relstorage>=4.1.1,<5.0.0',
    'anyio>=4.9.0,<5.0.0',
    'toml>=0.10.0,<0.11.0',
    'scikit-learn>=1.7.0,<2.0.0',
    'platformdirs>=4.4.0,<5.0.0',
    'ruamel.yaml>=0.18.0,<0.19.0',
    'scipy>=1.15.0,<2.0.0'
]
version = "0.4.1"

[project.optional-dependencies]
ui = ['streamlit>=1.39.0', 'streamlit-agraph', 'streamlit-tags']
flair = ['flair>=0.15,<0.16']

[project.urls]
documentation = "https://neplex.github.io/ArchiTXT"

[project.scripts]
architxt = "architxt.cli:app"

[dependency-groups]
docs = [
    "sphinx>=8.1.3,<9.0.0",
    "sphinx-book-theme",
    "sphinx-toolbox",
    "sphinx-design",
    "sphinx-sitemap",
    "sphinx-copybutton",
    "sphinxcontrib-typer",
    "sphinxcontrib-mermaid",
    "myst-nb>=1.2.0",
    "notebook>=7.3.3",
    "itables>=2.3.0",
    "ipywidgets>=8.1.7",
    "yfiles-jupyter-graphs>=1.10.7",
    "yfiles-jupyter-graphs-for-neo4j>=1.7.0",
]

dev = [
    "devtools>=0.12.0,<1.0.0",
    "py-spy>=0.4.0,<0.5.0",
    "pre-commit>=4.0.1,<5.0.0",
    "datasets",
    "testcontainers>=4.10.0,<5.0.0",
    # linters/analysis
    "mypy==1.17.1",
    "ruff==0.13.0",
    "deptry>=0.23.0,<1.0.0",
    "vulture==2.14",
    # typing stubs
    "scipy-stubs",
    "pandas-stubs",
    "types-tqdm",
    "types-cachetools",
    "types-toml",
    # parser tools
    "antlr4-tools>=0.2.1",
     # fixed version of nmslib
    'nmslib @ git+https://github.com/nmslib/nmslib.git#subdirectory=python_bindings',
    # Broken version of transformers
    'transformers!=4.57.0'
]

test = [
    "pytest>=8.3",
    "pytest-cov",
    "pytest-xdist",
    "pytest-mock",
    # Property testing
    "hypothesis>=6.68.0",
    # Runtime type checking
    "beartype>=0.19,<0.22",
    "pytest-beartype>=0.2.0",
    # Async testing
    "trio>=0.28,<0.31",
]

[build-system]
requires = [
    "poetry-core>=1.0.0",
    "poetry-dynamic-versioning>=1.0.0,<2.0.0",
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]

[tool.poetry-dynamic-versioning]
enable = false
metadata = false

[tool.pytest.ini_options]
minversion = "7.0"
junit_family = "legacy"
testpaths = ["architxt", "tests"]
addopts = [
    "--doctest-modules",
    "--beartype-skip-packages=architxt/grammar"
]

[tool.coverage.run]
source = ["architxt"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[tool.ruff]
target-version = "py310"
line-length = 120
src = ["architxt", "tests"]
exclude = ["architxt/grammar", "dev"]

[tool.ruff.lint]
select = [
    "E4", # Pycodestyle error codes that are safe to auto-fix
    "E7",
    "E9",
    "A", # builtins
    "ARG", # Unused arguments
    "C4", # Comprehensions
    "C90", # mccabe complexity
    "D", # Documentation check
    "F", # Flake8 rules
    "N", # pep8 naming
    "I", # isort rules for import ordering
    "ICN", # Import conventions
    "TID", # Tidy imports
    "UP", # pyupgrade (for safe code modernization)
    "SIM", # Code simplifications
    "LOG", # Logger usage
    "PIE", # Miscellaneous
    "RUF", # Ruff-specific auto-fixable rules
    "PD", # Pandas checks
    "NPY", # NumPy checks
    "PERF", # Performance anti-pattern checks
    "FURB", # Old Python code
    "PT", # Pytest checks
    "RET", # Returns
    "PTH", # Prefer Pathlib
    "TC", # Type checking
    "ANN", # Type annotations
    "EM", # Error messages
    "TD", # Todos format
    "FLY", # Prefer f-string
    "TRY", # Exceptions antipattern checks
    "SLOT",
    "PYI",
]
ignore = [
    "ANN401", # Any typing
    "D1", # Undocumented
    "D203", # Incorrect blank line before class
    "D212", # Multi-line summary first line
]

[tool.ruff.format]
quote-style = "preserve"

[tool.vulture]
min_confidence = 80
paths = ["architxt", "tests"]
ignore_decorators = [
    "@pytest.fixture",
    "@app.command",
    "@app.callback",
    "@Language.component"
]
ignore_names = ["exc_type", "exc_value", "traceback"]
exclude = [
    "architxt/grammar",
    "architxt/ui"
]

[tool.deptry]
extend_exclude = [
    "tests/",
    "docs/",
    "dev/",
    "architxt/grammar"
]

[tool.deptry.per_rule_ignores]
DEP002 = [
    "xlrd", # Optional dependency for pandas to support .xls files
    "relstorage", # Backend storage for ZODB
    "nmslib" # Sub-dependency specified to get a fixed version
]
DEP003 = ["transaction", "persistent", "BTrees"] # ZODB sub-libs

[tool.deptry.package_module_name_map]
sklearn = "scikit-learn"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
exclude = "architxt/grammar"
plugins = [
    "numpy.typing.mypy_plugin"
]

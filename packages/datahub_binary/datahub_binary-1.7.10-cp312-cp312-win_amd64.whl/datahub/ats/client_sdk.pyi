import datetime
from _typeshed import Incomplete
from dataclasses import dataclass
from datahub.protos import client_msg as client_msg
from enum import Enum

QuoteType: Incomplete
SubscribeType: Incomplete

class ChannelType(Enum):
    Subscribe = 1
    Quote = 3
    Query = 4
    Reply = 5
    Event = 6

class StrategyError(Exception): ...

@dataclass
class Setting:
    user_id: str
    password: str
    strategy_id: int
    interval: int
    quote_sub_url: str
    event_sub_url: str
    client_dealer_url: str

class BaseStrategy:
    setting: Incomplete
    def __init__(self, setting: Setting) -> None: ...
    @property
    def strategy_id(self): ...
    @property
    def subscribed_topic(self): ...
    def subscribe(self, instrument_id: str, quote_type: QuoteType): ...
    def unsubscribe(self, instrument_id: str, quote_type: QuoteType): ...
    def on_init(self) -> None: ...
    def on_start(self) -> None: ...
    def on_stop(self) -> None: ...
    def on_order(self, event: client_msg.OrderEvent): ...
    def qry_instrument_req(self, instrument_id: str = None, basket_instrument_id: str = None, market_list: list[str] = ()) -> str: ...
    def on_qry_instrument_rsp(self, rsp: client_msg.QryInstrumentRsp): ...
    def qry_strategy_info_req(self, strategy_id: int) -> str: ...
    def on_qry_strategy_info_rsp(self, rsp: client_msg.QryStrategyInfoRsp): ...
    def qry_trade_req(self) -> str: ...
    def on_qry_trade_rsp(self, rsp: client_msg.QryTradesRsp): ...
    def qry_order_req(self, cl_order_id: str = None, order_id: str = None, is_active: int = 0) -> str: ...
    def on_qry_order_rsp(self, rsp: client_msg.QryOrdersRsp): ...
    def qry_strategy_posi_req(self) -> str: ...
    def on_qry_strategy_posi_rsp(self, rsp: client_msg.QryStrategyPositionRsp): ...
    def qry_book_stat_req(self, book_id: str = None) -> str: ...
    def on_qry_book_stat_rsp(self, rsp: client_msg.QryBookStatRsp): ...
    def qry_signal_kline_req(self, signal_id: int, start_date: datetime.date = None) -> str: ...
    def on_qry_signal_kline_rsp(self, rsp: client_msg.QrySignalKlineRsp): ...
    def qry_quote_req(self, instrument_id: str | None = None) -> str: ...
    def on_qry_quote_rsp(self, qry_quote_rsp: client_msg.QryQuoteRsp): ...
    def qry_broker_posi_req(self) -> str: ...
    def on_qry_broker_posi_rsp(self, rsp: client_msg.QryBrokerPosiRsp): ...
    def qry_broker_fund_req(self) -> str: ...
    def on_qry_broker_fund_rsp(self, rsp: client_msg.QryBrokerFundRsp): ...
    def on_snapshot(self, snapshot: client_msg.MDSnapshot): ...
    def place_order(self, order: client_msg.PlaceOrder): ...
    def book_trade_req(self, trade: client_msg.BookTradeReq): ...
    def on_book_trade_rsp(self, rsp: client_msg.BookTradeRsp): ...
    def on_trade_confirm(self, trade: client_msg.TradeConfirm): ...
    def on_order_reject(self, order: client_msg.OrderReject): ...
    def cancel_order(self, order: client_msg.CancelOrder): ...
    def cancel_all_order(self) -> None: ...
    def on_cancel_confirm(self, order: client_msg.CancelConfirm): ...
    def on_cancel_pending_confirm(self, order: client_msg.CancelPendingConfirm): ...
    def on_cancel_reject(self, order: client_msg.CancelReject): ...
    def on_qry_sbl_list_rsp(self, rsp: client_msg.QrySblListRsp): ...
    def on_qry_lock_record_rsp(self, rsp: client_msg.QryLockRecordRsp): ...
    def on_lock_sbl_rsp(self, rsp: client_msg.LockSblRsp): ...
    def on_qry_lock_position_rsp(self, rsp: client_msg.QryLockPositionRsp): ...
    def update_strategy_param_req(self, req: client_msg.UpdateStrategyParamsReq): ...
    def on_update_strategy_params_rsp(self, rsp: client_msg.UpdateStrategyParamsRsp): ...
    def calc(self) -> None: ...
    def qry_sbl_list_req(self, sbl_ids: list[str]) -> str: ...
    def lock_sbl_req(self, instrument_id: str, sbl_id: str, lock_qty: int) -> str: ...
    def qry_lock_position_req(self) -> None: ...
    def qry_lock_record_req(self) -> None: ...
    def proxy(self) -> None: ...
    def run(self) -> None: ...

[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling", "uv-dynamic-versioning" ]

[project]
name = "colander-data-converter"
description = "A set of helpers to manipulate Colander data."
readme = "README.md"
license = "GPL-3.0-or-later"
maintainers = [
  { name = "U+039b", email = "hello@pts-project.org" },
]
authors = [
  { name = "U+039b", email = "hello@pts-project.org" },
]
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = [ "version" ]
dependencies = [
  "docutils-stubs==0.0.22",
  "jinja2==3.1.6",
  "pydantic==2.11.7",
  "pymisp>=2.5.17",
  "types-docutils==0.22.1.20250923",
]

urls.discord = "https://discord.gg/qGX73GYNdp"
urls.documentation = "https://pts-project.org/colander-data-converter/"
urls.donate = "https://opencollective.com/pts"
urls.homepage = "https://pts-project.org"
urls.issues = "https://github.com/PiRogueToolSuite/colander-data-converter/issues"
urls.mastodon = "https://infosec.exchange/@pts"
urls.repository = "https://github.com/PiRogueToolSuite/colander-data-converter"

[dependency-groups]
dev = [
  "hatchling",
  "mypy",
  "pre-commit-uv",
  "pytest",
  "ruff",
  "tox",
  "tox-uv",
  "uv-dynamic-versioning",
]
test = [
  "coverage",
  "hatchling",
  "mypy",
  "pytest",
  "pytest-cov",
  "pytest-md-report",
  "sphinx>=8.1.3",
]

docs = [
  "autoclasstoc>=1.7",
  "autodoc-pydantic>=2.2",
  "myst-parser",
  "sphinx>=8.1.3",
  "sphinx-autobuild",
  "sphinx-copybutton",
  "sphinx-hoverxref>=1.4.2",
  "sphinx-jsonschema",
  "sphinx-needs",
  "sphinx-notfound-page>=1.0.4",
  "sphinx-pydantic>=0.1.1",
  "sphinx-rtd-theme",
  "sphinx-toolbox",
  "sphinxcontrib-datatemplates>=0.11",
]

[tool.hatch.build.targets.sdist]
ignore-vcs = true
only-include = [
  "colander_data_converter",
  "LICENSE",
  "README.md",
]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.ruff]
target-version = "py312"
line-length = 120
indent-width = 4
exclude = [
  ".eggs",
  ".git",
  ".git-rewrite",
  ".ruff_cache",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  "site-packages",
]
format.indent-style = "space"
format.quote-style = "double"
format.line-ending = "auto"
format.skip-magic-trailing-comma = false
format.docstring-code-line-length = "dynamic"
format.docstring-code-format = false
lint.select = [ "E4", "E7", "E9", "F" ]
lint.ignore = [ "E722", "F403", "F405", "F841" ]
lint.fixable = [ "ALL" ]
lint.unfixable = [  ]
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
ignore-words-list = "ot,master"

[tool.coverage.run]
omit = [
  "*test_*",
  "export_theme_icons.py",
  "generate_types.py",
  "generate_conversion_matrix.py",
  "docs/*",
]

[tool.coverage.report]
omit = [
  "*test_*",
  "export_theme_icons.py",
  "generate_types.py",
  "generate_conversion_matrix.py",
  "docs/*",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = false
ignore_missing_imports = true
disable_error_code = [
  "call-overload",
  "index",
]

[tool.uv-dynamic-versioning]
fallback-version = "0.0.0"

[tool.bandit]
targets = [ "colander_data_converter" ]
exclude_dirs = [ "tests", "doc" ]
skips = [ "B101" ]

[tool.uv]
concurrent-builds = 4
trusted-publishing = "always"

apiVersion: v1
kind: Secret
metadata:
  name: policy-guard-secrets
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Database credentials (base64 encoded)
  # Default values - should be changed in production
  # echo -n "policy_guard_user" | base64
  DB_USER: cG9saWN5X2d1YXJkX3VzZXI=
  # echo -n "policy_guard_password" | base64
  DB_PASSWORD: cG9saWN5X2d1YXJkX3Bhc3N3b3Jk
  # echo -n "policy_guard_db" | base64
  DB_NAME: cG9saWN5X2d1YXJkX2Ri
  
  # API Keys and Tokens
  # echo -n "your-api-key-here" | base64
  API_KEY: eW91ci1hcGkta2V5LWhlcmU=
  # echo -n "your-jwt-secret" | base64
  JWT_SECRET: eW91ci1qd3Qtc2VjcmV0
  
  # External Service Credentials
  # echo -n "vault-token" | base64
  VAULT_TOKEN: dmF1bHQtdG9rZW4=
  # echo -n "monitoring-api-key" | base64
  MONITORING_API_KEY: bW9uaXRvcmluZy1hcGkta2V5
  
  # TLS Certificates (if using custom certificates)
  # These would be populated by cert-manager or manually
  # tls.crt: ""
  # tls.key: ""
  
  # SSH Keys for remote host access (if needed)
  # ssh_private_key: ""
  # ssh_public_key: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: policy-guard-tls
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # These will be populated by cert-manager or manually
  # For development, you can generate self-signed certificates
  tls.crt: ""
  tls.key: ""
---
# Service Account for the application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: policy-guard-sa
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: service-account
---
# RBAC for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: policy-guard-role
  namespace: policy-guard
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: policy-guard-rolebinding
  namespace: policy-guard
subjects:
- kind: ServiceAccount
  name: policy-guard-sa
  namespace: policy-guard
roleRef:
  kind: Role
  name: policy-guard-role
  apiGroup: rbac.authorization.k8s.io

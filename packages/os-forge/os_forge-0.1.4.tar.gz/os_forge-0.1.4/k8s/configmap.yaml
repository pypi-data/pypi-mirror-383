apiVersion: v1
kind: ConfigMap
metadata:
  name: os-forge-config
  namespace: os-forge
  labels:
    app.kubernetes.io/name: os-forge
    app.kubernetes.io/component: config
data:
  # Database Configuration
  DATABASE_URL: "sqlite:///./data/policy_guard.db"
  
  # Application Configuration
  APP_NAME: "OS Forge"
  APP_VERSION: "1.0.0"
  ENVIRONMENT: "production"
  
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_WORKERS: "4"
  
  # Frontend Configuration
  FRONTEND_URL: "http://os-forge-frontend:3000"
  NEXT_PUBLIC_API_URL: "http://os-forge-backend:8000"
  
  # Security Configuration
  CORS_ORIGINS: "http://os-forge-frontend:3000,https://os-forge.example.com"
  ALLOWED_HOSTS: "os-forge-backend,os-forge-frontend,localhost,127.0.0.1"
  
  # Logging Configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  
  # Monitoring Configuration
  ENABLE_METRICS: "true"
  METRICS_PORT: "9090"
  
  # Hardening Rules Configuration
  RULES_PATH: "/app/rules"
  BACKUP_PATH: "/app/backups"
  REPORTS_PATH: "/app/reports"
  
  # Health Check Configuration
  HEALTH_CHECK_INTERVAL: "30s"
  HEALTH_CHECK_TIMEOUT: "10s"
  HEALTH_CHECK_RETRIES: "3"
  
  # Performance Configuration
  MAX_WORKERS: "10"
  TIMEOUT: "300"
  KEEPALIVE_TIMEOUT: "5"
  
  # Feature Flags
  ENABLE_PDF_REPORTS: "true"
  ENABLE_HTML_REPORTS: "true"
  ENABLE_ROLLBACK: "true"
  ENABLE_MULTI_HOST: "true"
  
  # Nginx Configuration for Frontend
  nginx.conf: |
    server {
        listen 3000;
        server_name _;
        
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
        
        location /api {
            proxy_pass http://os-forge-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: os-forge-rules
  namespace: os-forge
  labels:
    app.kubernetes.io/name: os-forge
    app.kubernetes.io/component: rules
data:
  # This will be populated with hardening rules
  # Rules can be updated without restarting the application
  rules.yaml: |
    # Hardening rules will be loaded from this ConfigMap
    # This allows for dynamic rule updates without pod restarts
    rules: []

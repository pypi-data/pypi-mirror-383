# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: policy-guard-ingress
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: ingress
  annotations:
    # Nginx Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/client-max-body-size: "10m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';";
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://policy-guard.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    
    # Cert-manager for automatic TLS certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/path: "/metrics"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - policy-guard.example.com
    - api.policy-guard.example.com
    secretName: policy-guard-tls
  rules:
  # Main application
  - host: policy-guard.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: policy-guard-frontend
            port:
              number: 3000
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: policy-guard-backend
            port:
              number: 8000
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: policy-guard-backend
            port:
              number: 8000
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: policy-guard-backend
            port:
              number: 8000
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: policy-guard-backend
            port:
              number: 9090
  # API subdomain
  - host: api.policy-guard.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: policy-guard-backend
            port:
              number: 8000
---
# Ingress for internal access (no TLS)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: policy-guard-internal
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: ingress-internal
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  ingressClassName: nginx
  rules:
  - host: policy-guard.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: policy-guard-frontend
            port:
              number: 3000
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: policy-guard-backend
            port:
              number: 8000
---
# NetworkPolicy for ingress traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-guard-ingress-policy
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: policy-guard
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80

# NetworkPolicy for Backend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-guard-backend-netpol
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: backend
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from frontend
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: frontend
    ports:
    - protocol: TCP
      port: 8000
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  # Allow traffic from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  # Allow traffic from same namespace (for internal communication)
  - from:
    - namespaceSelector:
        matchLabels:
          name: policy-guard
    ports:
    - protocol: TCP
      port: 8000
      port: 9090
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS traffic for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP traffic for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow traffic to frontend
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: frontend
    ports:
    - protocol: TCP
      port: 3000
  # Allow traffic to monitoring
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
---
# NetworkPolicy for Frontend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-guard-frontend-netpol
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: frontend
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  # Allow traffic from same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: policy-guard
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS traffic for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP traffic for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow traffic to backend
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: backend
    ports:
    - protocol: TCP
      port: 8000
---
# NetworkPolicy for Default Deny (Deny all traffic by default)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-guard-deny-all
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: network-policy
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  # This policy denies all traffic by default
  # Other policies will allow specific traffic
---
# NetworkPolicy for Monitoring
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: policy-guard-monitoring-netpol
  namespace: policy-guard
  labels:
    app.kubernetes.io/name: policy-guard
    app.kubernetes.io/component: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: monitoring
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from backend
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: backend
    ports:
    - protocol: TCP
      port: 9090
  # Allow traffic from frontend
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: frontend
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS traffic for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443

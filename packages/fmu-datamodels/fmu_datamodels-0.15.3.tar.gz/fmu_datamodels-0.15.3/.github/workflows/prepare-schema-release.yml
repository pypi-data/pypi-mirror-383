name: Prepare schema release to staging

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "The release version of fmu-datamodels to release a new schema for."
        type: string
        required: true

  workflow_call:
    inputs:
      release_tag:
        description: "The release version of fmu-datamodels to release a new schema for."
        type: string
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-schema-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the provided release tag of fmu-datamodels repo
      uses: actions/checkout@v4
      with: 
        fetch-depth: 0
        ref: ${{ inputs.release_tag }}

    - name: Create source branch
      run: |

        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        branch_name="propose-schema-${{ inputs.release_tag }}"
        git switch -C $branch_name

        git switch staging
        git switch $branch_name
        git rebase staging

        if [ $? -eq 0 ]; then
          git push -u origin $branch_name
        else
          echo "Rebasing onto staging failed. Aborting schema release.."
          exit 1
        fi
        echo "SOURCE_BRANCH=$branch_name" >> "$GITHUB_ENV"
        echo "Created new source branch $branch_name."
    
    - name: Create Pull Request to merge new schema to staging
      run: |

        body=$(cat <<EOF
        Release a new schema to staging with the changes from release tag ${{ inputs.release_tag }}.

        ⚠️ Merging this PR will automatically deploy the changes to the schema applications staging environment in Radix.

        This PR was automatically generated by the prepare schema release to staging workflow.
        EOF
        )

        data=$(jq -n \
        --arg title "REL: Prepare schema release for ${{ inputs.release_tag }}" \
        --arg body "$body" \
        --arg head "$SOURCE_BRANCH" \
        --arg base "staging" \
        '{title: $title, body: $body, head: $head, base: $base}')

        echo "Creating Pull Request, requesting to merge branch $SOURCE_BRANCH into staging..."
        response=$(curl -L \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/equinor/fmu-datamodels/pulls \
        -d "$data")

        pr_url=$(echo "$response" | jq -r '.html_url')
        echo "Pull Request created successfully."
        echo "See the PR in GitHub here $pr_url"

<metal:editLicenceMacro define-macro="editLicenceMacro" i18n:domain="urban"
                        tal:define="view_name python:'urbancertificatebase_edit';">
    <metal:edit use-macro="here/@@licenceedit/editLicenceMacro" />
</metal:editLicenceMacro>


<div metal:define-macro="editLicenceFieldsMacro" i18n:domain="urban">
    <tal:fields repeat="field python:view.getFields(schematas[fieldset])">
        <tal:block define="visible python: field['visible'];
                           field  python: field['field'];
                           fieldName field/getName">

            <tal:comment replace="nothing">Display a fieldset around the 'isInPca' and 'Pca' fields</tal:comment>
            <tal:pca condition="python: fieldName in ['isInPCA', 'pca', 'pcaDetails', 'pcaZone']">
                <tal:comment replace="nothing">We do the entire job manually when the field is 'isInPca' and there is
                                                nothing left to do when it is the 'Pca' field</tal:comment>
                <tal:manage_pca condition="python: fieldName == 'isInPCA'">
                    <fieldset class="urban-fieldset-masterbooleanwidget" style="border-style: solid !important;">
                        <legend i18n:translate="" tal:content="python: context.getField('pca').widget.label">PCA</legend>
                        <metal:fieldMacro use-macro="python:here.widget('isInPCA', mode='edit')" />
                        <metal:fieldMacro use-macro="python:here.widget('pca', mode='edit')" />
                        <metal:fieldMacro use-macro="python:here.widget('pcaDetails', mode='edit')" />
                        <metal:fieldMacro use-macro="python:here.widget('pcaZone', mode='edit')" />
                    </fieldset>
                </tal:manage_pca>
            </tal:pca>

            <tal:comment replace="nothing">Display a fieldset around the 'isInSubdivision' and 'subdivisionDetails' fields</tal:comment>
            <tal:subdivision condition="python: fieldName in ['isInSubdivision', 'parcellings', 'subdivisionDetails',]">
                <tal:comment replace="nothing">We do the entire job manually when the field is 'isInSubdivision' and there
                                        is nothing left to do when it is the 'subdivisionDetails' field</tal:comment>
                <tal:manage_subdivision condition="python: fieldName == 'isInSubdivision'">
                    <div tal:attributes="hidden python: not visible or None">
                        <fieldset class="urban-fieldset-masterbooleanwidget" style="border-style: solid !important;">
                            <legend i18n:translate="subdivision_fieldset_legend">Subdivision</legend>
                            <metal:fieldMacro use-macro="python:here.widget('isInSubdivision', mode='edit')" />
                            <metal:fieldMacro use-macro="python:here.widget('parcellings', mode='edit')" />
                            <metal:fieldMacro use-macro="python:here.widget('subdivisionDetails', mode='edit')" />
                        </fieldset>
                    </div>
                </tal:manage_subdivision>
            </tal:subdivision>

            <tal:other condition="not: python: fieldName in [
                                     'isInPCA', 'pca', 'pcaDetails', 'pcaZone', 'isInSubdivision',
                                     'parcellings', 'subdivisionDetails', 'minimumLegalConditions'
                                  ]">
                <div tal:attributes="hidden python: not visible or None">
                    <metal:fieldMacro use-macro="python:here.widget(fieldName, mode='edit')" />
                </div>
            </tal:other>
        </tal:block>
    </tal:fields>
</div>

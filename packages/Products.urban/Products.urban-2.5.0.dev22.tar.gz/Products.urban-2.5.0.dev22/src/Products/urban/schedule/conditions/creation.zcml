<configure
    xmlns="http://namespaces.zope.org/zope"
    i18n_domain="Products.urban">

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.DepositDoneCondition"
        name="urban.schedule.condition.deposit_done"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SingleComplementAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <!-- unique licence incomplete conditions-->

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SingleComplementAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SingleComplementReceived"
        name="urban.schedule.condition.complements_received"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
             provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ComplementsTransmitToSPW"
        name="urban.schedule.condition.complements_transmit_to_spw"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.IncompleteForSixMonths"
        name="urban.schedule.condition.incomplete_for_6_months"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.IncompleteForSixMonths"
        name="urban.schedule.condition.incomplete_for_6_months"
    />


    <!-- acknowlegdment conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.AcknowledgmentDoneCondition"
        name="urban.schedule.condition.acknowledgment_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.AcknowledgmentDoneCondition"
        name="urban.schedule.condition.acknowledgment_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.DefaultAcknowledgmentCondition"
        name="urban.schedule.condition.default_acknowledgement"
    />

    <!-- inquiry conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.WillHaveInquiry"
        name="urban.schedule.condition.will_have_inquiry"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.WillHaveAnnouncement"
        name="urban.schedule.condition.will_have_announcement"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.NoInquiryCondition"
        name="urban.schedule.condition.no_inquiry"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.InquiryCondition"
        name="urban.schedule.condition.has_inquiry"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.AnnouncementCondition"
        name="urban.schedule.condition.has_announcement"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.AnnouncementDoneCondition"
        name="urban.schedule.condition.announcement_done"
    />

    <!-- opinion requests conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.HasOpinionRequests"
        name="urban.schedule.condition.has_opinion_requests"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.HasOpinionRequests"
        name="urban.schedule.condition.has_opinion_requests"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.OpinionRequestsDone"
        name="urban.schedule.condition.opinion_requests_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.OpinionRequestsDone"
        name="urban.schedule.condition.opinion_requests_done"
    />

    <adapter
        for="Products.urban.interfaces.IUrbanEventOpinionRequest
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.IsInternalOpinionRequest"
        name="urban.schedule.condition.is_internal_opinion"
    />

    <!-- FD opinions conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.HasFDOpinionRequest"
        name="urban.schedule.condition.need_FD_opinion"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.HasNoFDOpinionRequest"
        name="urban.schedule.condition.dont_need_FD_opinion"
    />

    <!-- deposit date is past by x days -->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.DepositDateIsPast20Days"
        name="urban.schedule.condition.deposit_past_20days"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.DepositDateIsPast30Days"
        name="urban.schedule.condition.deposit_past_30days"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.DepositDateIsUnder30Days"
        name="urban.schedule.condition.deposit_under_30days"
    />

    <!-- incomplete -->

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.IncompleteForTheFirstTime"
        name="urban.schedule.condition.incomplete_first_time"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.IncompleteForTheSecondTime"
        name="urban.schedule.condition.incomplete_second_time"
    />

    <!-- SPW project receipt for unique licences -->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SPWProjectReceivedCondition"
        name="urban.schedule.condition.spw_project_receipt_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.LicenceAuthorityIsCollege"
        name="urban.schedule.condition.authority_is_college"
    />

    <!-- Env class 2 temporary licences dont have public inquiries -->
    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.IsNotTemporaryLicence"
        name="urban.schedule.condition.is_not_temporary_licence"
    />

    <!-- Inspection conditions -->
    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ShouldDoInspectionFollowups"
        name="urban.schedule.condition.should_do_followups"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ShouldWriteOneInspectionFollowUp"
        name="urban.schedule.condition.should_write_one_followup"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SomeInspectionFollowupsAreWritten"
        name="urban.schedule.condition.followups_written"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SomeInspectionFollowupsToSend"
        name="urban.schedule.condition.followups_to_send"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ShouldEndInspection"
        name="urban.schedule.condition.should_end_inspection"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ShouldCreateTicket"
        name="urban.schedule.condition.should_create_ticket"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.FollowUpTicketCreated"
        name="urban.schedule.condition.followup_ticket_created"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.FollowUpTicketClosed"
        name="urban.schedule.condition.followup_ticket_is_closed"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.FollowUpWithDelayClosed"
        name="urban.schedule.condition.followup_with_delay_written"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.FollowUpWithDelayOverdue"
        name="urban.schedule.condition.followup_with_delay_overdue"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ProsecutionAnswerOverDeadline"
        name="urban.schedule.condition.prosecution_answer_over_deadline"
    />

    <!-- Ticket conditions -->
    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ShouldDoInspectionFollowups"
        name="urban.schedule.condition.should_do_followups"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.ShouldWriteOneInspectionFollowUp"
        name="urban.schedule.condition.should_write_one_followup"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SomeInspectionFollowupsAreWritten"
        name="urban.schedule.condition.followups_written"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation.SomeInspectionFollowupsToSend"
        name="urban.schedule.condition.followups_to_send"
    />

</configure>

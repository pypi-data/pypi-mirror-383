<configure
    xmlns="http://namespaces.zope.org/zope"
    i18n_domain="Products.urban">


    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.DepositDoneCondition"
        name="urban.schedule.condition.deposit_done"
    />

    <!-- SPW transmit conditions-->
    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.TransmitSPWDoneCondition"
        name="urban.schedule.condition.transmit_to_spw_done"
    />

    <!-- folder complete conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.ComplementsAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.SingleComplementAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.ComplementsAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.SingleComplementReceived"
        name="urban.schedule.condition.complements_received"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.ComplementsTransmitToSPW"
        name="urban.schedule.condition.complements_transmit_to_spw"
    />

    <!-- acknowlegdment conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.AcknowledgmentCreatedCondition"
        name="urban.schedule.condition.acknowledgment_created"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.AcknowledgmentDoneCondition"
        name="urban.schedule.condition.acknowledgment_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.ProcedureChoiceDone"
        name="urban.schedule.condition.procedure_choice_done"
    />

    <!-- inquiry conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.NoInquiryCondition"
        name="urban.schedule.condition.no_inquiry"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.InquiryDoneCondition"
        name="urban.schedule.condition.inquiry_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.InquiryDoneCondition"
        name="urban.schedule.condition.inquiry_done"
    />

    <!-- opinion requests conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.HasOpinionRequests"
        name="urban.schedule.condition.has_opinion_requests"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.OpinionRequestsDone"
        name="urban.schedule.condition.opinion_requests_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.HasOpinionRequests"
        name="urban.schedule.condition.has_opinion_requests"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.OpinionRequestsDone"
        name="urban.schedule.condition.opinion_requests_done"
    />

    <!-- decision college event conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.LicenceDecisionCollegeEventCreated"
        name="urban.schedule.condition.licence_decision_college_event_created"
    />

    <!-- deposit date is past by x days -->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.DepositDateIsPast20Days"
        name="urban.schedule.condition.deposit_past_20days"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.DepositDateIsPast30Days"
        name="urban.schedule.condition.deposit_past_30days"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.SPWProjectReceivedCondition"
        name="urban.schedule.condition.spw_project_receipt_done"
    />

    <!-- decision -->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".generic.DecisionNotified"
        name="urban.schedule.condition.decision_notified"
    />

</configure>

<configure
    xmlns="http://namespaces.zope.org/zope"
    i18n_domain="Products.urban">

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.DepositDoneCondition"
        name="urban.schedule.condition.deposit_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.ProcedureChoiceDone"
        name="urban.schedule.condition.procedure_choice_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.ProcedureChoiceDone"
        name="urban.schedule.condition.procedure_choice_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.LicenceInCompletionState"
        name="urban.schedule.condition.set_completion_state"
    />

    <!-- folder complete conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.ComplementsAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SingleComplementAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SingleComplementAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SingleComplementAsked"
        name="urban.schedule.condition.complements_asked"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.ComplementsReceived"
        name="urban.schedule.condition.complements_received"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SingleComplementReceived"
        name="urban.schedule.condition.complements_received"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SingleComplementReceived"
        name="urban.schedule.condition.complements_received"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SingleComplementReceived"
        name="urban.schedule.condition.complements_received"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.ComplementsTransmitToSPW"
        name="urban.schedule.condition.complements_transmit_to_spw"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SingleComplementReceived"
        name="urban.schedule.condition.incomplete_for_6_months"
    />

    <!-- SPW transmit conditions-->
    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.TransmitSPWDoneCondition"
        name="urban.schedule.condition.transmit_to_spw_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.TransmitSPWDoneCondition"
        name="urban.schedule.condition.transmit_to_spw_done"
    />

    <!-- acknowlegdment conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AcknowledgmentCreatedCondition"
        name="urban.schedule.condition.acknowledgment_created"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AcknowledgmentDoneCondition"
        name="urban.schedule.condition.acknowledgment_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AcknowledgmentDoneCondition"
        name="urban.schedule.condition.acknowledgment_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AcknowledgmentDoneOrComplementsAskedCondition"
        name="urban.schedule.condition.acknowledgment_or_incomplete"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.RubricsChoiceDone"
        name="urban.schedule.condition.rubrics_choice_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.ProcedureChoiceNotified"
        name="urban.schedule.condition.procedure_choice_notified"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.ProcedureChoiceNotified"
        name="urban.schedule.condition.procedure_choice_received_from_FD"
    />

    <!-- opinion requests conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.OpinionRequestsEventsCreated"
        name="urban.schedule.condition.opinion_requests_created"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.OpinionRequestsDone"
        name="urban.schedule.condition.opinion_requests_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.OpinionRequestsEventsCreated"
        name="urban.schedule.condition.opinion_requests_created"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.OpinionRequestsDone"
        name="urban.schedule.condition.opinion_requests_done"
    />

    <!-- College opinion transmit for unique licences -->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.CollegeOpinionTransmitToSPWDoneCondition"
        name="urban.schedule.condition.college_opinion_transmit_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.CollegeOpinionTransmitToSPWDoneCondition"
        name="urban.schedule.condition.college_opinion_transmit_done"
    />

    <!-- SPW project receipt for unique licences -->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SPWProjectReceivedCondition"
        name="urban.schedule.condition.spw_project_receipt_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.SPWProjectReceivedCondition"
        name="urban.schedule.condition.spw_project_receipt_done"
    />

    <!-- inquiry conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.InquiryDatesDefinedCondition"
        name="urban.schedule.condition.inquiry_dates_defined"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.InquiryEventCreatedCondition"
        name="urban.schedule.condition.inquiry_event_created"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.InquiryDoneCondition"
        name="urban.schedule.condition.inquiry_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.InquiryDatesDefinedCondition"
        name="urban.schedule.condition.inquiry_dates_defined"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.InquiryDoneCondition"
        name="urban.schedule.condition.inquiry_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AnnouncementDatesDefinedCondition"
        name="urban.schedule.condition.announcement_dates_defined"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AnnouncementEventCreatedCondition"
        name="urban.schedule.condition.announcement_event_created"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AnnouncementDoneCondition"
        name="urban.schedule.condition.announcement_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.WalloonRegionPrimoEventDone"
        name="urban.schedule.condition.primo_done"
    />

    <!-- analysis conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.UrbanAnalysisDone"
        name="urban.schedule.condition.analysis_done"
    />

    <!-- suspension conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.LicenceSuspension"
        name="urban.schedule.condition.suspension"
    />

    <!-- fd decision conditions-->
    <adapter
        for="Products.urban.interfaces.IArticle127
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.FDDecisionEventCreatedCondition"
        name="urban.schedule.condition.fd_decision_event_created"
    />

    <adapter
        for="Products.urban.interfaces.IArticle127
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.FDDecisionEventDoneCondition"
        name="urban.schedule.condition.fd_decision_received"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_Article127
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.FDDecisionEventCreatedCondition"
        name="urban.schedule.condition.fd_decision_event_created"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_Article127
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.FDDecisionEventDoneCondition"
        name="urban.schedule.condition.fd_decision_received"
    />

    <!-- deposit date is past by x days -->
    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.DepositDateIsPast20Days"
        name="urban.schedule.condition.deposit_past_20days"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.DepositDateIsPast30Days"
        name="urban.schedule.condition.deposit_past_30days"
    />

    <!-- refused conditions -->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.LicenceRefused"
        name="urban.schedule.condition.refused"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.LicenceRefused"
        name="urban.schedule.condition.refused"
    />

    <!-- decision college event conditions-->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.LicenceDecisionCollegeEventCreated"
        name="urban.schedule.condition.licence_decision_college_event_created"
    />
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.DecisionNotified"
        name="urban.schedule.condition.decision_notified"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.DecisionDelivered"
        name="urban.schedule.condition.decision_delivered"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.LicenceEndedCondition"
        name="urban.schedule.licence_ended"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.LicenceThawedCondition"
        name="urban.schedule.condition.LicenceThawed"
    />

    <!-- Inspection conditions -->
    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AllInspectionFollowupsAreDone"
        name="urban.schedule.condition.all_followups_done"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AllInspectionFollowupsAreWritten"
        name="urban.schedule.condition.all_followups_written"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.NoInspectionFollowupsToValidate"
        name="urban.schedule.condition.followups_validated"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.NoInspectionFollowupsToSend"
        name="urban.schedule.condition.followups_done"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.FollowUpTicketCreated"
        name="urban.schedule.condition.followup_ticket_created"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.FollowUpTicketClosed"
        name="urban.schedule.condition.followup_ticket_is_closed"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.FollowUpWithDelayOverdue"
        name="urban.schedule.condition.followup_with_delay_overdue"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.TicketEventClosed"
        name="urban.schedule.condition.ticket_redacted"
    />

    <!-- Ticket conditions -->
    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AllInspectionFollowupsAreDone"
        name="urban.schedule.condition.all_followups_done"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.AllInspectionFollowupsAreWritten"
        name="urban.schedule.condition.all_followups_written"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.NoInspectionFollowupsToValidate"
        name="urban.schedule.condition.followups_validated"
    />

    <adapter
        for="Products.urban.interfaces.ITicket
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".generic.NoInspectionFollowupsToSend"
        name="urban.schedule.condition.followups_done"
    />

</configure>

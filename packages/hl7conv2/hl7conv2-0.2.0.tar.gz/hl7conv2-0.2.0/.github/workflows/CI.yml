name: Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install maturin (Linux)
      if: runner.os == 'Linux'
      run: pip install maturin[patchelf]

    - name: Install maturin (Windows/macOS)
      if: runner.os != 'Linux'
      run: pip install maturin

    - name: Install cargo-tomlfmt
      run: cargo install cargo-tomlfmt

    - name: Make lint script executable
      run: chmod +x ./lint.sh

    - name: Run custom lint script
      run: ./lint.sh

    - name: Run tests
      run: cargo test --workspace

    - name: Build Python wheel
      run: maturin build --release --strip --out dist

    - name: Test Python wheel
      run: |
        pip install $(ls dist/*.whl) --force-reinstall
        python -c "import hl7conv2; print('Import successful')"
        python -c "from hl7conv2 import Hl7Json, JsonHl7; print('Classes imported successfully')"

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit
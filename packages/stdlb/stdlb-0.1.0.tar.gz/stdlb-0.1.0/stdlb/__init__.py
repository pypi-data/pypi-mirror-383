"""Wildcard-import the Python standard library.

This file is auto-generated by scripts/generate_init.py.
Do not edit manually.
"""
import sys

import abc
from abc import *

import array
from array import *

import ast
from ast import *

import asyncio
from asyncio import *

import base64
from base64 import *

import binascii
from binascii import *

import bisect
from bisect import *

import calendar
from calendar import *

import cmath
from cmath import *

import code
from code import *

import codecs
from codecs import *

import collections
from collections import *

import configparser
from configparser import *

import contextlib
from contextlib import *

import copy
from copy import *

import csv
from csv import *

import dataclasses
from dataclasses import *

import datetime as _module_datetime
from datetime import *
datetime = _module_datetime

import decimal
from decimal import *

import difflib
from difflib import *

import enum
from enum import *

import fnmatch
from fnmatch import *

import fractions
from fractions import *

import functools
from functools import *

import glob as _module_glob
from glob import *
glob = _module_glob

if sys.version_info >= (3, 9):
    import graphlib
    from graphlib import *

import hashlib
from hashlib import *

import heapq
from heapq import *

import hmac
from hmac import *

import html
from html import *

import http
from http import *

import io
from io import *

import itertools
from itertools import *

import json
from json import *

import locale
from locale import *

import logging
from logging import *

import math
from math import *

import mimetypes
from mimetypes import *

import numbers
from numbers import *

import operator
from operator import *

import os as _module_os
from os import *
os = _module_os

import pathlib
from pathlib import *

import pickle
from pickle import *

import platform
from platform import *

import pprint
from pprint import *

import queue
from queue import *

import random
from random import *

import re
from re import *

import reprlib
from reprlib import *

import secrets
from secrets import *

import shelve
from shelve import *

import shlex as _module_shlex
from shlex import *
shlex = _module_shlex

import shutil
from shutil import *

import signal
from signal import *

import socket
from socket import *

import sqlite3
from sqlite3 import *

import statistics
from statistics import *

import string
from string import *

import struct
from struct import *

import subprocess
from subprocess import *

import sys as _module_sys
from sys import *
sys = _module_sys

import tempfile
from tempfile import *

import textwrap
from textwrap import *

import threading
from threading import *

import time as _module_time
from time import *
time = _module_time

import timeit
from timeit import *

if sys.version_info >= (3, 11):
    import tomllib
    from tomllib import *

import traceback
from traceback import *

import types
from types import *

import typing
from typing import *

import unicodedata
from unicodedata import *

import urllib
from urllib import *

import uuid
from uuid import *

import warnings
from warnings import *

import weakref
from weakref import *

import xml
from xml import *

import zipfile
from zipfile import *

import zlib
from zlib import *

if sys.version_info >= (3, 9):
    import zoneinfo
    from zoneinfo import *

# Preserve builtins that may be shadowed by module members
_builtins_dict = __builtins__ if isinstance(__builtins__, dict) else __builtins__.__dict__
if 'BlockingIOError' in _builtins_dict:
    BlockingIOError = _builtins_dict['BlockingIOError']
if 'TimeoutError' in _builtins_dict:
    TimeoutError = _builtins_dict['TimeoutError']
if 'Warning' in _builtins_dict:
    Warning = _builtins_dict['Warning']
if 'abs' in _builtins_dict:
    abs = _builtins_dict['abs']
if 'compile' in _builtins_dict:
    compile = _builtins_dict['compile']
if 'copyright' in _builtins_dict:
    copyright = _builtins_dict['copyright']
if 'enumerate' in _builtins_dict:
    enumerate = _builtins_dict['enumerate']
if 'exit' in _builtins_dict:
    exit = _builtins_dict['exit']
if 'filter' in _builtins_dict:
    filter = _builtins_dict['filter']
if 'open' in _builtins_dict:
    open = _builtins_dict['open']
if 'pow' in _builtins_dict:
    pow = _builtins_dict['pow']
if 'property' in _builtins_dict:
    property = _builtins_dict['property']
if 'repr' in _builtins_dict:
    repr = _builtins_dict['repr']
if 'slice' in _builtins_dict:
    slice = _builtins_dict['slice']
if 'str' in _builtins_dict:
    str = _builtins_dict['str']

# Datetime convenience aliases
dt = datetime.datetime
fromtimestamp = dt.fromtimestamp
fromisoformat = dt.fromisoformat

# Collision resolution preferences
join = os.path.join
path = os.path

# Custom implementations
from .cached_property import cached_property



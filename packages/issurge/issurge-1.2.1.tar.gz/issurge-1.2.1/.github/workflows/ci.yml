name: builds

on:
  push:
    branches: [develop, main]
    tags:
      - "v\\d+\\.\\d+\\.\\d+[ab]?"
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    if: github.ref_type != 'tag'
    strategy:
      matrix:
        python-version: [3.11, 3.12, 3.13, 3.14]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - uses: yezz123/setup-uv@v4
      - name: Run unit tests
        run: uv run pytest
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        if: ${{ matrix.python-version == '3.14' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }} && ${{ matrix.python-version == '3.14' }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  upload-package:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.14.0"
      - uses: yezz123/setup-uv@v4
      - name: Run unit tests
        run: uv run pytest
      - name: Build Python package
        run: uv build
      - name: Publish to PyPI
        run: uv publish
      - name: Get changelog changes
        id: changelog
        run: |
          echo 'releaseNotes<<EOF' >> "$GITHUB_OUTPUT"
          uv run keepachangelog show $(echo ${{ github.ref_name }} | cut -c 2-) >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"
      - name: Debug
        run: |
          echo "Release notes: ${{ steps.changelog.outputs.releaseNotes }}"
          echo "Release version: ${{ github.ref_name }}"
      - name: Create github release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          body: ${{ steps.changelog.outputs.releaseNotes }}
      - name: Update PKGBUILD
        run: uvx pypi2aur update || exit 0
      - run: git diff
      - name: Publish to AUR
        uses: KSXGitHub/github-actions-deploy-aur@v3
        with:
          pkgbuild: ./PKGBUILD
          pkgname: issurge
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_PRIVATE_KEY }}
          commit_message: "Update to ${{ github.ref_name }}"
          ssh_keyscan_types: rsa,ecdsa,ed25519

Metadata-Version: 2.4
Name: django-project-base
Version: 0.80.8
Summary: Everything revolves around it: users, roles, permissions, tags, etc.
Project-URL: Homepage, https://github.com/velis74/django-project-base
Project-URL: Repository, https://github.com/velis74/django-project-base
Project-URL: Bug Tracker, https://github.com/velis74/django-project-base/issues
Author-email: Jure Erzno≈ænik <support@velis.si>
License: Proprietary
License-File: LICENSE
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: Django
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Requires-Dist: boto3
Requires-Dist: celery>=5.2
Requires-Dist: click>=8.1
Requires-Dist: django
Requires-Dist: django-csp
Requires-Dist: django-hijack<3
Requires-Dist: django-permissions-policy
Requires-Dist: django-rest-registration
Requires-Dist: django-taggit
Requires-Dist: djangorestframework
Requires-Dist: drf-spectacular<0.26.0,>=0.17.2
Requires-Dist: dynamicforms>=0.80.17
Requires-Dist: natural
Requires-Dist: pandas
Requires-Dist: pytz
Requires-Dist: requests
Requires-Dist: social-auth-app-django
Requires-Dist: svgwrite
Requires-Dist: swapper
Description-Content-Type: text/markdown

# Notice to users of this library

## This library is no longer free software.

With 0.80.0 the library has gained a development partner that will doubtless raise it to new heights.

The LICENSE has been modified to a proprietary one with restrictions, so please be mindful of conditions.

The library is thus deprecated and in maintenance mode only.

# Django project base

A collection of functionalities that are common to most projects we do.

- account management
- project management
- notifications (both to users and to apps)
- tagging
- background job processing
- roles & permissions
- profiling

This project is in VERY early development stage. Some of the functionalities are not even developed yet, some need 
major rework, but some, surprisingly, should work pretty well already. An example of pretty well functioning ones is 
account management.

## Example project

For running example django project prepare python environment and run (run in repository root):

```bash 
$ pip install -r requirements.txt
$ python manage.py runserver
```

## Documentation

Run command in repository root:

```bash 
$ npm run docs:dev
```

The dev server should be running at http://localhost:5173. Visit the URL in your browser to read documentation!

To generate pdf file. Run:

```bash 
$ npm run export-pdf  
```

Pdf file is located in docs/pdf folder.

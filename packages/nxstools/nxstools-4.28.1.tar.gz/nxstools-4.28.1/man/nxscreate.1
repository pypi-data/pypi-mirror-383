.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "NXSCREATE" "1" "Jul 31, 2025" "4.26" "NXSTools"
.SH NAME
nxscreate \- create NeXus Configuration component
.SH DESCRIPTION
.sp
The nxscreate program allows one to create simple datasources and components.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate  <command> [ <options>]  [<arg1> [<arg2>  ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following commands are available: clientds, tangods, deviceds, onlineds, onlinecp, poolds, stdcomp, comp, secopcp, compare.
.SH NXSCREATE CLIENTDS
.sp
It creates a set of CLIENT datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate clientds [options] [name1] [name2]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c (mandatory w/o <name1>)
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first\fB= FIRST
first index (mandatory w/o <name1>)
.TP
.BI \-l \ LAST\fR,\fB \ \-\-last\fB= LAST
last index (mandatory w/o <name1>)
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing datasources
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-s \ DSOURCE\fR,\fB \ \-\-datasource\-prefix\fB= DSOURCE
datasource prefix, i.e. counter (useful for avoiding duplicated datasource names)
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.B  \-m\fP,\fB  \-\-minimal_device
device name without first \(aq0\(aq
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate clientds starttime \-b
nxscreate clientds title \-d /home/user/xmldir
nxscreate clientds \-v exp_c \-f1 \-l4 \-b
nxscreate clientds \-v hasppXX:10000/expchan/vfcadc_exp/ \-f1 \-l8  \-m \-b \-s exp_vfc
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE TANGODS
.sp
It creates a set of TANGO datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate tangods [options]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <datasource> is \(aqexp_mot\(aq
.IP \(bu 2
default <host>, <port> are taken from <server>
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c (mandatory)
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first\fB= FIRST
first index
.TP
.BI \-l \ LAST\fR,\fB \ \-\-last\fB= LAST
last index
.TP
.BI \-a \ ATTRIBUTE\fR,\fB \ \-\-attribute\fB= ATTRIBUTE
tango attribute name
.TP
.BI \-s \ DATASOURCE\fR,\fB \ \-\-datasource\-prefix\fB= DATASOURCE
datasource\-prefix (useful for avoiding duplicated
datasource names)
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing datasources
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-u \ HOST\fR,\fB \ \-\-host\fB= HOST
tango host name
.TP
.BI \-t \ PORT\fR,\fB \ \-\-port\fB= PORT
tango host port
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-g \ GROUP\fR,\fB \ \-\-group\fB= GROUP
device group name
.TP
.BI \-e \ ELEMENTTYPE\fR,\fB \ \-\-elementtype\fB= ELEMENTTYPE
element type, i.e. attribute, property or command
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate tangods \-f1 \-l2  \-v p09/motor/exp. \-s exp_mot
nxscreate tangods \-f1 \-l32  \-v p02/motor/eh1a. \-s exp_mot \-b
nxscreate tangods \-f1 \-l32  \-v p01/motor/oh1. \-s exp_mot \-b
nxscreate tangods \-f1 \-l8  \-v pXX/slt/exp. \-s slt_exp_ \-u hasppXX.desy.de \-b
nxscreate tangods \-v petra/globals/keyword \-s source_current \-u haso228 \-t 10000 \e
                  \-a BeamCurrent \-b \-r p09/nxsconfigserver/haso228 \-o \-g __CLIENT__
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE DEVICEDS
.sp
It creates a set of TANGO datasources for all device attributes.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate deviceds [options] [dv_attr1 [dv_attr2 [dv_attr3 ...]]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without <dv_attr1>: datasources for all attributes are created
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <datasource> is \(aqexp_mot\(aq
.IP \(bu 2
default <host>, <port> are taken from <server>
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\fB= DEVICE
device, i.e. p09/pilatus300k/01 (mandatory)
.TP
.BI \-o \ DATASOURCE\fR,\fB \ \-\-datasource\-prefix\fB= DATASOURCE
datasource\-prefix
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-s \ HOST\fR,\fB \ \-\-host\fB= HOST
tango host name
.TP
.BI \-t \ PORT\fR,\fB \ \-\-port\fB= PORT
tango host port
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.B  \-n\fP,\fB  \-\-no\-group
don\(aqt create common group with a name of datasource
prefix
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate deviceds  \-v p09/pilatus/haso228k
nxscreate deviceds  \-v p09/lambda2m/haso228k  \-s haslambda \-b
nxscreate deviceds  \-v p09/pilatus300k/haso228k \-b \-o pilatus300k_ RoI Energy ExposureTime
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE ONLINEDS
.sp
It creates a set of motor datasources from an online xml file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds [options] inputFile
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
with \-d <directory>: datasources are created on the local filesystem
.IP \(bu 2
without \-b or \-d <directory>: run in the test mode
.IP \(bu 2
default <inputFile> is \(aq/online_dir/online.xml\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.sp
\fIonlineds\fP overwrites existing datasources
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.B  \-t\fP,\fB  \-\-noclientlike
set motor tango datasources to be non __CLIENT__ like
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output directory where datasources will be saved
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-e \ EXTERNAL\fR,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.TP
.B  \-\-verbose
printout verbose mode
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds \-b
nxscreate onlineds \-b \-t
nxscreate onlineds \-d /home/user/xmldir
nxscreate onlineds
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE POOLDS
.sp
It creates a set of motor datasources from a sardana pool device channels.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds [options] [channel [channel]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
with \-d <directory>: datasources are created on the local filesystem
.IP \(bu 2
without \-b or \-d <directory>: run in the test mode
.IP \(bu 2
default <channel> is \(aqALL\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <pool> is taken from Tango DB
.UNINDENT
.sp
\fIpoolds\fP overwrites existing datasources
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.B  \-t\fP,\fB  \-\-noclientlike
set motor tango datasources to be non __CLIENT__ like
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output directory where datasources will be saved
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-p \ POOL\fR,\fB \ \-\-pool\fB= POOL
sardana pool device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate poolds \-b
nxscreate poolds \-b \-t
nxscreate poolds \-d \-s p09/pool/haso228
nxscreate poolds \-b Motor CTExpChannel
nxscreate poolds \-b mot01 mot03
nxscreate poolds
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE ONLINECP
.sp
It creates a detector component from the online.xml file
and its set of datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlinecp [options] inputFile
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without \(aq\-c <component>\(aq: show a list of possible components
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <inputFile> is \(aq/online_dir/online.xml\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPONENT\fR,\fB \ \-\-component\fB= COMPONENT
component namerelated to the device name from
<inputFile>
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-t \ CPTYPE\fR,\fB \ \-\-type \ CPTYPE
component type
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device \ DEVICE
device, i.e. p09/pilatus300k/01
.TP
.BI \-u \ HOST\fR,\fB \ \-\-host \ HOST
tango host name
.TP
.BI \-w \ PORT\fR,\fB \ \-\-port \ PORT
tango host port
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing component
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-e \ EXTERNAL\fR,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.TP
.BI \-y \ ENTRYNAME\fR,\fB \ \-\-entryname \ ENTRYNAME
entry group name (prefix)
.TP
.BI \-i \ INSNAME\fR,\fB \ \-\-insname \ INSNAME
instrument group name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlinecp
nxscreate onlinecp \-c lambda
nxscreate onlinecp \-c pilatus \-b
nxscreate onlinecp \-c lambda \-d /home/user/xmldir/
nxscreate onlinecp \-c lmbd \-t lambda \-b
nxscreate onlinecp \-c lmbd \-t lambda \-v p00/lmbd/1 \-u haso000 \-w 10000 \-b
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE STDCOMP
.sp
It creates a standard component from the xml template files
and its set of datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate stdcomp [options] [name1 value1 [name2 value2] ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without \(aq\-t <type>\(aq: show a list of possible component types
.IP \(bu 2
with \(aq\-t <type>  and without \-c <component>: show a list of component variables for the given component type
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
[name1 value1 [name2 value2] ...] sequence  defines component variable values
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPONENT\fR,\fB \ \-\-component\fB= COMPONENT
component name
.TP
.BI \-t \ CPTYPE\fR,\fB \ \-\-type\fB= CPTYPE
component type
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing component
.TP
.B  \-m\fP,\fB  \-\-mandatory
set the component as mandatory
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-e \ EXTERNAL\fR,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-y \ ENTRYNAME\fR,\fB \ \-\-entryname \ ENTRYNAME
entry group name (prefix)
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate stdcomp
nxscreate stdcomp \-t source
nxscreate stdcomp \-t slit \-c \-b front_slit1 xgap slt1x ygap slt1y
nxscreate stdcomp \-t default \-c default \-b \-m
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE COMP
.sp
It creates a set of simple components.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate comp [options] [name1] [name2] ...
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <strategy> is step
.IP \(bu 2
default <type> is NX_FLOAT
.IP \(bu 2
default <chunk> is SCALAR
.IP \(bu 2
default <nexuspath> is \(dq/$var.entryname#\(aqscan\(aq$var.serialno:NXentry/instrument/collection/\(dq
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first\fB= FIRST
first index
.TP
.BI \-l \ LAST\fR,\fB \ \-\-last\fB= LAST
last index
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing components
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output component directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-n \ NEXUSPATH\fR,\fB \ \-\-nexuspath\fB= NEXUSPATH
nexus path with field name
.TP
.BI \-g \ STRATEGY\fR,\fB \ \-\-strategy\fB= STRATEGY
writing strategy, i.e. STEP, INIT, FINAL, POSTRUN
.TP
.BI \-s \ DATASOURCE\fR,\fB \ \-\-datasource\-prefix \ DATASOURCE
datasource\-prefix or datasourcename
.TP
.BI \-t \ TYPE\fR,\fB \ \-\-type\fB= TYPE
nexus type of the field
.TP
.BI \-u \ UNITS\fR,\fB \ \-\-units\fB= UNITS
nexus units of the field
.TP
.B  \-k\fP,\fB  \-\-links
create datasource links
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-c \ CHUNK\fR,\fB \ \-\-chunk\fB= CHUNK
chunk format, i.e. SCALAR, SPECTRUM, IMAGE
.TP
.B  \-m\fP,\fB  \-\-minimal_device
device name without first \(aq0\(aq
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate comp counter
nxscreate comp \-f1 \-l3 \-v exp_c \-b
nxscreate comp lambda \-d /home/user/xmldir/
nxscreate comp \-n \(dq/\e$var.entryname#\(aqscan\(aq\e$var.serialno:NXentry/instrument/sis3302:NXdetector/collection:NXcollection/\(aq \-v sis3302_1_roi \-f1 \-l4  \-g STEP \-t NX_FLOAT64 \-k \-b \-m
nxscreate comp \-n \(dq/\e$var.entryname#\(aqscan\(aq\e$var.serialno:NXentry/instrument/eh1_mca01:NXdetector/data\(dq eh1_mca01 \-g STEP \-t NX_FLOAT64 \-i \-b \-c SPECTRUM
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE SECOPCP
.sp
It creates a  component or components describing modules of the secop node.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate secopcp [\-h] [\-l] [\-o] [\-a] [\-q] [\-w] [\-c COMPONENT] [\-e PARAMSTRATEGY] [\-g STRATEGY] [\-m TIMEOUT] [\-s SAMPLENAME] [\-s SAMPLEENVNAME] [\-k MEANINGS] [\-v ENVIRONMENTS] [\-f FIRST] [\-z TRANSATTRS] [\-p XMLPACKAGE] [\-y ENTRYNAME] [\-i INSNAME] [\-d DIRECTORY] [\-j JSON] [\-x FILE] [\-n] [\-b] [\-u HOST] [\-t PORT] [\-r SERVER] [component_name ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <port> is 5000
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-l\fP,\fB  \-\-list
list modules of the given node
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing components
.TP
.B  \-a\fP,\fB  \-\-can\-fail
can fail strategy flag
.TP
.B  \-q\fP,\fB  \-\-dynamic
create dynamic links
.TP
.B  \-\-sample\-nxdata
create NXdata in NXsample
.TP
.BI \-c \ COMPONENT\fR,\fB \ \-\-component \ COMPONENT
component namesecop component name
.TP
.BI \-e \ PARAMSTRATEGY\fR,\fB \ \-\-param\-strategy \ PARAMSTRATEGY
sensor parameter strategy, i.e. INIT, STEP or FINAL, default: INIT
.TP
.BI \-g \ STRATEGY\fR,\fB \ \-\-strategy \ STRATEGY
sensor value strategy, i.e. INIT, STEP or FINAL, default: INIT
.TP
.BI \-m \ TIMEOUT\fR,\fB \ \-\-timeout \ TIMEOUT
sensor minimum timeout default: 0.001
.TP
.BI \-s \ SAMPLENAME\fR,\fB \ \-\-sample \ SAMPLENAME
sample name
.TP
.BI \-w \ SAMPLEENVNAME\fR,\fB \ \-\-sample\-environment \ SAMPLEENVNAME
sample environment name
.TP
.BI \-k \ MEANINGS\fR,\fB \ \-\-links \ MEANINGS
NXlog links of physical quantities to sensors
separated by comman. Default:
\(aqtemperature,magnetic_field,electric_field,stress_field,pressure\(aq
.TP
.BI \-v \ ENVIRONMENTS\fR,\fB \ \-\-environments \ ENVIRONMENTS
NXenvironment links of physical quantities separated
by comman. Default: \(aqtemperature,magnetic_field\(aq
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first \ FIRST
first linked targets separated by comman
.TP
.BI \-z \ TRANSATTRS\fR,\fB \ \-\-transformation\-attributes \ TRANSATTRS
a JSON dictionary with transformation parameters i.e, \(dqtransformation_type\(dq, \(dqvector\(dq, \(dqdepends_on\(dq. Default:
{\(dqrotation_z\(dq:{\(dqtransformation_type\(dq:\(dqrotation\(dq,\(dqvector\(dq:[0,\-1,0]}}
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package \ XMLPACKAGE
xml template package
.TP
.BI \-y \ ENTRYNAME\fR,\fB \ \-\-entryname \ ENTRYNAME
entry group name (prefix)
.TP
.BI \-i \ INSNAME\fR,\fB \ \-\-insname \ INSNAME
instrument group name
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory \ DIRECTORY
output component directory
.TP
.BI \-j \ JSON\fR,\fB \ \-\-json\-file \ JSON
json configuration file
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix \ FILE
file prefix, i.e. counter
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.BI \-u \ HOST\fR,\fB \ \-\-host \ HOST
secop host name
.TP
.BI \-t \ PORT\fR,\fB \ \-\-port \ PORT
secop host port
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server \ SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate secopcp
nxscreate secopcp \-l

    \- list all modules of the given node

nxscreate secopcp \-c temp_node \-d . \-j secop_node.json

    \- create the all secop components in the local directory for the node configured with the json file

nxscreate secopcp T \-t 5001 \-b

    \- create the component for the T secop module  in the NXSConfigServer database for the node on the port 5000

nxscreate secopcp \-d /home/user/xmldir/

    \- create the all secop components in the given directory
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE COMPARE
.sp
It compares two online.xml files
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate compare [\-h] [\-n] online_file [online_file]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
default: second <online_file> is \(aq/online_dir/online.xml\(aq if only file is given
.UNINDENT
.INDENT 0.0
.TP
.B positional arguments:
online_file    online.xml files
.TP
.B optional arguments:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds /online_dir/online.xml online.xml
nxscreate compare online.xml
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Jan Kotanski
.SH COPYRIGHT
2012-2018 DESY, Jan Kotanski <jkotan@mail.desy.de>

GNU GENERAL PUBLIC LICENSE, version 3
.\" Generated by docutils manpage writer.
.

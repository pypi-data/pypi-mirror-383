[project]
name = "tofuref"
description = "TUI for OpenTofu provider registry."
requires-python = ">=3.10, <3.14"
dependencies = [
    "textual>=6.2.1",
    "httpx>=0.28.1",
    "tomli>=2.2.1 ; python_full_version < '3.11'",
    "platformdirs>=4.5.0",
    "yaucl>=0.2.0",
    "packaging>=25.0",
    "python-frontmatter>=1.1.0",
    "aiopath>=0.6.11",
]
authors = [
    { name = "David Jetelina" }
]
readme = "README.md"
license = "MIT"
keywords = ["opentofu", "tofu", "terraform", "tui", "tool", "sre", "platform", "infra"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Installation/Setup",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/DJetelina/tofuref"
Repository = "https://github.com/DJetelina/tofuref.git"
Issues = "https://github.com/DJetelina/tofuref/issues"

[dependency-groups]
dev = [
    "textual-dev>=1.7.0",
    "ruff>=0.14.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-textual-snapshot>=1.1.0",
    "pre-commit>=4.3.0",
]

[project.scripts]
tofuref = "tofuref.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["tofuref"]

[tool.hatch.version]
path = "tofuref/__init__.py"

[tool.hatch.version.raw-options]
fallback_version = "0.0.0"
local_scheme = "no-local-version"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.ruff]
line-length = 144
#fix = true

[tool.ruff.lint]
select = ["E", "I", "ASYNC", "B", "A", "PIE", "PT", "SIM", "PTH", "N", "W", "PL", "UP", "RUF"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72

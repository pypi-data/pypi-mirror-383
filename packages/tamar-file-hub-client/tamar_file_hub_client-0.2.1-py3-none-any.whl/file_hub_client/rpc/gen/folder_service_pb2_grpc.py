# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import file_hub_client.rpc.gen.folder_service_pb2 as folder__service__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in folder_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class FolderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFolder = channel.unary_unary(
                '/folder.FolderService/CreateFolder',
                request_serializer=folder__service__pb2.CreateFolderRequest.SerializeToString,
                response_deserializer=folder__service__pb2.Folder.FromString,
                _registered_method=True)
        self.RenameFolder = channel.unary_unary(
                '/folder.FolderService/RenameFolder',
                request_serializer=folder__service__pb2.RenameFolderRequest.SerializeToString,
                response_deserializer=folder__service__pb2.Folder.FromString,
                _registered_method=True)
        self.MoveFolder = channel.unary_unary(
                '/folder.FolderService/MoveFolder',
                request_serializer=folder__service__pb2.MoveFolderRequest.SerializeToString,
                response_deserializer=folder__service__pb2.Folder.FromString,
                _registered_method=True)
        self.DeleteFolder = channel.unary_unary(
                '/folder.FolderService/DeleteFolder',
                request_serializer=folder__service__pb2.DeleteFolderRequest.SerializeToString,
                response_deserializer=folder__service__pb2.Empty.FromString,
                _registered_method=True)
        self.ListFolders = channel.unary_unary(
                '/folder.FolderService/ListFolders',
                request_serializer=folder__service__pb2.ListFoldersRequest.SerializeToString,
                response_deserializer=folder__service__pb2.FolderListResponse.FromString,
                _registered_method=True)


class FolderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFolders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FolderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFolder,
                    request_deserializer=folder__service__pb2.CreateFolderRequest.FromString,
                    response_serializer=folder__service__pb2.Folder.SerializeToString,
            ),
            'RenameFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameFolder,
                    request_deserializer=folder__service__pb2.RenameFolderRequest.FromString,
                    response_serializer=folder__service__pb2.Folder.SerializeToString,
            ),
            'MoveFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveFolder,
                    request_deserializer=folder__service__pb2.MoveFolderRequest.FromString,
                    response_serializer=folder__service__pb2.Folder.SerializeToString,
            ),
            'DeleteFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFolder,
                    request_deserializer=folder__service__pb2.DeleteFolderRequest.FromString,
                    response_serializer=folder__service__pb2.Empty.SerializeToString,
            ),
            'ListFolders': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFolders,
                    request_deserializer=folder__service__pb2.ListFoldersRequest.FromString,
                    response_serializer=folder__service__pb2.FolderListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'folder.FolderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('folder.FolderService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FolderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/folder.FolderService/CreateFolder',
            folder__service__pb2.CreateFolderRequest.SerializeToString,
            folder__service__pb2.Folder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RenameFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/folder.FolderService/RenameFolder',
            folder__service__pb2.RenameFolderRequest.SerializeToString,
            folder__service__pb2.Folder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MoveFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/folder.FolderService/MoveFolder',
            folder__service__pb2.MoveFolderRequest.SerializeToString,
            folder__service__pb2.Folder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/folder.FolderService/DeleteFolder',
            folder__service__pb2.DeleteFolderRequest.SerializeToString,
            folder__service__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListFolders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/folder.FolderService/ListFolders',
            folder__service__pb2.ListFoldersRequest.SerializeToString,
            folder__service__pb2.FolderListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

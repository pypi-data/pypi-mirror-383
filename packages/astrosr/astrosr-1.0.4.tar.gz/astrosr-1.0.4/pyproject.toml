[build-system]
requires = ["setuptools>=61.0,<70.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "astrosr"
version = "1.0.4"
description = "Astronomical super-resolution with drizzle for wide field-of-view images"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Elías Gabriel Ferrer Jorge", email = "gabrielferrerjorge@gmail.com"}
]
maintainers = [
    {name = "Elías Gabriel Ferrer Jorge", email = "gabrielferrerjorge@gmail.com"}
]
keywords = [
    "astronomy", 
    "astrophysics", 
    "drizzle", 
    "super-resolution", 
    "fits", 
    "wcs",
    "image-processing",
    "scientific-computing"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.20.0,<2.0",
    "astropy>=6.0",
    "matplotlib>=3.5.0",
    "drizzlepac>=3.6.0",
    "scipy>=1.7.0",
    "numba>=0.56.0",
    "tqdm>=4.62.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xvfb>=2.0.0",
]
dev = [
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
all = [
    "astrosr[test,dev,docs]"
]

[project.urls]
"Homepage" = "https://github.com/dot-gabriel-ferrer/astroSR"
"Documentation" = "https://github.com/dot-gabriel-ferrer/astroSR#readme"
"Repository" = "https://github.com/dot-gabriel-ferrer/astroSR"
"Bug Tracker" = "https://github.com/dot-gabriel-ferrer/astroSR/issues"
"Changelog" = "https://github.com/dot-gabriel-ferrer/astroSR/blob/main/CHANGELOG.md"

[project.scripts]
astrosr = "astrosr.cli:main"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.rst"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["astrosr"]
known_third_party = [
    "numpy",
    "astropy",
    "matplotlib",
    "scipy",
    "numba",
    "tqdm",
    "pandas",
    "pytest",
]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
    "tests/*:S101",      # use of assert
]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=astrosr",
    "--cov-report=term-missing",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning", 
    "ignore::RuntimeWarning:astropy.*",
    "ignore::numpy.VisibleDeprecationWarning",
    "ignore::RuntimeWarning:numpy.*",
]

# Coverage configuration
[tool.coverage.run]
branch = true
source = ["src/astrosr"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

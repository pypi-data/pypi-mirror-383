[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aiagents4pharma"
description = "AI Agents for drug discovery, drug development, and other pharmaceutical R&D."
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "anndata==0.12.2",
  "cell2sentence==1.1.0",
  "copasi_basico==0.84",
  "coverage==7.10.7",
  "einops==0.8.1",
  "gdown==5.2.0",
  "gravis==0.1.0",
  "gseapy==1.1.10",
  "h5py==3.14.0",
  "huggingface_hub==0.34.4",
  "hydra-core==1.3.2",
  "igraph==0.11.9",
  "ipykernel==6.30.1",
  "ipython==8.32.0",
  "joblib==1.5.2",
  "langchain==0.3.7",
  "langchain-community==0.3.5",
  "langchain-core==0.3.40",
  "langchain-experimental==0.3.4",
  "langchain-milvus==0.2.1",
  "langchain-nvidia-ai-endpoints==0.3.9",
  "langchain-openai==0.3.0",
  "langchain_ollama==0.2.3",
  "langgraph==0.3.34",
  "langgraph_supervisor==0.0.9",
  "matplotlib==3.10.6",
  "mkdocs==1.6.1",
  "mkdocs-include-markdown-plugin==7.2.0",
  "mkdocs-jupyter==0.25.1",
  "mkdocs-material==9.6.21",
  "mkdocstrings==0.30.1",
  "mkdocstrings-python==1.18.2",
  "nbformat==5.10.4",
  "numpy==1.26.4",
  "ollama==0.4.7",
  "openai==1.59.6",
  "openpyxl==3.1.5",
  "pandas==2.3.3",
  "pcst_fast==1.0.10",
  "plotly==6.3.0",
  "plotly-express==0.4.1",
  "pubchempy==1.0.5",
  "pydantic==2.11.9",
  "pygeneconverter==0.3",
  "pylint==3.3.8",
  "pymilvus==2.6.2",
  "pypdf==6.1.1",
  "pytest==8.4.2",
  "pytest-asyncio==0.25.2",
  "pyzotero==1.6.16",
  "requests==2.32.5",
  "scanpy==1.11.4",
  "scipy==1.16.2",
  "seaborn==0.13.2",
  "setuptools==80.9.0",
  "sentence_transformers==3.3.1",
  "streamlit==1.50.0",
  "streamlit-feedback==0.1.4",
  "tabulate==0.9.0",
  "torch==2.8.0",
  "torch_geometric==2.6.1",
  "tqdm==4.67.1",
  "transformers==4.55.2",
  "umap-learn==0.5.9.post2",
  "xlsxwriter==3.2.9",
  "python-magic==0.4.27",
  "pyarrow==21.0.0",
  "datasets==4.1.1",
  "beautifulsoup4==4.14.2",
  "cloudscraper==1.2.71",
  "azure-identity==1.25.0",
]
version = "0.0.0"

[project.optional-dependencies]
dev = [
  "ruff==0.13.2",
  "mypy==1.18.2",
  "bandit==1.8.6",
  "pip-audit==2.9.0",
  "safety==3.6.2",
  "pre-commit==4.3.0",
  "twine==6.2.0",
]


[tool.hatch.build.targets.wheel]
packages = ["aiagents4pharma"]
exclude = [
  "aiagents4pharma/talk2knowledgegraphs/tests/files",
  "aiagents4pharma/talk2knowledgegraphs/tests/files/**/*",
  "aiagents4pharma/**/tests/files/**/*",
  "dist/*",
  ".venv/*",
  "node_modules/*",
]


[tool.hatch.build.targets.sdist]
exclude = [
  "aiagents4pharma/talk2knowledgegraphs/tests/files",
  "aiagents4pharma/talk2knowledgegraphs/tests/files/**/*",
  "aiagents4pharma/**/tests/files/**/*",
  "dist/*",
  ".venv/*",
  "node_modules/*",
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
markers = ["integration: marks tests as integration tests"]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.pylint.MASTER]
extension-pkg-allow-list = ["pcst_fast"]

[tool.pylint.messages_control]
disable = ["R0801", "R0902", "W0221", "W0122"]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["setuptools.*", "pkg_resources.*"]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = [
  "B101",
  "B601",
  "B404",
  "B607",
  "B602",
  "B403",
  "B301",
  "B615",
  "B614",
  "B603",
  "B405",
  "B314",
  "B501",
]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]

[tool.sonarcloud]
# SonarCloud integration settings
projectKey = "VirtualPatientEngine_AIAgents4Pharma"
organization = "virtualpatientengine"

[tool.coverage.run]
source = ["aiagents4pharma"]
omit = ["*/tests/*", "*/test_*", "docs/*", "app/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[tool.coverage.xml]
output = "coverage.xml"

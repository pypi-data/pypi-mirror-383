# Modern CI workflow using uv for fast, reliable dependency management
name: TESTS Talk2Cells

on:
  pull_request:
    branches: [main]
    paths:
      - "aiagents4pharma/talk2cells/**"
      - "pyproject.toml"
      - "uv.lock"
  workflow_dispatch:

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  # Code quality checks
  quality-checks:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --frozen --extra dev

      - name: Run pylint
        run: uv run pylint aiagents4pharma/talk2cells

      - name: Run ruff linting
        run: uv run ruff check aiagents4pharma/talk2cells

      - name: Run bandit security scan
        run: uv run bandit -c pyproject.toml -r aiagents4pharma/talk2cells

      - name: Run bandit security scan with JSON output for SonarCloud
        run: |
          uv run bandit -c pyproject.toml -r aiagents4pharma/talk2cells -f json -o bandit-report.json || true
        continue-on-error: true

      - name: Run pylint with JSON output for SonarCloud
        run: |
          uv run pylint aiagents4pharma/talk2cells --output-format=json --reports=no > pylint-report.json || true
        continue-on-error: true

      - name: Upload quality reports for SonarCloud
        uses: actions/upload-artifact@v4
        with:
          name: quality-reports-talk2cells
          path: |
            pylint-report.json
            bandit-report.json
          retention-days: 1

  # Cross-platform testing matrix
  test-matrix:
    name: Tests
    needs: quality-checks
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-15, windows-latest]
        python-version: ["3.12"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run tests with coverage
        run: |
          uv run coverage run --include=aiagents4pharma/talk2cells/* -m pytest --cache-clear aiagents4pharma/talk2cells/tests/

      - name: Generate coverage report
        run: |
          uv run coverage report -m
          uv run coverage xml

      - name: Check coverage threshold
        shell: bash
        run: |
          TOTAL_COVERAGE=$(uv run coverage report -m | awk 'END {print int($NF)}')
          if [[ $TOTAL_COVERAGE -ne 100 ]]; then
            echo "Code coverage is not 100%. Please check the coverage report."
            exit 1
          fi

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: talk2cells
          name: talk2cells-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Upload test reports for SonarCloud
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-talk2cells
          path: |
            coverage.xml
          retention-days: 1

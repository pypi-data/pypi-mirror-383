Metadata-Version: 2.4
Name: artefacts_cli
Version: 0.9.9
Author-email: FD <fabian@artefacts.com>, AGC <alejandro@artefacts.com>, TN <tomo@artefacts.com>, EP <eric@artefacts.com>
License-Expression: Apache-2.0
Project-URL: Homepage, https://github.com/art-e-fact/artefacts-client
Project-URL: Bug Tracker, https://github.com/art-e-fact/artefacts-client/issues
Project-URL: Changelog, https://github.com/art-e-fact/artefacts-client/CHANGELOG.md
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: artefacts-c2d>=1.7.1
Requires-Dist: artefacts-copava>=0.1.12
Requires-Dist: artefacts-click
Requires-Dist: artefacts-xray>=0.1.7
Requires-Dist: gitignore_parser>=0.1.11
Requires-Dist: junitparser>=2.5
Requires-Dist: mcap
Requires-Dist: mcap-ros2-support
Requires-Dist: psutil==7.0.0
Requires-Dist: PyYAML>=6.0
Requires-Dist: requests>=2.27.1
Requires-Dist: rospkg
Requires-Dist: semver==3.0.4
Requires-Dist: urllib3>=2.4.0
Provides-Extra: dev
Requires-Dist: awscli; extra == "dev"
Requires-Dist: babel==2.17.0; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: docker; extra == "dev"
Requires-Dist: lark; extra == "dev"
Requires-Dist: mkdocs-click==0.8.0; extra == "dev"
Requires-Dist: mkdocs-material==8.5.6; extra == "dev"
Requires-Dist: mkdocs-mermaid2-plugin==0.6.0; extra == "dev"
Requires-Dist: mkdocs==1.4.2; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pyre-check; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-env; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: python-markdown-math; extra == "dev"
Requires-Dist: ruff>=0.9.2; extra == "dev"
Requires-Dist: setuptools_scm>=8; extra == "dev"
Requires-Dist: twine; extra == "dev"
Provides-Extra: dev-extended
Requires-Dist: artefacts_cli[dev]; extra == "dev-extended"
Requires-Dist: pytest-watch; extra == "dev-extended"

# Artefacts CLI

CLI to the Artefacts platform.

[![Documentation](https://img.shields.io/badge/documentation-blue.svg?style=flat-square)](https://docs.artefacts.com/)
[![Ruff Style](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)

## Requirements

* Currently working partially where Python can run.
* Fully working on ROS-compatible and ready environments. Notably need for packages like `ros-<dist>-rclpy` and `ros-<dist>-rosidl-runtime-py`.


## Usage

To install:
```
pip install artefacts-cli
```

Check configuration: After creating `project-name` from the web UI and getting an API key, try:

```
artefacts config add [project-name]
```

and enter you `API_KEY` for the project when prompted.

You can then do

```
artefacts hello [project-name]
```

alternatively, you can specify you API KEY via environment variable

```
ARTEFACTS_KEY=[your-key] artefacts hello [project-name]
```

To run a job locally, for example the turtlesim example (need ros2 installed).
First edit `artefacts.yaml` to change the project name, then:

```
cd examples/turtlesim
artefacts run basic_tests
```


## Configuration file syntax

See [the configuration syntax documentation](docs/configuration-syntax.md)


## User docs

You can serve docs locally using mkdocs:

```
mkdocs serve -a 127.0.0.1:7000
```

The docs are automatically deployed by the documentation workflow.

## Development notes

We use Pyre for static analysis. If it does not work out of the box, please consider adapting the `.pyre_configuration` file included with this repository. One assumption is that developers work in a virtual environment under `./venv`.

herosdevices.hardware.dummy.electronics
=======================================

.. py:module:: herosdevices.hardware.dummy.electronics

.. autoapi-nested-parse::

   Dummy low level electronics for use in testing. Do not use in production.





Module Contents
---------------

.. py:class:: RFSourceDummy

   Bases: :py:obj:`herosdevices.interfaces.atomiq.RFSource`


   Dummy class implementing an atomiq compatible RF source.


   .. py:attribute:: frequency
      :type:  float
      :value: 1000000.0



   .. py:attribute:: amplitude
      :type:  float
      :value: 0.1



   .. py:attribute:: phase
      :type:  float
      :value: 0.0



   .. py:attribute:: freq_max
      :type:  float
      :value: 100000000.0



   .. py:attribute:: freq_min
      :type:  float
      :value: 100000.0



   .. py:attribute:: amp_max
      :type:  float
      :value: 1.0



   .. py:attribute:: amp_min
      :type:  float
      :value: 0.0



   .. py:attribute:: default_ramp_steps
      :type:  int
      :value: 30



   .. py:attribute:: blind
      :type:  bool
      :value: False



.. py:class:: VoltageSourceDummy

   Bases: :py:obj:`herosdevices.interfaces.atomiq.VoltageSource`


   Dummy class implementing an atomiq compatible voltage source.


   .. py:attribute:: min_voltage
      :type:  float


   .. py:attribute:: max_voltage
      :type:  float


   .. py:attribute:: default_ramp_steps
      :type:  int
      :value: 30



   .. py:attribute:: blind
      :type:  bool
      :value: False



.. py:class:: CurrentSourceDummy

   Bases: :py:obj:`herosdevices.interfaces.atomiq.CurrentSource`


   Dummy class implementing an atomiq compatible current source.


   .. py:attribute:: min_current
      :type:  float


   .. py:attribute:: max_current
      :type:  float


   .. py:attribute:: default_ramp_steps
      :type:  int
      :value: 30



   .. py:attribute:: blind
      :type:  bool
      :value: False



.. py:class:: ADCChannelDummy

   Bases: :py:obj:`herosdevices.interfaces.atomiq.ADCChannel`


   Dummy class implementing a single atomiq compatible ADC channel.


   .. py:method:: measure(samples: int = 1, cached: bool = False, channel: str = '') -> float

      'Meaure' a fake voltage.



.. py:class:: SwitchDummy

   Bases: :py:obj:`herosdevices.interfaces.atomiq.Switch`


   Dummy class implementing an atomiq compatible switch.


   .. py:method:: on() -> None

      Set the switch state to True.



   .. py:method:: off() -> None

      Set the switch state to False.



   .. py:method:: is_on() -> bool

      Return the current switch state.




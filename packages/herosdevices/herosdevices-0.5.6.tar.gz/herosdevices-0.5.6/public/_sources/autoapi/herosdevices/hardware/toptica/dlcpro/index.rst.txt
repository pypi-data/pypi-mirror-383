herosdevices.hardware.toptica.dlcpro
====================================

.. py:module:: herosdevices.hardware.toptica.dlcpro

.. autoapi-nested-parse::

   HEROS implementation of the toptica DLC PRO laser driver.







Module Contents
---------------

.. py:data:: DEFAULT_QUERIES
   :value: [['set current', 'dl.cc.current_set', 'mA'], ['actual current', 'dl.cc.current_act', 'mA'],...


   default queries
   check loop stable parameter values 0:inactive, 1:unstable, 2:stable
   check object temperature
   syntax
   [ [display_name, parameter_id, unit], ]

.. py:data:: dlcproorders
   :value: ('emission_button_enabled', 'interlock_open', 'frontkey_locked', 'emission', 'system_health',...


   Define parameters of the DLCPro and the laser in order to build another function call later

.. py:class:: DlcProSource(ip: str = '127.0.0.1', laser: str = 'laser1', queries: list[list[str]] = DEFAULT_QUERIES)

   Reading Toptica DLC Pro parameters via ethernet.


   .. py:attribute:: ip
      :value: '127.0.0.1'



   .. py:attribute:: laser
      :value: 'laser1'



   .. py:attribute:: queries
      :value: [['set current', 'dl.cc.current_set', 'mA'], ['actual current', 'dl.cc.current_act', 'mA'],...



   .. py:method:: teardown() -> None

      Cleanup at the end.



   .. py:property:: session
      :type: toptica.lasersdk.dlcpro.v3_2_0.DLCpro


      Return a dlc objects and connect if necessary.



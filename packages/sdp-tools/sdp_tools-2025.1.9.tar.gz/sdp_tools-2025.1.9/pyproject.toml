[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sdp-tools"
version = "2025.1.9"
description = "Tool to manage MinIO connections and transfers."
authors = [
    {name = "Caspar Nijhuis", email = "caspar.nijhuis@gmail.com"}
]
license = {text = "MIT"}
# readme = "README.md"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "minio>=7.0.0",  # MinIO Python SDK
    "requests>=2.31.0",  # HTTP library for SURFdrive
    "pandas>=2.0.0",  # Data manipulation for SURFdrive CSV handling
]

[project.optional-dependencies]
dev = [
    "black>=23.12.1",
    "isort>=5.13.2",
    "flake8>=6.1.0",
    "flake8-docstrings>=1.7.0",
    "mypy>=1.8.0",
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "tox>=4.11.4",
    "mkdocs>=1.5.3",
    "mkdocs-include-markdown-plugin>=6.0.4",
    "mkdocs-material>=9.5.2",
    "mkdocs-material-extensions>=1.3.1",
    "mkdocs-autorefs>=0.5.0",
    "pre-commit>=3.6.0",
    "bump-my-version>=0.15.4",
    "pandas-stubs>=2.2",
    "twine>=4.0.2",
    "toml>=0.10.2",
]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "tomli>=2.0.0; python_version < '3.11'",  # TOML parser for Python <3.11
]

[project.urls]
Homepage = "https://github.com/cedanl/sdp-tools"
Repository = "https://github.com/cedanl/sdp-tools"
Issues = "https://github.com/cedanl/sdp-tools/issues"

[project.scripts]
sdp-tools = "sdp_tools.sdp_tools:main"

[tool.hatch.build.targets.wheel]
packages = ["src/minio_file", "src/surfdrive"]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true

[tool.mypy]
disable_error_code = ["attr-defined"]
ignore_missing_imports = true
no_strict_optional = true
warn_return_any = false

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "requires_minio: marks tests that require a running MinIO server",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/minio_file", "src/surfdrive"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bumpversion]
current_version = "2025.1.9"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "{new_version}"
allow_dirty = true
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<dev>post)\\d+\\.dev\\d+)?"
message = "Version updated from {current_version} to {new_version}"

[tool.bumpversion.parts.dev]
values = ["release", "post"]

[[tool.bumpversion.files]]
filename = "src/minio_file/__init__.py"

[[tool.bumpversion.files]]
filename = "src/surfdrive/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[project]
name = "jnpr_pathfinder_mcp"
version = "0.2.0"
description = "An MCP Server for interacting with Juniper's public Pathfinder APIs (https://apps.juniper.net)."
readme = "README.md"
authors = [
    { name = "cbinckly", email = "cbinckly@gmail.com" }
]
requires-python = ">=3.11"
dependencies = [
    "bs4>=0.0.2",
    "fastmcp>=2.12.4",
    "pydantic>=2.11.10",
    "requests>=2.32.5",
]

[project.scripts]
jnpr_pathfinder_mcp = "jnpr_pathfinder_mcp.__main__:main"

[build-system]
requires = ["uv_build>=0.8.2,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "poethepoet>=0.37.0",
    "pyright>=1.1.406",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-timeout>=2.4.0",
    "ruff>=0.14.0",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
    -ra
    -q
    --cov jnpr_pathfinder_mcp
    --cov-fail-under 95
    --cov-branch
    --cov-report=term-missing
    --cov-report=html
"""
testpaths = ["tests"]
timeout = 300

[tool.ruff]
target-version = "py311"
line-length = 100  # use whatever number makes you happy

[tool.ruff.lint]
select = [
    "A",    # warn about shadowing built-ins
    "E",    # style stuff, whitespaces
    "F",    # important pyflakes lints
    "I",    # import sorting
    "N",    # naming
    "T100", # breakpoints (probably don't want these in prod!)
]
# if you're feeling confident you can do:
# select = ["ALL"]
# and then manually ignore annoying ones:
# ignore = [...]

[tool.ruff.lint.per-file-ignores]
# "jnpr_pathfinder_mcp/file.py" = ["E501"]

[tool.ruff.lint.isort]
# so it knows to group first-party stuff last
known-first-party = ["jnpr_pathfinder_mcp"]

[tool.pyright]
venvPath = "."          # uv installs the venv in the current dir
venv = ".venv"          #       in a folder called `.venv`
strict = ["**/*.py"]    # use 'strict' checking on all files
pythonVersion = "3.11"  # if library, specify the _lowest_ you support

[tool.poe.tasks]
# run with eg `uv run poe fmt`
fmt = "ruff format"
lint = "ruff check --fix"
check = "pyright"
test = "pytest"
# run all the above
all = [ {ref="fmt"}, {ref="lint"}, {ref="check"}, {ref="test"} ]

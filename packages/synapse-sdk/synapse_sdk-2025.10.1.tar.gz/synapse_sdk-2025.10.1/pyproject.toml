[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "synapse-sdk"
authors = [{ name = "datamaker", email = "developer@datamaker.io" }]
description = "synapse sdk"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.10"
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "boto3",
    "click",
    "cookiecutter",
    "requests",
    "tqdm",
    "openpyxl",
    "python-dotenv",
    "pyyaml",
    "pydantic",
    "pyjwt",
    "universal-pathlib",
    "fsspec[gcs,s3,sftp]",
    "inquirer",
    "pillow",
    "websockets",
    "ffmpeg-python==0.2.0",
    "sentry-sdk==2.38.0"
]
dynamic = ["version"]

[project.optional-dependencies]
all = [
    "ray[all]==2.50.0",
    "python-nmap",
    "hyperopt",
    "bayesian-optimization==1.4.3"
]

devtools = [
    "streamlit>=1.29.0",
    "streamlit-ace>=0.1.1"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.0.0",
    "pytest-html>=3.1.0",
    "pytest-json-report>=1.5.0",
    "requests-mock>=1.10.0",
    "responses>=0.25.0",
]
dev = [
    "pre-commit",
]

[project.scripts]
synapse = "synapse_sdk.cli:cli"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"synapse_sdk" = ["../locale/**/*"]

[tool.setuptools.packages.find]
include = ["synapse_sdk*"]

[tool.setuptools_scm]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "I", "Q"]
ignore = ["W191", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001", "ISC002"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"
preview = true

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output and reporting
addopts = [
    "-v",                    # Verbose output
    "--tb=short",            # Short traceback format
    "--strict-markers",      # Strict marker validation
    "--strict-config",       # Strict configuration validation
    "--disable-warnings",    # Disable warnings during test execution
    "--color=yes",           # Colored output
    "--durations=10",        # Show 10 slowest test durations
    "--maxfail=5",           # Stop after 5 failures
]

# Markers
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, external dependencies)",
    "slow: Slow running tests",
    "cli: Command line interface tests",
    "storage: Storage provider tests",
    "client: Client tests",
    "logger: Logger tests",
    "plugin: Plugin tests",
]

# Filter warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
    "default",
]

# Minimum version
minversion = "7.0.0"

# Test session timeout (in seconds)
timeout = 300

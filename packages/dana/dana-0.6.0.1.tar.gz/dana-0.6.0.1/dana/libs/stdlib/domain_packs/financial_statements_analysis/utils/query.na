"""Financial Data Query."""


__all__ = ['query_fin_data']


def _get_company_currency_and_period(resources: list, task: str = None) -> tuple[str, str, str]:
    """Get main company name, currency and fiscal period."""
    company = reason(
'Get the name of the main company these documents concern.
Return just that name very concisely and precisely and NO OTHER TEXT.',
resources=resources)

    currency = reason(
'Get the main currency these documents use.
Return a concise and precise label for that currency, e.g. "USD", "JPY", etc., and NO OTHER TEXT.',
resources=resources)

    period = reason(
'Get the main/latest fiscal period these documents concern.
Return a concise and precise label for that fiscal period, e.g. "FY2025", "1Q2025", etc., and NO OTHER TEXT.',
resources=resources)

    return (company, currency, period)


# TODO: n_years: Literal[1, 2, 3]
def query_fin_data(resources: list,
                   line_item: str, statement: str,
                   as_at_period_end: bool = False,
                   n_years: int = 1,
                   task: str = None) -> str:
    """Query financial statement item value(s)."""
    _company_currency_and_period = _get_company_currency_and_period(resources=resources, task=task)
    # TODO: tuple unpacking syntax in Dana
    company = _company_currency_and_period[0]
    currency = _company_currency_and_period[1]
    period = _company_currency_and_period[2]

    if n_years == 1:
        time_period_str: str = (f'as at {period.upper()} fiscal period end'
                                if as_at_period_end
                                else f'for {period.upper()} fiscal period')

        query: str = (
f'What is value in {currency.upper()} of

`{line_item}`
(or most similar-meaning reported line item)

on `{statement}`
(or most similar-meaning statement)

of {company.upper()}

{time_period_str}?')

    else:
        time_period_str: str = ((
(f'as at following two annual fiscal period ends:
- previous annual fiscal period end immediately preceding {period.upper()}; and
- current {period.upper()} annual fiscal period end')
if as_at_period_end
else (
f'for following two annual fiscal periods:
- previous annual fiscal period end immediately preceding {period.upper()}; and
- current {period.upper()} annual fiscal period end'))

if n_years == 2

else (
(f'as at ends of past 3 annual fiscal periods
with the last year being {period.upper()} annual fiscal period')
if as_at_period_end
else (
f'for past 3 fiscal years
with the last year being {period.upper()} annual fiscal period')))

        query: str = (
f'What are values in {currency.upper()}, arranged FROM PAST TO PRESENT, of

`{line_item}`
(or most similar-meaning reported line item)

on `{statement}`
(or most similar-meaning statement)

of {company.upper()}

{time_period_str}?')

    return reason(query, resources=resources)

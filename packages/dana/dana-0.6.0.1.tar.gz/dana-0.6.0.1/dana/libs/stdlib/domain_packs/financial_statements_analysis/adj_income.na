"""Adjusted Income Metrics."""


from .fin_statements import get_op_income, get_op_income_2y, get_op_income_3y
from .fin_statements import get_deprec_and_amort, get_deprec_and_amort_2y, get_deprec_and_amort_3y


__all__ = [
    'workflow_calc_ebitda', 'workflow_calc_ebitda_2y', 'workflow_calc_ebitda_3y',
]


def _ebitda(intermed_results):
    return llm(
f'Calculate `(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA`
according to formula:

`(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA` = (
    `(Unadjusted) Operating Income, a.k.a. Operating Profit, or Operating Earnings (or Loss(es))` +
    `Depreciation & Amortization, a.k.a. D&A (of Fixed Assets or Property, Plant & Equipment (PP&E))`
)

and using the following intermediate results:
```
{intermed_results}
```
State your result together with the supporting calculation(s).')

def workflow_calc_ebitda(resources: list, task: str = None) -> float = [get_op_income, get_deprec_and_amort] | _ebitda


def _ebitda_2y(intermed_results):
    return llm(
f'Calculate `(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA`
for past 2 annual fiscal periods according to formula:

`(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA` = (
    `(Unadjusted) Operating Income, a.k.a. Operating Profit, or Operating Earnings (or Loss(es))` +
    `Depreciation & Amortization, a.k.a. D&A (of Fixed Assets or Property, Plant & Equipment (PP&E))`
)

and using the following intermediate results:
```
{intermed_results}
```
State your result together with the supporting calculation(s).')

def workflow_calc_ebitda_2y(resources: list, task: str = None) -> float = [get_op_income_2y, get_deprec_and_amort_2y] | _ebitda_2y


def _ebitda_3y(intermed_results):
    return llm(
f'Calculate `(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA`
for past 3 annual fiscal periods according to formula:

`(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA` = (
    `(Unadjusted) Operating Income, a.k.a. Operating Profit, or Operating Earnings (or Loss(es))` +
    `Depreciation & Amortization, a.k.a. D&A (of Fixed Assets or Property, Plant & Equipment (PP&E))`
)

and using the following intermediate results:
```
{intermed_results}
```
State your result together with the supporting calculation(s).')

def workflow_calc_ebitda_3y(resources: list, task: str = None) -> float = [get_op_income_3y, get_deprec_and_amort_3y] | _ebitda_3y

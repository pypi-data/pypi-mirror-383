# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from ....types.opt_in_method_enum import OptInMethodEnum


class UpsertTollFreeSchemaOptIn(UniversalBaseModel):
    """
    Opt-in keyword settings.
    """

    method: typing.Optional[OptInMethodEnum] = None
    url: typing.Optional[str] = pydantic.Field(default=None)
    """
    Url to opt in.
    """

    workflow_description: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="workflowDescription")
    ] = pydantic.Field(default=None)
    """
    Explain how users find the opt-in.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

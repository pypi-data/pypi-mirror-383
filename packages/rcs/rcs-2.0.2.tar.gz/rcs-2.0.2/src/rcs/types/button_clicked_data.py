# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .button_clicked_data_button import ButtonClickedDataButton


class ButtonClickedData(UniversalBaseModel):
    """
    Unified data structure for button click events.
    """

    button: ButtonClickedDataButton = pydantic.Field()
    """
    Information about the button that was clicked.
    """

    message_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="messageId")] = pydantic.Field(
        default=None
    )
    """
    ID of the message this button was attached to, or null if not available. To get the message details, use the [GET /messages/{id}](/api-reference/messages/get) endpoint.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

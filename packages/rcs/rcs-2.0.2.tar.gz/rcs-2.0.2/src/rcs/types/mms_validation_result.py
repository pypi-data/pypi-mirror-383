# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .mms_validation_response_segments import MmsValidationResponseSegments


class MmsValidationResult(UniversalBaseModel):
    segments: MmsValidationResponseSegments = pydantic.Field()
    """
    Details about how the MMS content would be segmented for delivery.
    """

    total: float = pydantic.Field()
    """
    Total price of this message. Calculated by multiplying the number of segments by the unit cost.
    """

    unit: float = pydantic.Field()
    """
    Cost of each segment.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

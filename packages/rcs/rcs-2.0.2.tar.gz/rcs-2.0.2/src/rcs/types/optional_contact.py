# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class OptionalContact(UniversalBaseModel):
    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    New notes or details for your contact.
    """

    email: typing.Optional[str] = pydantic.Field(default=None)
    """
    New email address for your contact.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    New name for your contact.
    """

    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    New tags for your contact.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .send_sms_response_segments_encoding import SendSmsResponseSegmentsEncoding


class SendSmsResponseSegments(UniversalBaseModel):
    """
    Details about how the message was segmented for sending.
    """

    count: float = pydantic.Field()
    """
    Number of message segments used to send this message.
    """

    encoding: SendSmsResponseSegmentsEncoding = pydantic.Field()
    """
    Encoding used for the message segments.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

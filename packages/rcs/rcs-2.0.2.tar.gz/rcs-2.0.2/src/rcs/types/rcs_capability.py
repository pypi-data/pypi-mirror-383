# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .rcs_capability_actions import RcsCapabilityActions
from .rcs_capability_cards import RcsCapabilityCards


class RcsCapability(UniversalBaseModel):
    """
    RCS capabilities for a phone number
    """

    cards: RcsCapabilityCards
    actions: RcsCapabilityActions = pydantic.Field()
    """
    Supported button action types inside the rich cards or quick replies. Each key is a button action type that defines a specific button type in the Pinnacle API.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ConversationByParticipantsParams(UniversalBaseModel):
    """
    Retrieve conversation information by sender and recipient.
    """

    recipient: str = pydantic.Field()
    """
    The recipient's phone number in E.164 format
    """

    sender: str = pydantic.Field()
    """
    The sender identifier. Can be either:
    - A phone number in E.164 format
    - An RCS agent ID prefixed with 'agent_'
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

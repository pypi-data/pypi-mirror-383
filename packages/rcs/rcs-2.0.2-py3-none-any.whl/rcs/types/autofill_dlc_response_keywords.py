# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .autofill_dlc_response_keywords_help import AutofillDlcResponseKeywordsHelp
from .autofill_dlc_response_keywords_opt_in import AutofillDlcResponseKeywordsOptIn
from .autofill_dlc_response_keywords_opt_out import AutofillDlcResponseKeywordsOptOut


class AutofillDlcResponseKeywords(UniversalBaseModel):
    """
    Keyword response configuration.
    """

    help: typing_extensions.Annotated[AutofillDlcResponseKeywordsHelp, FieldMetadata(alias="HELP")] = pydantic.Field()
    """
    Help keyword settings.
    """

    opt_in: typing_extensions.Annotated[AutofillDlcResponseKeywordsOptIn, FieldMetadata(alias="OPT_IN")] = (
        pydantic.Field()
    )
    """
    Opt-in keyword settings.
    """

    opt_out: typing_extensions.Annotated[AutofillDlcResponseKeywordsOptOut, FieldMetadata(alias="OPT_OUT")] = (
        pydantic.Field()
    )
    """
    Opt-out keyword settings.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

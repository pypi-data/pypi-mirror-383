[project]
name = "aioinject"
version = "1.10.1"
description = "Async dependency injection library"
requires-python = ">=3.10"
authors = [
    { name = "Doctor", email = "notypecheck@gmail.com" },
    { name = "dexofan", email = "fadeddexofan@gmail.com" },
]
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "typing-extensions>=4.10.0",
]

[project.urls]
Documentation = "https://notypecheck.github.io/aioinject/"
Repository = "https://github.com/notypecheck/aioinject"

[dependency-groups]
benchmark = [
    "dependency-injector>=4.48.1",
    "di>=0.79.2",
    "dishka>=1.6.0",
    "lagom>=2.7.7",
    "punq>=0.7.0",
    "rodi>=2.0.8",
    "wireup>=2.0.1",
]
dev = [
    "mypy>=1.17.1",
    "ruff>=0.12.10",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.18",
]
test = [
    "aiogram>=3.22.0",
    "anyio>=4.10.0",
    "asgi-lifespan>=2.1.0",
    "coverage[toml]>=7.10.5",
    "django>=5.2.5",
    "djangorestframework>=3.16.1",
    "fastapi>=0.116.1",
    "grpcio>=1.75.0",
    "grpcio-tools>=1.75.0",
    "litestar>=2.17.0",
    "pydantic-settings>=2.10.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-django>=4.11.1",
    "strawberry-graphql>=0.280.0",
    "trio>=0.30.0",
    "uvicorn>=0.35.0",
]
types = [
    "django-types>=0.22.0",
    "djangorestframework-types>=0.9.0",
]

[tool.uv]
default-groups = "all"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.sdist]
ignore-vcs = true
include = ["aioinject/*", "tests/*", "docs/*", "benchmark/*"]

[tool.hatch.build.targets.wheel]
include = ["aioinject/*"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.integrations.django.app.app.settings"


[tool.coverage.run]
source = ["aioinject"]
command_line = "-m pytest -vvv"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "class .*\\(.*\\bProtocol\\b.*\\):",
    "@(?:typing\\.)?overload",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]
ignore_errors = false
show_missing = true
skip_covered = true
skip_empty = true
precision = 2
fail_under = 100


[tool.commitizen]
name = "cz_conventional_commits"
version = "1.10.1"
version_files = [
    "aioinject/__init__.py",
    "pyproject.toml:version"
]
update_changelog_on_bump = true
changelog_start_rev = "0.34.0"
changelog_incremental = true


[tool.black]
line_length = 79

[tool.ruff]
target-version = "py310"
src = ["aioinject", "tests"]
line-length = 79

[tool.ruff.lint]
select = ["ALL"]
fixable = [
    "F",
    "B",
    "UP",
    "I",
    "PT",
    "TID",
    "COM",
    "RUF022",
]
unfixable = [
    "F841", # Variable  is assigned to but never used
]
ignore = [
    "D",
    "PD", # pandas-vet
    "E501",
    "ANN401",
    "TC001",
    "TC002",
    "TC003",
    "EXE",
    "ISC001", # ruff format conflict
    "COM812", # ruff format conflict
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",
    "S311", # random
]
"tests/integrations/grpcio/*" = ["ARG002", "N802"]
"tests/*/test_*.py" = ["FBT001"]
"docs/*" = [
    "INP001", # Implicit package (no __init__.py)
    "A002", # shadows built-int
    "S101", # assert
    "T201", # print
]
"docs/code/integrations/django_01_subclass.py" = ["RET504"]

[tool.ruff.lint.flake8-builtins]
builtins-strict-checking = false

[tool.ruff.lint.mccabe]
max-complexity = 6

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["aioinject"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod"]
staticmethod-decorators = ["staticmethod"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.mypy]
python_version = "3.10"
strict = true
follow_imports = "normal"
ignore_missing_imports = false

allow_redefinition = false
disallow_any_explicit = false
ignore_errors = false
local_partial_types = true
no_implicit_optional = true
strict_optional = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true

pretty = true
show_column_numbers = true
show_error_codes = true

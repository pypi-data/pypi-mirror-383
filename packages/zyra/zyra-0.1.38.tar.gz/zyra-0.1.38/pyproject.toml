[tool.poetry]
name = "zyra"
version = "0.1.38"
description = "A tool to ingest data from various sources and formats, create imagery or video based on that data, and send the results to various locations for dissemination."
authors = ["Eric Hackathorn <eric.j.hackathorn@noaa.gov>"]
include = [
    # Packaged assets in the Zyra namespace
    "src/zyra/assets/**",
    "src/zyra/wizard/*.json",
]
license = "Apache-2.0"
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
]
packages = [
    # New public package name
    { include = "zyra", from = "src" },
    # Legacy namespace retained for compatibility during migration
    { include = "zyra", from = "src" },
]

[tool.poetry.urls]
Homepage = "https://github.com/NOAA-GSL/zyra"
Documentation = "https://github.com/NOAA-GSL/zyra/blob/main/README.md"
Source = "https://github.com/NOAA-GSL/zyra"
Tracker = "https://github.com/NOAA-GSL/zyra/issues"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
python-dotenv = "^0.19.1"
pyyaml = "^6.0.2"
numpy = "^1.26"
fastapi = { version = "^0.115.0", optional = true }
uvicorn = { version = "^0.30.0", optional = true }
python-multipart = { version = ">=0.0.18", optional = true }
redis = { version = "^5.0.0", optional = true }
rq = { version = "^1.15.1", optional = true }
python-magic = { version = "^0.4.27", optional = true }
websockets = { version = "^11.0.3", optional = true }
prompt_toolkit = { version = "^3.0.50", optional = true }

# Optional feature dependencies (installed via extras)
boto3 = { version = "^1.17", optional = true }
PyVimeo = { version = "^1.0", optional = true }
requests = { version = "^2.25", optional = true }
pygrib = { version = "^2.1.5", optional = true }
scipy = { version = "^1.12.0", optional = true }
siphon = { version = "^0.9", optional = true }
cartopy = { version = "^0.22.0", optional = true }
matplotlib = { version = "^3.8.3", optional = true }
netcdf4 = { version = "^1.6.5", optional = true }
xarray = { version = "^2024.3.0", optional = true }
ffmpeg-python = { version = "^0.2.0", optional = true }
cfgrib = { version = "^0.9.12.0", optional = true }
rioxarray = { version = "^0.15.5", optional = true }
rasterio = { version = "^1.3.9", optional = true }

# -------------------------------------------------------------------
# Optional dependency groups
# Install examples:
#   pip install "zyra[datatransfer]"   # S3, HTTP, Vimeo transfers
#   pip install "zyra[processing]"     # GRIB2, NetCDF, GeoTIFF + processing
#   pip install "zyra[visualization]"  # Cartopy/Matplotlib plotting
#   pip install "zyra[grib2]"          # Minimal GRIB2 decoding
#   pip install "zyra[netcdf]"         # Minimal NetCDF handling
#   pip install "zyra[geotiff]"        # Minimal GeoTIFF export
#   pip install "zyra[all]"            # Everything (full dev/test)
#
# Documentation:
#   Wiki (design, architecture, vision): https://github.com/NOAA-GSL/zyra/wiki
#   API Reference & Examples: https://noaa-gsl.github.io/zyra/
# -------------------------------------------------------------------
[tool.poetry.extras]
# Transfer-only dependencies
datatransfer = [
    "boto3",
    "PyVimeo",
    "requests",
]

# New name aligning with code layout (alias of datatransfer)
connectors = [
    "boto3",
    "PyVimeo",
    "requests",
]

# Processing extra now includes GRIB2, NetCDF, and raster exports
processing = [
    "scipy",
    "siphon",
    "ffmpeg-python",
    "cfgrib",
    "pygrib",
    "netcdf4",
    "xarray",
    "rioxarray",
    "rasterio",
]

# Visualization-only dependencies
visualization = [
    "cartopy",
    "matplotlib",
    "xarray",
    "scipy",
    "pandas",
    "contextily",
]

# Interactive visualization (optional)
interactive = [
    "folium",
    "plotly",
]

# Wizard REPL (optional)
wizard = [
    "prompt_toolkit",
]

# Focused extras for targeted installs
grib2 = [
    "cfgrib",
    "pygrib",
]
netcdf = [
    "netcdf4",
    "xarray",
]
geotiff = [
    "rioxarray",
    "rasterio",
]

# All-in-one install
all = [
    # Data transfer
    "boto3",
    "PyVimeo",
    "requests",
    # Processing (includes GRIB2/NetCDF/GeoTIFF deps)
    "scipy",
    "siphon",
    "ffmpeg-python",
    "cfgrib",
    "pygrib",
    "netcdf4",
    "xarray",
    "rioxarray",
    "rasterio",
    # Visualization
    "cartopy",
    "matplotlib",
    "contextily",
    # API
    "fastapi",
    "uvicorn",
    "python-multipart",
    "redis",
    "rq",
    "python-magic",
    # Wizard UX
    "prompt_toolkit",
]

# Optional MIME type detection
mime = [
    "python-magic",
]
ws = [
    "websockets",
]

# API service dependencies
api = [
    "fastapi",
    "uvicorn",
    "python-multipart",
    # Optional async/job infra
    "redis",
    "rq",
]

[tool.poetry.scripts]
# New CLI entry points
zyra = "zyra.cli:main"
zyra-cli = "zyra.api_cli:main"
# Legacy entry points retained for compatibility

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.0"
py = ">=1.11.0"
pytest = "^7.4"
pytest-cov = "^4.1"
pytest-timeout = "^2.2.0"
ruff = "^0.6.4"
ipykernel = "^6.30.1"
httpx = "^0.27.0"
trio = "^0.25.0"
myst-parser = "^3.0.1"
sphinx = "^7.4.7"
boto3 = "^1.17"
pre-commit = "^3.7"
hypothesis = "^6.112.1"

[tool.poetry.plugins."poetry.plugin"]
"dynamic-versioning" = "poetry_dynamic_versioning"

[tool.poetry-dynamic-versioning]
enable = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-s -v --durations=0"
cache_dir = ".cache/pytest_cache"
markers = [
    "cli: marks tests that invoke the CLI",
    "pipeline: marks tests that run the pipeline runner",
    "redis: marks tests that require a running Redis",
    "mcp_ws: marks MCP WebSocket tests (force in-memory mode)",
]

[tool.coverage.run]
branch = true
source = ["src"]
command_line = "-m pytest"

[tool.coverage.report]
show_missing = true

[tool.coverage.xml]
output = "coverage.xml"

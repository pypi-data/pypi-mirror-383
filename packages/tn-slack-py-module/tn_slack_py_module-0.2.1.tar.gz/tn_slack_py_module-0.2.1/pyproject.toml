[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tn-slack-py-module"
version = "0.2.1"
description = "An adaptation for slack"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Pari", email = "pari@threeleafcoder.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    "slack-sdk>=3.32.0",
    "slackblocks>=1.1.0", 
    "requests>=2.32.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]


[project.scripts]


[project.urls]
Homepage = "https://github.com/thinknimble/tn-slack-py-module"
Repository = "https://github.com/thinknimble/tn-slack-py-module"
Issues = "https://github.com/thinknimble/tn-slack-py-module/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/tnslack"]


[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
extend-select = ["I", "F", "E", "W", "B", "C90", "UP", "D"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]

[tool.ruff.lint.pydocstyle]
convention = "google"



[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict = true
show_error_codes = true
exclude = ["tests/"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.coverage.run]
source = ["src/tnslack"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "ruff>=0.9.8",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=6.0.0",
    "mypy>=1.13.0",
    "types-requests>=2.32.0",
    "pre-commit>=4.0.0",
    "bandit[toml]>=1.7.10",
    "safety>=3.0.0",
    "build>=1.3.0",
    "twine>=6.2.0",
    "aiohttp>=3.8.0",
]

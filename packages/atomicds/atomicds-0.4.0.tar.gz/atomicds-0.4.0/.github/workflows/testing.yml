name: Testing

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements-ubuntu-latest_py3.11.txt
          pip install -r requirements/requirements-ubuntu-latest_py3.11_extras.txt

      - name: Install dependencies
        run: |
          pip install pre-commit

      - name: Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

      - name: Run mypy
        run: |
          mypy --version
          rm -rf .mypy_cache
          mypy src/atomicds

  test:
    needs: lint
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements-${{ matrix.os }}_py${{ matrix.python-version }}.txt
          pip install -r requirements/requirements-${{ matrix.os }}_py${{ matrix.python-version }}_extras.txt

      - name: Set SSL_CERT_FILE (Linux/MacOS)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: echo "SSL_CERT_FILE=$(python -m certifi)" >> $GITHUB_ENV

      - name: Set SSL_CERT_FILE (Windows)
        if: matrix.os == 'windows-latest'
        run: echo "SSL_CERT_FILE=$(python -m certifi)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Test with pytest
        env:
          ADS_API_KEY: ${{ secrets.ADS_API_KEY }}
          ADS_API_ENDPOINT: "https://api.atomscale.ai"
        run: |
          pip install -e .
          pytest -x

  auto-gen-release:
    needs: test
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: rymndhng/release-on-push-action@v0.28.0
        with:
          bump_version_scheme: norelease

[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "torch>=2.0.0",
    "numpy",
]
build-backend = "setuptools.build_meta"

[project]
name = "mycelya_torch"
version = "0.1.1"
description = "Mycelya: PyTorch extension for transparent remote GPU execution on cloud infrastructure"
authors = [{name = "Mycelya Extension"}]
license = "AGPL-3.0-or-later"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "modal>=1.1.0",
    "numpy",
    "cloudpickle>=3.1.1",
]

[project.optional-dependencies]
aws = ["boto3>=1.33.0"]
all = ["boto3>=1.33.0"]

[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.setuptools.package-data]
mycelya_torch = ["*.dll", "*.dylib", "*.so"]

[tool.ruff]
# Exclude build directories and generated files
exclude = [
    "build/",
    "dist/",
    "*.egg-info/",
    "__pycache__/",
]

line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Enable common linting rules
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

# Ignore specific rules that may be too strict for this codebase
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
    "B904",  # raise-without-from-inside-except
]

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
# Be more lenient with test files
"tests/**" = ["B011"]

[tool.ruff.lint.isort]
# Keep imports organized and compatible with existing style
known-first-party = ["mycelya_torch"]

[tool.ruff.format]
# Use double quotes and standard formatting
quote-style = "double"
indent-style = "space"
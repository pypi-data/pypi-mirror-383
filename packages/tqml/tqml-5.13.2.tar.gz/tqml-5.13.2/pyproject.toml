[project]
name = "tqml"
description = "Quantum Machine Learning Library"
license = { file="LICENSE.md" }
readme = "README.md"
version = "5.13.2"

[tool.poetry]
authors = ["Terra Quantum"]
packages = [
    {include = "tqml", from = "src"}
]
include = [
    {path = "**/*.so"},
    {path = "**/*.pyd"}
]

[tool.poetry.dependencies]
python = "^3.9"
pennylane = "~0.38"
ray = {extras = ["train", "tune"], version = "^2.10.0"}
optuna = "^2.10.0"
torch = "~2.7"
pennylane-lightning = "~0.38"
 #torchtt = {git = "https://github.com/ion-g-ion/torchTT", rev = "3ef09457f1c39d501bc88b44b4fe1f8ce9bb234c"}
matplotlib = "~3.8"
mycolorpy = "^1.5.1"
pyzx = "~0.8.0"
scikit-learn = "^1.4.1"
keygen-py = "^0.1.8"
py-machineid = "^0.7.0"
autoray = "~0.7"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_source = "tag"
commit_version_number = true
branch = "master"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "poetry build"              # build dists
dist_path = "dist/"                         # where to put dists
upload_to_release = true                    # auto-create GitHub release
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
patch_without_tag = true                    # patch release by default

[tool.poetry.group.obfuscate.dependencies]
mypy = "^1.11.2"
pyarmor = "^8.5.11"

[tool.poetry.group.dev.dependencies]
astroid = "<3.0.0"
pytest = "^8.4.0"
pytest-cov = "^6.1.1"
pytest-xdist = {extras = ["psutil"], version = "^3.7.0"}
myst-nb = {version = "^0.17.1", python = "^3.9"}
sphinx-autoapi = "^2.0.1"
sphinx-rtd-theme = "^1.2.0"
notebook = "~7.1.2"
sphinxcontrib-napoleon = "^0.7"
python-semantic-release = "^10.0.2"
torchvision = ">=0.17.0"
prettytable = "^3.6.0"
pre-commit = "^4.2.0"

[tool.isort]
skip = ["tests/test_speedy_layers.py"]
src_paths = ["src/tqml"]
profile = "black"
line_length = 90
lines_after_imports = 2

[tool.nbqa.config]
black = "pyproject.toml"
isort = "pyproject.toml"
flake8 = "setup.cfg"

[tool.nbqa.addopts]
flake8 = ["--extend-ignore=E402"]

[tool.nbqa.mutate]
black = 1
isort = 1

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

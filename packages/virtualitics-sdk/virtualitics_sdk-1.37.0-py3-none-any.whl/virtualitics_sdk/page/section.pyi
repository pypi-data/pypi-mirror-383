from _typeshed import Incomplete
from predict_backend.validation.type_validation import validate_types
from typing import Callable
from virtualitics_sdk.elements.dashboard import Row as Row
from virtualitics_sdk.elements.element import Element as Element, InputElement as InputElement
from virtualitics_sdk.page.card import Card as Card

class Section:
    '''A divider of the Page. A container for cards. A Page can have multiple Sections.
    
    :param title: The title of the Section.
    :param content: The cards inside of this Section.
    :param subtitle: The subtitle of the Section, defaults to "".
    :param description: The description for the Section, defaults to "".
    :param _id: ID of the section. Defaults to autogenerated UUID.

    **EXAMPLE:** 

       .. code-block:: python

           # Imports 
           from virtualitics_sdk import Card, Section
           . . . 
           # Example usage 
           class ExStep(Step):
            def run(self, flow_metadata):
                . . . 
                ex_card = Card(title="Example Card", content=[example_content])
                ex_section = Section(Here\'s the card!", [ex_card])
    '''
    id: Incomplete
    title: Incomplete
    subtitle: Incomplete
    description: Incomplete
    content: Incomplete
    show_title: Incomplete
    show_description: Incomplete
    @validate_types
    def __init__(self, title: str, content: list['Card'], subtitle: str = '', description: str = '', _id: str = None, show_title: bool = True, show_description: bool = True) -> None: ...
    def to_json(self) -> dict: ...
    def add_card_w_content(self, elems: Element | list[Element] | list['Row'], card_title: str = '', card_subtitle: str = '', card_description: str = '', card_id: str = '', show_card_title: bool = True, show_card_description: bool = True, page_update: Callable | None = None, filter_update: Callable | None = None, filters: list[InputElement] | None = None, updater_text: str | None = None, index: int | None = None):
        '''Adds a new card containing the content specified. It\'s recommended you use the method in the 
        :class:`~virtualitics_sdk.page.page.Page` class instead when writing apps.

        :param elems: The elements to be added. Can be a list or single element.
        :param card_title: The title of the new card, defaults to \'\'.
        :param card_subtitle: The subtitle for the new card, defaults to \'\'.
        :param card_description: The description for the new card, defaults to \'\'.
        :param card_id: The ID of the card to add, defaults to "".
        :param show_card_title: whether to show the title of the card on the page when rendered, defaults to True.
        :param show_card_description: whether to show the description of the card to the page when rendered, defaults to True.
        :param page_update: The page update function for the new card, defaults to None.
        :param filter_update: The filter update function for the new card, defaults to None.
        :param filters: A list of input elements that can be used as input to the cardâ€™s filter function, defaults to previous filter options given for this card.
        :param updater_text: The text to show on the cardâ€™s update button. If this value is not set, the frontend will default to showing previous text set for the updater.
        '''
    def get_card_by_id(self, card_id: str) -> Card: ...

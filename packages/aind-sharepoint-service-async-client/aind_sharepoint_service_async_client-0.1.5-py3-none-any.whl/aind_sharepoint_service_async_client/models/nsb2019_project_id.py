# coding: utf-8

"""
    aind-sharepoint-service

     ## aind-sharepoint-service  Service to pull data from Sharepoint.  

    The version of the OpenAPI document: 0.1.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class NSB2019ProjectId(str, Enum):
    """
    Enum class for ProjectId
    """

    """
    allowed enum values
    """
    CAMC506 = 'CAM-C506'
    CONT503 = 'CON-T503'
    CTYT504 = 'CTY-T504'
    LOCC500 = 'LOC-C500'
    N_1020100910_CTY_MORPHOLO = '102-01-009-10: CTY-Morphology'
    N_1020101010_CTY_SYNAPTIC = '102-01-010-10: CTY-Synaptic Phys'
    N_1020101410_CTY_GEN_TOOL = '102-01-014-10: CTY GenTools Mouse'
    N_1020102120_CTYBRAIN_001 = '102-01-021-20: CTY-BRAIN Mouse Brain Cell Atlas Seg 1'
    N_1020102120_CTYBRAIN_MOU = '102-01-021-20: CTY-BRAIN Mouse Brain Cell Atlas Seg 2 Anatomy'
    N_1020103620_DISSEMINATIO = '102-01-036-20 Dissemination of 3-photon Imaging'
    N_1020104320_OPTICAL_INTE = '102-01-043-20 Optical Interrogation of Venular Function'
    N_1020104410_CTY_GENOMICS = '102-01-044-10 CTY Genomics'
    N_1020104510_IVSCC = '102-01-045-10 IVSCC'
    N_1020104720_3_P_NHP_CORT = '102-01-047-20 3P NHP cortical imaging R34'
    N_1020104810_CTY_BARCODED = '102-01-048-10 CTY Barcoded Connectomics'
    N_1020105520_CTY_EM_MOTOR = '102-01-055-20 CTY EM Motor Cortex'
    N_1020199910_CTY_PROGRAM = '102-01-999-10 CTY Program Admin'
    N_1020201220_BRAIN_VIRAL = '102-02-012-20: BRAIN Viral Strategies'
    N_1020201720_BRAIN_NEUROP = '102-02-017-20 BRAIN Neuropixels Ultra'
    N_1020400620_OTH_MEASURIN = '102-04-006-20: OTH Measuring Consciousness'
    N_1020400710_TARGETED_CNS = '102-04-007-10 Targeted CNS Gene Therapy'
    N_1020401010_CTY_SR_SLC6 = '102-04-010-10 CTY SR: SLC6A1'
    N_1020401410_CTY_PARKINSO = '102-04-014-10 CTY Parkinsons Disease'
    N_1028800410_XPG_CORE_001 = '102-88-004-10 XPG Core Virus Prod, Task: CVS Production'
    N_1028800410_XPG_CORE_VIR = '102-88-004-10 XPG Core Virus Prod, Task: R&D'
    N_1210100410_VIP_REGULATE = '121-01-004-10 VIP Regulated Stabilized Networks'
    N_1210100710_TASK_TRAINED = '121-01-007-10 Task Trained Networks'
    N_1210100810_NEURAL_ENSEM = '121-01-008-10 Neural Ensemble Variability'
    N_1210101010_V1_OM_FISH = '121-01-010-10 V1 omFISH'
    N_1210101110_DYNAMIC_ROUT = '121-01-011-10 Dynamic Routing'
    N_1210101210_LEARNING_M_F = '121-01-012-10 Learning mFISH'
    N_1210101320_MSP_TEMPLETO = '121-01-013-20 MSP Templeton'
    N_1210101620_BRAIN_OPEN_S = '121-01-016-20 BRAIN OpenScope'
    N_1210102320_MSP_TEMPLETO = '121-01-023-20 MSP Templeton - Testing Theories of Consciousness'
    N_1210199910_MINDSCOPE_MS = '121-01-999-10 Mindscope (MSP) Cross Program'
    N_1220100110_NEURAL_DYNAM = '122-01-001-10 Neural Dynamics Scientific Activities'
    N_1220100220_NEURAL_DYNAM = '122-01-002-20 Neural Dynamics U19- Project 1: Period 1'
    N_1220100220_NEURAL_D_001 = '122-01-002-20 Neural Dynamics U19- Project 2: Period 1'
    N_1229999910_NEURAL_DYNAM = '122-99-999-10 Neural Dynamics Admin (Direct)'
    SELECT = 'Select...'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of NSB2019ProjectId from a JSON string"""
        return cls(json.loads(json_str))



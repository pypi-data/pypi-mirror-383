[tool.poetry]
name = "memfuse"
version = "0.3.3"
description = "Memfuse Python SDK"
authors = ["Calvin Ku <cku@percena.co>", "Ming Xue <mxue@percena.co>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://memfuse.vercel.app"
repository = "https://github.com/memfuse/memfuse-python"
keywords = ["memfuse", "sdk", "ai", "llm", "memory", "rag"]
packages = [{ include = "memfuse", from = "src" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pydantic = "^2.0"
openai = "^1.75.0"
jinja2 = "^3.1.6"
python-frontmatter = "^1.1.0"
httpx = "^0.28.1"
aiohttp = {extras = ["speedups"], version = "^3.11.18"}
requests = "^2.32.3"
anthropic = "^0.51.0"
google-genai = "^1.16.1"
ollama = "^0.4.8"
gradio = { version = "^5.30.0", optional = true }
python-dotenv = "^1.1.0"
loguru = "^0.7.3"

[tool.poetry.extras]
ui = ["gradio"]
full = ["gradio"] # alias if you prefer memfuse[full]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
respx = "^0.22.0"
pytest-mock = "^3.14.0"
ipykernel = "^6.29.5"
datasets = "^3.6.0"
colorlog = "^6.9.0"
twine = "^6.1.0"
poetry-dynamic-versioning = "^1.8.2"
pytest-asyncio = "^1.0.0"
ragas = "^0.2.0"
langchain-ollama = "^0.2.0"
litellm = "^1.53.0"
plotext = "^5.2.8"

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"

[tool.poetry-dynamic-versioning.substitution]
files = ["src/memfuse/__init__.py"]
patterns = ["(^__version__\\s*(?::.*?)?\\s*=\\s*['\"])[^'\"]*(['\"])"]

[tool.pytest.ini_options]
markers = [
    "integration: mark a test as an integration test."
]
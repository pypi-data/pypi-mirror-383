[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "oscillink"
version = "0.1.7"
description = "Oscillink Lattice â€” Short-Term Coherence SDK (physics-inspired memory for generative models)"
authors = [{name="Oscillink", email="contact@oscillink.com"}]
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
dependencies = [
  "numpy>=1.22,<2.0",
  "typing_extensions>=4.7"
]
keywords = ["graph", "lattice", "memory", "retrieval", "ai", "ml", "coherence", "physics-inspired"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]

[project.scripts]
oscillink = "oscillink.cli:main"

[project.optional-dependencies]
dev = [
  "pytest>=7.0",
  "pytest-cov>=4.1",
  "ruff>=0.5.0",
  "mypy>=1.5",
  "pre-commit>=3.7",
  "fastapi>=0.111",
  "httpx>=0.27",
  "orjson>=3.9",
  "prometheus-client>=0.20"
]
cloud = [
  "fastapi>=0.111",
  "uvicorn[standard]>=0.30",
  "gunicorn>=21.0",
  "redis>=5.0",
  "pydantic>=2.5",
  "orjson>=3.9",
  "python-multipart>=0.0.6",
  "prometheus-client>=0.20"
]
billing = [
  "stripe>=10.0",
  "google-cloud-firestore>=2.16"
]
cloud-all = [
  # Unified set of dependencies from 'cloud' and 'billing' (avoid recursive self reference)
  "fastapi>=0.111",
  "uvicorn[standard]>=0.30",
  "gunicorn>=21.0",
  "redis>=5.0",
  "pydantic>=2.5",
  "orjson>=3.9",
  "python-multipart>=0.0.6",
  "prometheus-client>=0.20",
  "stripe>=10.0",
  "google-cloud-firestore>=2.16"
]

[tool.setuptools]
# Explicitly list packages to avoid discovery error with multiple top-level dirs (oscillink, cloud)
packages = ["oscillink", "cloud"]

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [
  "**/*.ipynb",  # exclude Jupyter notebooks from linting
]

[tool.ruff.lint]
select = ["E","F","I","UP","B","N","SIM","C90"]
# Ignore style modernizations we defer (keep Py3.9 syntax & explicit typing imports)
ignore = [
  "N802","N803","N806",  # naming
  "N815",  # allow lamG/lamC/lamQ/lamP parameter style (domain-specific symbols)
  "UP035","UP006","UP037","UP045",  # typing modernization / union pipe (needs py310); keep Optional for py39 clarity
  "B008",  # FastAPI Depends pattern acceptable for this project
  "SIM105","SIM910",  # optional stylistic simplifications
  "E501"  # allow longer lines (benchmark/log payload clarity & doc tables); revisit later
]

[tool.ruff.lint.per-file-ignores]
"notebooks/*.ipynb" = ["E402","E741","F401","F821","F811"]
"scripts/benchmark.py" = ["C901"]
"scripts/proof_hallucination.py" = ["C901"]

[tool.mypy]
python_version = "3.9"
warn_unused_ignores = true
pretty = true

[[tool.mypy.overrides]]
# sentence-transformers is an optional runtime dependency for embeddings; we fall back when absent.
# In CI we don't install it, so silence missing type stub/library errors for this module only.
module = [
  "sentence_transformers",
  "sentence_transformers.*",
]
ignore_missing_imports = true

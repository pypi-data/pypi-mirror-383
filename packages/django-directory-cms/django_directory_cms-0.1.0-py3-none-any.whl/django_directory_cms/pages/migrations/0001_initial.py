# Generated by Django 5.2.4 on 2025-10-12 20:27

import django_seo_audit.mixins
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Display name for the page', max_length=250, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly identifier', max_length=250, unique=True)),
                ('content', models.TextField(help_text='Main page content (supports HTML)')),
                ('is_active', models.BooleanField(default=True, help_text='Page is active and accessible')),
                ('is_published', models.BooleanField(default=True, help_text='Page is published and visible')),
                ('seo_title', models.CharField(blank=True, default='', help_text='Optimized title for search engines (50-60 chars)', max_length=60)),
                ('meta_description', models.CharField(blank=True, default='', help_text='Meta description for search results (150-160 chars)', max_length=160)),
                ('h1_tag', models.CharField(blank=True, default='', help_text='H1 tag for page (can differ from SEO title)', max_length=70)),
                ('focus_keyphrase', models.CharField(blank=True, default='', help_text='Primary keyword/phrase to rank for', max_length=100)),
                ('secondary_keywords', models.TextField(blank=True, default='', help_text='Comma-separated secondary keywords')),
                ('canonical_url', models.URLField(blank=True, default='', help_text='Canonical URL if different from default')),
                ('og_title', models.CharField(blank=True, default='', help_text='OpenGraph title (up to 95 chars)', max_length=95)),
                ('og_description', models.CharField(blank=True, default='', help_text='OpenGraph description', max_length=200)),
                ('og_image', models.ImageField(blank=True, help_text='OpenGraph image (1200x630px recommended)', null=True, upload_to='og_images/pages/')),
                ('og_type', models.CharField(blank=True, default='website', help_text='OpenGraph type (article, website, etc.)', max_length=20)),
                ('twitter_card_type', models.CharField(blank=True, default='summary_large_image', help_text='Twitter card type', max_length=20)),
                ('twitter_title', models.CharField(blank=True, default='', help_text='Twitter card title', max_length=70)),
                ('twitter_description', models.CharField(blank=True, default='', help_text='Twitter card description', max_length=200)),
                ('twitter_image', models.ImageField(blank=True, help_text='Twitter card image', null=True, upload_to='twitter_images/pages/')),
                ('schema_type', models.CharField(blank=True, default='WebPage', help_text='Schema.org type (WebPage, AboutPage, ContactPage, etc.)', max_length=50)),
                ('schema_data', models.JSONField(blank=True, help_text='Additional structured data in JSON format', null=True)),
                ('robots_directive', models.CharField(blank=True, default='index,follow', help_text='Robots meta directive', max_length=50)),
                ('breadcrumb_title', models.CharField(blank=True, default='', help_text='Custom breadcrumb title', max_length=100)),
                ('seo_notes', models.TextField(blank=True, default='', help_text='Internal SEO notes and strategy')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['title'],
            },
            bases=(models.Model, django_seo_audit.mixins.SEOAuditableMixin),
        ),
    ]

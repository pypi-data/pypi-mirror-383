[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "asciiquarium"
version = "2.2.0"
description = "An aquarium/sea animation in ASCII art for your terminal"
readme = "README.md"
requires-python = ">=3.8"
license = "GPL-3.0-or-later"
authors = [
    {name = "Mohammad Abu Mattar", email = "info@mkabumattar.com"}
]
keywords = ["terminal", "ascii", "animation", "aquarium", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Games/Entertainment",
]

dependencies = [
    "windows-curses>=2.4.1; sys_platform == 'win32' and python_version < '3.13'",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "hatch>=1.8.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pytest>=7.0.0",
]

[project.scripts]
asciiquarium = "asciiquarium.main:main"

[project.urls]
Homepage = "https://mkabumattar.com/"
Repository = "https://github.com/MKAbuMattar/asciiquarium-python"
"Original Project" = "http://robobunny.com/projects/asciiquarium"
"Author Website" = "https://mkabumattar.com/"

# Ruff configuration
[tool.ruff]
line-length = 100
target-version = "py38"

# Enable specific rule sets
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # function is too complex
]

# Exclude directories
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Set to true when ready for full type checking
ignore_missing_imports = true

# Per-module options
[[tool.mypy.overrides]]
module = ["curses", "curses.*", "windows_curses", "windows_curses.*"]
ignore_missing_imports = true
ignore_errors = true

[dependency-groups]
dev = []

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = ["__init__.py"]

[tool.hatch.build.targets.wheel]
packages = ["asciiquarium"]
include = ["LICENSE", "README.md"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
packages = ["asciiquarium"]
include = ["LICENSE", "README.md"]

[tool.hatch.envs.default]
dependencies = [
    "black>=22.0.0,<24.0.0",
    "hatch>=1.8.0,<1.9.0",
    "isort>=5.10.0,<5.12.0",
    "mypy>=0.990,<1.5.0",
    "ruff>=0.1.0,<0.2.0",
    "twine>=4.0.2",
    "setuptools>=61.0",
    "wheel>=0.37.1",
]

[tool.hatch.envs.default.scripts]
fmt = [
    "isort asciiquarium",
    "black asciiquarium",
]
lint = [
    "ruff check asciiquarium",
    "mypy asciiquarium",
]
[project]
name = "dbop-runner"
version = "1.0.2"
description = "Resilient SQLAlchemy operation runner with retry, backoff, SAVEPOINTs, and per-operation timeouts."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [{ name = "Youssef Khaya" }]
keywords = ["sqlalchemy", "database", "retry", "backoff", "transactions", "savepoint", "asyncio"]
dependencies = [
  "SQLAlchemy>=2.0,<3",
]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Database",
  "Topic :: Software Development :: Libraries",
]
[project.optional-dependencies]
dev = [
  "ruff>=0.5.0",
  "pytest>=8.0.0",
  "pytest-xdist>=3.5.0",
  "pytest-cov>=5.0.0",
  "pytest-asyncio>=0.23.0",
  "aiosqlite>=0.19.0",
  "pre-commit>=3.7.0",
  "build>=1.0",
  "twine>=5.0",
]
postgres = [
  "psycopg[binary]>=3.1.8",
  "asyncpg>=0.29.0",
]
mysql = [
  "pymysql>=1.1.0",
  "aiomysql>=0.2.0",
]

[project.urls]
Homepage = "https://github.com/yokha/dbop-runner"
Issues = "https://github.com/yokha/dbop-runner/issues"
Source = "https://github.com/yokha/dbop-runner"

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["dbop_runner*"]

# ------------------ Pytest ------------------
[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "-q"

# ------------------ Ruff --------------------
[tool.ruff]
target-version = "py39"
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "PERF"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["dbop_runner", "tests"]

[tool.ruff.format]
preview = true
quote-style = "preserve"

name: 🐍 Build Wheels & Publish Python Package
on:
    push:
        tags:
            - 'v*.*.*'

permissions:
    contents: write

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        env:
            CIBW_OUTPUT_DIR: dist
            CIBW_SKIP: "cp38-macosx_arm64"
            CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Setup Python & build tools
              uses: actions/setup-python@v5
              with:
                python-version: "3.x"

            - name: Install build dependencies
              run: |
                python -m pip install --upgrade pip build cibuildwheel[global]

            - name: Build wheels
              run: |
                python -m cibuildwheel

            - name: Build source‐dist
              run: |
                python -m build --sdist --outdir dist

            - name: Upload all artifacts
              uses: actions/upload-artifact@v4
              with:
                name: wheels-${{ matrix.os }}
                path: dist
    
    release:
        name: Attach & Publish
        needs: build
        runs-on: ubuntu-latest

        permissions:
          contents: write
          id-token: write
        
        steps:
            - name: Download built wheels & sdist
              uses: actions/download-artifact@v4
              with:
                path: dist
            
            - name: Flaten dist folder
              run: |
                for d in dist/wheels-*-latest; do
                  cp "$d"/*.whl dist/
                done

                tarball=$(find dist/wheels-*-latest -type f -name 'cbits-*.tar.gz' | head -n1)
                if [ -z "$tarball" ]; then
                  echo "Fehler: kein cbits-*.tar.gz gefunden!" >&2
                  exit 1
                fi
                cp "$tarball" dist/

                rm -rf dist/wheels-*-latest
            
            - name: List all files in dist
              run: |
                echo "=== Contents of dist ==="
                ls -lhR dist

            - name: Create GitHub Release assets
              uses: softprops/action-gh-release@v1
              with:
                tag_name: ${{ github.ref_name }}
                files: dist/*

            - name: Publish release distributions to PyPI
              uses: pypa/gh-action-pypi-publish@v1.12.4
              with:
                skip-existing: true
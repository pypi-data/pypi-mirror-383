[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "context-reference-store"
version = "1.0.18"
description = "Efficient Large Context Window Management for AI Agents and Frameworks"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [{ name = "Adewale Adenle", email = "waleadenle1@gmail.com" }]
maintainers = [{ name = "Adewale Adenle", email = "waleadenle1@gmail.com" }]
keywords = [
    "ai",
    "agents",
    "context",
    "memory",
    "multimodal",
    "adk",
    "langchain",
    "langgraph",
    "llamaindex",
    "composio",
    "performance",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    # Dropped 3.9 support
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "psutil>=5.8.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
    # Core performance features (included in basic install)
    "lz4>=4.0.0",
    "aiofiles>=23.0.0",
    "asyncio-throttle>=1.0.0",
]

[project.optional-dependencies]
# Framework integrations
adk = ["adk-python>=0.1.0", "asyncio-throttle>=1.0.0"]
langchain = ["langchain>=0.1.0", "langchain-core>=0.1.0"]
langgraph = ["langgraph>=0.1.0"]
llamaindex = ["llama-index>=0.9.0"]
composio = ["composio-core>=0.1.0", "cryptography>=3.4.0"]

# Additional performance enhancements
zstd = ["zstandard>=0.20.0"] # Alternative compression algorithm

# Development and testing
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Documentation
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
    "sphinx-autodoc-typehints>=1.20.0",
]

# All framework integrations and enhancements
all = [
    "context-reference-store[adk,langchain,langgraph,llamaindex,composio,zstd]",
]

# Complete development environment
full = ["context-reference-store[all,dev,docs]"]

[project.urls]
Homepage = "https://github.com/Adewale-1/Context_reference_store"
Documentation = "https://context-reference-store.readthedocs.io/"
Repository = "https://github.com/Adewale-1/Context_reference_store.git"
Issues = "https://github.com/Adewale-1/Context_reference_store/issues"
Changelog = "https://github.com/Adewale-1/Context_reference_store/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = [
    "context_store",
    "context_store.core",
    "context_store.adapters",
    "context_store.monitoring",
    "context_store.optimization",
    "context_store.semantic",
    "context_store.utils",
]

[tool.setuptools.package-data]
context_store = ["py.typed"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["context_store"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=context_store",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
]

# mypy type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["psutil.*", "langchain.*", "langgraph.*", "llama_index.*"]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["context_store"]
omit = ["*/tests/*", "*/test_*.py", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class NicWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[NicWhereInput]',
        '_not': 'list[NicWhereInput]',
        '_or': 'list[NicWhereInput]',
        'driver': 'str',
        'driver_contains': 'str',
        'driver_ends_with': 'str',
        'driver_gt': 'str',
        'driver_gte': 'str',
        'driver_in': 'list[str]',
        'driver_lt': 'str',
        'driver_lte': 'str',
        'driver_not': 'str',
        'driver_not_contains': 'str',
        'driver_not_ends_with': 'str',
        'driver_not_in': 'list[str]',
        'driver_not_starts_with': 'str',
        'driver_starts_with': 'str',
        'driver_state': 'NicDriverState',
        'driver_state_in': 'list[NicDriverState]',
        'driver_state_not': 'NicDriverState',
        'driver_state_not_in': 'list[NicDriverState]',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'gateway_ip': 'str',
        'gateway_ip_contains': 'str',
        'gateway_ip_ends_with': 'str',
        'gateway_ip_gt': 'str',
        'gateway_ip_gte': 'str',
        'gateway_ip_in': 'list[str]',
        'gateway_ip_lt': 'str',
        'gateway_ip_lte': 'str',
        'gateway_ip_not': 'str',
        'gateway_ip_not_contains': 'str',
        'gateway_ip_not_ends_with': 'str',
        'gateway_ip_not_in': 'list[str]',
        'gateway_ip_not_starts_with': 'str',
        'gateway_ip_starts_with': 'str',
        'host': 'HostWhereInput',
        'ibdev': 'str',
        'ibdev_contains': 'str',
        'ibdev_ends_with': 'str',
        'ibdev_gt': 'str',
        'ibdev_gte': 'str',
        'ibdev_in': 'list[str]',
        'ibdev_lt': 'str',
        'ibdev_lte': 'str',
        'ibdev_not': 'str',
        'ibdev_not_contains': 'str',
        'ibdev_not_ends_with': 'str',
        'ibdev_not_in': 'list[str]',
        'ibdev_not_starts_with': 'str',
        'ibdev_starts_with': 'str',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'iommu_status': 'IommuStatus',
        'iommu_status_in': 'list[IommuStatus]',
        'iommu_status_not': 'IommuStatus',
        'iommu_status_not_in': 'list[IommuStatus]',
        'ip_address': 'str',
        'ip_address_contains': 'str',
        'ip_address_ends_with': 'str',
        'ip_address_gt': 'str',
        'ip_address_gte': 'str',
        'ip_address_in': 'list[str]',
        'ip_address_lt': 'str',
        'ip_address_lte': 'str',
        'ip_address_not': 'str',
        'ip_address_not_contains': 'str',
        'ip_address_not_ends_with': 'str',
        'ip_address_not_in': 'list[str]',
        'ip_address_not_starts_with': 'str',
        'ip_address_starts_with': 'str',
        'is_sriov': 'bool',
        'is_sriov_not': 'bool',
        'labels_every': 'LabelWhereInput',
        'labels_none': 'LabelWhereInput',
        'labels_some': 'LabelWhereInput',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'mac_address': 'str',
        'mac_address_contains': 'str',
        'mac_address_ends_with': 'str',
        'mac_address_gt': 'str',
        'mac_address_gte': 'str',
        'mac_address_in': 'list[str]',
        'mac_address_lt': 'str',
        'mac_address_lte': 'str',
        'mac_address_not': 'str',
        'mac_address_not_contains': 'str',
        'mac_address_not_ends_with': 'str',
        'mac_address_not_in': 'list[str]',
        'mac_address_not_starts_with': 'str',
        'mac_address_starts_with': 'str',
        'max_vf_num': 'int',
        'max_vf_num_gt': 'int',
        'max_vf_num_gte': 'int',
        'max_vf_num_in': 'list[int]',
        'max_vf_num_lt': 'int',
        'max_vf_num_lte': 'int',
        'max_vf_num_not': 'int',
        'max_vf_num_not_in': 'list[int]',
        'model': 'str',
        'model_contains': 'str',
        'model_ends_with': 'str',
        'model_gt': 'str',
        'model_gte': 'str',
        'model_in': 'list[str]',
        'model_lt': 'str',
        'model_lte': 'str',
        'model_not': 'str',
        'model_not_contains': 'str',
        'model_not_ends_with': 'str',
        'model_not_in': 'list[str]',
        'model_not_starts_with': 'str',
        'model_starts_with': 'str',
        'mtu': 'int',
        'mtu_gt': 'int',
        'mtu_gte': 'int',
        'mtu_in': 'list[int]',
        'mtu_lt': 'int',
        'mtu_lte': 'int',
        'mtu_not': 'int',
        'mtu_not_in': 'list[int]',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'nic_uuid': 'str',
        'nic_uuid_contains': 'str',
        'nic_uuid_ends_with': 'str',
        'nic_uuid_gt': 'str',
        'nic_uuid_gte': 'str',
        'nic_uuid_in': 'list[str]',
        'nic_uuid_lt': 'str',
        'nic_uuid_lte': 'str',
        'nic_uuid_not': 'str',
        'nic_uuid_not_contains': 'str',
        'nic_uuid_not_ends_with': 'str',
        'nic_uuid_not_in': 'list[str]',
        'nic_uuid_not_starts_with': 'str',
        'nic_uuid_starts_with': 'str',
        'physical': 'bool',
        'physical_not': 'bool',
        'rdma_enabled': 'bool',
        'rdma_enabled_not': 'bool',
        'running': 'bool',
        'running_not': 'bool',
        'speed': 'int',
        'speed_gt': 'int',
        'speed_gte': 'int',
        'speed_in': 'list[int]',
        'speed_lt': 'int',
        'speed_lte': 'int',
        'speed_not': 'int',
        'speed_not_in': 'list[int]',
        'subnet_mask': 'str',
        'subnet_mask_contains': 'str',
        'subnet_mask_ends_with': 'str',
        'subnet_mask_gt': 'str',
        'subnet_mask_gte': 'str',
        'subnet_mask_in': 'list[str]',
        'subnet_mask_lt': 'str',
        'subnet_mask_lte': 'str',
        'subnet_mask_not': 'str',
        'subnet_mask_not_contains': 'str',
        'subnet_mask_not_ends_with': 'str',
        'subnet_mask_not_in': 'list[str]',
        'subnet_mask_not_starts_with': 'str',
        'subnet_mask_starts_with': 'str',
        'total_vf_num': 'int',
        'total_vf_num_gt': 'int',
        'total_vf_num_gte': 'int',
        'total_vf_num_in': 'list[int]',
        'total_vf_num_lt': 'int',
        'total_vf_num_lte': 'int',
        'total_vf_num_not': 'int',
        'total_vf_num_not_in': 'list[int]',
        'type': 'NetworkType',
        'type_in': 'list[NetworkType]',
        'type_not': 'NetworkType',
        'type_not_in': 'list[NetworkType]',
        'up': 'bool',
        'up_not': 'bool',
        'used_vf_num': 'int',
        'used_vf_num_gt': 'int',
        'used_vf_num_gte': 'int',
        'used_vf_num_in': 'list[int]',
        'used_vf_num_lt': 'int',
        'used_vf_num_lte': 'int',
        'used_vf_num_not': 'int',
        'used_vf_num_not_in': 'list[int]',
        'user_usage': 'NicUserUsage',
        'user_usage_in': 'list[NicUserUsage]',
        'user_usage_not': 'NicUserUsage',
        'user_usage_not_in': 'list[NicUserUsage]',
        'vds': 'VdsWhereInput',
        'vms_every': 'VmWhereInput',
        'vms_none': 'VmWhereInput',
        'vms_some': 'VmWhereInput'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'driver': 'driver',
        'driver_contains': 'driver_contains',
        'driver_ends_with': 'driver_ends_with',
        'driver_gt': 'driver_gt',
        'driver_gte': 'driver_gte',
        'driver_in': 'driver_in',
        'driver_lt': 'driver_lt',
        'driver_lte': 'driver_lte',
        'driver_not': 'driver_not',
        'driver_not_contains': 'driver_not_contains',
        'driver_not_ends_with': 'driver_not_ends_with',
        'driver_not_in': 'driver_not_in',
        'driver_not_starts_with': 'driver_not_starts_with',
        'driver_starts_with': 'driver_starts_with',
        'driver_state': 'driver_state',
        'driver_state_in': 'driver_state_in',
        'driver_state_not': 'driver_state_not',
        'driver_state_not_in': 'driver_state_not_in',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'gateway_ip': 'gateway_ip',
        'gateway_ip_contains': 'gateway_ip_contains',
        'gateway_ip_ends_with': 'gateway_ip_ends_with',
        'gateway_ip_gt': 'gateway_ip_gt',
        'gateway_ip_gte': 'gateway_ip_gte',
        'gateway_ip_in': 'gateway_ip_in',
        'gateway_ip_lt': 'gateway_ip_lt',
        'gateway_ip_lte': 'gateway_ip_lte',
        'gateway_ip_not': 'gateway_ip_not',
        'gateway_ip_not_contains': 'gateway_ip_not_contains',
        'gateway_ip_not_ends_with': 'gateway_ip_not_ends_with',
        'gateway_ip_not_in': 'gateway_ip_not_in',
        'gateway_ip_not_starts_with': 'gateway_ip_not_starts_with',
        'gateway_ip_starts_with': 'gateway_ip_starts_with',
        'host': 'host',
        'ibdev': 'ibdev',
        'ibdev_contains': 'ibdev_contains',
        'ibdev_ends_with': 'ibdev_ends_with',
        'ibdev_gt': 'ibdev_gt',
        'ibdev_gte': 'ibdev_gte',
        'ibdev_in': 'ibdev_in',
        'ibdev_lt': 'ibdev_lt',
        'ibdev_lte': 'ibdev_lte',
        'ibdev_not': 'ibdev_not',
        'ibdev_not_contains': 'ibdev_not_contains',
        'ibdev_not_ends_with': 'ibdev_not_ends_with',
        'ibdev_not_in': 'ibdev_not_in',
        'ibdev_not_starts_with': 'ibdev_not_starts_with',
        'ibdev_starts_with': 'ibdev_starts_with',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'iommu_status': 'iommu_status',
        'iommu_status_in': 'iommu_status_in',
        'iommu_status_not': 'iommu_status_not',
        'iommu_status_not_in': 'iommu_status_not_in',
        'ip_address': 'ip_address',
        'ip_address_contains': 'ip_address_contains',
        'ip_address_ends_with': 'ip_address_ends_with',
        'ip_address_gt': 'ip_address_gt',
        'ip_address_gte': 'ip_address_gte',
        'ip_address_in': 'ip_address_in',
        'ip_address_lt': 'ip_address_lt',
        'ip_address_lte': 'ip_address_lte',
        'ip_address_not': 'ip_address_not',
        'ip_address_not_contains': 'ip_address_not_contains',
        'ip_address_not_ends_with': 'ip_address_not_ends_with',
        'ip_address_not_in': 'ip_address_not_in',
        'ip_address_not_starts_with': 'ip_address_not_starts_with',
        'ip_address_starts_with': 'ip_address_starts_with',
        'is_sriov': 'is_sriov',
        'is_sriov_not': 'is_sriov_not',
        'labels_every': 'labels_every',
        'labels_none': 'labels_none',
        'labels_some': 'labels_some',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'mac_address': 'mac_address',
        'mac_address_contains': 'mac_address_contains',
        'mac_address_ends_with': 'mac_address_ends_with',
        'mac_address_gt': 'mac_address_gt',
        'mac_address_gte': 'mac_address_gte',
        'mac_address_in': 'mac_address_in',
        'mac_address_lt': 'mac_address_lt',
        'mac_address_lte': 'mac_address_lte',
        'mac_address_not': 'mac_address_not',
        'mac_address_not_contains': 'mac_address_not_contains',
        'mac_address_not_ends_with': 'mac_address_not_ends_with',
        'mac_address_not_in': 'mac_address_not_in',
        'mac_address_not_starts_with': 'mac_address_not_starts_with',
        'mac_address_starts_with': 'mac_address_starts_with',
        'max_vf_num': 'max_vf_num',
        'max_vf_num_gt': 'max_vf_num_gt',
        'max_vf_num_gte': 'max_vf_num_gte',
        'max_vf_num_in': 'max_vf_num_in',
        'max_vf_num_lt': 'max_vf_num_lt',
        'max_vf_num_lte': 'max_vf_num_lte',
        'max_vf_num_not': 'max_vf_num_not',
        'max_vf_num_not_in': 'max_vf_num_not_in',
        'model': 'model',
        'model_contains': 'model_contains',
        'model_ends_with': 'model_ends_with',
        'model_gt': 'model_gt',
        'model_gte': 'model_gte',
        'model_in': 'model_in',
        'model_lt': 'model_lt',
        'model_lte': 'model_lte',
        'model_not': 'model_not',
        'model_not_contains': 'model_not_contains',
        'model_not_ends_with': 'model_not_ends_with',
        'model_not_in': 'model_not_in',
        'model_not_starts_with': 'model_not_starts_with',
        'model_starts_with': 'model_starts_with',
        'mtu': 'mtu',
        'mtu_gt': 'mtu_gt',
        'mtu_gte': 'mtu_gte',
        'mtu_in': 'mtu_in',
        'mtu_lt': 'mtu_lt',
        'mtu_lte': 'mtu_lte',
        'mtu_not': 'mtu_not',
        'mtu_not_in': 'mtu_not_in',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'nic_uuid': 'nic_uuid',
        'nic_uuid_contains': 'nic_uuid_contains',
        'nic_uuid_ends_with': 'nic_uuid_ends_with',
        'nic_uuid_gt': 'nic_uuid_gt',
        'nic_uuid_gte': 'nic_uuid_gte',
        'nic_uuid_in': 'nic_uuid_in',
        'nic_uuid_lt': 'nic_uuid_lt',
        'nic_uuid_lte': 'nic_uuid_lte',
        'nic_uuid_not': 'nic_uuid_not',
        'nic_uuid_not_contains': 'nic_uuid_not_contains',
        'nic_uuid_not_ends_with': 'nic_uuid_not_ends_with',
        'nic_uuid_not_in': 'nic_uuid_not_in',
        'nic_uuid_not_starts_with': 'nic_uuid_not_starts_with',
        'nic_uuid_starts_with': 'nic_uuid_starts_with',
        'physical': 'physical',
        'physical_not': 'physical_not',
        'rdma_enabled': 'rdma_enabled',
        'rdma_enabled_not': 'rdma_enabled_not',
        'running': 'running',
        'running_not': 'running_not',
        'speed': 'speed',
        'speed_gt': 'speed_gt',
        'speed_gte': 'speed_gte',
        'speed_in': 'speed_in',
        'speed_lt': 'speed_lt',
        'speed_lte': 'speed_lte',
        'speed_not': 'speed_not',
        'speed_not_in': 'speed_not_in',
        'subnet_mask': 'subnet_mask',
        'subnet_mask_contains': 'subnet_mask_contains',
        'subnet_mask_ends_with': 'subnet_mask_ends_with',
        'subnet_mask_gt': 'subnet_mask_gt',
        'subnet_mask_gte': 'subnet_mask_gte',
        'subnet_mask_in': 'subnet_mask_in',
        'subnet_mask_lt': 'subnet_mask_lt',
        'subnet_mask_lte': 'subnet_mask_lte',
        'subnet_mask_not': 'subnet_mask_not',
        'subnet_mask_not_contains': 'subnet_mask_not_contains',
        'subnet_mask_not_ends_with': 'subnet_mask_not_ends_with',
        'subnet_mask_not_in': 'subnet_mask_not_in',
        'subnet_mask_not_starts_with': 'subnet_mask_not_starts_with',
        'subnet_mask_starts_with': 'subnet_mask_starts_with',
        'total_vf_num': 'total_vf_num',
        'total_vf_num_gt': 'total_vf_num_gt',
        'total_vf_num_gte': 'total_vf_num_gte',
        'total_vf_num_in': 'total_vf_num_in',
        'total_vf_num_lt': 'total_vf_num_lt',
        'total_vf_num_lte': 'total_vf_num_lte',
        'total_vf_num_not': 'total_vf_num_not',
        'total_vf_num_not_in': 'total_vf_num_not_in',
        'type': 'type',
        'type_in': 'type_in',
        'type_not': 'type_not',
        'type_not_in': 'type_not_in',
        'up': 'up',
        'up_not': 'up_not',
        'used_vf_num': 'used_vf_num',
        'used_vf_num_gt': 'used_vf_num_gt',
        'used_vf_num_gte': 'used_vf_num_gte',
        'used_vf_num_in': 'used_vf_num_in',
        'used_vf_num_lt': 'used_vf_num_lt',
        'used_vf_num_lte': 'used_vf_num_lte',
        'used_vf_num_not': 'used_vf_num_not',
        'used_vf_num_not_in': 'used_vf_num_not_in',
        'user_usage': 'user_usage',
        'user_usage_in': 'user_usage_in',
        'user_usage_not': 'user_usage_not',
        'user_usage_not_in': 'user_usage_not_in',
        'vds': 'vds',
        'vms_every': 'vms_every',
        'vms_none': 'vms_none',
        'vms_some': 'vms_some'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """NicWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._driver = None
        self._driver_contains = None
        self._driver_ends_with = None
        self._driver_gt = None
        self._driver_gte = None
        self._driver_in = None
        self._driver_lt = None
        self._driver_lte = None
        self._driver_not = None
        self._driver_not_contains = None
        self._driver_not_ends_with = None
        self._driver_not_in = None
        self._driver_not_starts_with = None
        self._driver_starts_with = None
        self._driver_state = None
        self._driver_state_in = None
        self._driver_state_not = None
        self._driver_state_not_in = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._gateway_ip = None
        self._gateway_ip_contains = None
        self._gateway_ip_ends_with = None
        self._gateway_ip_gt = None
        self._gateway_ip_gte = None
        self._gateway_ip_in = None
        self._gateway_ip_lt = None
        self._gateway_ip_lte = None
        self._gateway_ip_not = None
        self._gateway_ip_not_contains = None
        self._gateway_ip_not_ends_with = None
        self._gateway_ip_not_in = None
        self._gateway_ip_not_starts_with = None
        self._gateway_ip_starts_with = None
        self._host = None
        self._ibdev = None
        self._ibdev_contains = None
        self._ibdev_ends_with = None
        self._ibdev_gt = None
        self._ibdev_gte = None
        self._ibdev_in = None
        self._ibdev_lt = None
        self._ibdev_lte = None
        self._ibdev_not = None
        self._ibdev_not_contains = None
        self._ibdev_not_ends_with = None
        self._ibdev_not_in = None
        self._ibdev_not_starts_with = None
        self._ibdev_starts_with = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._iommu_status = None
        self._iommu_status_in = None
        self._iommu_status_not = None
        self._iommu_status_not_in = None
        self._ip_address = None
        self._ip_address_contains = None
        self._ip_address_ends_with = None
        self._ip_address_gt = None
        self._ip_address_gte = None
        self._ip_address_in = None
        self._ip_address_lt = None
        self._ip_address_lte = None
        self._ip_address_not = None
        self._ip_address_not_contains = None
        self._ip_address_not_ends_with = None
        self._ip_address_not_in = None
        self._ip_address_not_starts_with = None
        self._ip_address_starts_with = None
        self._is_sriov = None
        self._is_sriov_not = None
        self._labels_every = None
        self._labels_none = None
        self._labels_some = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._mac_address = None
        self._mac_address_contains = None
        self._mac_address_ends_with = None
        self._mac_address_gt = None
        self._mac_address_gte = None
        self._mac_address_in = None
        self._mac_address_lt = None
        self._mac_address_lte = None
        self._mac_address_not = None
        self._mac_address_not_contains = None
        self._mac_address_not_ends_with = None
        self._mac_address_not_in = None
        self._mac_address_not_starts_with = None
        self._mac_address_starts_with = None
        self._max_vf_num = None
        self._max_vf_num_gt = None
        self._max_vf_num_gte = None
        self._max_vf_num_in = None
        self._max_vf_num_lt = None
        self._max_vf_num_lte = None
        self._max_vf_num_not = None
        self._max_vf_num_not_in = None
        self._model = None
        self._model_contains = None
        self._model_ends_with = None
        self._model_gt = None
        self._model_gte = None
        self._model_in = None
        self._model_lt = None
        self._model_lte = None
        self._model_not = None
        self._model_not_contains = None
        self._model_not_ends_with = None
        self._model_not_in = None
        self._model_not_starts_with = None
        self._model_starts_with = None
        self._mtu = None
        self._mtu_gt = None
        self._mtu_gte = None
        self._mtu_in = None
        self._mtu_lt = None
        self._mtu_lte = None
        self._mtu_not = None
        self._mtu_not_in = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._nic_uuid = None
        self._nic_uuid_contains = None
        self._nic_uuid_ends_with = None
        self._nic_uuid_gt = None
        self._nic_uuid_gte = None
        self._nic_uuid_in = None
        self._nic_uuid_lt = None
        self._nic_uuid_lte = None
        self._nic_uuid_not = None
        self._nic_uuid_not_contains = None
        self._nic_uuid_not_ends_with = None
        self._nic_uuid_not_in = None
        self._nic_uuid_not_starts_with = None
        self._nic_uuid_starts_with = None
        self._physical = None
        self._physical_not = None
        self._rdma_enabled = None
        self._rdma_enabled_not = None
        self._running = None
        self._running_not = None
        self._speed = None
        self._speed_gt = None
        self._speed_gte = None
        self._speed_in = None
        self._speed_lt = None
        self._speed_lte = None
        self._speed_not = None
        self._speed_not_in = None
        self._subnet_mask = None
        self._subnet_mask_contains = None
        self._subnet_mask_ends_with = None
        self._subnet_mask_gt = None
        self._subnet_mask_gte = None
        self._subnet_mask_in = None
        self._subnet_mask_lt = None
        self._subnet_mask_lte = None
        self._subnet_mask_not = None
        self._subnet_mask_not_contains = None
        self._subnet_mask_not_ends_with = None
        self._subnet_mask_not_in = None
        self._subnet_mask_not_starts_with = None
        self._subnet_mask_starts_with = None
        self._total_vf_num = None
        self._total_vf_num_gt = None
        self._total_vf_num_gte = None
        self._total_vf_num_in = None
        self._total_vf_num_lt = None
        self._total_vf_num_lte = None
        self._total_vf_num_not = None
        self._total_vf_num_not_in = None
        self._type = None
        self._type_in = None
        self._type_not = None
        self._type_not_in = None
        self._up = None
        self._up_not = None
        self._used_vf_num = None
        self._used_vf_num_gt = None
        self._used_vf_num_gte = None
        self._used_vf_num_in = None
        self._used_vf_num_lt = None
        self._used_vf_num_lte = None
        self._used_vf_num_not = None
        self._used_vf_num_not_in = None
        self._user_usage = None
        self._user_usage_in = None
        self._user_usage_not = None
        self._user_usage_not_in = None
        self._vds = None
        self._vms_every = None
        self._vms_none = None
        self._vms_some = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.driver = kwargs.get("driver", None)
        self.driver_contains = kwargs.get("driver_contains", None)
        self.driver_ends_with = kwargs.get("driver_ends_with", None)
        self.driver_gt = kwargs.get("driver_gt", None)
        self.driver_gte = kwargs.get("driver_gte", None)
        self.driver_in = kwargs.get("driver_in", None)
        self.driver_lt = kwargs.get("driver_lt", None)
        self.driver_lte = kwargs.get("driver_lte", None)
        self.driver_not = kwargs.get("driver_not", None)
        self.driver_not_contains = kwargs.get("driver_not_contains", None)
        self.driver_not_ends_with = kwargs.get("driver_not_ends_with", None)
        self.driver_not_in = kwargs.get("driver_not_in", None)
        self.driver_not_starts_with = kwargs.get("driver_not_starts_with", None)
        self.driver_starts_with = kwargs.get("driver_starts_with", None)
        self.driver_state = kwargs.get("driver_state", None)
        self.driver_state_in = kwargs.get("driver_state_in", None)
        self.driver_state_not = kwargs.get("driver_state_not", None)
        self.driver_state_not_in = kwargs.get("driver_state_not_in", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.gateway_ip = kwargs.get("gateway_ip", None)
        self.gateway_ip_contains = kwargs.get("gateway_ip_contains", None)
        self.gateway_ip_ends_with = kwargs.get("gateway_ip_ends_with", None)
        self.gateway_ip_gt = kwargs.get("gateway_ip_gt", None)
        self.gateway_ip_gte = kwargs.get("gateway_ip_gte", None)
        self.gateway_ip_in = kwargs.get("gateway_ip_in", None)
        self.gateway_ip_lt = kwargs.get("gateway_ip_lt", None)
        self.gateway_ip_lte = kwargs.get("gateway_ip_lte", None)
        self.gateway_ip_not = kwargs.get("gateway_ip_not", None)
        self.gateway_ip_not_contains = kwargs.get("gateway_ip_not_contains", None)
        self.gateway_ip_not_ends_with = kwargs.get("gateway_ip_not_ends_with", None)
        self.gateway_ip_not_in = kwargs.get("gateway_ip_not_in", None)
        self.gateway_ip_not_starts_with = kwargs.get("gateway_ip_not_starts_with", None)
        self.gateway_ip_starts_with = kwargs.get("gateway_ip_starts_with", None)
        self.host = kwargs.get("host", None)
        self.ibdev = kwargs.get("ibdev", None)
        self.ibdev_contains = kwargs.get("ibdev_contains", None)
        self.ibdev_ends_with = kwargs.get("ibdev_ends_with", None)
        self.ibdev_gt = kwargs.get("ibdev_gt", None)
        self.ibdev_gte = kwargs.get("ibdev_gte", None)
        self.ibdev_in = kwargs.get("ibdev_in", None)
        self.ibdev_lt = kwargs.get("ibdev_lt", None)
        self.ibdev_lte = kwargs.get("ibdev_lte", None)
        self.ibdev_not = kwargs.get("ibdev_not", None)
        self.ibdev_not_contains = kwargs.get("ibdev_not_contains", None)
        self.ibdev_not_ends_with = kwargs.get("ibdev_not_ends_with", None)
        self.ibdev_not_in = kwargs.get("ibdev_not_in", None)
        self.ibdev_not_starts_with = kwargs.get("ibdev_not_starts_with", None)
        self.ibdev_starts_with = kwargs.get("ibdev_starts_with", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.iommu_status = kwargs.get("iommu_status", None)
        self.iommu_status_in = kwargs.get("iommu_status_in", None)
        self.iommu_status_not = kwargs.get("iommu_status_not", None)
        self.iommu_status_not_in = kwargs.get("iommu_status_not_in", None)
        self.ip_address = kwargs.get("ip_address", None)
        self.ip_address_contains = kwargs.get("ip_address_contains", None)
        self.ip_address_ends_with = kwargs.get("ip_address_ends_with", None)
        self.ip_address_gt = kwargs.get("ip_address_gt", None)
        self.ip_address_gte = kwargs.get("ip_address_gte", None)
        self.ip_address_in = kwargs.get("ip_address_in", None)
        self.ip_address_lt = kwargs.get("ip_address_lt", None)
        self.ip_address_lte = kwargs.get("ip_address_lte", None)
        self.ip_address_not = kwargs.get("ip_address_not", None)
        self.ip_address_not_contains = kwargs.get("ip_address_not_contains", None)
        self.ip_address_not_ends_with = kwargs.get("ip_address_not_ends_with", None)
        self.ip_address_not_in = kwargs.get("ip_address_not_in", None)
        self.ip_address_not_starts_with = kwargs.get("ip_address_not_starts_with", None)
        self.ip_address_starts_with = kwargs.get("ip_address_starts_with", None)
        self.is_sriov = kwargs.get("is_sriov", None)
        self.is_sriov_not = kwargs.get("is_sriov_not", None)
        self.labels_every = kwargs.get("labels_every", None)
        self.labels_none = kwargs.get("labels_none", None)
        self.labels_some = kwargs.get("labels_some", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.mac_address = kwargs.get("mac_address", None)
        self.mac_address_contains = kwargs.get("mac_address_contains", None)
        self.mac_address_ends_with = kwargs.get("mac_address_ends_with", None)
        self.mac_address_gt = kwargs.get("mac_address_gt", None)
        self.mac_address_gte = kwargs.get("mac_address_gte", None)
        self.mac_address_in = kwargs.get("mac_address_in", None)
        self.mac_address_lt = kwargs.get("mac_address_lt", None)
        self.mac_address_lte = kwargs.get("mac_address_lte", None)
        self.mac_address_not = kwargs.get("mac_address_not", None)
        self.mac_address_not_contains = kwargs.get("mac_address_not_contains", None)
        self.mac_address_not_ends_with = kwargs.get("mac_address_not_ends_with", None)
        self.mac_address_not_in = kwargs.get("mac_address_not_in", None)
        self.mac_address_not_starts_with = kwargs.get("mac_address_not_starts_with", None)
        self.mac_address_starts_with = kwargs.get("mac_address_starts_with", None)
        self.max_vf_num = kwargs.get("max_vf_num", None)
        self.max_vf_num_gt = kwargs.get("max_vf_num_gt", None)
        self.max_vf_num_gte = kwargs.get("max_vf_num_gte", None)
        self.max_vf_num_in = kwargs.get("max_vf_num_in", None)
        self.max_vf_num_lt = kwargs.get("max_vf_num_lt", None)
        self.max_vf_num_lte = kwargs.get("max_vf_num_lte", None)
        self.max_vf_num_not = kwargs.get("max_vf_num_not", None)
        self.max_vf_num_not_in = kwargs.get("max_vf_num_not_in", None)
        self.model = kwargs.get("model", None)
        self.model_contains = kwargs.get("model_contains", None)
        self.model_ends_with = kwargs.get("model_ends_with", None)
        self.model_gt = kwargs.get("model_gt", None)
        self.model_gte = kwargs.get("model_gte", None)
        self.model_in = kwargs.get("model_in", None)
        self.model_lt = kwargs.get("model_lt", None)
        self.model_lte = kwargs.get("model_lte", None)
        self.model_not = kwargs.get("model_not", None)
        self.model_not_contains = kwargs.get("model_not_contains", None)
        self.model_not_ends_with = kwargs.get("model_not_ends_with", None)
        self.model_not_in = kwargs.get("model_not_in", None)
        self.model_not_starts_with = kwargs.get("model_not_starts_with", None)
        self.model_starts_with = kwargs.get("model_starts_with", None)
        self.mtu = kwargs.get("mtu", None)
        self.mtu_gt = kwargs.get("mtu_gt", None)
        self.mtu_gte = kwargs.get("mtu_gte", None)
        self.mtu_in = kwargs.get("mtu_in", None)
        self.mtu_lt = kwargs.get("mtu_lt", None)
        self.mtu_lte = kwargs.get("mtu_lte", None)
        self.mtu_not = kwargs.get("mtu_not", None)
        self.mtu_not_in = kwargs.get("mtu_not_in", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.nic_uuid = kwargs.get("nic_uuid", None)
        self.nic_uuid_contains = kwargs.get("nic_uuid_contains", None)
        self.nic_uuid_ends_with = kwargs.get("nic_uuid_ends_with", None)
        self.nic_uuid_gt = kwargs.get("nic_uuid_gt", None)
        self.nic_uuid_gte = kwargs.get("nic_uuid_gte", None)
        self.nic_uuid_in = kwargs.get("nic_uuid_in", None)
        self.nic_uuid_lt = kwargs.get("nic_uuid_lt", None)
        self.nic_uuid_lte = kwargs.get("nic_uuid_lte", None)
        self.nic_uuid_not = kwargs.get("nic_uuid_not", None)
        self.nic_uuid_not_contains = kwargs.get("nic_uuid_not_contains", None)
        self.nic_uuid_not_ends_with = kwargs.get("nic_uuid_not_ends_with", None)
        self.nic_uuid_not_in = kwargs.get("nic_uuid_not_in", None)
        self.nic_uuid_not_starts_with = kwargs.get("nic_uuid_not_starts_with", None)
        self.nic_uuid_starts_with = kwargs.get("nic_uuid_starts_with", None)
        self.physical = kwargs.get("physical", None)
        self.physical_not = kwargs.get("physical_not", None)
        self.rdma_enabled = kwargs.get("rdma_enabled", None)
        self.rdma_enabled_not = kwargs.get("rdma_enabled_not", None)
        self.running = kwargs.get("running", None)
        self.running_not = kwargs.get("running_not", None)
        self.speed = kwargs.get("speed", None)
        self.speed_gt = kwargs.get("speed_gt", None)
        self.speed_gte = kwargs.get("speed_gte", None)
        self.speed_in = kwargs.get("speed_in", None)
        self.speed_lt = kwargs.get("speed_lt", None)
        self.speed_lte = kwargs.get("speed_lte", None)
        self.speed_not = kwargs.get("speed_not", None)
        self.speed_not_in = kwargs.get("speed_not_in", None)
        self.subnet_mask = kwargs.get("subnet_mask", None)
        self.subnet_mask_contains = kwargs.get("subnet_mask_contains", None)
        self.subnet_mask_ends_with = kwargs.get("subnet_mask_ends_with", None)
        self.subnet_mask_gt = kwargs.get("subnet_mask_gt", None)
        self.subnet_mask_gte = kwargs.get("subnet_mask_gte", None)
        self.subnet_mask_in = kwargs.get("subnet_mask_in", None)
        self.subnet_mask_lt = kwargs.get("subnet_mask_lt", None)
        self.subnet_mask_lte = kwargs.get("subnet_mask_lte", None)
        self.subnet_mask_not = kwargs.get("subnet_mask_not", None)
        self.subnet_mask_not_contains = kwargs.get("subnet_mask_not_contains", None)
        self.subnet_mask_not_ends_with = kwargs.get("subnet_mask_not_ends_with", None)
        self.subnet_mask_not_in = kwargs.get("subnet_mask_not_in", None)
        self.subnet_mask_not_starts_with = kwargs.get("subnet_mask_not_starts_with", None)
        self.subnet_mask_starts_with = kwargs.get("subnet_mask_starts_with", None)
        self.total_vf_num = kwargs.get("total_vf_num", None)
        self.total_vf_num_gt = kwargs.get("total_vf_num_gt", None)
        self.total_vf_num_gte = kwargs.get("total_vf_num_gte", None)
        self.total_vf_num_in = kwargs.get("total_vf_num_in", None)
        self.total_vf_num_lt = kwargs.get("total_vf_num_lt", None)
        self.total_vf_num_lte = kwargs.get("total_vf_num_lte", None)
        self.total_vf_num_not = kwargs.get("total_vf_num_not", None)
        self.total_vf_num_not_in = kwargs.get("total_vf_num_not_in", None)
        self.type = kwargs.get("type", None)
        self.type_in = kwargs.get("type_in", None)
        self.type_not = kwargs.get("type_not", None)
        self.type_not_in = kwargs.get("type_not_in", None)
        self.up = kwargs.get("up", None)
        self.up_not = kwargs.get("up_not", None)
        self.used_vf_num = kwargs.get("used_vf_num", None)
        self.used_vf_num_gt = kwargs.get("used_vf_num_gt", None)
        self.used_vf_num_gte = kwargs.get("used_vf_num_gte", None)
        self.used_vf_num_in = kwargs.get("used_vf_num_in", None)
        self.used_vf_num_lt = kwargs.get("used_vf_num_lt", None)
        self.used_vf_num_lte = kwargs.get("used_vf_num_lte", None)
        self.used_vf_num_not = kwargs.get("used_vf_num_not", None)
        self.used_vf_num_not_in = kwargs.get("used_vf_num_not_in", None)
        self.user_usage = kwargs.get("user_usage", None)
        self.user_usage_in = kwargs.get("user_usage_in", None)
        self.user_usage_not = kwargs.get("user_usage_not", None)
        self.user_usage_not_in = kwargs.get("user_usage_not_in", None)
        self.vds = kwargs.get("vds", None)
        self.vms_every = kwargs.get("vms_every", None)
        self.vms_none = kwargs.get("vms_none", None)
        self.vms_some = kwargs.get("vms_some", None)

    @property
    def _and(self):
        """Gets the _and of this NicWhereInput.  # noqa: E501


        :return: The _and of this NicWhereInput.  # noqa: E501
        :rtype: list[NicWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this NicWhereInput.


        :param _and: The _and of this NicWhereInput.  # noqa: E501
        :type _and: list[NicWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this NicWhereInput.  # noqa: E501


        :return: The _not of this NicWhereInput.  # noqa: E501
        :rtype: list[NicWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this NicWhereInput.


        :param _not: The _not of this NicWhereInput.  # noqa: E501
        :type _not: list[NicWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this NicWhereInput.  # noqa: E501


        :return: The _or of this NicWhereInput.  # noqa: E501
        :rtype: list[NicWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this NicWhereInput.


        :param _or: The _or of this NicWhereInput.  # noqa: E501
        :type _or: list[NicWhereInput]
        """

        self.__or = _or

    @property
    def driver(self):
        """Gets the driver of this NicWhereInput.  # noqa: E501


        :return: The driver of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver

    @driver.setter
    def driver(self, driver):
        """Sets the driver of this NicWhereInput.


        :param driver: The driver of this NicWhereInput.  # noqa: E501
        :type driver: str
        """

        self._driver = driver

    @property
    def driver_contains(self):
        """Gets the driver_contains of this NicWhereInput.  # noqa: E501


        :return: The driver_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_contains

    @driver_contains.setter
    def driver_contains(self, driver_contains):
        """Sets the driver_contains of this NicWhereInput.


        :param driver_contains: The driver_contains of this NicWhereInput.  # noqa: E501
        :type driver_contains: str
        """

        self._driver_contains = driver_contains

    @property
    def driver_ends_with(self):
        """Gets the driver_ends_with of this NicWhereInput.  # noqa: E501


        :return: The driver_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_ends_with

    @driver_ends_with.setter
    def driver_ends_with(self, driver_ends_with):
        """Sets the driver_ends_with of this NicWhereInput.


        :param driver_ends_with: The driver_ends_with of this NicWhereInput.  # noqa: E501
        :type driver_ends_with: str
        """

        self._driver_ends_with = driver_ends_with

    @property
    def driver_gt(self):
        """Gets the driver_gt of this NicWhereInput.  # noqa: E501


        :return: The driver_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_gt

    @driver_gt.setter
    def driver_gt(self, driver_gt):
        """Sets the driver_gt of this NicWhereInput.


        :param driver_gt: The driver_gt of this NicWhereInput.  # noqa: E501
        :type driver_gt: str
        """

        self._driver_gt = driver_gt

    @property
    def driver_gte(self):
        """Gets the driver_gte of this NicWhereInput.  # noqa: E501


        :return: The driver_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_gte

    @driver_gte.setter
    def driver_gte(self, driver_gte):
        """Sets the driver_gte of this NicWhereInput.


        :param driver_gte: The driver_gte of this NicWhereInput.  # noqa: E501
        :type driver_gte: str
        """

        self._driver_gte = driver_gte

    @property
    def driver_in(self):
        """Gets the driver_in of this NicWhereInput.  # noqa: E501


        :return: The driver_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._driver_in

    @driver_in.setter
    def driver_in(self, driver_in):
        """Sets the driver_in of this NicWhereInput.


        :param driver_in: The driver_in of this NicWhereInput.  # noqa: E501
        :type driver_in: list[str]
        """

        self._driver_in = driver_in

    @property
    def driver_lt(self):
        """Gets the driver_lt of this NicWhereInput.  # noqa: E501


        :return: The driver_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_lt

    @driver_lt.setter
    def driver_lt(self, driver_lt):
        """Sets the driver_lt of this NicWhereInput.


        :param driver_lt: The driver_lt of this NicWhereInput.  # noqa: E501
        :type driver_lt: str
        """

        self._driver_lt = driver_lt

    @property
    def driver_lte(self):
        """Gets the driver_lte of this NicWhereInput.  # noqa: E501


        :return: The driver_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_lte

    @driver_lte.setter
    def driver_lte(self, driver_lte):
        """Sets the driver_lte of this NicWhereInput.


        :param driver_lte: The driver_lte of this NicWhereInput.  # noqa: E501
        :type driver_lte: str
        """

        self._driver_lte = driver_lte

    @property
    def driver_not(self):
        """Gets the driver_not of this NicWhereInput.  # noqa: E501


        :return: The driver_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_not

    @driver_not.setter
    def driver_not(self, driver_not):
        """Sets the driver_not of this NicWhereInput.


        :param driver_not: The driver_not of this NicWhereInput.  # noqa: E501
        :type driver_not: str
        """

        self._driver_not = driver_not

    @property
    def driver_not_contains(self):
        """Gets the driver_not_contains of this NicWhereInput.  # noqa: E501


        :return: The driver_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_not_contains

    @driver_not_contains.setter
    def driver_not_contains(self, driver_not_contains):
        """Sets the driver_not_contains of this NicWhereInput.


        :param driver_not_contains: The driver_not_contains of this NicWhereInput.  # noqa: E501
        :type driver_not_contains: str
        """

        self._driver_not_contains = driver_not_contains

    @property
    def driver_not_ends_with(self):
        """Gets the driver_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The driver_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_not_ends_with

    @driver_not_ends_with.setter
    def driver_not_ends_with(self, driver_not_ends_with):
        """Sets the driver_not_ends_with of this NicWhereInput.


        :param driver_not_ends_with: The driver_not_ends_with of this NicWhereInput.  # noqa: E501
        :type driver_not_ends_with: str
        """

        self._driver_not_ends_with = driver_not_ends_with

    @property
    def driver_not_in(self):
        """Gets the driver_not_in of this NicWhereInput.  # noqa: E501


        :return: The driver_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._driver_not_in

    @driver_not_in.setter
    def driver_not_in(self, driver_not_in):
        """Sets the driver_not_in of this NicWhereInput.


        :param driver_not_in: The driver_not_in of this NicWhereInput.  # noqa: E501
        :type driver_not_in: list[str]
        """

        self._driver_not_in = driver_not_in

    @property
    def driver_not_starts_with(self):
        """Gets the driver_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The driver_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_not_starts_with

    @driver_not_starts_with.setter
    def driver_not_starts_with(self, driver_not_starts_with):
        """Sets the driver_not_starts_with of this NicWhereInput.


        :param driver_not_starts_with: The driver_not_starts_with of this NicWhereInput.  # noqa: E501
        :type driver_not_starts_with: str
        """

        self._driver_not_starts_with = driver_not_starts_with

    @property
    def driver_starts_with(self):
        """Gets the driver_starts_with of this NicWhereInput.  # noqa: E501


        :return: The driver_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._driver_starts_with

    @driver_starts_with.setter
    def driver_starts_with(self, driver_starts_with):
        """Sets the driver_starts_with of this NicWhereInput.


        :param driver_starts_with: The driver_starts_with of this NicWhereInput.  # noqa: E501
        :type driver_starts_with: str
        """

        self._driver_starts_with = driver_starts_with

    @property
    def driver_state(self):
        """Gets the driver_state of this NicWhereInput.  # noqa: E501


        :return: The driver_state of this NicWhereInput.  # noqa: E501
        :rtype: NicDriverState
        """
        return self._driver_state

    @driver_state.setter
    def driver_state(self, driver_state):
        """Sets the driver_state of this NicWhereInput.


        :param driver_state: The driver_state of this NicWhereInput.  # noqa: E501
        :type driver_state: NicDriverState
        """

        self._driver_state = driver_state

    @property
    def driver_state_in(self):
        """Gets the driver_state_in of this NicWhereInput.  # noqa: E501


        :return: The driver_state_in of this NicWhereInput.  # noqa: E501
        :rtype: list[NicDriverState]
        """
        return self._driver_state_in

    @driver_state_in.setter
    def driver_state_in(self, driver_state_in):
        """Sets the driver_state_in of this NicWhereInput.


        :param driver_state_in: The driver_state_in of this NicWhereInput.  # noqa: E501
        :type driver_state_in: list[NicDriverState]
        """

        self._driver_state_in = driver_state_in

    @property
    def driver_state_not(self):
        """Gets the driver_state_not of this NicWhereInput.  # noqa: E501


        :return: The driver_state_not of this NicWhereInput.  # noqa: E501
        :rtype: NicDriverState
        """
        return self._driver_state_not

    @driver_state_not.setter
    def driver_state_not(self, driver_state_not):
        """Sets the driver_state_not of this NicWhereInput.


        :param driver_state_not: The driver_state_not of this NicWhereInput.  # noqa: E501
        :type driver_state_not: NicDriverState
        """

        self._driver_state_not = driver_state_not

    @property
    def driver_state_not_in(self):
        """Gets the driver_state_not_in of this NicWhereInput.  # noqa: E501


        :return: The driver_state_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[NicDriverState]
        """
        return self._driver_state_not_in

    @driver_state_not_in.setter
    def driver_state_not_in(self, driver_state_not_in):
        """Sets the driver_state_not_in of this NicWhereInput.


        :param driver_state_not_in: The driver_state_not_in of this NicWhereInput.  # noqa: E501
        :type driver_state_not_in: list[NicDriverState]
        """

        self._driver_state_not_in = driver_state_not_in

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this NicWhereInput.  # noqa: E501


        :return: The entity_async_status of this NicWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this NicWhereInput.


        :param entity_async_status: The entity_async_status of this NicWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this NicWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this NicWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this NicWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this NicWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this NicWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this NicWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this NicWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this NicWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this NicWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this NicWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this NicWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def gateway_ip(self):
        """Gets the gateway_ip of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip

    @gateway_ip.setter
    def gateway_ip(self, gateway_ip):
        """Sets the gateway_ip of this NicWhereInput.


        :param gateway_ip: The gateway_ip of this NicWhereInput.  # noqa: E501
        :type gateway_ip: str
        """

        self._gateway_ip = gateway_ip

    @property
    def gateway_ip_contains(self):
        """Gets the gateway_ip_contains of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_contains

    @gateway_ip_contains.setter
    def gateway_ip_contains(self, gateway_ip_contains):
        """Sets the gateway_ip_contains of this NicWhereInput.


        :param gateway_ip_contains: The gateway_ip_contains of this NicWhereInput.  # noqa: E501
        :type gateway_ip_contains: str
        """

        self._gateway_ip_contains = gateway_ip_contains

    @property
    def gateway_ip_ends_with(self):
        """Gets the gateway_ip_ends_with of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_ends_with

    @gateway_ip_ends_with.setter
    def gateway_ip_ends_with(self, gateway_ip_ends_with):
        """Sets the gateway_ip_ends_with of this NicWhereInput.


        :param gateway_ip_ends_with: The gateway_ip_ends_with of this NicWhereInput.  # noqa: E501
        :type gateway_ip_ends_with: str
        """

        self._gateway_ip_ends_with = gateway_ip_ends_with

    @property
    def gateway_ip_gt(self):
        """Gets the gateway_ip_gt of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_gt

    @gateway_ip_gt.setter
    def gateway_ip_gt(self, gateway_ip_gt):
        """Sets the gateway_ip_gt of this NicWhereInput.


        :param gateway_ip_gt: The gateway_ip_gt of this NicWhereInput.  # noqa: E501
        :type gateway_ip_gt: str
        """

        self._gateway_ip_gt = gateway_ip_gt

    @property
    def gateway_ip_gte(self):
        """Gets the gateway_ip_gte of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_gte

    @gateway_ip_gte.setter
    def gateway_ip_gte(self, gateway_ip_gte):
        """Sets the gateway_ip_gte of this NicWhereInput.


        :param gateway_ip_gte: The gateway_ip_gte of this NicWhereInput.  # noqa: E501
        :type gateway_ip_gte: str
        """

        self._gateway_ip_gte = gateway_ip_gte

    @property
    def gateway_ip_in(self):
        """Gets the gateway_ip_in of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._gateway_ip_in

    @gateway_ip_in.setter
    def gateway_ip_in(self, gateway_ip_in):
        """Sets the gateway_ip_in of this NicWhereInput.


        :param gateway_ip_in: The gateway_ip_in of this NicWhereInput.  # noqa: E501
        :type gateway_ip_in: list[str]
        """

        self._gateway_ip_in = gateway_ip_in

    @property
    def gateway_ip_lt(self):
        """Gets the gateway_ip_lt of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_lt

    @gateway_ip_lt.setter
    def gateway_ip_lt(self, gateway_ip_lt):
        """Sets the gateway_ip_lt of this NicWhereInput.


        :param gateway_ip_lt: The gateway_ip_lt of this NicWhereInput.  # noqa: E501
        :type gateway_ip_lt: str
        """

        self._gateway_ip_lt = gateway_ip_lt

    @property
    def gateway_ip_lte(self):
        """Gets the gateway_ip_lte of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_lte

    @gateway_ip_lte.setter
    def gateway_ip_lte(self, gateway_ip_lte):
        """Sets the gateway_ip_lte of this NicWhereInput.


        :param gateway_ip_lte: The gateway_ip_lte of this NicWhereInput.  # noqa: E501
        :type gateway_ip_lte: str
        """

        self._gateway_ip_lte = gateway_ip_lte

    @property
    def gateway_ip_not(self):
        """Gets the gateway_ip_not of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_not

    @gateway_ip_not.setter
    def gateway_ip_not(self, gateway_ip_not):
        """Sets the gateway_ip_not of this NicWhereInput.


        :param gateway_ip_not: The gateway_ip_not of this NicWhereInput.  # noqa: E501
        :type gateway_ip_not: str
        """

        self._gateway_ip_not = gateway_ip_not

    @property
    def gateway_ip_not_contains(self):
        """Gets the gateway_ip_not_contains of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_not_contains

    @gateway_ip_not_contains.setter
    def gateway_ip_not_contains(self, gateway_ip_not_contains):
        """Sets the gateway_ip_not_contains of this NicWhereInput.


        :param gateway_ip_not_contains: The gateway_ip_not_contains of this NicWhereInput.  # noqa: E501
        :type gateway_ip_not_contains: str
        """

        self._gateway_ip_not_contains = gateway_ip_not_contains

    @property
    def gateway_ip_not_ends_with(self):
        """Gets the gateway_ip_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_not_ends_with

    @gateway_ip_not_ends_with.setter
    def gateway_ip_not_ends_with(self, gateway_ip_not_ends_with):
        """Sets the gateway_ip_not_ends_with of this NicWhereInput.


        :param gateway_ip_not_ends_with: The gateway_ip_not_ends_with of this NicWhereInput.  # noqa: E501
        :type gateway_ip_not_ends_with: str
        """

        self._gateway_ip_not_ends_with = gateway_ip_not_ends_with

    @property
    def gateway_ip_not_in(self):
        """Gets the gateway_ip_not_in of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._gateway_ip_not_in

    @gateway_ip_not_in.setter
    def gateway_ip_not_in(self, gateway_ip_not_in):
        """Sets the gateway_ip_not_in of this NicWhereInput.


        :param gateway_ip_not_in: The gateway_ip_not_in of this NicWhereInput.  # noqa: E501
        :type gateway_ip_not_in: list[str]
        """

        self._gateway_ip_not_in = gateway_ip_not_in

    @property
    def gateway_ip_not_starts_with(self):
        """Gets the gateway_ip_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_not_starts_with

    @gateway_ip_not_starts_with.setter
    def gateway_ip_not_starts_with(self, gateway_ip_not_starts_with):
        """Sets the gateway_ip_not_starts_with of this NicWhereInput.


        :param gateway_ip_not_starts_with: The gateway_ip_not_starts_with of this NicWhereInput.  # noqa: E501
        :type gateway_ip_not_starts_with: str
        """

        self._gateway_ip_not_starts_with = gateway_ip_not_starts_with

    @property
    def gateway_ip_starts_with(self):
        """Gets the gateway_ip_starts_with of this NicWhereInput.  # noqa: E501


        :return: The gateway_ip_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ip_starts_with

    @gateway_ip_starts_with.setter
    def gateway_ip_starts_with(self, gateway_ip_starts_with):
        """Sets the gateway_ip_starts_with of this NicWhereInput.


        :param gateway_ip_starts_with: The gateway_ip_starts_with of this NicWhereInput.  # noqa: E501
        :type gateway_ip_starts_with: str
        """

        self._gateway_ip_starts_with = gateway_ip_starts_with

    @property
    def host(self):
        """Gets the host of this NicWhereInput.  # noqa: E501


        :return: The host of this NicWhereInput.  # noqa: E501
        :rtype: HostWhereInput
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this NicWhereInput.


        :param host: The host of this NicWhereInput.  # noqa: E501
        :type host: HostWhereInput
        """

        self._host = host

    @property
    def ibdev(self):
        """Gets the ibdev of this NicWhereInput.  # noqa: E501


        :return: The ibdev of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev

    @ibdev.setter
    def ibdev(self, ibdev):
        """Sets the ibdev of this NicWhereInput.


        :param ibdev: The ibdev of this NicWhereInput.  # noqa: E501
        :type ibdev: str
        """

        self._ibdev = ibdev

    @property
    def ibdev_contains(self):
        """Gets the ibdev_contains of this NicWhereInput.  # noqa: E501


        :return: The ibdev_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_contains

    @ibdev_contains.setter
    def ibdev_contains(self, ibdev_contains):
        """Sets the ibdev_contains of this NicWhereInput.


        :param ibdev_contains: The ibdev_contains of this NicWhereInput.  # noqa: E501
        :type ibdev_contains: str
        """

        self._ibdev_contains = ibdev_contains

    @property
    def ibdev_ends_with(self):
        """Gets the ibdev_ends_with of this NicWhereInput.  # noqa: E501


        :return: The ibdev_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_ends_with

    @ibdev_ends_with.setter
    def ibdev_ends_with(self, ibdev_ends_with):
        """Sets the ibdev_ends_with of this NicWhereInput.


        :param ibdev_ends_with: The ibdev_ends_with of this NicWhereInput.  # noqa: E501
        :type ibdev_ends_with: str
        """

        self._ibdev_ends_with = ibdev_ends_with

    @property
    def ibdev_gt(self):
        """Gets the ibdev_gt of this NicWhereInput.  # noqa: E501


        :return: The ibdev_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_gt

    @ibdev_gt.setter
    def ibdev_gt(self, ibdev_gt):
        """Sets the ibdev_gt of this NicWhereInput.


        :param ibdev_gt: The ibdev_gt of this NicWhereInput.  # noqa: E501
        :type ibdev_gt: str
        """

        self._ibdev_gt = ibdev_gt

    @property
    def ibdev_gte(self):
        """Gets the ibdev_gte of this NicWhereInput.  # noqa: E501


        :return: The ibdev_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_gte

    @ibdev_gte.setter
    def ibdev_gte(self, ibdev_gte):
        """Sets the ibdev_gte of this NicWhereInput.


        :param ibdev_gte: The ibdev_gte of this NicWhereInput.  # noqa: E501
        :type ibdev_gte: str
        """

        self._ibdev_gte = ibdev_gte

    @property
    def ibdev_in(self):
        """Gets the ibdev_in of this NicWhereInput.  # noqa: E501


        :return: The ibdev_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ibdev_in

    @ibdev_in.setter
    def ibdev_in(self, ibdev_in):
        """Sets the ibdev_in of this NicWhereInput.


        :param ibdev_in: The ibdev_in of this NicWhereInput.  # noqa: E501
        :type ibdev_in: list[str]
        """

        self._ibdev_in = ibdev_in

    @property
    def ibdev_lt(self):
        """Gets the ibdev_lt of this NicWhereInput.  # noqa: E501


        :return: The ibdev_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_lt

    @ibdev_lt.setter
    def ibdev_lt(self, ibdev_lt):
        """Sets the ibdev_lt of this NicWhereInput.


        :param ibdev_lt: The ibdev_lt of this NicWhereInput.  # noqa: E501
        :type ibdev_lt: str
        """

        self._ibdev_lt = ibdev_lt

    @property
    def ibdev_lte(self):
        """Gets the ibdev_lte of this NicWhereInput.  # noqa: E501


        :return: The ibdev_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_lte

    @ibdev_lte.setter
    def ibdev_lte(self, ibdev_lte):
        """Sets the ibdev_lte of this NicWhereInput.


        :param ibdev_lte: The ibdev_lte of this NicWhereInput.  # noqa: E501
        :type ibdev_lte: str
        """

        self._ibdev_lte = ibdev_lte

    @property
    def ibdev_not(self):
        """Gets the ibdev_not of this NicWhereInput.  # noqa: E501


        :return: The ibdev_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_not

    @ibdev_not.setter
    def ibdev_not(self, ibdev_not):
        """Sets the ibdev_not of this NicWhereInput.


        :param ibdev_not: The ibdev_not of this NicWhereInput.  # noqa: E501
        :type ibdev_not: str
        """

        self._ibdev_not = ibdev_not

    @property
    def ibdev_not_contains(self):
        """Gets the ibdev_not_contains of this NicWhereInput.  # noqa: E501


        :return: The ibdev_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_not_contains

    @ibdev_not_contains.setter
    def ibdev_not_contains(self, ibdev_not_contains):
        """Sets the ibdev_not_contains of this NicWhereInput.


        :param ibdev_not_contains: The ibdev_not_contains of this NicWhereInput.  # noqa: E501
        :type ibdev_not_contains: str
        """

        self._ibdev_not_contains = ibdev_not_contains

    @property
    def ibdev_not_ends_with(self):
        """Gets the ibdev_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The ibdev_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_not_ends_with

    @ibdev_not_ends_with.setter
    def ibdev_not_ends_with(self, ibdev_not_ends_with):
        """Sets the ibdev_not_ends_with of this NicWhereInput.


        :param ibdev_not_ends_with: The ibdev_not_ends_with of this NicWhereInput.  # noqa: E501
        :type ibdev_not_ends_with: str
        """

        self._ibdev_not_ends_with = ibdev_not_ends_with

    @property
    def ibdev_not_in(self):
        """Gets the ibdev_not_in of this NicWhereInput.  # noqa: E501


        :return: The ibdev_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ibdev_not_in

    @ibdev_not_in.setter
    def ibdev_not_in(self, ibdev_not_in):
        """Sets the ibdev_not_in of this NicWhereInput.


        :param ibdev_not_in: The ibdev_not_in of this NicWhereInput.  # noqa: E501
        :type ibdev_not_in: list[str]
        """

        self._ibdev_not_in = ibdev_not_in

    @property
    def ibdev_not_starts_with(self):
        """Gets the ibdev_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The ibdev_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_not_starts_with

    @ibdev_not_starts_with.setter
    def ibdev_not_starts_with(self, ibdev_not_starts_with):
        """Sets the ibdev_not_starts_with of this NicWhereInput.


        :param ibdev_not_starts_with: The ibdev_not_starts_with of this NicWhereInput.  # noqa: E501
        :type ibdev_not_starts_with: str
        """

        self._ibdev_not_starts_with = ibdev_not_starts_with

    @property
    def ibdev_starts_with(self):
        """Gets the ibdev_starts_with of this NicWhereInput.  # noqa: E501


        :return: The ibdev_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ibdev_starts_with

    @ibdev_starts_with.setter
    def ibdev_starts_with(self, ibdev_starts_with):
        """Sets the ibdev_starts_with of this NicWhereInput.


        :param ibdev_starts_with: The ibdev_starts_with of this NicWhereInput.  # noqa: E501
        :type ibdev_starts_with: str
        """

        self._ibdev_starts_with = ibdev_starts_with

    @property
    def id(self):
        """Gets the id of this NicWhereInput.  # noqa: E501


        :return: The id of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NicWhereInput.


        :param id: The id of this NicWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this NicWhereInput.  # noqa: E501


        :return: The id_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this NicWhereInput.


        :param id_contains: The id_contains of this NicWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this NicWhereInput.  # noqa: E501


        :return: The id_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this NicWhereInput.


        :param id_ends_with: The id_ends_with of this NicWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this NicWhereInput.  # noqa: E501


        :return: The id_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this NicWhereInput.


        :param id_gt: The id_gt of this NicWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this NicWhereInput.  # noqa: E501


        :return: The id_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this NicWhereInput.


        :param id_gte: The id_gte of this NicWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this NicWhereInput.  # noqa: E501


        :return: The id_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this NicWhereInput.


        :param id_in: The id_in of this NicWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this NicWhereInput.  # noqa: E501


        :return: The id_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this NicWhereInput.


        :param id_lt: The id_lt of this NicWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this NicWhereInput.  # noqa: E501


        :return: The id_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this NicWhereInput.


        :param id_lte: The id_lte of this NicWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this NicWhereInput.  # noqa: E501


        :return: The id_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this NicWhereInput.


        :param id_not: The id_not of this NicWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this NicWhereInput.  # noqa: E501


        :return: The id_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this NicWhereInput.


        :param id_not_contains: The id_not_contains of this NicWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this NicWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this NicWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this NicWhereInput.  # noqa: E501


        :return: The id_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this NicWhereInput.


        :param id_not_in: The id_not_in of this NicWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this NicWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this NicWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this NicWhereInput.  # noqa: E501


        :return: The id_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this NicWhereInput.


        :param id_starts_with: The id_starts_with of this NicWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def iommu_status(self):
        """Gets the iommu_status of this NicWhereInput.  # noqa: E501


        :return: The iommu_status of this NicWhereInput.  # noqa: E501
        :rtype: IommuStatus
        """
        return self._iommu_status

    @iommu_status.setter
    def iommu_status(self, iommu_status):
        """Sets the iommu_status of this NicWhereInput.


        :param iommu_status: The iommu_status of this NicWhereInput.  # noqa: E501
        :type iommu_status: IommuStatus
        """

        self._iommu_status = iommu_status

    @property
    def iommu_status_in(self):
        """Gets the iommu_status_in of this NicWhereInput.  # noqa: E501


        :return: The iommu_status_in of this NicWhereInput.  # noqa: E501
        :rtype: list[IommuStatus]
        """
        return self._iommu_status_in

    @iommu_status_in.setter
    def iommu_status_in(self, iommu_status_in):
        """Sets the iommu_status_in of this NicWhereInput.


        :param iommu_status_in: The iommu_status_in of this NicWhereInput.  # noqa: E501
        :type iommu_status_in: list[IommuStatus]
        """

        self._iommu_status_in = iommu_status_in

    @property
    def iommu_status_not(self):
        """Gets the iommu_status_not of this NicWhereInput.  # noqa: E501


        :return: The iommu_status_not of this NicWhereInput.  # noqa: E501
        :rtype: IommuStatus
        """
        return self._iommu_status_not

    @iommu_status_not.setter
    def iommu_status_not(self, iommu_status_not):
        """Sets the iommu_status_not of this NicWhereInput.


        :param iommu_status_not: The iommu_status_not of this NicWhereInput.  # noqa: E501
        :type iommu_status_not: IommuStatus
        """

        self._iommu_status_not = iommu_status_not

    @property
    def iommu_status_not_in(self):
        """Gets the iommu_status_not_in of this NicWhereInput.  # noqa: E501


        :return: The iommu_status_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[IommuStatus]
        """
        return self._iommu_status_not_in

    @iommu_status_not_in.setter
    def iommu_status_not_in(self, iommu_status_not_in):
        """Sets the iommu_status_not_in of this NicWhereInput.


        :param iommu_status_not_in: The iommu_status_not_in of this NicWhereInput.  # noqa: E501
        :type iommu_status_not_in: list[IommuStatus]
        """

        self._iommu_status_not_in = iommu_status_not_in

    @property
    def ip_address(self):
        """Gets the ip_address of this NicWhereInput.  # noqa: E501


        :return: The ip_address of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this NicWhereInput.


        :param ip_address: The ip_address of this NicWhereInput.  # noqa: E501
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def ip_address_contains(self):
        """Gets the ip_address_contains of this NicWhereInput.  # noqa: E501


        :return: The ip_address_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_contains

    @ip_address_contains.setter
    def ip_address_contains(self, ip_address_contains):
        """Sets the ip_address_contains of this NicWhereInput.


        :param ip_address_contains: The ip_address_contains of this NicWhereInput.  # noqa: E501
        :type ip_address_contains: str
        """

        self._ip_address_contains = ip_address_contains

    @property
    def ip_address_ends_with(self):
        """Gets the ip_address_ends_with of this NicWhereInput.  # noqa: E501


        :return: The ip_address_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_ends_with

    @ip_address_ends_with.setter
    def ip_address_ends_with(self, ip_address_ends_with):
        """Sets the ip_address_ends_with of this NicWhereInput.


        :param ip_address_ends_with: The ip_address_ends_with of this NicWhereInput.  # noqa: E501
        :type ip_address_ends_with: str
        """

        self._ip_address_ends_with = ip_address_ends_with

    @property
    def ip_address_gt(self):
        """Gets the ip_address_gt of this NicWhereInput.  # noqa: E501


        :return: The ip_address_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_gt

    @ip_address_gt.setter
    def ip_address_gt(self, ip_address_gt):
        """Sets the ip_address_gt of this NicWhereInput.


        :param ip_address_gt: The ip_address_gt of this NicWhereInput.  # noqa: E501
        :type ip_address_gt: str
        """

        self._ip_address_gt = ip_address_gt

    @property
    def ip_address_gte(self):
        """Gets the ip_address_gte of this NicWhereInput.  # noqa: E501


        :return: The ip_address_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_gte

    @ip_address_gte.setter
    def ip_address_gte(self, ip_address_gte):
        """Sets the ip_address_gte of this NicWhereInput.


        :param ip_address_gte: The ip_address_gte of this NicWhereInput.  # noqa: E501
        :type ip_address_gte: str
        """

        self._ip_address_gte = ip_address_gte

    @property
    def ip_address_in(self):
        """Gets the ip_address_in of this NicWhereInput.  # noqa: E501


        :return: The ip_address_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_address_in

    @ip_address_in.setter
    def ip_address_in(self, ip_address_in):
        """Sets the ip_address_in of this NicWhereInput.


        :param ip_address_in: The ip_address_in of this NicWhereInput.  # noqa: E501
        :type ip_address_in: list[str]
        """

        self._ip_address_in = ip_address_in

    @property
    def ip_address_lt(self):
        """Gets the ip_address_lt of this NicWhereInput.  # noqa: E501


        :return: The ip_address_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_lt

    @ip_address_lt.setter
    def ip_address_lt(self, ip_address_lt):
        """Sets the ip_address_lt of this NicWhereInput.


        :param ip_address_lt: The ip_address_lt of this NicWhereInput.  # noqa: E501
        :type ip_address_lt: str
        """

        self._ip_address_lt = ip_address_lt

    @property
    def ip_address_lte(self):
        """Gets the ip_address_lte of this NicWhereInput.  # noqa: E501


        :return: The ip_address_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_lte

    @ip_address_lte.setter
    def ip_address_lte(self, ip_address_lte):
        """Sets the ip_address_lte of this NicWhereInput.


        :param ip_address_lte: The ip_address_lte of this NicWhereInput.  # noqa: E501
        :type ip_address_lte: str
        """

        self._ip_address_lte = ip_address_lte

    @property
    def ip_address_not(self):
        """Gets the ip_address_not of this NicWhereInput.  # noqa: E501


        :return: The ip_address_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not

    @ip_address_not.setter
    def ip_address_not(self, ip_address_not):
        """Sets the ip_address_not of this NicWhereInput.


        :param ip_address_not: The ip_address_not of this NicWhereInput.  # noqa: E501
        :type ip_address_not: str
        """

        self._ip_address_not = ip_address_not

    @property
    def ip_address_not_contains(self):
        """Gets the ip_address_not_contains of this NicWhereInput.  # noqa: E501


        :return: The ip_address_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_contains

    @ip_address_not_contains.setter
    def ip_address_not_contains(self, ip_address_not_contains):
        """Sets the ip_address_not_contains of this NicWhereInput.


        :param ip_address_not_contains: The ip_address_not_contains of this NicWhereInput.  # noqa: E501
        :type ip_address_not_contains: str
        """

        self._ip_address_not_contains = ip_address_not_contains

    @property
    def ip_address_not_ends_with(self):
        """Gets the ip_address_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The ip_address_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_ends_with

    @ip_address_not_ends_with.setter
    def ip_address_not_ends_with(self, ip_address_not_ends_with):
        """Sets the ip_address_not_ends_with of this NicWhereInput.


        :param ip_address_not_ends_with: The ip_address_not_ends_with of this NicWhereInput.  # noqa: E501
        :type ip_address_not_ends_with: str
        """

        self._ip_address_not_ends_with = ip_address_not_ends_with

    @property
    def ip_address_not_in(self):
        """Gets the ip_address_not_in of this NicWhereInput.  # noqa: E501


        :return: The ip_address_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_address_not_in

    @ip_address_not_in.setter
    def ip_address_not_in(self, ip_address_not_in):
        """Sets the ip_address_not_in of this NicWhereInput.


        :param ip_address_not_in: The ip_address_not_in of this NicWhereInput.  # noqa: E501
        :type ip_address_not_in: list[str]
        """

        self._ip_address_not_in = ip_address_not_in

    @property
    def ip_address_not_starts_with(self):
        """Gets the ip_address_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The ip_address_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_starts_with

    @ip_address_not_starts_with.setter
    def ip_address_not_starts_with(self, ip_address_not_starts_with):
        """Sets the ip_address_not_starts_with of this NicWhereInput.


        :param ip_address_not_starts_with: The ip_address_not_starts_with of this NicWhereInput.  # noqa: E501
        :type ip_address_not_starts_with: str
        """

        self._ip_address_not_starts_with = ip_address_not_starts_with

    @property
    def ip_address_starts_with(self):
        """Gets the ip_address_starts_with of this NicWhereInput.  # noqa: E501


        :return: The ip_address_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_starts_with

    @ip_address_starts_with.setter
    def ip_address_starts_with(self, ip_address_starts_with):
        """Sets the ip_address_starts_with of this NicWhereInput.


        :param ip_address_starts_with: The ip_address_starts_with of this NicWhereInput.  # noqa: E501
        :type ip_address_starts_with: str
        """

        self._ip_address_starts_with = ip_address_starts_with

    @property
    def is_sriov(self):
        """Gets the is_sriov of this NicWhereInput.  # noqa: E501


        :return: The is_sriov of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._is_sriov

    @is_sriov.setter
    def is_sriov(self, is_sriov):
        """Sets the is_sriov of this NicWhereInput.


        :param is_sriov: The is_sriov of this NicWhereInput.  # noqa: E501
        :type is_sriov: bool
        """

        self._is_sriov = is_sriov

    @property
    def is_sriov_not(self):
        """Gets the is_sriov_not of this NicWhereInput.  # noqa: E501


        :return: The is_sriov_not of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._is_sriov_not

    @is_sriov_not.setter
    def is_sriov_not(self, is_sriov_not):
        """Sets the is_sriov_not of this NicWhereInput.


        :param is_sriov_not: The is_sriov_not of this NicWhereInput.  # noqa: E501
        :type is_sriov_not: bool
        """

        self._is_sriov_not = is_sriov_not

    @property
    def labels_every(self):
        """Gets the labels_every of this NicWhereInput.  # noqa: E501


        :return: The labels_every of this NicWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_every

    @labels_every.setter
    def labels_every(self, labels_every):
        """Sets the labels_every of this NicWhereInput.


        :param labels_every: The labels_every of this NicWhereInput.  # noqa: E501
        :type labels_every: LabelWhereInput
        """

        self._labels_every = labels_every

    @property
    def labels_none(self):
        """Gets the labels_none of this NicWhereInput.  # noqa: E501


        :return: The labels_none of this NicWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_none

    @labels_none.setter
    def labels_none(self, labels_none):
        """Sets the labels_none of this NicWhereInput.


        :param labels_none: The labels_none of this NicWhereInput.  # noqa: E501
        :type labels_none: LabelWhereInput
        """

        self._labels_none = labels_none

    @property
    def labels_some(self):
        """Gets the labels_some of this NicWhereInput.  # noqa: E501


        :return: The labels_some of this NicWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_some

    @labels_some.setter
    def labels_some(self, labels_some):
        """Sets the labels_some of this NicWhereInput.


        :param labels_some: The labels_some of this NicWhereInput.  # noqa: E501
        :type labels_some: LabelWhereInput
        """

        self._labels_some = labels_some

    @property
    def local_id(self):
        """Gets the local_id of this NicWhereInput.  # noqa: E501


        :return: The local_id of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this NicWhereInput.


        :param local_id: The local_id of this NicWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this NicWhereInput.  # noqa: E501


        :return: The local_id_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this NicWhereInput.


        :param local_id_contains: The local_id_contains of this NicWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this NicWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this NicWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this NicWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this NicWhereInput.  # noqa: E501


        :return: The local_id_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this NicWhereInput.


        :param local_id_gt: The local_id_gt of this NicWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this NicWhereInput.  # noqa: E501


        :return: The local_id_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this NicWhereInput.


        :param local_id_gte: The local_id_gte of this NicWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this NicWhereInput.  # noqa: E501


        :return: The local_id_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this NicWhereInput.


        :param local_id_in: The local_id_in of this NicWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this NicWhereInput.  # noqa: E501


        :return: The local_id_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this NicWhereInput.


        :param local_id_lt: The local_id_lt of this NicWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this NicWhereInput.  # noqa: E501


        :return: The local_id_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this NicWhereInput.


        :param local_id_lte: The local_id_lte of this NicWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this NicWhereInput.  # noqa: E501


        :return: The local_id_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this NicWhereInput.


        :param local_id_not: The local_id_not of this NicWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this NicWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this NicWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this NicWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this NicWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this NicWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this NicWhereInput.  # noqa: E501


        :return: The local_id_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this NicWhereInput.


        :param local_id_not_in: The local_id_not_in of this NicWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this NicWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this NicWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this NicWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this NicWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this NicWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def mac_address(self):
        """Gets the mac_address of this NicWhereInput.  # noqa: E501


        :return: The mac_address of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this NicWhereInput.


        :param mac_address: The mac_address of this NicWhereInput.  # noqa: E501
        :type mac_address: str
        """

        self._mac_address = mac_address

    @property
    def mac_address_contains(self):
        """Gets the mac_address_contains of this NicWhereInput.  # noqa: E501


        :return: The mac_address_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_contains

    @mac_address_contains.setter
    def mac_address_contains(self, mac_address_contains):
        """Sets the mac_address_contains of this NicWhereInput.


        :param mac_address_contains: The mac_address_contains of this NicWhereInput.  # noqa: E501
        :type mac_address_contains: str
        """

        self._mac_address_contains = mac_address_contains

    @property
    def mac_address_ends_with(self):
        """Gets the mac_address_ends_with of this NicWhereInput.  # noqa: E501


        :return: The mac_address_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_ends_with

    @mac_address_ends_with.setter
    def mac_address_ends_with(self, mac_address_ends_with):
        """Sets the mac_address_ends_with of this NicWhereInput.


        :param mac_address_ends_with: The mac_address_ends_with of this NicWhereInput.  # noqa: E501
        :type mac_address_ends_with: str
        """

        self._mac_address_ends_with = mac_address_ends_with

    @property
    def mac_address_gt(self):
        """Gets the mac_address_gt of this NicWhereInput.  # noqa: E501


        :return: The mac_address_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_gt

    @mac_address_gt.setter
    def mac_address_gt(self, mac_address_gt):
        """Sets the mac_address_gt of this NicWhereInput.


        :param mac_address_gt: The mac_address_gt of this NicWhereInput.  # noqa: E501
        :type mac_address_gt: str
        """

        self._mac_address_gt = mac_address_gt

    @property
    def mac_address_gte(self):
        """Gets the mac_address_gte of this NicWhereInput.  # noqa: E501


        :return: The mac_address_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_gte

    @mac_address_gte.setter
    def mac_address_gte(self, mac_address_gte):
        """Sets the mac_address_gte of this NicWhereInput.


        :param mac_address_gte: The mac_address_gte of this NicWhereInput.  # noqa: E501
        :type mac_address_gte: str
        """

        self._mac_address_gte = mac_address_gte

    @property
    def mac_address_in(self):
        """Gets the mac_address_in of this NicWhereInput.  # noqa: E501


        :return: The mac_address_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._mac_address_in

    @mac_address_in.setter
    def mac_address_in(self, mac_address_in):
        """Sets the mac_address_in of this NicWhereInput.


        :param mac_address_in: The mac_address_in of this NicWhereInput.  # noqa: E501
        :type mac_address_in: list[str]
        """

        self._mac_address_in = mac_address_in

    @property
    def mac_address_lt(self):
        """Gets the mac_address_lt of this NicWhereInput.  # noqa: E501


        :return: The mac_address_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_lt

    @mac_address_lt.setter
    def mac_address_lt(self, mac_address_lt):
        """Sets the mac_address_lt of this NicWhereInput.


        :param mac_address_lt: The mac_address_lt of this NicWhereInput.  # noqa: E501
        :type mac_address_lt: str
        """

        self._mac_address_lt = mac_address_lt

    @property
    def mac_address_lte(self):
        """Gets the mac_address_lte of this NicWhereInput.  # noqa: E501


        :return: The mac_address_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_lte

    @mac_address_lte.setter
    def mac_address_lte(self, mac_address_lte):
        """Sets the mac_address_lte of this NicWhereInput.


        :param mac_address_lte: The mac_address_lte of this NicWhereInput.  # noqa: E501
        :type mac_address_lte: str
        """

        self._mac_address_lte = mac_address_lte

    @property
    def mac_address_not(self):
        """Gets the mac_address_not of this NicWhereInput.  # noqa: E501


        :return: The mac_address_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not

    @mac_address_not.setter
    def mac_address_not(self, mac_address_not):
        """Sets the mac_address_not of this NicWhereInput.


        :param mac_address_not: The mac_address_not of this NicWhereInput.  # noqa: E501
        :type mac_address_not: str
        """

        self._mac_address_not = mac_address_not

    @property
    def mac_address_not_contains(self):
        """Gets the mac_address_not_contains of this NicWhereInput.  # noqa: E501


        :return: The mac_address_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not_contains

    @mac_address_not_contains.setter
    def mac_address_not_contains(self, mac_address_not_contains):
        """Sets the mac_address_not_contains of this NicWhereInput.


        :param mac_address_not_contains: The mac_address_not_contains of this NicWhereInput.  # noqa: E501
        :type mac_address_not_contains: str
        """

        self._mac_address_not_contains = mac_address_not_contains

    @property
    def mac_address_not_ends_with(self):
        """Gets the mac_address_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The mac_address_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not_ends_with

    @mac_address_not_ends_with.setter
    def mac_address_not_ends_with(self, mac_address_not_ends_with):
        """Sets the mac_address_not_ends_with of this NicWhereInput.


        :param mac_address_not_ends_with: The mac_address_not_ends_with of this NicWhereInput.  # noqa: E501
        :type mac_address_not_ends_with: str
        """

        self._mac_address_not_ends_with = mac_address_not_ends_with

    @property
    def mac_address_not_in(self):
        """Gets the mac_address_not_in of this NicWhereInput.  # noqa: E501


        :return: The mac_address_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._mac_address_not_in

    @mac_address_not_in.setter
    def mac_address_not_in(self, mac_address_not_in):
        """Sets the mac_address_not_in of this NicWhereInput.


        :param mac_address_not_in: The mac_address_not_in of this NicWhereInput.  # noqa: E501
        :type mac_address_not_in: list[str]
        """

        self._mac_address_not_in = mac_address_not_in

    @property
    def mac_address_not_starts_with(self):
        """Gets the mac_address_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The mac_address_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not_starts_with

    @mac_address_not_starts_with.setter
    def mac_address_not_starts_with(self, mac_address_not_starts_with):
        """Sets the mac_address_not_starts_with of this NicWhereInput.


        :param mac_address_not_starts_with: The mac_address_not_starts_with of this NicWhereInput.  # noqa: E501
        :type mac_address_not_starts_with: str
        """

        self._mac_address_not_starts_with = mac_address_not_starts_with

    @property
    def mac_address_starts_with(self):
        """Gets the mac_address_starts_with of this NicWhereInput.  # noqa: E501


        :return: The mac_address_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_starts_with

    @mac_address_starts_with.setter
    def mac_address_starts_with(self, mac_address_starts_with):
        """Sets the mac_address_starts_with of this NicWhereInput.


        :param mac_address_starts_with: The mac_address_starts_with of this NicWhereInput.  # noqa: E501
        :type mac_address_starts_with: str
        """

        self._mac_address_starts_with = mac_address_starts_with

    @property
    def max_vf_num(self):
        """Gets the max_vf_num of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_vf_num

    @max_vf_num.setter
    def max_vf_num(self, max_vf_num):
        """Sets the max_vf_num of this NicWhereInput.


        :param max_vf_num: The max_vf_num of this NicWhereInput.  # noqa: E501
        :type max_vf_num: int
        """

        self._max_vf_num = max_vf_num

    @property
    def max_vf_num_gt(self):
        """Gets the max_vf_num_gt of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num_gt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_vf_num_gt

    @max_vf_num_gt.setter
    def max_vf_num_gt(self, max_vf_num_gt):
        """Sets the max_vf_num_gt of this NicWhereInput.


        :param max_vf_num_gt: The max_vf_num_gt of this NicWhereInput.  # noqa: E501
        :type max_vf_num_gt: int
        """

        self._max_vf_num_gt = max_vf_num_gt

    @property
    def max_vf_num_gte(self):
        """Gets the max_vf_num_gte of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num_gte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_vf_num_gte

    @max_vf_num_gte.setter
    def max_vf_num_gte(self, max_vf_num_gte):
        """Sets the max_vf_num_gte of this NicWhereInput.


        :param max_vf_num_gte: The max_vf_num_gte of this NicWhereInput.  # noqa: E501
        :type max_vf_num_gte: int
        """

        self._max_vf_num_gte = max_vf_num_gte

    @property
    def max_vf_num_in(self):
        """Gets the max_vf_num_in of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_vf_num_in

    @max_vf_num_in.setter
    def max_vf_num_in(self, max_vf_num_in):
        """Sets the max_vf_num_in of this NicWhereInput.


        :param max_vf_num_in: The max_vf_num_in of this NicWhereInput.  # noqa: E501
        :type max_vf_num_in: list[int]
        """

        self._max_vf_num_in = max_vf_num_in

    @property
    def max_vf_num_lt(self):
        """Gets the max_vf_num_lt of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num_lt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_vf_num_lt

    @max_vf_num_lt.setter
    def max_vf_num_lt(self, max_vf_num_lt):
        """Sets the max_vf_num_lt of this NicWhereInput.


        :param max_vf_num_lt: The max_vf_num_lt of this NicWhereInput.  # noqa: E501
        :type max_vf_num_lt: int
        """

        self._max_vf_num_lt = max_vf_num_lt

    @property
    def max_vf_num_lte(self):
        """Gets the max_vf_num_lte of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num_lte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_vf_num_lte

    @max_vf_num_lte.setter
    def max_vf_num_lte(self, max_vf_num_lte):
        """Sets the max_vf_num_lte of this NicWhereInput.


        :param max_vf_num_lte: The max_vf_num_lte of this NicWhereInput.  # noqa: E501
        :type max_vf_num_lte: int
        """

        self._max_vf_num_lte = max_vf_num_lte

    @property
    def max_vf_num_not(self):
        """Gets the max_vf_num_not of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num_not of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_vf_num_not

    @max_vf_num_not.setter
    def max_vf_num_not(self, max_vf_num_not):
        """Sets the max_vf_num_not of this NicWhereInput.


        :param max_vf_num_not: The max_vf_num_not of this NicWhereInput.  # noqa: E501
        :type max_vf_num_not: int
        """

        self._max_vf_num_not = max_vf_num_not

    @property
    def max_vf_num_not_in(self):
        """Gets the max_vf_num_not_in of this NicWhereInput.  # noqa: E501


        :return: The max_vf_num_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_vf_num_not_in

    @max_vf_num_not_in.setter
    def max_vf_num_not_in(self, max_vf_num_not_in):
        """Sets the max_vf_num_not_in of this NicWhereInput.


        :param max_vf_num_not_in: The max_vf_num_not_in of this NicWhereInput.  # noqa: E501
        :type max_vf_num_not_in: list[int]
        """

        self._max_vf_num_not_in = max_vf_num_not_in

    @property
    def model(self):
        """Gets the model of this NicWhereInput.  # noqa: E501


        :return: The model of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this NicWhereInput.


        :param model: The model of this NicWhereInput.  # noqa: E501
        :type model: str
        """

        self._model = model

    @property
    def model_contains(self):
        """Gets the model_contains of this NicWhereInput.  # noqa: E501


        :return: The model_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_contains

    @model_contains.setter
    def model_contains(self, model_contains):
        """Sets the model_contains of this NicWhereInput.


        :param model_contains: The model_contains of this NicWhereInput.  # noqa: E501
        :type model_contains: str
        """

        self._model_contains = model_contains

    @property
    def model_ends_with(self):
        """Gets the model_ends_with of this NicWhereInput.  # noqa: E501


        :return: The model_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_ends_with

    @model_ends_with.setter
    def model_ends_with(self, model_ends_with):
        """Sets the model_ends_with of this NicWhereInput.


        :param model_ends_with: The model_ends_with of this NicWhereInput.  # noqa: E501
        :type model_ends_with: str
        """

        self._model_ends_with = model_ends_with

    @property
    def model_gt(self):
        """Gets the model_gt of this NicWhereInput.  # noqa: E501


        :return: The model_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_gt

    @model_gt.setter
    def model_gt(self, model_gt):
        """Sets the model_gt of this NicWhereInput.


        :param model_gt: The model_gt of this NicWhereInput.  # noqa: E501
        :type model_gt: str
        """

        self._model_gt = model_gt

    @property
    def model_gte(self):
        """Gets the model_gte of this NicWhereInput.  # noqa: E501


        :return: The model_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_gte

    @model_gte.setter
    def model_gte(self, model_gte):
        """Sets the model_gte of this NicWhereInput.


        :param model_gte: The model_gte of this NicWhereInput.  # noqa: E501
        :type model_gte: str
        """

        self._model_gte = model_gte

    @property
    def model_in(self):
        """Gets the model_in of this NicWhereInput.  # noqa: E501


        :return: The model_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._model_in

    @model_in.setter
    def model_in(self, model_in):
        """Sets the model_in of this NicWhereInput.


        :param model_in: The model_in of this NicWhereInput.  # noqa: E501
        :type model_in: list[str]
        """

        self._model_in = model_in

    @property
    def model_lt(self):
        """Gets the model_lt of this NicWhereInput.  # noqa: E501


        :return: The model_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_lt

    @model_lt.setter
    def model_lt(self, model_lt):
        """Sets the model_lt of this NicWhereInput.


        :param model_lt: The model_lt of this NicWhereInput.  # noqa: E501
        :type model_lt: str
        """

        self._model_lt = model_lt

    @property
    def model_lte(self):
        """Gets the model_lte of this NicWhereInput.  # noqa: E501


        :return: The model_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_lte

    @model_lte.setter
    def model_lte(self, model_lte):
        """Sets the model_lte of this NicWhereInput.


        :param model_lte: The model_lte of this NicWhereInput.  # noqa: E501
        :type model_lte: str
        """

        self._model_lte = model_lte

    @property
    def model_not(self):
        """Gets the model_not of this NicWhereInput.  # noqa: E501


        :return: The model_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not

    @model_not.setter
    def model_not(self, model_not):
        """Sets the model_not of this NicWhereInput.


        :param model_not: The model_not of this NicWhereInput.  # noqa: E501
        :type model_not: str
        """

        self._model_not = model_not

    @property
    def model_not_contains(self):
        """Gets the model_not_contains of this NicWhereInput.  # noqa: E501


        :return: The model_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not_contains

    @model_not_contains.setter
    def model_not_contains(self, model_not_contains):
        """Sets the model_not_contains of this NicWhereInput.


        :param model_not_contains: The model_not_contains of this NicWhereInput.  # noqa: E501
        :type model_not_contains: str
        """

        self._model_not_contains = model_not_contains

    @property
    def model_not_ends_with(self):
        """Gets the model_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The model_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not_ends_with

    @model_not_ends_with.setter
    def model_not_ends_with(self, model_not_ends_with):
        """Sets the model_not_ends_with of this NicWhereInput.


        :param model_not_ends_with: The model_not_ends_with of this NicWhereInput.  # noqa: E501
        :type model_not_ends_with: str
        """

        self._model_not_ends_with = model_not_ends_with

    @property
    def model_not_in(self):
        """Gets the model_not_in of this NicWhereInput.  # noqa: E501


        :return: The model_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._model_not_in

    @model_not_in.setter
    def model_not_in(self, model_not_in):
        """Sets the model_not_in of this NicWhereInput.


        :param model_not_in: The model_not_in of this NicWhereInput.  # noqa: E501
        :type model_not_in: list[str]
        """

        self._model_not_in = model_not_in

    @property
    def model_not_starts_with(self):
        """Gets the model_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The model_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not_starts_with

    @model_not_starts_with.setter
    def model_not_starts_with(self, model_not_starts_with):
        """Sets the model_not_starts_with of this NicWhereInput.


        :param model_not_starts_with: The model_not_starts_with of this NicWhereInput.  # noqa: E501
        :type model_not_starts_with: str
        """

        self._model_not_starts_with = model_not_starts_with

    @property
    def model_starts_with(self):
        """Gets the model_starts_with of this NicWhereInput.  # noqa: E501


        :return: The model_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_starts_with

    @model_starts_with.setter
    def model_starts_with(self, model_starts_with):
        """Sets the model_starts_with of this NicWhereInput.


        :param model_starts_with: The model_starts_with of this NicWhereInput.  # noqa: E501
        :type model_starts_with: str
        """

        self._model_starts_with = model_starts_with

    @property
    def mtu(self):
        """Gets the mtu of this NicWhereInput.  # noqa: E501


        :return: The mtu of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._mtu

    @mtu.setter
    def mtu(self, mtu):
        """Sets the mtu of this NicWhereInput.


        :param mtu: The mtu of this NicWhereInput.  # noqa: E501
        :type mtu: int
        """

        self._mtu = mtu

    @property
    def mtu_gt(self):
        """Gets the mtu_gt of this NicWhereInput.  # noqa: E501


        :return: The mtu_gt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._mtu_gt

    @mtu_gt.setter
    def mtu_gt(self, mtu_gt):
        """Sets the mtu_gt of this NicWhereInput.


        :param mtu_gt: The mtu_gt of this NicWhereInput.  # noqa: E501
        :type mtu_gt: int
        """

        self._mtu_gt = mtu_gt

    @property
    def mtu_gte(self):
        """Gets the mtu_gte of this NicWhereInput.  # noqa: E501


        :return: The mtu_gte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._mtu_gte

    @mtu_gte.setter
    def mtu_gte(self, mtu_gte):
        """Sets the mtu_gte of this NicWhereInput.


        :param mtu_gte: The mtu_gte of this NicWhereInput.  # noqa: E501
        :type mtu_gte: int
        """

        self._mtu_gte = mtu_gte

    @property
    def mtu_in(self):
        """Gets the mtu_in of this NicWhereInput.  # noqa: E501


        :return: The mtu_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._mtu_in

    @mtu_in.setter
    def mtu_in(self, mtu_in):
        """Sets the mtu_in of this NicWhereInput.


        :param mtu_in: The mtu_in of this NicWhereInput.  # noqa: E501
        :type mtu_in: list[int]
        """

        self._mtu_in = mtu_in

    @property
    def mtu_lt(self):
        """Gets the mtu_lt of this NicWhereInput.  # noqa: E501


        :return: The mtu_lt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._mtu_lt

    @mtu_lt.setter
    def mtu_lt(self, mtu_lt):
        """Sets the mtu_lt of this NicWhereInput.


        :param mtu_lt: The mtu_lt of this NicWhereInput.  # noqa: E501
        :type mtu_lt: int
        """

        self._mtu_lt = mtu_lt

    @property
    def mtu_lte(self):
        """Gets the mtu_lte of this NicWhereInput.  # noqa: E501


        :return: The mtu_lte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._mtu_lte

    @mtu_lte.setter
    def mtu_lte(self, mtu_lte):
        """Sets the mtu_lte of this NicWhereInput.


        :param mtu_lte: The mtu_lte of this NicWhereInput.  # noqa: E501
        :type mtu_lte: int
        """

        self._mtu_lte = mtu_lte

    @property
    def mtu_not(self):
        """Gets the mtu_not of this NicWhereInput.  # noqa: E501


        :return: The mtu_not of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._mtu_not

    @mtu_not.setter
    def mtu_not(self, mtu_not):
        """Sets the mtu_not of this NicWhereInput.


        :param mtu_not: The mtu_not of this NicWhereInput.  # noqa: E501
        :type mtu_not: int
        """

        self._mtu_not = mtu_not

    @property
    def mtu_not_in(self):
        """Gets the mtu_not_in of this NicWhereInput.  # noqa: E501


        :return: The mtu_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._mtu_not_in

    @mtu_not_in.setter
    def mtu_not_in(self, mtu_not_in):
        """Sets the mtu_not_in of this NicWhereInput.


        :param mtu_not_in: The mtu_not_in of this NicWhereInput.  # noqa: E501
        :type mtu_not_in: list[int]
        """

        self._mtu_not_in = mtu_not_in

    @property
    def name(self):
        """Gets the name of this NicWhereInput.  # noqa: E501


        :return: The name of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NicWhereInput.


        :param name: The name of this NicWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this NicWhereInput.  # noqa: E501


        :return: The name_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this NicWhereInput.


        :param name_contains: The name_contains of this NicWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this NicWhereInput.  # noqa: E501


        :return: The name_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this NicWhereInput.


        :param name_ends_with: The name_ends_with of this NicWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this NicWhereInput.  # noqa: E501


        :return: The name_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this NicWhereInput.


        :param name_gt: The name_gt of this NicWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this NicWhereInput.  # noqa: E501


        :return: The name_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this NicWhereInput.


        :param name_gte: The name_gte of this NicWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this NicWhereInput.  # noqa: E501


        :return: The name_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this NicWhereInput.


        :param name_in: The name_in of this NicWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this NicWhereInput.  # noqa: E501


        :return: The name_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this NicWhereInput.


        :param name_lt: The name_lt of this NicWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this NicWhereInput.  # noqa: E501


        :return: The name_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this NicWhereInput.


        :param name_lte: The name_lte of this NicWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this NicWhereInput.  # noqa: E501


        :return: The name_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this NicWhereInput.


        :param name_not: The name_not of this NicWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this NicWhereInput.  # noqa: E501


        :return: The name_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this NicWhereInput.


        :param name_not_contains: The name_not_contains of this NicWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this NicWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this NicWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this NicWhereInput.  # noqa: E501


        :return: The name_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this NicWhereInput.


        :param name_not_in: The name_not_in of this NicWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this NicWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this NicWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this NicWhereInput.  # noqa: E501


        :return: The name_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this NicWhereInput.


        :param name_starts_with: The name_starts_with of this NicWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def nic_uuid(self):
        """Gets the nic_uuid of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid

    @nic_uuid.setter
    def nic_uuid(self, nic_uuid):
        """Sets the nic_uuid of this NicWhereInput.


        :param nic_uuid: The nic_uuid of this NicWhereInput.  # noqa: E501
        :type nic_uuid: str
        """

        self._nic_uuid = nic_uuid

    @property
    def nic_uuid_contains(self):
        """Gets the nic_uuid_contains of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_contains

    @nic_uuid_contains.setter
    def nic_uuid_contains(self, nic_uuid_contains):
        """Sets the nic_uuid_contains of this NicWhereInput.


        :param nic_uuid_contains: The nic_uuid_contains of this NicWhereInput.  # noqa: E501
        :type nic_uuid_contains: str
        """

        self._nic_uuid_contains = nic_uuid_contains

    @property
    def nic_uuid_ends_with(self):
        """Gets the nic_uuid_ends_with of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_ends_with

    @nic_uuid_ends_with.setter
    def nic_uuid_ends_with(self, nic_uuid_ends_with):
        """Sets the nic_uuid_ends_with of this NicWhereInput.


        :param nic_uuid_ends_with: The nic_uuid_ends_with of this NicWhereInput.  # noqa: E501
        :type nic_uuid_ends_with: str
        """

        self._nic_uuid_ends_with = nic_uuid_ends_with

    @property
    def nic_uuid_gt(self):
        """Gets the nic_uuid_gt of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_gt

    @nic_uuid_gt.setter
    def nic_uuid_gt(self, nic_uuid_gt):
        """Sets the nic_uuid_gt of this NicWhereInput.


        :param nic_uuid_gt: The nic_uuid_gt of this NicWhereInput.  # noqa: E501
        :type nic_uuid_gt: str
        """

        self._nic_uuid_gt = nic_uuid_gt

    @property
    def nic_uuid_gte(self):
        """Gets the nic_uuid_gte of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_gte

    @nic_uuid_gte.setter
    def nic_uuid_gte(self, nic_uuid_gte):
        """Sets the nic_uuid_gte of this NicWhereInput.


        :param nic_uuid_gte: The nic_uuid_gte of this NicWhereInput.  # noqa: E501
        :type nic_uuid_gte: str
        """

        self._nic_uuid_gte = nic_uuid_gte

    @property
    def nic_uuid_in(self):
        """Gets the nic_uuid_in of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._nic_uuid_in

    @nic_uuid_in.setter
    def nic_uuid_in(self, nic_uuid_in):
        """Sets the nic_uuid_in of this NicWhereInput.


        :param nic_uuid_in: The nic_uuid_in of this NicWhereInput.  # noqa: E501
        :type nic_uuid_in: list[str]
        """

        self._nic_uuid_in = nic_uuid_in

    @property
    def nic_uuid_lt(self):
        """Gets the nic_uuid_lt of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_lt

    @nic_uuid_lt.setter
    def nic_uuid_lt(self, nic_uuid_lt):
        """Sets the nic_uuid_lt of this NicWhereInput.


        :param nic_uuid_lt: The nic_uuid_lt of this NicWhereInput.  # noqa: E501
        :type nic_uuid_lt: str
        """

        self._nic_uuid_lt = nic_uuid_lt

    @property
    def nic_uuid_lte(self):
        """Gets the nic_uuid_lte of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_lte

    @nic_uuid_lte.setter
    def nic_uuid_lte(self, nic_uuid_lte):
        """Sets the nic_uuid_lte of this NicWhereInput.


        :param nic_uuid_lte: The nic_uuid_lte of this NicWhereInput.  # noqa: E501
        :type nic_uuid_lte: str
        """

        self._nic_uuid_lte = nic_uuid_lte

    @property
    def nic_uuid_not(self):
        """Gets the nic_uuid_not of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_not

    @nic_uuid_not.setter
    def nic_uuid_not(self, nic_uuid_not):
        """Sets the nic_uuid_not of this NicWhereInput.


        :param nic_uuid_not: The nic_uuid_not of this NicWhereInput.  # noqa: E501
        :type nic_uuid_not: str
        """

        self._nic_uuid_not = nic_uuid_not

    @property
    def nic_uuid_not_contains(self):
        """Gets the nic_uuid_not_contains of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_not_contains

    @nic_uuid_not_contains.setter
    def nic_uuid_not_contains(self, nic_uuid_not_contains):
        """Sets the nic_uuid_not_contains of this NicWhereInput.


        :param nic_uuid_not_contains: The nic_uuid_not_contains of this NicWhereInput.  # noqa: E501
        :type nic_uuid_not_contains: str
        """

        self._nic_uuid_not_contains = nic_uuid_not_contains

    @property
    def nic_uuid_not_ends_with(self):
        """Gets the nic_uuid_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_not_ends_with

    @nic_uuid_not_ends_with.setter
    def nic_uuid_not_ends_with(self, nic_uuid_not_ends_with):
        """Sets the nic_uuid_not_ends_with of this NicWhereInput.


        :param nic_uuid_not_ends_with: The nic_uuid_not_ends_with of this NicWhereInput.  # noqa: E501
        :type nic_uuid_not_ends_with: str
        """

        self._nic_uuid_not_ends_with = nic_uuid_not_ends_with

    @property
    def nic_uuid_not_in(self):
        """Gets the nic_uuid_not_in of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._nic_uuid_not_in

    @nic_uuid_not_in.setter
    def nic_uuid_not_in(self, nic_uuid_not_in):
        """Sets the nic_uuid_not_in of this NicWhereInput.


        :param nic_uuid_not_in: The nic_uuid_not_in of this NicWhereInput.  # noqa: E501
        :type nic_uuid_not_in: list[str]
        """

        self._nic_uuid_not_in = nic_uuid_not_in

    @property
    def nic_uuid_not_starts_with(self):
        """Gets the nic_uuid_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_not_starts_with

    @nic_uuid_not_starts_with.setter
    def nic_uuid_not_starts_with(self, nic_uuid_not_starts_with):
        """Sets the nic_uuid_not_starts_with of this NicWhereInput.


        :param nic_uuid_not_starts_with: The nic_uuid_not_starts_with of this NicWhereInput.  # noqa: E501
        :type nic_uuid_not_starts_with: str
        """

        self._nic_uuid_not_starts_with = nic_uuid_not_starts_with

    @property
    def nic_uuid_starts_with(self):
        """Gets the nic_uuid_starts_with of this NicWhereInput.  # noqa: E501


        :return: The nic_uuid_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._nic_uuid_starts_with

    @nic_uuid_starts_with.setter
    def nic_uuid_starts_with(self, nic_uuid_starts_with):
        """Sets the nic_uuid_starts_with of this NicWhereInput.


        :param nic_uuid_starts_with: The nic_uuid_starts_with of this NicWhereInput.  # noqa: E501
        :type nic_uuid_starts_with: str
        """

        self._nic_uuid_starts_with = nic_uuid_starts_with

    @property
    def physical(self):
        """Gets the physical of this NicWhereInput.  # noqa: E501


        :return: The physical of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._physical

    @physical.setter
    def physical(self, physical):
        """Sets the physical of this NicWhereInput.


        :param physical: The physical of this NicWhereInput.  # noqa: E501
        :type physical: bool
        """

        self._physical = physical

    @property
    def physical_not(self):
        """Gets the physical_not of this NicWhereInput.  # noqa: E501


        :return: The physical_not of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._physical_not

    @physical_not.setter
    def physical_not(self, physical_not):
        """Sets the physical_not of this NicWhereInput.


        :param physical_not: The physical_not of this NicWhereInput.  # noqa: E501
        :type physical_not: bool
        """

        self._physical_not = physical_not

    @property
    def rdma_enabled(self):
        """Gets the rdma_enabled of this NicWhereInput.  # noqa: E501


        :return: The rdma_enabled of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._rdma_enabled

    @rdma_enabled.setter
    def rdma_enabled(self, rdma_enabled):
        """Sets the rdma_enabled of this NicWhereInput.


        :param rdma_enabled: The rdma_enabled of this NicWhereInput.  # noqa: E501
        :type rdma_enabled: bool
        """

        self._rdma_enabled = rdma_enabled

    @property
    def rdma_enabled_not(self):
        """Gets the rdma_enabled_not of this NicWhereInput.  # noqa: E501


        :return: The rdma_enabled_not of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._rdma_enabled_not

    @rdma_enabled_not.setter
    def rdma_enabled_not(self, rdma_enabled_not):
        """Sets the rdma_enabled_not of this NicWhereInput.


        :param rdma_enabled_not: The rdma_enabled_not of this NicWhereInput.  # noqa: E501
        :type rdma_enabled_not: bool
        """

        self._rdma_enabled_not = rdma_enabled_not

    @property
    def running(self):
        """Gets the running of this NicWhereInput.  # noqa: E501


        :return: The running of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._running

    @running.setter
    def running(self, running):
        """Sets the running of this NicWhereInput.


        :param running: The running of this NicWhereInput.  # noqa: E501
        :type running: bool
        """

        self._running = running

    @property
    def running_not(self):
        """Gets the running_not of this NicWhereInput.  # noqa: E501


        :return: The running_not of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._running_not

    @running_not.setter
    def running_not(self, running_not):
        """Sets the running_not of this NicWhereInput.


        :param running_not: The running_not of this NicWhereInput.  # noqa: E501
        :type running_not: bool
        """

        self._running_not = running_not

    @property
    def speed(self):
        """Gets the speed of this NicWhereInput.  # noqa: E501


        :return: The speed of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._speed

    @speed.setter
    def speed(self, speed):
        """Sets the speed of this NicWhereInput.


        :param speed: The speed of this NicWhereInput.  # noqa: E501
        :type speed: int
        """

        self._speed = speed

    @property
    def speed_gt(self):
        """Gets the speed_gt of this NicWhereInput.  # noqa: E501


        :return: The speed_gt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._speed_gt

    @speed_gt.setter
    def speed_gt(self, speed_gt):
        """Sets the speed_gt of this NicWhereInput.


        :param speed_gt: The speed_gt of this NicWhereInput.  # noqa: E501
        :type speed_gt: int
        """

        self._speed_gt = speed_gt

    @property
    def speed_gte(self):
        """Gets the speed_gte of this NicWhereInput.  # noqa: E501


        :return: The speed_gte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._speed_gte

    @speed_gte.setter
    def speed_gte(self, speed_gte):
        """Sets the speed_gte of this NicWhereInput.


        :param speed_gte: The speed_gte of this NicWhereInput.  # noqa: E501
        :type speed_gte: int
        """

        self._speed_gte = speed_gte

    @property
    def speed_in(self):
        """Gets the speed_in of this NicWhereInput.  # noqa: E501


        :return: The speed_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._speed_in

    @speed_in.setter
    def speed_in(self, speed_in):
        """Sets the speed_in of this NicWhereInput.


        :param speed_in: The speed_in of this NicWhereInput.  # noqa: E501
        :type speed_in: list[int]
        """

        self._speed_in = speed_in

    @property
    def speed_lt(self):
        """Gets the speed_lt of this NicWhereInput.  # noqa: E501


        :return: The speed_lt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._speed_lt

    @speed_lt.setter
    def speed_lt(self, speed_lt):
        """Sets the speed_lt of this NicWhereInput.


        :param speed_lt: The speed_lt of this NicWhereInput.  # noqa: E501
        :type speed_lt: int
        """

        self._speed_lt = speed_lt

    @property
    def speed_lte(self):
        """Gets the speed_lte of this NicWhereInput.  # noqa: E501


        :return: The speed_lte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._speed_lte

    @speed_lte.setter
    def speed_lte(self, speed_lte):
        """Sets the speed_lte of this NicWhereInput.


        :param speed_lte: The speed_lte of this NicWhereInput.  # noqa: E501
        :type speed_lte: int
        """

        self._speed_lte = speed_lte

    @property
    def speed_not(self):
        """Gets the speed_not of this NicWhereInput.  # noqa: E501


        :return: The speed_not of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._speed_not

    @speed_not.setter
    def speed_not(self, speed_not):
        """Sets the speed_not of this NicWhereInput.


        :param speed_not: The speed_not of this NicWhereInput.  # noqa: E501
        :type speed_not: int
        """

        self._speed_not = speed_not

    @property
    def speed_not_in(self):
        """Gets the speed_not_in of this NicWhereInput.  # noqa: E501


        :return: The speed_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._speed_not_in

    @speed_not_in.setter
    def speed_not_in(self, speed_not_in):
        """Sets the speed_not_in of this NicWhereInput.


        :param speed_not_in: The speed_not_in of this NicWhereInput.  # noqa: E501
        :type speed_not_in: list[int]
        """

        self._speed_not_in = speed_not_in

    @property
    def subnet_mask(self):
        """Gets the subnet_mask of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask

    @subnet_mask.setter
    def subnet_mask(self, subnet_mask):
        """Sets the subnet_mask of this NicWhereInput.


        :param subnet_mask: The subnet_mask of this NicWhereInput.  # noqa: E501
        :type subnet_mask: str
        """

        self._subnet_mask = subnet_mask

    @property
    def subnet_mask_contains(self):
        """Gets the subnet_mask_contains of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_contains

    @subnet_mask_contains.setter
    def subnet_mask_contains(self, subnet_mask_contains):
        """Sets the subnet_mask_contains of this NicWhereInput.


        :param subnet_mask_contains: The subnet_mask_contains of this NicWhereInput.  # noqa: E501
        :type subnet_mask_contains: str
        """

        self._subnet_mask_contains = subnet_mask_contains

    @property
    def subnet_mask_ends_with(self):
        """Gets the subnet_mask_ends_with of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_ends_with

    @subnet_mask_ends_with.setter
    def subnet_mask_ends_with(self, subnet_mask_ends_with):
        """Sets the subnet_mask_ends_with of this NicWhereInput.


        :param subnet_mask_ends_with: The subnet_mask_ends_with of this NicWhereInput.  # noqa: E501
        :type subnet_mask_ends_with: str
        """

        self._subnet_mask_ends_with = subnet_mask_ends_with

    @property
    def subnet_mask_gt(self):
        """Gets the subnet_mask_gt of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_gt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_gt

    @subnet_mask_gt.setter
    def subnet_mask_gt(self, subnet_mask_gt):
        """Sets the subnet_mask_gt of this NicWhereInput.


        :param subnet_mask_gt: The subnet_mask_gt of this NicWhereInput.  # noqa: E501
        :type subnet_mask_gt: str
        """

        self._subnet_mask_gt = subnet_mask_gt

    @property
    def subnet_mask_gte(self):
        """Gets the subnet_mask_gte of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_gte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_gte

    @subnet_mask_gte.setter
    def subnet_mask_gte(self, subnet_mask_gte):
        """Sets the subnet_mask_gte of this NicWhereInput.


        :param subnet_mask_gte: The subnet_mask_gte of this NicWhereInput.  # noqa: E501
        :type subnet_mask_gte: str
        """

        self._subnet_mask_gte = subnet_mask_gte

    @property
    def subnet_mask_in(self):
        """Gets the subnet_mask_in of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_mask_in

    @subnet_mask_in.setter
    def subnet_mask_in(self, subnet_mask_in):
        """Sets the subnet_mask_in of this NicWhereInput.


        :param subnet_mask_in: The subnet_mask_in of this NicWhereInput.  # noqa: E501
        :type subnet_mask_in: list[str]
        """

        self._subnet_mask_in = subnet_mask_in

    @property
    def subnet_mask_lt(self):
        """Gets the subnet_mask_lt of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_lt of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_lt

    @subnet_mask_lt.setter
    def subnet_mask_lt(self, subnet_mask_lt):
        """Sets the subnet_mask_lt of this NicWhereInput.


        :param subnet_mask_lt: The subnet_mask_lt of this NicWhereInput.  # noqa: E501
        :type subnet_mask_lt: str
        """

        self._subnet_mask_lt = subnet_mask_lt

    @property
    def subnet_mask_lte(self):
        """Gets the subnet_mask_lte of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_lte of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_lte

    @subnet_mask_lte.setter
    def subnet_mask_lte(self, subnet_mask_lte):
        """Sets the subnet_mask_lte of this NicWhereInput.


        :param subnet_mask_lte: The subnet_mask_lte of this NicWhereInput.  # noqa: E501
        :type subnet_mask_lte: str
        """

        self._subnet_mask_lte = subnet_mask_lte

    @property
    def subnet_mask_not(self):
        """Gets the subnet_mask_not of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_not of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not

    @subnet_mask_not.setter
    def subnet_mask_not(self, subnet_mask_not):
        """Sets the subnet_mask_not of this NicWhereInput.


        :param subnet_mask_not: The subnet_mask_not of this NicWhereInput.  # noqa: E501
        :type subnet_mask_not: str
        """

        self._subnet_mask_not = subnet_mask_not

    @property
    def subnet_mask_not_contains(self):
        """Gets the subnet_mask_not_contains of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_contains of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_contains

    @subnet_mask_not_contains.setter
    def subnet_mask_not_contains(self, subnet_mask_not_contains):
        """Sets the subnet_mask_not_contains of this NicWhereInput.


        :param subnet_mask_not_contains: The subnet_mask_not_contains of this NicWhereInput.  # noqa: E501
        :type subnet_mask_not_contains: str
        """

        self._subnet_mask_not_contains = subnet_mask_not_contains

    @property
    def subnet_mask_not_ends_with(self):
        """Gets the subnet_mask_not_ends_with of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_ends_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_ends_with

    @subnet_mask_not_ends_with.setter
    def subnet_mask_not_ends_with(self, subnet_mask_not_ends_with):
        """Sets the subnet_mask_not_ends_with of this NicWhereInput.


        :param subnet_mask_not_ends_with: The subnet_mask_not_ends_with of this NicWhereInput.  # noqa: E501
        :type subnet_mask_not_ends_with: str
        """

        self._subnet_mask_not_ends_with = subnet_mask_not_ends_with

    @property
    def subnet_mask_not_in(self):
        """Gets the subnet_mask_not_in of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_mask_not_in

    @subnet_mask_not_in.setter
    def subnet_mask_not_in(self, subnet_mask_not_in):
        """Sets the subnet_mask_not_in of this NicWhereInput.


        :param subnet_mask_not_in: The subnet_mask_not_in of this NicWhereInput.  # noqa: E501
        :type subnet_mask_not_in: list[str]
        """

        self._subnet_mask_not_in = subnet_mask_not_in

    @property
    def subnet_mask_not_starts_with(self):
        """Gets the subnet_mask_not_starts_with of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_starts_with

    @subnet_mask_not_starts_with.setter
    def subnet_mask_not_starts_with(self, subnet_mask_not_starts_with):
        """Sets the subnet_mask_not_starts_with of this NicWhereInput.


        :param subnet_mask_not_starts_with: The subnet_mask_not_starts_with of this NicWhereInput.  # noqa: E501
        :type subnet_mask_not_starts_with: str
        """

        self._subnet_mask_not_starts_with = subnet_mask_not_starts_with

    @property
    def subnet_mask_starts_with(self):
        """Gets the subnet_mask_starts_with of this NicWhereInput.  # noqa: E501


        :return: The subnet_mask_starts_with of this NicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_starts_with

    @subnet_mask_starts_with.setter
    def subnet_mask_starts_with(self, subnet_mask_starts_with):
        """Sets the subnet_mask_starts_with of this NicWhereInput.


        :param subnet_mask_starts_with: The subnet_mask_starts_with of this NicWhereInput.  # noqa: E501
        :type subnet_mask_starts_with: str
        """

        self._subnet_mask_starts_with = subnet_mask_starts_with

    @property
    def total_vf_num(self):
        """Gets the total_vf_num of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._total_vf_num

    @total_vf_num.setter
    def total_vf_num(self, total_vf_num):
        """Sets the total_vf_num of this NicWhereInput.


        :param total_vf_num: The total_vf_num of this NicWhereInput.  # noqa: E501
        :type total_vf_num: int
        """

        self._total_vf_num = total_vf_num

    @property
    def total_vf_num_gt(self):
        """Gets the total_vf_num_gt of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num_gt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._total_vf_num_gt

    @total_vf_num_gt.setter
    def total_vf_num_gt(self, total_vf_num_gt):
        """Sets the total_vf_num_gt of this NicWhereInput.


        :param total_vf_num_gt: The total_vf_num_gt of this NicWhereInput.  # noqa: E501
        :type total_vf_num_gt: int
        """

        self._total_vf_num_gt = total_vf_num_gt

    @property
    def total_vf_num_gte(self):
        """Gets the total_vf_num_gte of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num_gte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._total_vf_num_gte

    @total_vf_num_gte.setter
    def total_vf_num_gte(self, total_vf_num_gte):
        """Sets the total_vf_num_gte of this NicWhereInput.


        :param total_vf_num_gte: The total_vf_num_gte of this NicWhereInput.  # noqa: E501
        :type total_vf_num_gte: int
        """

        self._total_vf_num_gte = total_vf_num_gte

    @property
    def total_vf_num_in(self):
        """Gets the total_vf_num_in of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._total_vf_num_in

    @total_vf_num_in.setter
    def total_vf_num_in(self, total_vf_num_in):
        """Sets the total_vf_num_in of this NicWhereInput.


        :param total_vf_num_in: The total_vf_num_in of this NicWhereInput.  # noqa: E501
        :type total_vf_num_in: list[int]
        """

        self._total_vf_num_in = total_vf_num_in

    @property
    def total_vf_num_lt(self):
        """Gets the total_vf_num_lt of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num_lt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._total_vf_num_lt

    @total_vf_num_lt.setter
    def total_vf_num_lt(self, total_vf_num_lt):
        """Sets the total_vf_num_lt of this NicWhereInput.


        :param total_vf_num_lt: The total_vf_num_lt of this NicWhereInput.  # noqa: E501
        :type total_vf_num_lt: int
        """

        self._total_vf_num_lt = total_vf_num_lt

    @property
    def total_vf_num_lte(self):
        """Gets the total_vf_num_lte of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num_lte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._total_vf_num_lte

    @total_vf_num_lte.setter
    def total_vf_num_lte(self, total_vf_num_lte):
        """Sets the total_vf_num_lte of this NicWhereInput.


        :param total_vf_num_lte: The total_vf_num_lte of this NicWhereInput.  # noqa: E501
        :type total_vf_num_lte: int
        """

        self._total_vf_num_lte = total_vf_num_lte

    @property
    def total_vf_num_not(self):
        """Gets the total_vf_num_not of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num_not of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._total_vf_num_not

    @total_vf_num_not.setter
    def total_vf_num_not(self, total_vf_num_not):
        """Sets the total_vf_num_not of this NicWhereInput.


        :param total_vf_num_not: The total_vf_num_not of this NicWhereInput.  # noqa: E501
        :type total_vf_num_not: int
        """

        self._total_vf_num_not = total_vf_num_not

    @property
    def total_vf_num_not_in(self):
        """Gets the total_vf_num_not_in of this NicWhereInput.  # noqa: E501


        :return: The total_vf_num_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._total_vf_num_not_in

    @total_vf_num_not_in.setter
    def total_vf_num_not_in(self, total_vf_num_not_in):
        """Sets the total_vf_num_not_in of this NicWhereInput.


        :param total_vf_num_not_in: The total_vf_num_not_in of this NicWhereInput.  # noqa: E501
        :type total_vf_num_not_in: list[int]
        """

        self._total_vf_num_not_in = total_vf_num_not_in

    @property
    def type(self):
        """Gets the type of this NicWhereInput.  # noqa: E501


        :return: The type of this NicWhereInput.  # noqa: E501
        :rtype: NetworkType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this NicWhereInput.


        :param type: The type of this NicWhereInput.  # noqa: E501
        :type type: NetworkType
        """

        self._type = type

    @property
    def type_in(self):
        """Gets the type_in of this NicWhereInput.  # noqa: E501


        :return: The type_in of this NicWhereInput.  # noqa: E501
        :rtype: list[NetworkType]
        """
        return self._type_in

    @type_in.setter
    def type_in(self, type_in):
        """Sets the type_in of this NicWhereInput.


        :param type_in: The type_in of this NicWhereInput.  # noqa: E501
        :type type_in: list[NetworkType]
        """

        self._type_in = type_in

    @property
    def type_not(self):
        """Gets the type_not of this NicWhereInput.  # noqa: E501


        :return: The type_not of this NicWhereInput.  # noqa: E501
        :rtype: NetworkType
        """
        return self._type_not

    @type_not.setter
    def type_not(self, type_not):
        """Sets the type_not of this NicWhereInput.


        :param type_not: The type_not of this NicWhereInput.  # noqa: E501
        :type type_not: NetworkType
        """

        self._type_not = type_not

    @property
    def type_not_in(self):
        """Gets the type_not_in of this NicWhereInput.  # noqa: E501


        :return: The type_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[NetworkType]
        """
        return self._type_not_in

    @type_not_in.setter
    def type_not_in(self, type_not_in):
        """Sets the type_not_in of this NicWhereInput.


        :param type_not_in: The type_not_in of this NicWhereInput.  # noqa: E501
        :type type_not_in: list[NetworkType]
        """

        self._type_not_in = type_not_in

    @property
    def up(self):
        """Gets the up of this NicWhereInput.  # noqa: E501


        :return: The up of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._up

    @up.setter
    def up(self, up):
        """Sets the up of this NicWhereInput.


        :param up: The up of this NicWhereInput.  # noqa: E501
        :type up: bool
        """

        self._up = up

    @property
    def up_not(self):
        """Gets the up_not of this NicWhereInput.  # noqa: E501


        :return: The up_not of this NicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._up_not

    @up_not.setter
    def up_not(self, up_not):
        """Sets the up_not of this NicWhereInput.


        :param up_not: The up_not of this NicWhereInput.  # noqa: E501
        :type up_not: bool
        """

        self._up_not = up_not

    @property
    def used_vf_num(self):
        """Gets the used_vf_num of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_vf_num

    @used_vf_num.setter
    def used_vf_num(self, used_vf_num):
        """Sets the used_vf_num of this NicWhereInput.


        :param used_vf_num: The used_vf_num of this NicWhereInput.  # noqa: E501
        :type used_vf_num: int
        """

        self._used_vf_num = used_vf_num

    @property
    def used_vf_num_gt(self):
        """Gets the used_vf_num_gt of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num_gt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_vf_num_gt

    @used_vf_num_gt.setter
    def used_vf_num_gt(self, used_vf_num_gt):
        """Sets the used_vf_num_gt of this NicWhereInput.


        :param used_vf_num_gt: The used_vf_num_gt of this NicWhereInput.  # noqa: E501
        :type used_vf_num_gt: int
        """

        self._used_vf_num_gt = used_vf_num_gt

    @property
    def used_vf_num_gte(self):
        """Gets the used_vf_num_gte of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num_gte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_vf_num_gte

    @used_vf_num_gte.setter
    def used_vf_num_gte(self, used_vf_num_gte):
        """Sets the used_vf_num_gte of this NicWhereInput.


        :param used_vf_num_gte: The used_vf_num_gte of this NicWhereInput.  # noqa: E501
        :type used_vf_num_gte: int
        """

        self._used_vf_num_gte = used_vf_num_gte

    @property
    def used_vf_num_in(self):
        """Gets the used_vf_num_in of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._used_vf_num_in

    @used_vf_num_in.setter
    def used_vf_num_in(self, used_vf_num_in):
        """Sets the used_vf_num_in of this NicWhereInput.


        :param used_vf_num_in: The used_vf_num_in of this NicWhereInput.  # noqa: E501
        :type used_vf_num_in: list[int]
        """

        self._used_vf_num_in = used_vf_num_in

    @property
    def used_vf_num_lt(self):
        """Gets the used_vf_num_lt of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num_lt of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_vf_num_lt

    @used_vf_num_lt.setter
    def used_vf_num_lt(self, used_vf_num_lt):
        """Sets the used_vf_num_lt of this NicWhereInput.


        :param used_vf_num_lt: The used_vf_num_lt of this NicWhereInput.  # noqa: E501
        :type used_vf_num_lt: int
        """

        self._used_vf_num_lt = used_vf_num_lt

    @property
    def used_vf_num_lte(self):
        """Gets the used_vf_num_lte of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num_lte of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_vf_num_lte

    @used_vf_num_lte.setter
    def used_vf_num_lte(self, used_vf_num_lte):
        """Sets the used_vf_num_lte of this NicWhereInput.


        :param used_vf_num_lte: The used_vf_num_lte of this NicWhereInput.  # noqa: E501
        :type used_vf_num_lte: int
        """

        self._used_vf_num_lte = used_vf_num_lte

    @property
    def used_vf_num_not(self):
        """Gets the used_vf_num_not of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num_not of this NicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_vf_num_not

    @used_vf_num_not.setter
    def used_vf_num_not(self, used_vf_num_not):
        """Sets the used_vf_num_not of this NicWhereInput.


        :param used_vf_num_not: The used_vf_num_not of this NicWhereInput.  # noqa: E501
        :type used_vf_num_not: int
        """

        self._used_vf_num_not = used_vf_num_not

    @property
    def used_vf_num_not_in(self):
        """Gets the used_vf_num_not_in of this NicWhereInput.  # noqa: E501


        :return: The used_vf_num_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._used_vf_num_not_in

    @used_vf_num_not_in.setter
    def used_vf_num_not_in(self, used_vf_num_not_in):
        """Sets the used_vf_num_not_in of this NicWhereInput.


        :param used_vf_num_not_in: The used_vf_num_not_in of this NicWhereInput.  # noqa: E501
        :type used_vf_num_not_in: list[int]
        """

        self._used_vf_num_not_in = used_vf_num_not_in

    @property
    def user_usage(self):
        """Gets the user_usage of this NicWhereInput.  # noqa: E501


        :return: The user_usage of this NicWhereInput.  # noqa: E501
        :rtype: NicUserUsage
        """
        return self._user_usage

    @user_usage.setter
    def user_usage(self, user_usage):
        """Sets the user_usage of this NicWhereInput.


        :param user_usage: The user_usage of this NicWhereInput.  # noqa: E501
        :type user_usage: NicUserUsage
        """

        self._user_usage = user_usage

    @property
    def user_usage_in(self):
        """Gets the user_usage_in of this NicWhereInput.  # noqa: E501


        :return: The user_usage_in of this NicWhereInput.  # noqa: E501
        :rtype: list[NicUserUsage]
        """
        return self._user_usage_in

    @user_usage_in.setter
    def user_usage_in(self, user_usage_in):
        """Sets the user_usage_in of this NicWhereInput.


        :param user_usage_in: The user_usage_in of this NicWhereInput.  # noqa: E501
        :type user_usage_in: list[NicUserUsage]
        """

        self._user_usage_in = user_usage_in

    @property
    def user_usage_not(self):
        """Gets the user_usage_not of this NicWhereInput.  # noqa: E501


        :return: The user_usage_not of this NicWhereInput.  # noqa: E501
        :rtype: NicUserUsage
        """
        return self._user_usage_not

    @user_usage_not.setter
    def user_usage_not(self, user_usage_not):
        """Sets the user_usage_not of this NicWhereInput.


        :param user_usage_not: The user_usage_not of this NicWhereInput.  # noqa: E501
        :type user_usage_not: NicUserUsage
        """

        self._user_usage_not = user_usage_not

    @property
    def user_usage_not_in(self):
        """Gets the user_usage_not_in of this NicWhereInput.  # noqa: E501


        :return: The user_usage_not_in of this NicWhereInput.  # noqa: E501
        :rtype: list[NicUserUsage]
        """
        return self._user_usage_not_in

    @user_usage_not_in.setter
    def user_usage_not_in(self, user_usage_not_in):
        """Sets the user_usage_not_in of this NicWhereInput.


        :param user_usage_not_in: The user_usage_not_in of this NicWhereInput.  # noqa: E501
        :type user_usage_not_in: list[NicUserUsage]
        """

        self._user_usage_not_in = user_usage_not_in

    @property
    def vds(self):
        """Gets the vds of this NicWhereInput.  # noqa: E501


        :return: The vds of this NicWhereInput.  # noqa: E501
        :rtype: VdsWhereInput
        """
        return self._vds

    @vds.setter
    def vds(self, vds):
        """Sets the vds of this NicWhereInput.


        :param vds: The vds of this NicWhereInput.  # noqa: E501
        :type vds: VdsWhereInput
        """

        self._vds = vds

    @property
    def vms_every(self):
        """Gets the vms_every of this NicWhereInput.  # noqa: E501


        :return: The vms_every of this NicWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vms_every

    @vms_every.setter
    def vms_every(self, vms_every):
        """Sets the vms_every of this NicWhereInput.


        :param vms_every: The vms_every of this NicWhereInput.  # noqa: E501
        :type vms_every: VmWhereInput
        """

        self._vms_every = vms_every

    @property
    def vms_none(self):
        """Gets the vms_none of this NicWhereInput.  # noqa: E501


        :return: The vms_none of this NicWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vms_none

    @vms_none.setter
    def vms_none(self, vms_none):
        """Sets the vms_none of this NicWhereInput.


        :param vms_none: The vms_none of this NicWhereInput.  # noqa: E501
        :type vms_none: VmWhereInput
        """

        self._vms_none = vms_none

    @property
    def vms_some(self):
        """Gets the vms_some of this NicWhereInput.  # noqa: E501


        :return: The vms_some of this NicWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vms_some

    @vms_some.setter
    def vms_some(self, vms_some):
        """Sets the vms_some of this NicWhereInput.


        :param vms_some: The vms_some of this NicWhereInput.  # noqa: E501
        :type vms_some: VmWhereInput
        """

        self._vms_some = vms_some

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NicWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, NicWhereInput):
            return True

        return self.to_dict() != other.to_dict()

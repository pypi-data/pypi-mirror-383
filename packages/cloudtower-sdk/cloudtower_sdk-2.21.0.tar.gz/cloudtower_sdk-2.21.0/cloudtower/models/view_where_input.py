# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class ViewWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[ViewWhereInput]',
        '_not': 'list[ViewWhereInput]',
        '_or': 'list[ViewWhereInput]',
        'cluster': 'ClusterWhereInput',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'graphs_every': 'GraphWhereInput',
        'graphs_none': 'GraphWhereInput',
        'graphs_some': 'GraphWhereInput',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'time_span': 'int',
        'time_span_gt': 'int',
        'time_span_gte': 'int',
        'time_span_in': 'list[int]',
        'time_span_lt': 'int',
        'time_span_lte': 'int',
        'time_span_not': 'int',
        'time_span_not_in': 'list[int]',
        'time_unit': 'TimeUnit',
        'time_unit_in': 'list[TimeUnit]',
        'time_unit_not': 'TimeUnit',
        'time_unit_not_in': 'list[TimeUnit]'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'cluster': 'cluster',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'graphs_every': 'graphs_every',
        'graphs_none': 'graphs_none',
        'graphs_some': 'graphs_some',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'time_span': 'time_span',
        'time_span_gt': 'time_span_gt',
        'time_span_gte': 'time_span_gte',
        'time_span_in': 'time_span_in',
        'time_span_lt': 'time_span_lt',
        'time_span_lte': 'time_span_lte',
        'time_span_not': 'time_span_not',
        'time_span_not_in': 'time_span_not_in',
        'time_unit': 'time_unit',
        'time_unit_in': 'time_unit_in',
        'time_unit_not': 'time_unit_not',
        'time_unit_not_in': 'time_unit_not_in'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """ViewWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._cluster = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._graphs_every = None
        self._graphs_none = None
        self._graphs_some = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._time_span = None
        self._time_span_gt = None
        self._time_span_gte = None
        self._time_span_in = None
        self._time_span_lt = None
        self._time_span_lte = None
        self._time_span_not = None
        self._time_span_not_in = None
        self._time_unit = None
        self._time_unit_in = None
        self._time_unit_not = None
        self._time_unit_not_in = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.cluster = kwargs.get("cluster", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.graphs_every = kwargs.get("graphs_every", None)
        self.graphs_none = kwargs.get("graphs_none", None)
        self.graphs_some = kwargs.get("graphs_some", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.time_span = kwargs.get("time_span", None)
        self.time_span_gt = kwargs.get("time_span_gt", None)
        self.time_span_gte = kwargs.get("time_span_gte", None)
        self.time_span_in = kwargs.get("time_span_in", None)
        self.time_span_lt = kwargs.get("time_span_lt", None)
        self.time_span_lte = kwargs.get("time_span_lte", None)
        self.time_span_not = kwargs.get("time_span_not", None)
        self.time_span_not_in = kwargs.get("time_span_not_in", None)
        self.time_unit = kwargs.get("time_unit", None)
        self.time_unit_in = kwargs.get("time_unit_in", None)
        self.time_unit_not = kwargs.get("time_unit_not", None)
        self.time_unit_not_in = kwargs.get("time_unit_not_in", None)

    @property
    def _and(self):
        """Gets the _and of this ViewWhereInput.  # noqa: E501


        :return: The _and of this ViewWhereInput.  # noqa: E501
        :rtype: list[ViewWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this ViewWhereInput.


        :param _and: The _and of this ViewWhereInput.  # noqa: E501
        :type _and: list[ViewWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this ViewWhereInput.  # noqa: E501


        :return: The _not of this ViewWhereInput.  # noqa: E501
        :rtype: list[ViewWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this ViewWhereInput.


        :param _not: The _not of this ViewWhereInput.  # noqa: E501
        :type _not: list[ViewWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this ViewWhereInput.  # noqa: E501


        :return: The _or of this ViewWhereInput.  # noqa: E501
        :rtype: list[ViewWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this ViewWhereInput.


        :param _or: The _or of this ViewWhereInput.  # noqa: E501
        :type _or: list[ViewWhereInput]
        """

        self.__or = _or

    @property
    def cluster(self):
        """Gets the cluster of this ViewWhereInput.  # noqa: E501


        :return: The cluster of this ViewWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this ViewWhereInput.


        :param cluster: The cluster of this ViewWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this ViewWhereInput.  # noqa: E501


        :return: The entity_async_status of this ViewWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this ViewWhereInput.


        :param entity_async_status: The entity_async_status of this ViewWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this ViewWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this ViewWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this ViewWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this ViewWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this ViewWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this ViewWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this ViewWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this ViewWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this ViewWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this ViewWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def graphs_every(self):
        """Gets the graphs_every of this ViewWhereInput.  # noqa: E501


        :return: The graphs_every of this ViewWhereInput.  # noqa: E501
        :rtype: GraphWhereInput
        """
        return self._graphs_every

    @graphs_every.setter
    def graphs_every(self, graphs_every):
        """Sets the graphs_every of this ViewWhereInput.


        :param graphs_every: The graphs_every of this ViewWhereInput.  # noqa: E501
        :type graphs_every: GraphWhereInput
        """

        self._graphs_every = graphs_every

    @property
    def graphs_none(self):
        """Gets the graphs_none of this ViewWhereInput.  # noqa: E501


        :return: The graphs_none of this ViewWhereInput.  # noqa: E501
        :rtype: GraphWhereInput
        """
        return self._graphs_none

    @graphs_none.setter
    def graphs_none(self, graphs_none):
        """Sets the graphs_none of this ViewWhereInput.


        :param graphs_none: The graphs_none of this ViewWhereInput.  # noqa: E501
        :type graphs_none: GraphWhereInput
        """

        self._graphs_none = graphs_none

    @property
    def graphs_some(self):
        """Gets the graphs_some of this ViewWhereInput.  # noqa: E501


        :return: The graphs_some of this ViewWhereInput.  # noqa: E501
        :rtype: GraphWhereInput
        """
        return self._graphs_some

    @graphs_some.setter
    def graphs_some(self, graphs_some):
        """Sets the graphs_some of this ViewWhereInput.


        :param graphs_some: The graphs_some of this ViewWhereInput.  # noqa: E501
        :type graphs_some: GraphWhereInput
        """

        self._graphs_some = graphs_some

    @property
    def id(self):
        """Gets the id of this ViewWhereInput.  # noqa: E501


        :return: The id of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ViewWhereInput.


        :param id: The id of this ViewWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this ViewWhereInput.  # noqa: E501


        :return: The id_contains of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this ViewWhereInput.


        :param id_contains: The id_contains of this ViewWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this ViewWhereInput.  # noqa: E501


        :return: The id_ends_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this ViewWhereInput.


        :param id_ends_with: The id_ends_with of this ViewWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this ViewWhereInput.  # noqa: E501


        :return: The id_gt of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this ViewWhereInput.


        :param id_gt: The id_gt of this ViewWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this ViewWhereInput.  # noqa: E501


        :return: The id_gte of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this ViewWhereInput.


        :param id_gte: The id_gte of this ViewWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this ViewWhereInput.  # noqa: E501


        :return: The id_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this ViewWhereInput.


        :param id_in: The id_in of this ViewWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this ViewWhereInput.  # noqa: E501


        :return: The id_lt of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this ViewWhereInput.


        :param id_lt: The id_lt of this ViewWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this ViewWhereInput.  # noqa: E501


        :return: The id_lte of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this ViewWhereInput.


        :param id_lte: The id_lte of this ViewWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this ViewWhereInput.  # noqa: E501


        :return: The id_not of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this ViewWhereInput.


        :param id_not: The id_not of this ViewWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this ViewWhereInput.  # noqa: E501


        :return: The id_not_contains of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this ViewWhereInput.


        :param id_not_contains: The id_not_contains of this ViewWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this ViewWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this ViewWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this ViewWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this ViewWhereInput.  # noqa: E501


        :return: The id_not_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this ViewWhereInput.


        :param id_not_in: The id_not_in of this ViewWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this ViewWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this ViewWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this ViewWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this ViewWhereInput.  # noqa: E501


        :return: The id_starts_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this ViewWhereInput.


        :param id_starts_with: The id_starts_with of this ViewWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def local_id(self):
        """Gets the local_id of this ViewWhereInput.  # noqa: E501


        :return: The local_id of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this ViewWhereInput.


        :param local_id: The local_id of this ViewWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this ViewWhereInput.  # noqa: E501


        :return: The local_id_contains of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this ViewWhereInput.


        :param local_id_contains: The local_id_contains of this ViewWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this ViewWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this ViewWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this ViewWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this ViewWhereInput.  # noqa: E501


        :return: The local_id_gt of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this ViewWhereInput.


        :param local_id_gt: The local_id_gt of this ViewWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this ViewWhereInput.  # noqa: E501


        :return: The local_id_gte of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this ViewWhereInput.


        :param local_id_gte: The local_id_gte of this ViewWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this ViewWhereInput.  # noqa: E501


        :return: The local_id_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this ViewWhereInput.


        :param local_id_in: The local_id_in of this ViewWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this ViewWhereInput.  # noqa: E501


        :return: The local_id_lt of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this ViewWhereInput.


        :param local_id_lt: The local_id_lt of this ViewWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this ViewWhereInput.  # noqa: E501


        :return: The local_id_lte of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this ViewWhereInput.


        :param local_id_lte: The local_id_lte of this ViewWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this ViewWhereInput.  # noqa: E501


        :return: The local_id_not of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this ViewWhereInput.


        :param local_id_not: The local_id_not of this ViewWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this ViewWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this ViewWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this ViewWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this ViewWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this ViewWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this ViewWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this ViewWhereInput.  # noqa: E501


        :return: The local_id_not_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this ViewWhereInput.


        :param local_id_not_in: The local_id_not_in of this ViewWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this ViewWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this ViewWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this ViewWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this ViewWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this ViewWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this ViewWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def name(self):
        """Gets the name of this ViewWhereInput.  # noqa: E501


        :return: The name of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ViewWhereInput.


        :param name: The name of this ViewWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this ViewWhereInput.  # noqa: E501


        :return: The name_contains of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this ViewWhereInput.


        :param name_contains: The name_contains of this ViewWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this ViewWhereInput.  # noqa: E501


        :return: The name_ends_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this ViewWhereInput.


        :param name_ends_with: The name_ends_with of this ViewWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this ViewWhereInput.  # noqa: E501


        :return: The name_gt of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this ViewWhereInput.


        :param name_gt: The name_gt of this ViewWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this ViewWhereInput.  # noqa: E501


        :return: The name_gte of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this ViewWhereInput.


        :param name_gte: The name_gte of this ViewWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this ViewWhereInput.  # noqa: E501


        :return: The name_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this ViewWhereInput.


        :param name_in: The name_in of this ViewWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this ViewWhereInput.  # noqa: E501


        :return: The name_lt of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this ViewWhereInput.


        :param name_lt: The name_lt of this ViewWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this ViewWhereInput.  # noqa: E501


        :return: The name_lte of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this ViewWhereInput.


        :param name_lte: The name_lte of this ViewWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this ViewWhereInput.  # noqa: E501


        :return: The name_not of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this ViewWhereInput.


        :param name_not: The name_not of this ViewWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this ViewWhereInput.  # noqa: E501


        :return: The name_not_contains of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this ViewWhereInput.


        :param name_not_contains: The name_not_contains of this ViewWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this ViewWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this ViewWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this ViewWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this ViewWhereInput.  # noqa: E501


        :return: The name_not_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this ViewWhereInput.


        :param name_not_in: The name_not_in of this ViewWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this ViewWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this ViewWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this ViewWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this ViewWhereInput.  # noqa: E501


        :return: The name_starts_with of this ViewWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this ViewWhereInput.


        :param name_starts_with: The name_starts_with of this ViewWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def time_span(self):
        """Gets the time_span of this ViewWhereInput.  # noqa: E501


        :return: The time_span of this ViewWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._time_span

    @time_span.setter
    def time_span(self, time_span):
        """Sets the time_span of this ViewWhereInput.


        :param time_span: The time_span of this ViewWhereInput.  # noqa: E501
        :type time_span: int
        """

        self._time_span = time_span

    @property
    def time_span_gt(self):
        """Gets the time_span_gt of this ViewWhereInput.  # noqa: E501


        :return: The time_span_gt of this ViewWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._time_span_gt

    @time_span_gt.setter
    def time_span_gt(self, time_span_gt):
        """Sets the time_span_gt of this ViewWhereInput.


        :param time_span_gt: The time_span_gt of this ViewWhereInput.  # noqa: E501
        :type time_span_gt: int
        """

        self._time_span_gt = time_span_gt

    @property
    def time_span_gte(self):
        """Gets the time_span_gte of this ViewWhereInput.  # noqa: E501


        :return: The time_span_gte of this ViewWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._time_span_gte

    @time_span_gte.setter
    def time_span_gte(self, time_span_gte):
        """Sets the time_span_gte of this ViewWhereInput.


        :param time_span_gte: The time_span_gte of this ViewWhereInput.  # noqa: E501
        :type time_span_gte: int
        """

        self._time_span_gte = time_span_gte

    @property
    def time_span_in(self):
        """Gets the time_span_in of this ViewWhereInput.  # noqa: E501


        :return: The time_span_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._time_span_in

    @time_span_in.setter
    def time_span_in(self, time_span_in):
        """Sets the time_span_in of this ViewWhereInput.


        :param time_span_in: The time_span_in of this ViewWhereInput.  # noqa: E501
        :type time_span_in: list[int]
        """

        self._time_span_in = time_span_in

    @property
    def time_span_lt(self):
        """Gets the time_span_lt of this ViewWhereInput.  # noqa: E501


        :return: The time_span_lt of this ViewWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._time_span_lt

    @time_span_lt.setter
    def time_span_lt(self, time_span_lt):
        """Sets the time_span_lt of this ViewWhereInput.


        :param time_span_lt: The time_span_lt of this ViewWhereInput.  # noqa: E501
        :type time_span_lt: int
        """

        self._time_span_lt = time_span_lt

    @property
    def time_span_lte(self):
        """Gets the time_span_lte of this ViewWhereInput.  # noqa: E501


        :return: The time_span_lte of this ViewWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._time_span_lte

    @time_span_lte.setter
    def time_span_lte(self, time_span_lte):
        """Sets the time_span_lte of this ViewWhereInput.


        :param time_span_lte: The time_span_lte of this ViewWhereInput.  # noqa: E501
        :type time_span_lte: int
        """

        self._time_span_lte = time_span_lte

    @property
    def time_span_not(self):
        """Gets the time_span_not of this ViewWhereInput.  # noqa: E501


        :return: The time_span_not of this ViewWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._time_span_not

    @time_span_not.setter
    def time_span_not(self, time_span_not):
        """Sets the time_span_not of this ViewWhereInput.


        :param time_span_not: The time_span_not of this ViewWhereInput.  # noqa: E501
        :type time_span_not: int
        """

        self._time_span_not = time_span_not

    @property
    def time_span_not_in(self):
        """Gets the time_span_not_in of this ViewWhereInput.  # noqa: E501


        :return: The time_span_not_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._time_span_not_in

    @time_span_not_in.setter
    def time_span_not_in(self, time_span_not_in):
        """Sets the time_span_not_in of this ViewWhereInput.


        :param time_span_not_in: The time_span_not_in of this ViewWhereInput.  # noqa: E501
        :type time_span_not_in: list[int]
        """

        self._time_span_not_in = time_span_not_in

    @property
    def time_unit(self):
        """Gets the time_unit of this ViewWhereInput.  # noqa: E501


        :return: The time_unit of this ViewWhereInput.  # noqa: E501
        :rtype: TimeUnit
        """
        return self._time_unit

    @time_unit.setter
    def time_unit(self, time_unit):
        """Sets the time_unit of this ViewWhereInput.


        :param time_unit: The time_unit of this ViewWhereInput.  # noqa: E501
        :type time_unit: TimeUnit
        """

        self._time_unit = time_unit

    @property
    def time_unit_in(self):
        """Gets the time_unit_in of this ViewWhereInput.  # noqa: E501


        :return: The time_unit_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[TimeUnit]
        """
        return self._time_unit_in

    @time_unit_in.setter
    def time_unit_in(self, time_unit_in):
        """Sets the time_unit_in of this ViewWhereInput.


        :param time_unit_in: The time_unit_in of this ViewWhereInput.  # noqa: E501
        :type time_unit_in: list[TimeUnit]
        """

        self._time_unit_in = time_unit_in

    @property
    def time_unit_not(self):
        """Gets the time_unit_not of this ViewWhereInput.  # noqa: E501


        :return: The time_unit_not of this ViewWhereInput.  # noqa: E501
        :rtype: TimeUnit
        """
        return self._time_unit_not

    @time_unit_not.setter
    def time_unit_not(self, time_unit_not):
        """Sets the time_unit_not of this ViewWhereInput.


        :param time_unit_not: The time_unit_not of this ViewWhereInput.  # noqa: E501
        :type time_unit_not: TimeUnit
        """

        self._time_unit_not = time_unit_not

    @property
    def time_unit_not_in(self):
        """Gets the time_unit_not_in of this ViewWhereInput.  # noqa: E501


        :return: The time_unit_not_in of this ViewWhereInput.  # noqa: E501
        :rtype: list[TimeUnit]
        """
        return self._time_unit_not_in

    @time_unit_not_in.setter
    def time_unit_not_in(self, time_unit_not_in):
        """Sets the time_unit_not_in of this ViewWhereInput.


        :param time_unit_not_in: The time_unit_not_in of this ViewWhereInput.  # noqa: E501
        :type time_unit_not_in: list[TimeUnit]
        """

        self._time_unit_not_in = time_unit_not_in

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ViewWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ViewWhereInput):
            return True

        return self.to_dict() != other.to_dict()

# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class UsbDeviceWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[UsbDeviceWhereInput]',
        '_not': 'list[UsbDeviceWhereInput]',
        '_or': 'list[UsbDeviceWhereInput]',
        'binded': 'bool',
        'binded_not': 'bool',
        'description': 'str',
        'description_contains': 'str',
        'description_ends_with': 'str',
        'description_gt': 'str',
        'description_gte': 'str',
        'description_in': 'list[str]',
        'description_lt': 'str',
        'description_lte': 'str',
        'description_not': 'str',
        'description_not_contains': 'str',
        'description_not_ends_with': 'str',
        'description_not_in': 'list[str]',
        'description_not_starts_with': 'str',
        'description_starts_with': 'str',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'host': 'HostWhereInput',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'local_created_at': 'str',
        'local_created_at_gt': 'str',
        'local_created_at_gte': 'str',
        'local_created_at_in': 'list[str]',
        'local_created_at_lt': 'str',
        'local_created_at_lte': 'str',
        'local_created_at_not': 'str',
        'local_created_at_not_in': 'list[str]',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'manufacturer': 'str',
        'manufacturer_contains': 'str',
        'manufacturer_ends_with': 'str',
        'manufacturer_gt': 'str',
        'manufacturer_gte': 'str',
        'manufacturer_in': 'list[str]',
        'manufacturer_lt': 'str',
        'manufacturer_lte': 'str',
        'manufacturer_not': 'str',
        'manufacturer_not_contains': 'str',
        'manufacturer_not_ends_with': 'str',
        'manufacturer_not_in': 'list[str]',
        'manufacturer_not_starts_with': 'str',
        'manufacturer_starts_with': 'str',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'size': 'int',
        'size_gt': 'int',
        'size_gte': 'int',
        'size_in': 'list[int]',
        'size_lt': 'int',
        'size_lte': 'int',
        'size_not': 'int',
        'size_not_in': 'list[int]',
        'status': 'UsbDeviceStatus',
        'status_in': 'list[UsbDeviceStatus]',
        'status_not': 'UsbDeviceStatus',
        'status_not_in': 'list[UsbDeviceStatus]',
        'usb_type': 'str',
        'usb_type_contains': 'str',
        'usb_type_ends_with': 'str',
        'usb_type_gt': 'str',
        'usb_type_gte': 'str',
        'usb_type_in': 'list[str]',
        'usb_type_lt': 'str',
        'usb_type_lte': 'str',
        'usb_type_not': 'str',
        'usb_type_not_contains': 'str',
        'usb_type_not_ends_with': 'str',
        'usb_type_not_in': 'list[str]',
        'usb_type_not_starts_with': 'str',
        'usb_type_starts_with': 'str',
        'vms_every': 'VmWhereInput',
        'vms_none': 'VmWhereInput',
        'vms_some': 'VmWhereInput'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'binded': 'binded',
        'binded_not': 'binded_not',
        'description': 'description',
        'description_contains': 'description_contains',
        'description_ends_with': 'description_ends_with',
        'description_gt': 'description_gt',
        'description_gte': 'description_gte',
        'description_in': 'description_in',
        'description_lt': 'description_lt',
        'description_lte': 'description_lte',
        'description_not': 'description_not',
        'description_not_contains': 'description_not_contains',
        'description_not_ends_with': 'description_not_ends_with',
        'description_not_in': 'description_not_in',
        'description_not_starts_with': 'description_not_starts_with',
        'description_starts_with': 'description_starts_with',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'host': 'host',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'local_created_at': 'local_created_at',
        'local_created_at_gt': 'local_created_at_gt',
        'local_created_at_gte': 'local_created_at_gte',
        'local_created_at_in': 'local_created_at_in',
        'local_created_at_lt': 'local_created_at_lt',
        'local_created_at_lte': 'local_created_at_lte',
        'local_created_at_not': 'local_created_at_not',
        'local_created_at_not_in': 'local_created_at_not_in',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'manufacturer': 'manufacturer',
        'manufacturer_contains': 'manufacturer_contains',
        'manufacturer_ends_with': 'manufacturer_ends_with',
        'manufacturer_gt': 'manufacturer_gt',
        'manufacturer_gte': 'manufacturer_gte',
        'manufacturer_in': 'manufacturer_in',
        'manufacturer_lt': 'manufacturer_lt',
        'manufacturer_lte': 'manufacturer_lte',
        'manufacturer_not': 'manufacturer_not',
        'manufacturer_not_contains': 'manufacturer_not_contains',
        'manufacturer_not_ends_with': 'manufacturer_not_ends_with',
        'manufacturer_not_in': 'manufacturer_not_in',
        'manufacturer_not_starts_with': 'manufacturer_not_starts_with',
        'manufacturer_starts_with': 'manufacturer_starts_with',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'size': 'size',
        'size_gt': 'size_gt',
        'size_gte': 'size_gte',
        'size_in': 'size_in',
        'size_lt': 'size_lt',
        'size_lte': 'size_lte',
        'size_not': 'size_not',
        'size_not_in': 'size_not_in',
        'status': 'status',
        'status_in': 'status_in',
        'status_not': 'status_not',
        'status_not_in': 'status_not_in',
        'usb_type': 'usb_type',
        'usb_type_contains': 'usb_type_contains',
        'usb_type_ends_with': 'usb_type_ends_with',
        'usb_type_gt': 'usb_type_gt',
        'usb_type_gte': 'usb_type_gte',
        'usb_type_in': 'usb_type_in',
        'usb_type_lt': 'usb_type_lt',
        'usb_type_lte': 'usb_type_lte',
        'usb_type_not': 'usb_type_not',
        'usb_type_not_contains': 'usb_type_not_contains',
        'usb_type_not_ends_with': 'usb_type_not_ends_with',
        'usb_type_not_in': 'usb_type_not_in',
        'usb_type_not_starts_with': 'usb_type_not_starts_with',
        'usb_type_starts_with': 'usb_type_starts_with',
        'vms_every': 'vms_every',
        'vms_none': 'vms_none',
        'vms_some': 'vms_some'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """UsbDeviceWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._binded = None
        self._binded_not = None
        self._description = None
        self._description_contains = None
        self._description_ends_with = None
        self._description_gt = None
        self._description_gte = None
        self._description_in = None
        self._description_lt = None
        self._description_lte = None
        self._description_not = None
        self._description_not_contains = None
        self._description_not_ends_with = None
        self._description_not_in = None
        self._description_not_starts_with = None
        self._description_starts_with = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._host = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._local_created_at = None
        self._local_created_at_gt = None
        self._local_created_at_gte = None
        self._local_created_at_in = None
        self._local_created_at_lt = None
        self._local_created_at_lte = None
        self._local_created_at_not = None
        self._local_created_at_not_in = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._manufacturer = None
        self._manufacturer_contains = None
        self._manufacturer_ends_with = None
        self._manufacturer_gt = None
        self._manufacturer_gte = None
        self._manufacturer_in = None
        self._manufacturer_lt = None
        self._manufacturer_lte = None
        self._manufacturer_not = None
        self._manufacturer_not_contains = None
        self._manufacturer_not_ends_with = None
        self._manufacturer_not_in = None
        self._manufacturer_not_starts_with = None
        self._manufacturer_starts_with = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._size = None
        self._size_gt = None
        self._size_gte = None
        self._size_in = None
        self._size_lt = None
        self._size_lte = None
        self._size_not = None
        self._size_not_in = None
        self._status = None
        self._status_in = None
        self._status_not = None
        self._status_not_in = None
        self._usb_type = None
        self._usb_type_contains = None
        self._usb_type_ends_with = None
        self._usb_type_gt = None
        self._usb_type_gte = None
        self._usb_type_in = None
        self._usb_type_lt = None
        self._usb_type_lte = None
        self._usb_type_not = None
        self._usb_type_not_contains = None
        self._usb_type_not_ends_with = None
        self._usb_type_not_in = None
        self._usb_type_not_starts_with = None
        self._usb_type_starts_with = None
        self._vms_every = None
        self._vms_none = None
        self._vms_some = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.binded = kwargs.get("binded", None)
        self.binded_not = kwargs.get("binded_not", None)
        self.description = kwargs.get("description", None)
        self.description_contains = kwargs.get("description_contains", None)
        self.description_ends_with = kwargs.get("description_ends_with", None)
        self.description_gt = kwargs.get("description_gt", None)
        self.description_gte = kwargs.get("description_gte", None)
        self.description_in = kwargs.get("description_in", None)
        self.description_lt = kwargs.get("description_lt", None)
        self.description_lte = kwargs.get("description_lte", None)
        self.description_not = kwargs.get("description_not", None)
        self.description_not_contains = kwargs.get("description_not_contains", None)
        self.description_not_ends_with = kwargs.get("description_not_ends_with", None)
        self.description_not_in = kwargs.get("description_not_in", None)
        self.description_not_starts_with = kwargs.get("description_not_starts_with", None)
        self.description_starts_with = kwargs.get("description_starts_with", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.host = kwargs.get("host", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.local_created_at = kwargs.get("local_created_at", None)
        self.local_created_at_gt = kwargs.get("local_created_at_gt", None)
        self.local_created_at_gte = kwargs.get("local_created_at_gte", None)
        self.local_created_at_in = kwargs.get("local_created_at_in", None)
        self.local_created_at_lt = kwargs.get("local_created_at_lt", None)
        self.local_created_at_lte = kwargs.get("local_created_at_lte", None)
        self.local_created_at_not = kwargs.get("local_created_at_not", None)
        self.local_created_at_not_in = kwargs.get("local_created_at_not_in", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.manufacturer = kwargs.get("manufacturer", None)
        self.manufacturer_contains = kwargs.get("manufacturer_contains", None)
        self.manufacturer_ends_with = kwargs.get("manufacturer_ends_with", None)
        self.manufacturer_gt = kwargs.get("manufacturer_gt", None)
        self.manufacturer_gte = kwargs.get("manufacturer_gte", None)
        self.manufacturer_in = kwargs.get("manufacturer_in", None)
        self.manufacturer_lt = kwargs.get("manufacturer_lt", None)
        self.manufacturer_lte = kwargs.get("manufacturer_lte", None)
        self.manufacturer_not = kwargs.get("manufacturer_not", None)
        self.manufacturer_not_contains = kwargs.get("manufacturer_not_contains", None)
        self.manufacturer_not_ends_with = kwargs.get("manufacturer_not_ends_with", None)
        self.manufacturer_not_in = kwargs.get("manufacturer_not_in", None)
        self.manufacturer_not_starts_with = kwargs.get("manufacturer_not_starts_with", None)
        self.manufacturer_starts_with = kwargs.get("manufacturer_starts_with", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.size = kwargs.get("size", None)
        self.size_gt = kwargs.get("size_gt", None)
        self.size_gte = kwargs.get("size_gte", None)
        self.size_in = kwargs.get("size_in", None)
        self.size_lt = kwargs.get("size_lt", None)
        self.size_lte = kwargs.get("size_lte", None)
        self.size_not = kwargs.get("size_not", None)
        self.size_not_in = kwargs.get("size_not_in", None)
        self.status = kwargs.get("status", None)
        self.status_in = kwargs.get("status_in", None)
        self.status_not = kwargs.get("status_not", None)
        self.status_not_in = kwargs.get("status_not_in", None)
        self.usb_type = kwargs.get("usb_type", None)
        self.usb_type_contains = kwargs.get("usb_type_contains", None)
        self.usb_type_ends_with = kwargs.get("usb_type_ends_with", None)
        self.usb_type_gt = kwargs.get("usb_type_gt", None)
        self.usb_type_gte = kwargs.get("usb_type_gte", None)
        self.usb_type_in = kwargs.get("usb_type_in", None)
        self.usb_type_lt = kwargs.get("usb_type_lt", None)
        self.usb_type_lte = kwargs.get("usb_type_lte", None)
        self.usb_type_not = kwargs.get("usb_type_not", None)
        self.usb_type_not_contains = kwargs.get("usb_type_not_contains", None)
        self.usb_type_not_ends_with = kwargs.get("usb_type_not_ends_with", None)
        self.usb_type_not_in = kwargs.get("usb_type_not_in", None)
        self.usb_type_not_starts_with = kwargs.get("usb_type_not_starts_with", None)
        self.usb_type_starts_with = kwargs.get("usb_type_starts_with", None)
        self.vms_every = kwargs.get("vms_every", None)
        self.vms_none = kwargs.get("vms_none", None)
        self.vms_some = kwargs.get("vms_some", None)

    @property
    def _and(self):
        """Gets the _and of this UsbDeviceWhereInput.  # noqa: E501


        :return: The _and of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[UsbDeviceWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this UsbDeviceWhereInput.


        :param _and: The _and of this UsbDeviceWhereInput.  # noqa: E501
        :type _and: list[UsbDeviceWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The _not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[UsbDeviceWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this UsbDeviceWhereInput.


        :param _not: The _not of this UsbDeviceWhereInput.  # noqa: E501
        :type _not: list[UsbDeviceWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this UsbDeviceWhereInput.  # noqa: E501


        :return: The _or of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[UsbDeviceWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this UsbDeviceWhereInput.


        :param _or: The _or of this UsbDeviceWhereInput.  # noqa: E501
        :type _or: list[UsbDeviceWhereInput]
        """

        self.__or = _or

    @property
    def binded(self):
        """Gets the binded of this UsbDeviceWhereInput.  # noqa: E501


        :return: The binded of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._binded

    @binded.setter
    def binded(self, binded):
        """Sets the binded of this UsbDeviceWhereInput.


        :param binded: The binded of this UsbDeviceWhereInput.  # noqa: E501
        :type binded: bool
        """

        self._binded = binded

    @property
    def binded_not(self):
        """Gets the binded_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The binded_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._binded_not

    @binded_not.setter
    def binded_not(self, binded_not):
        """Sets the binded_not of this UsbDeviceWhereInput.


        :param binded_not: The binded_not of this UsbDeviceWhereInput.  # noqa: E501
        :type binded_not: bool
        """

        self._binded_not = binded_not

    @property
    def description(self):
        """Gets the description of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UsbDeviceWhereInput.


        :param description: The description of this UsbDeviceWhereInput.  # noqa: E501
        :type description: str
        """

        self._description = description

    @property
    def description_contains(self):
        """Gets the description_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_contains

    @description_contains.setter
    def description_contains(self, description_contains):
        """Sets the description_contains of this UsbDeviceWhereInput.


        :param description_contains: The description_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type description_contains: str
        """

        self._description_contains = description_contains

    @property
    def description_ends_with(self):
        """Gets the description_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_ends_with

    @description_ends_with.setter
    def description_ends_with(self, description_ends_with):
        """Sets the description_ends_with of this UsbDeviceWhereInput.


        :param description_ends_with: The description_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type description_ends_with: str
        """

        self._description_ends_with = description_ends_with

    @property
    def description_gt(self):
        """Gets the description_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gt

    @description_gt.setter
    def description_gt(self, description_gt):
        """Sets the description_gt of this UsbDeviceWhereInput.


        :param description_gt: The description_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type description_gt: str
        """

        self._description_gt = description_gt

    @property
    def description_gte(self):
        """Gets the description_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gte

    @description_gte.setter
    def description_gte(self, description_gte):
        """Sets the description_gte of this UsbDeviceWhereInput.


        :param description_gte: The description_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type description_gte: str
        """

        self._description_gte = description_gte

    @property
    def description_in(self):
        """Gets the description_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_in

    @description_in.setter
    def description_in(self, description_in):
        """Sets the description_in of this UsbDeviceWhereInput.


        :param description_in: The description_in of this UsbDeviceWhereInput.  # noqa: E501
        :type description_in: list[str]
        """

        self._description_in = description_in

    @property
    def description_lt(self):
        """Gets the description_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lt

    @description_lt.setter
    def description_lt(self, description_lt):
        """Sets the description_lt of this UsbDeviceWhereInput.


        :param description_lt: The description_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type description_lt: str
        """

        self._description_lt = description_lt

    @property
    def description_lte(self):
        """Gets the description_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lte

    @description_lte.setter
    def description_lte(self, description_lte):
        """Sets the description_lte of this UsbDeviceWhereInput.


        :param description_lte: The description_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type description_lte: str
        """

        self._description_lte = description_lte

    @property
    def description_not(self):
        """Gets the description_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not

    @description_not.setter
    def description_not(self, description_not):
        """Sets the description_not of this UsbDeviceWhereInput.


        :param description_not: The description_not of this UsbDeviceWhereInput.  # noqa: E501
        :type description_not: str
        """

        self._description_not = description_not

    @property
    def description_not_contains(self):
        """Gets the description_not_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_contains

    @description_not_contains.setter
    def description_not_contains(self, description_not_contains):
        """Sets the description_not_contains of this UsbDeviceWhereInput.


        :param description_not_contains: The description_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type description_not_contains: str
        """

        self._description_not_contains = description_not_contains

    @property
    def description_not_ends_with(self):
        """Gets the description_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_ends_with

    @description_not_ends_with.setter
    def description_not_ends_with(self, description_not_ends_with):
        """Sets the description_not_ends_with of this UsbDeviceWhereInput.


        :param description_not_ends_with: The description_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type description_not_ends_with: str
        """

        self._description_not_ends_with = description_not_ends_with

    @property
    def description_not_in(self):
        """Gets the description_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_not_in

    @description_not_in.setter
    def description_not_in(self, description_not_in):
        """Sets the description_not_in of this UsbDeviceWhereInput.


        :param description_not_in: The description_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type description_not_in: list[str]
        """

        self._description_not_in = description_not_in

    @property
    def description_not_starts_with(self):
        """Gets the description_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_starts_with

    @description_not_starts_with.setter
    def description_not_starts_with(self, description_not_starts_with):
        """Sets the description_not_starts_with of this UsbDeviceWhereInput.


        :param description_not_starts_with: The description_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type description_not_starts_with: str
        """

        self._description_not_starts_with = description_not_starts_with

    @property
    def description_starts_with(self):
        """Gets the description_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The description_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_starts_with

    @description_starts_with.setter
    def description_starts_with(self, description_starts_with):
        """Sets the description_starts_with of this UsbDeviceWhereInput.


        :param description_starts_with: The description_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type description_starts_with: str
        """

        self._description_starts_with = description_starts_with

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this UsbDeviceWhereInput.  # noqa: E501


        :return: The entity_async_status of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this UsbDeviceWhereInput.


        :param entity_async_status: The entity_async_status of this UsbDeviceWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this UsbDeviceWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this UsbDeviceWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this UsbDeviceWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this UsbDeviceWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this UsbDeviceWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def host(self):
        """Gets the host of this UsbDeviceWhereInput.  # noqa: E501


        :return: The host of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: HostWhereInput
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this UsbDeviceWhereInput.


        :param host: The host of this UsbDeviceWhereInput.  # noqa: E501
        :type host: HostWhereInput
        """

        self._host = host

    @property
    def id(self):
        """Gets the id of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UsbDeviceWhereInput.


        :param id: The id of this UsbDeviceWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this UsbDeviceWhereInput.


        :param id_contains: The id_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this UsbDeviceWhereInput.


        :param id_ends_with: The id_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this UsbDeviceWhereInput.


        :param id_gt: The id_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this UsbDeviceWhereInput.


        :param id_gte: The id_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this UsbDeviceWhereInput.


        :param id_in: The id_in of this UsbDeviceWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this UsbDeviceWhereInput.


        :param id_lt: The id_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this UsbDeviceWhereInput.


        :param id_lte: The id_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this UsbDeviceWhereInput.


        :param id_not: The id_not of this UsbDeviceWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this UsbDeviceWhereInput.


        :param id_not_contains: The id_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this UsbDeviceWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this UsbDeviceWhereInput.


        :param id_not_in: The id_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this UsbDeviceWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The id_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this UsbDeviceWhereInput.


        :param id_starts_with: The id_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def local_created_at(self):
        """Gets the local_created_at of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at

    @local_created_at.setter
    def local_created_at(self, local_created_at):
        """Sets the local_created_at of this UsbDeviceWhereInput.


        :param local_created_at: The local_created_at of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at: str
        """

        self._local_created_at = local_created_at

    @property
    def local_created_at_gt(self):
        """Gets the local_created_at_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_gt

    @local_created_at_gt.setter
    def local_created_at_gt(self, local_created_at_gt):
        """Sets the local_created_at_gt of this UsbDeviceWhereInput.


        :param local_created_at_gt: The local_created_at_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at_gt: str
        """

        self._local_created_at_gt = local_created_at_gt

    @property
    def local_created_at_gte(self):
        """Gets the local_created_at_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_gte

    @local_created_at_gte.setter
    def local_created_at_gte(self, local_created_at_gte):
        """Sets the local_created_at_gte of this UsbDeviceWhereInput.


        :param local_created_at_gte: The local_created_at_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at_gte: str
        """

        self._local_created_at_gte = local_created_at_gte

    @property
    def local_created_at_in(self):
        """Gets the local_created_at_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_created_at_in

    @local_created_at_in.setter
    def local_created_at_in(self, local_created_at_in):
        """Sets the local_created_at_in of this UsbDeviceWhereInput.


        :param local_created_at_in: The local_created_at_in of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at_in: list[str]
        """

        self._local_created_at_in = local_created_at_in

    @property
    def local_created_at_lt(self):
        """Gets the local_created_at_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_lt

    @local_created_at_lt.setter
    def local_created_at_lt(self, local_created_at_lt):
        """Sets the local_created_at_lt of this UsbDeviceWhereInput.


        :param local_created_at_lt: The local_created_at_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at_lt: str
        """

        self._local_created_at_lt = local_created_at_lt

    @property
    def local_created_at_lte(self):
        """Gets the local_created_at_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_lte

    @local_created_at_lte.setter
    def local_created_at_lte(self, local_created_at_lte):
        """Sets the local_created_at_lte of this UsbDeviceWhereInput.


        :param local_created_at_lte: The local_created_at_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at_lte: str
        """

        self._local_created_at_lte = local_created_at_lte

    @property
    def local_created_at_not(self):
        """Gets the local_created_at_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_not

    @local_created_at_not.setter
    def local_created_at_not(self, local_created_at_not):
        """Sets the local_created_at_not of this UsbDeviceWhereInput.


        :param local_created_at_not: The local_created_at_not of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at_not: str
        """

        self._local_created_at_not = local_created_at_not

    @property
    def local_created_at_not_in(self):
        """Gets the local_created_at_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_created_at_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_created_at_not_in

    @local_created_at_not_in.setter
    def local_created_at_not_in(self, local_created_at_not_in):
        """Sets the local_created_at_not_in of this UsbDeviceWhereInput.


        :param local_created_at_not_in: The local_created_at_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type local_created_at_not_in: list[str]
        """

        self._local_created_at_not_in = local_created_at_not_in

    @property
    def local_id(self):
        """Gets the local_id of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this UsbDeviceWhereInput.


        :param local_id: The local_id of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this UsbDeviceWhereInput.


        :param local_id_contains: The local_id_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this UsbDeviceWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this UsbDeviceWhereInput.


        :param local_id_gt: The local_id_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this UsbDeviceWhereInput.


        :param local_id_gte: The local_id_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this UsbDeviceWhereInput.


        :param local_id_in: The local_id_in of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this UsbDeviceWhereInput.


        :param local_id_lt: The local_id_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this UsbDeviceWhereInput.


        :param local_id_lte: The local_id_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this UsbDeviceWhereInput.


        :param local_id_not: The local_id_not of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this UsbDeviceWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this UsbDeviceWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this UsbDeviceWhereInput.


        :param local_id_not_in: The local_id_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this UsbDeviceWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this UsbDeviceWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def manufacturer(self):
        """Gets the manufacturer of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this UsbDeviceWhereInput.


        :param manufacturer: The manufacturer of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def manufacturer_contains(self):
        """Gets the manufacturer_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_contains

    @manufacturer_contains.setter
    def manufacturer_contains(self, manufacturer_contains):
        """Sets the manufacturer_contains of this UsbDeviceWhereInput.


        :param manufacturer_contains: The manufacturer_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_contains: str
        """

        self._manufacturer_contains = manufacturer_contains

    @property
    def manufacturer_ends_with(self):
        """Gets the manufacturer_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_ends_with

    @manufacturer_ends_with.setter
    def manufacturer_ends_with(self, manufacturer_ends_with):
        """Sets the manufacturer_ends_with of this UsbDeviceWhereInput.


        :param manufacturer_ends_with: The manufacturer_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_ends_with: str
        """

        self._manufacturer_ends_with = manufacturer_ends_with

    @property
    def manufacturer_gt(self):
        """Gets the manufacturer_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_gt

    @manufacturer_gt.setter
    def manufacturer_gt(self, manufacturer_gt):
        """Sets the manufacturer_gt of this UsbDeviceWhereInput.


        :param manufacturer_gt: The manufacturer_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_gt: str
        """

        self._manufacturer_gt = manufacturer_gt

    @property
    def manufacturer_gte(self):
        """Gets the manufacturer_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_gte

    @manufacturer_gte.setter
    def manufacturer_gte(self, manufacturer_gte):
        """Sets the manufacturer_gte of this UsbDeviceWhereInput.


        :param manufacturer_gte: The manufacturer_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_gte: str
        """

        self._manufacturer_gte = manufacturer_gte

    @property
    def manufacturer_in(self):
        """Gets the manufacturer_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._manufacturer_in

    @manufacturer_in.setter
    def manufacturer_in(self, manufacturer_in):
        """Sets the manufacturer_in of this UsbDeviceWhereInput.


        :param manufacturer_in: The manufacturer_in of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_in: list[str]
        """

        self._manufacturer_in = manufacturer_in

    @property
    def manufacturer_lt(self):
        """Gets the manufacturer_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_lt

    @manufacturer_lt.setter
    def manufacturer_lt(self, manufacturer_lt):
        """Sets the manufacturer_lt of this UsbDeviceWhereInput.


        :param manufacturer_lt: The manufacturer_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_lt: str
        """

        self._manufacturer_lt = manufacturer_lt

    @property
    def manufacturer_lte(self):
        """Gets the manufacturer_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_lte

    @manufacturer_lte.setter
    def manufacturer_lte(self, manufacturer_lte):
        """Sets the manufacturer_lte of this UsbDeviceWhereInput.


        :param manufacturer_lte: The manufacturer_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_lte: str
        """

        self._manufacturer_lte = manufacturer_lte

    @property
    def manufacturer_not(self):
        """Gets the manufacturer_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_not

    @manufacturer_not.setter
    def manufacturer_not(self, manufacturer_not):
        """Sets the manufacturer_not of this UsbDeviceWhereInput.


        :param manufacturer_not: The manufacturer_not of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_not: str
        """

        self._manufacturer_not = manufacturer_not

    @property
    def manufacturer_not_contains(self):
        """Gets the manufacturer_not_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_not_contains

    @manufacturer_not_contains.setter
    def manufacturer_not_contains(self, manufacturer_not_contains):
        """Sets the manufacturer_not_contains of this UsbDeviceWhereInput.


        :param manufacturer_not_contains: The manufacturer_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_not_contains: str
        """

        self._manufacturer_not_contains = manufacturer_not_contains

    @property
    def manufacturer_not_ends_with(self):
        """Gets the manufacturer_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_not_ends_with

    @manufacturer_not_ends_with.setter
    def manufacturer_not_ends_with(self, manufacturer_not_ends_with):
        """Sets the manufacturer_not_ends_with of this UsbDeviceWhereInput.


        :param manufacturer_not_ends_with: The manufacturer_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_not_ends_with: str
        """

        self._manufacturer_not_ends_with = manufacturer_not_ends_with

    @property
    def manufacturer_not_in(self):
        """Gets the manufacturer_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._manufacturer_not_in

    @manufacturer_not_in.setter
    def manufacturer_not_in(self, manufacturer_not_in):
        """Sets the manufacturer_not_in of this UsbDeviceWhereInput.


        :param manufacturer_not_in: The manufacturer_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_not_in: list[str]
        """

        self._manufacturer_not_in = manufacturer_not_in

    @property
    def manufacturer_not_starts_with(self):
        """Gets the manufacturer_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_not_starts_with

    @manufacturer_not_starts_with.setter
    def manufacturer_not_starts_with(self, manufacturer_not_starts_with):
        """Sets the manufacturer_not_starts_with of this UsbDeviceWhereInput.


        :param manufacturer_not_starts_with: The manufacturer_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_not_starts_with: str
        """

        self._manufacturer_not_starts_with = manufacturer_not_starts_with

    @property
    def manufacturer_starts_with(self):
        """Gets the manufacturer_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The manufacturer_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_starts_with

    @manufacturer_starts_with.setter
    def manufacturer_starts_with(self, manufacturer_starts_with):
        """Sets the manufacturer_starts_with of this UsbDeviceWhereInput.


        :param manufacturer_starts_with: The manufacturer_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type manufacturer_starts_with: str
        """

        self._manufacturer_starts_with = manufacturer_starts_with

    @property
    def name(self):
        """Gets the name of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UsbDeviceWhereInput.


        :param name: The name of this UsbDeviceWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this UsbDeviceWhereInput.


        :param name_contains: The name_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this UsbDeviceWhereInput.


        :param name_ends_with: The name_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this UsbDeviceWhereInput.


        :param name_gt: The name_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this UsbDeviceWhereInput.


        :param name_gte: The name_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this UsbDeviceWhereInput.


        :param name_in: The name_in of this UsbDeviceWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this UsbDeviceWhereInput.


        :param name_lt: The name_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this UsbDeviceWhereInput.


        :param name_lte: The name_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this UsbDeviceWhereInput.


        :param name_not: The name_not of this UsbDeviceWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this UsbDeviceWhereInput.


        :param name_not_contains: The name_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this UsbDeviceWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this UsbDeviceWhereInput.


        :param name_not_in: The name_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this UsbDeviceWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The name_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this UsbDeviceWhereInput.


        :param name_starts_with: The name_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def size(self):
        """Gets the size of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this UsbDeviceWhereInput.


        :param size: The size of this UsbDeviceWhereInput.  # noqa: E501
        :type size: int
        """

        self._size = size

    @property
    def size_gt(self):
        """Gets the size_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gt

    @size_gt.setter
    def size_gt(self, size_gt):
        """Sets the size_gt of this UsbDeviceWhereInput.


        :param size_gt: The size_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type size_gt: int
        """

        self._size_gt = size_gt

    @property
    def size_gte(self):
        """Gets the size_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gte

    @size_gte.setter
    def size_gte(self, size_gte):
        """Sets the size_gte of this UsbDeviceWhereInput.


        :param size_gte: The size_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type size_gte: int
        """

        self._size_gte = size_gte

    @property
    def size_in(self):
        """Gets the size_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_in

    @size_in.setter
    def size_in(self, size_in):
        """Sets the size_in of this UsbDeviceWhereInput.


        :param size_in: The size_in of this UsbDeviceWhereInput.  # noqa: E501
        :type size_in: list[int]
        """

        self._size_in = size_in

    @property
    def size_lt(self):
        """Gets the size_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lt

    @size_lt.setter
    def size_lt(self, size_lt):
        """Sets the size_lt of this UsbDeviceWhereInput.


        :param size_lt: The size_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type size_lt: int
        """

        self._size_lt = size_lt

    @property
    def size_lte(self):
        """Gets the size_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lte

    @size_lte.setter
    def size_lte(self, size_lte):
        """Sets the size_lte of this UsbDeviceWhereInput.


        :param size_lte: The size_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type size_lte: int
        """

        self._size_lte = size_lte

    @property
    def size_not(self):
        """Gets the size_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_not

    @size_not.setter
    def size_not(self, size_not):
        """Sets the size_not of this UsbDeviceWhereInput.


        :param size_not: The size_not of this UsbDeviceWhereInput.  # noqa: E501
        :type size_not: int
        """

        self._size_not = size_not

    @property
    def size_not_in(self):
        """Gets the size_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The size_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_not_in

    @size_not_in.setter
    def size_not_in(self, size_not_in):
        """Sets the size_not_in of this UsbDeviceWhereInput.


        :param size_not_in: The size_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type size_not_in: list[int]
        """

        self._size_not_in = size_not_in

    @property
    def status(self):
        """Gets the status of this UsbDeviceWhereInput.  # noqa: E501


        :return: The status of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: UsbDeviceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UsbDeviceWhereInput.


        :param status: The status of this UsbDeviceWhereInput.  # noqa: E501
        :type status: UsbDeviceStatus
        """

        self._status = status

    @property
    def status_in(self):
        """Gets the status_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The status_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[UsbDeviceStatus]
        """
        return self._status_in

    @status_in.setter
    def status_in(self, status_in):
        """Sets the status_in of this UsbDeviceWhereInput.


        :param status_in: The status_in of this UsbDeviceWhereInput.  # noqa: E501
        :type status_in: list[UsbDeviceStatus]
        """

        self._status_in = status_in

    @property
    def status_not(self):
        """Gets the status_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The status_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: UsbDeviceStatus
        """
        return self._status_not

    @status_not.setter
    def status_not(self, status_not):
        """Sets the status_not of this UsbDeviceWhereInput.


        :param status_not: The status_not of this UsbDeviceWhereInput.  # noqa: E501
        :type status_not: UsbDeviceStatus
        """

        self._status_not = status_not

    @property
    def status_not_in(self):
        """Gets the status_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The status_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[UsbDeviceStatus]
        """
        return self._status_not_in

    @status_not_in.setter
    def status_not_in(self, status_not_in):
        """Sets the status_not_in of this UsbDeviceWhereInput.


        :param status_not_in: The status_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type status_not_in: list[UsbDeviceStatus]
        """

        self._status_not_in = status_not_in

    @property
    def usb_type(self):
        """Gets the usb_type of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type

    @usb_type.setter
    def usb_type(self, usb_type):
        """Sets the usb_type of this UsbDeviceWhereInput.


        :param usb_type: The usb_type of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type: str
        """

        self._usb_type = usb_type

    @property
    def usb_type_contains(self):
        """Gets the usb_type_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_contains

    @usb_type_contains.setter
    def usb_type_contains(self, usb_type_contains):
        """Sets the usb_type_contains of this UsbDeviceWhereInput.


        :param usb_type_contains: The usb_type_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_contains: str
        """

        self._usb_type_contains = usb_type_contains

    @property
    def usb_type_ends_with(self):
        """Gets the usb_type_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_ends_with

    @usb_type_ends_with.setter
    def usb_type_ends_with(self, usb_type_ends_with):
        """Sets the usb_type_ends_with of this UsbDeviceWhereInput.


        :param usb_type_ends_with: The usb_type_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_ends_with: str
        """

        self._usb_type_ends_with = usb_type_ends_with

    @property
    def usb_type_gt(self):
        """Gets the usb_type_gt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_gt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_gt

    @usb_type_gt.setter
    def usb_type_gt(self, usb_type_gt):
        """Sets the usb_type_gt of this UsbDeviceWhereInput.


        :param usb_type_gt: The usb_type_gt of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_gt: str
        """

        self._usb_type_gt = usb_type_gt

    @property
    def usb_type_gte(self):
        """Gets the usb_type_gte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_gte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_gte

    @usb_type_gte.setter
    def usb_type_gte(self, usb_type_gte):
        """Sets the usb_type_gte of this UsbDeviceWhereInput.


        :param usb_type_gte: The usb_type_gte of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_gte: str
        """

        self._usb_type_gte = usb_type_gte

    @property
    def usb_type_in(self):
        """Gets the usb_type_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._usb_type_in

    @usb_type_in.setter
    def usb_type_in(self, usb_type_in):
        """Sets the usb_type_in of this UsbDeviceWhereInput.


        :param usb_type_in: The usb_type_in of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_in: list[str]
        """

        self._usb_type_in = usb_type_in

    @property
    def usb_type_lt(self):
        """Gets the usb_type_lt of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_lt of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_lt

    @usb_type_lt.setter
    def usb_type_lt(self, usb_type_lt):
        """Sets the usb_type_lt of this UsbDeviceWhereInput.


        :param usb_type_lt: The usb_type_lt of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_lt: str
        """

        self._usb_type_lt = usb_type_lt

    @property
    def usb_type_lte(self):
        """Gets the usb_type_lte of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_lte of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_lte

    @usb_type_lte.setter
    def usb_type_lte(self, usb_type_lte):
        """Sets the usb_type_lte of this UsbDeviceWhereInput.


        :param usb_type_lte: The usb_type_lte of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_lte: str
        """

        self._usb_type_lte = usb_type_lte

    @property
    def usb_type_not(self):
        """Gets the usb_type_not of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_not of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_not

    @usb_type_not.setter
    def usb_type_not(self, usb_type_not):
        """Sets the usb_type_not of this UsbDeviceWhereInput.


        :param usb_type_not: The usb_type_not of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_not: str
        """

        self._usb_type_not = usb_type_not

    @property
    def usb_type_not_contains(self):
        """Gets the usb_type_not_contains of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_not_contains

    @usb_type_not_contains.setter
    def usb_type_not_contains(self, usb_type_not_contains):
        """Sets the usb_type_not_contains of this UsbDeviceWhereInput.


        :param usb_type_not_contains: The usb_type_not_contains of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_not_contains: str
        """

        self._usb_type_not_contains = usb_type_not_contains

    @property
    def usb_type_not_ends_with(self):
        """Gets the usb_type_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_not_ends_with

    @usb_type_not_ends_with.setter
    def usb_type_not_ends_with(self, usb_type_not_ends_with):
        """Sets the usb_type_not_ends_with of this UsbDeviceWhereInput.


        :param usb_type_not_ends_with: The usb_type_not_ends_with of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_not_ends_with: str
        """

        self._usb_type_not_ends_with = usb_type_not_ends_with

    @property
    def usb_type_not_in(self):
        """Gets the usb_type_not_in of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._usb_type_not_in

    @usb_type_not_in.setter
    def usb_type_not_in(self, usb_type_not_in):
        """Sets the usb_type_not_in of this UsbDeviceWhereInput.


        :param usb_type_not_in: The usb_type_not_in of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_not_in: list[str]
        """

        self._usb_type_not_in = usb_type_not_in

    @property
    def usb_type_not_starts_with(self):
        """Gets the usb_type_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_not_starts_with

    @usb_type_not_starts_with.setter
    def usb_type_not_starts_with(self, usb_type_not_starts_with):
        """Sets the usb_type_not_starts_with of this UsbDeviceWhereInput.


        :param usb_type_not_starts_with: The usb_type_not_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_not_starts_with: str
        """

        self._usb_type_not_starts_with = usb_type_not_starts_with

    @property
    def usb_type_starts_with(self):
        """Gets the usb_type_starts_with of this UsbDeviceWhereInput.  # noqa: E501


        :return: The usb_type_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._usb_type_starts_with

    @usb_type_starts_with.setter
    def usb_type_starts_with(self, usb_type_starts_with):
        """Sets the usb_type_starts_with of this UsbDeviceWhereInput.


        :param usb_type_starts_with: The usb_type_starts_with of this UsbDeviceWhereInput.  # noqa: E501
        :type usb_type_starts_with: str
        """

        self._usb_type_starts_with = usb_type_starts_with

    @property
    def vms_every(self):
        """Gets the vms_every of this UsbDeviceWhereInput.  # noqa: E501


        :return: The vms_every of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vms_every

    @vms_every.setter
    def vms_every(self, vms_every):
        """Sets the vms_every of this UsbDeviceWhereInput.


        :param vms_every: The vms_every of this UsbDeviceWhereInput.  # noqa: E501
        :type vms_every: VmWhereInput
        """

        self._vms_every = vms_every

    @property
    def vms_none(self):
        """Gets the vms_none of this UsbDeviceWhereInput.  # noqa: E501


        :return: The vms_none of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vms_none

    @vms_none.setter
    def vms_none(self, vms_none):
        """Sets the vms_none of this UsbDeviceWhereInput.


        :param vms_none: The vms_none of this UsbDeviceWhereInput.  # noqa: E501
        :type vms_none: VmWhereInput
        """

        self._vms_none = vms_none

    @property
    def vms_some(self):
        """Gets the vms_some of this UsbDeviceWhereInput.  # noqa: E501


        :return: The vms_some of this UsbDeviceWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vms_some

    @vms_some.setter
    def vms_some(self, vms_some):
        """Sets the vms_some of this UsbDeviceWhereInput.


        :param vms_some: The vms_some of this UsbDeviceWhereInput.  # noqa: E501
        :type vms_some: VmWhereInput
        """

        self._vms_some = vms_some

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UsbDeviceWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, UsbDeviceWhereInput):
            return True

        return self.to_dict() != other.to_dict()

# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class UserWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[UserWhereInput]',
        '_not': 'list[UserWhereInput]',
        '_or': 'list[UserWhereInput]',
        'auth_config_id': 'str',
        'auth_config_id_contains': 'str',
        'auth_config_id_ends_with': 'str',
        'auth_config_id_gt': 'str',
        'auth_config_id_gte': 'str',
        'auth_config_id_in': 'list[str]',
        'auth_config_id_lt': 'str',
        'auth_config_id_lte': 'str',
        'auth_config_id_not': 'str',
        'auth_config_id_not_contains': 'str',
        'auth_config_id_not_ends_with': 'str',
        'auth_config_id_not_in': 'list[str]',
        'auth_config_id_not_starts_with': 'str',
        'auth_config_id_starts_with': 'str',
        'display_username': 'str',
        'display_username_contains': 'str',
        'display_username_ends_with': 'str',
        'display_username_gt': 'str',
        'display_username_gte': 'str',
        'display_username_in': 'list[str]',
        'display_username_lt': 'str',
        'display_username_lte': 'str',
        'display_username_not': 'str',
        'display_username_not_contains': 'str',
        'display_username_not_ends_with': 'str',
        'display_username_not_in': 'list[str]',
        'display_username_not_starts_with': 'str',
        'display_username_starts_with': 'str',
        'email_address': 'str',
        'email_address_contains': 'str',
        'email_address_ends_with': 'str',
        'email_address_gt': 'str',
        'email_address_gte': 'str',
        'email_address_in': 'list[str]',
        'email_address_lt': 'str',
        'email_address_lte': 'str',
        'email_address_not': 'str',
        'email_address_not_contains': 'str',
        'email_address_not_ends_with': 'str',
        'email_address_not_in': 'list[str]',
        'email_address_not_starts_with': 'str',
        'email_address_starts_with': 'str',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'internal': 'bool',
        'internal_not': 'bool',
        'ldap_dn': 'str',
        'ldap_dn_contains': 'str',
        'ldap_dn_ends_with': 'str',
        'ldap_dn_gt': 'str',
        'ldap_dn_gte': 'str',
        'ldap_dn_in': 'list[str]',
        'ldap_dn_lt': 'str',
        'ldap_dn_lte': 'str',
        'ldap_dn_not': 'str',
        'ldap_dn_not_contains': 'str',
        'ldap_dn_not_ends_with': 'str',
        'ldap_dn_not_in': 'list[str]',
        'ldap_dn_not_starts_with': 'str',
        'ldap_dn_starts_with': 'str',
        'mobile_phone': 'str',
        'mobile_phone_contains': 'str',
        'mobile_phone_ends_with': 'str',
        'mobile_phone_gt': 'str',
        'mobile_phone_gte': 'str',
        'mobile_phone_in': 'list[str]',
        'mobile_phone_lt': 'str',
        'mobile_phone_lte': 'str',
        'mobile_phone_not': 'str',
        'mobile_phone_not_contains': 'str',
        'mobile_phone_not_ends_with': 'str',
        'mobile_phone_not_in': 'list[str]',
        'mobile_phone_not_starts_with': 'str',
        'mobile_phone_starts_with': 'str',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'password_expired': 'bool',
        'password_expired_not': 'bool',
        'password_updated_at': 'str',
        'password_updated_at_gt': 'str',
        'password_updated_at_gte': 'str',
        'password_updated_at_in': 'list[str]',
        'password_updated_at_lt': 'str',
        'password_updated_at_lte': 'str',
        'password_updated_at_not': 'str',
        'password_updated_at_not_in': 'list[str]',
        'role': 'UserRole',
        'role_in': 'list[UserRole]',
        'role_not': 'UserRole',
        'role_not_in': 'list[UserRole]',
        'roles_every': 'UserRoleNextWhereInput',
        'roles_none': 'UserRoleNextWhereInput',
        'roles_some': 'UserRoleNextWhereInput',
        'source': 'UserSource',
        'source_in': 'list[UserSource]',
        'source_not': 'UserSource',
        'source_not_in': 'list[UserSource]',
        'username': 'str',
        'username_contains': 'str',
        'username_ends_with': 'str',
        'username_gt': 'str',
        'username_gte': 'str',
        'username_in': 'list[str]',
        'username_lt': 'str',
        'username_lte': 'str',
        'username_not': 'str',
        'username_not_contains': 'str',
        'username_not_ends_with': 'str',
        'username_not_in': 'list[str]',
        'username_not_starts_with': 'str',
        'username_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'auth_config_id': 'auth_config_id',
        'auth_config_id_contains': 'auth_config_id_contains',
        'auth_config_id_ends_with': 'auth_config_id_ends_with',
        'auth_config_id_gt': 'auth_config_id_gt',
        'auth_config_id_gte': 'auth_config_id_gte',
        'auth_config_id_in': 'auth_config_id_in',
        'auth_config_id_lt': 'auth_config_id_lt',
        'auth_config_id_lte': 'auth_config_id_lte',
        'auth_config_id_not': 'auth_config_id_not',
        'auth_config_id_not_contains': 'auth_config_id_not_contains',
        'auth_config_id_not_ends_with': 'auth_config_id_not_ends_with',
        'auth_config_id_not_in': 'auth_config_id_not_in',
        'auth_config_id_not_starts_with': 'auth_config_id_not_starts_with',
        'auth_config_id_starts_with': 'auth_config_id_starts_with',
        'display_username': 'display_username',
        'display_username_contains': 'display_username_contains',
        'display_username_ends_with': 'display_username_ends_with',
        'display_username_gt': 'display_username_gt',
        'display_username_gte': 'display_username_gte',
        'display_username_in': 'display_username_in',
        'display_username_lt': 'display_username_lt',
        'display_username_lte': 'display_username_lte',
        'display_username_not': 'display_username_not',
        'display_username_not_contains': 'display_username_not_contains',
        'display_username_not_ends_with': 'display_username_not_ends_with',
        'display_username_not_in': 'display_username_not_in',
        'display_username_not_starts_with': 'display_username_not_starts_with',
        'display_username_starts_with': 'display_username_starts_with',
        'email_address': 'email_address',
        'email_address_contains': 'email_address_contains',
        'email_address_ends_with': 'email_address_ends_with',
        'email_address_gt': 'email_address_gt',
        'email_address_gte': 'email_address_gte',
        'email_address_in': 'email_address_in',
        'email_address_lt': 'email_address_lt',
        'email_address_lte': 'email_address_lte',
        'email_address_not': 'email_address_not',
        'email_address_not_contains': 'email_address_not_contains',
        'email_address_not_ends_with': 'email_address_not_ends_with',
        'email_address_not_in': 'email_address_not_in',
        'email_address_not_starts_with': 'email_address_not_starts_with',
        'email_address_starts_with': 'email_address_starts_with',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'internal': 'internal',
        'internal_not': 'internal_not',
        'ldap_dn': 'ldap_dn',
        'ldap_dn_contains': 'ldap_dn_contains',
        'ldap_dn_ends_with': 'ldap_dn_ends_with',
        'ldap_dn_gt': 'ldap_dn_gt',
        'ldap_dn_gte': 'ldap_dn_gte',
        'ldap_dn_in': 'ldap_dn_in',
        'ldap_dn_lt': 'ldap_dn_lt',
        'ldap_dn_lte': 'ldap_dn_lte',
        'ldap_dn_not': 'ldap_dn_not',
        'ldap_dn_not_contains': 'ldap_dn_not_contains',
        'ldap_dn_not_ends_with': 'ldap_dn_not_ends_with',
        'ldap_dn_not_in': 'ldap_dn_not_in',
        'ldap_dn_not_starts_with': 'ldap_dn_not_starts_with',
        'ldap_dn_starts_with': 'ldap_dn_starts_with',
        'mobile_phone': 'mobile_phone',
        'mobile_phone_contains': 'mobile_phone_contains',
        'mobile_phone_ends_with': 'mobile_phone_ends_with',
        'mobile_phone_gt': 'mobile_phone_gt',
        'mobile_phone_gte': 'mobile_phone_gte',
        'mobile_phone_in': 'mobile_phone_in',
        'mobile_phone_lt': 'mobile_phone_lt',
        'mobile_phone_lte': 'mobile_phone_lte',
        'mobile_phone_not': 'mobile_phone_not',
        'mobile_phone_not_contains': 'mobile_phone_not_contains',
        'mobile_phone_not_ends_with': 'mobile_phone_not_ends_with',
        'mobile_phone_not_in': 'mobile_phone_not_in',
        'mobile_phone_not_starts_with': 'mobile_phone_not_starts_with',
        'mobile_phone_starts_with': 'mobile_phone_starts_with',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'password_expired': 'password_expired',
        'password_expired_not': 'password_expired_not',
        'password_updated_at': 'password_updated_at',
        'password_updated_at_gt': 'password_updated_at_gt',
        'password_updated_at_gte': 'password_updated_at_gte',
        'password_updated_at_in': 'password_updated_at_in',
        'password_updated_at_lt': 'password_updated_at_lt',
        'password_updated_at_lte': 'password_updated_at_lte',
        'password_updated_at_not': 'password_updated_at_not',
        'password_updated_at_not_in': 'password_updated_at_not_in',
        'role': 'role',
        'role_in': 'role_in',
        'role_not': 'role_not',
        'role_not_in': 'role_not_in',
        'roles_every': 'roles_every',
        'roles_none': 'roles_none',
        'roles_some': 'roles_some',
        'source': 'source',
        'source_in': 'source_in',
        'source_not': 'source_not',
        'source_not_in': 'source_not_in',
        'username': 'username',
        'username_contains': 'username_contains',
        'username_ends_with': 'username_ends_with',
        'username_gt': 'username_gt',
        'username_gte': 'username_gte',
        'username_in': 'username_in',
        'username_lt': 'username_lt',
        'username_lte': 'username_lte',
        'username_not': 'username_not',
        'username_not_contains': 'username_not_contains',
        'username_not_ends_with': 'username_not_ends_with',
        'username_not_in': 'username_not_in',
        'username_not_starts_with': 'username_not_starts_with',
        'username_starts_with': 'username_starts_with'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """UserWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._auth_config_id = None
        self._auth_config_id_contains = None
        self._auth_config_id_ends_with = None
        self._auth_config_id_gt = None
        self._auth_config_id_gte = None
        self._auth_config_id_in = None
        self._auth_config_id_lt = None
        self._auth_config_id_lte = None
        self._auth_config_id_not = None
        self._auth_config_id_not_contains = None
        self._auth_config_id_not_ends_with = None
        self._auth_config_id_not_in = None
        self._auth_config_id_not_starts_with = None
        self._auth_config_id_starts_with = None
        self._display_username = None
        self._display_username_contains = None
        self._display_username_ends_with = None
        self._display_username_gt = None
        self._display_username_gte = None
        self._display_username_in = None
        self._display_username_lt = None
        self._display_username_lte = None
        self._display_username_not = None
        self._display_username_not_contains = None
        self._display_username_not_ends_with = None
        self._display_username_not_in = None
        self._display_username_not_starts_with = None
        self._display_username_starts_with = None
        self._email_address = None
        self._email_address_contains = None
        self._email_address_ends_with = None
        self._email_address_gt = None
        self._email_address_gte = None
        self._email_address_in = None
        self._email_address_lt = None
        self._email_address_lte = None
        self._email_address_not = None
        self._email_address_not_contains = None
        self._email_address_not_ends_with = None
        self._email_address_not_in = None
        self._email_address_not_starts_with = None
        self._email_address_starts_with = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._internal = None
        self._internal_not = None
        self._ldap_dn = None
        self._ldap_dn_contains = None
        self._ldap_dn_ends_with = None
        self._ldap_dn_gt = None
        self._ldap_dn_gte = None
        self._ldap_dn_in = None
        self._ldap_dn_lt = None
        self._ldap_dn_lte = None
        self._ldap_dn_not = None
        self._ldap_dn_not_contains = None
        self._ldap_dn_not_ends_with = None
        self._ldap_dn_not_in = None
        self._ldap_dn_not_starts_with = None
        self._ldap_dn_starts_with = None
        self._mobile_phone = None
        self._mobile_phone_contains = None
        self._mobile_phone_ends_with = None
        self._mobile_phone_gt = None
        self._mobile_phone_gte = None
        self._mobile_phone_in = None
        self._mobile_phone_lt = None
        self._mobile_phone_lte = None
        self._mobile_phone_not = None
        self._mobile_phone_not_contains = None
        self._mobile_phone_not_ends_with = None
        self._mobile_phone_not_in = None
        self._mobile_phone_not_starts_with = None
        self._mobile_phone_starts_with = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._password_expired = None
        self._password_expired_not = None
        self._password_updated_at = None
        self._password_updated_at_gt = None
        self._password_updated_at_gte = None
        self._password_updated_at_in = None
        self._password_updated_at_lt = None
        self._password_updated_at_lte = None
        self._password_updated_at_not = None
        self._password_updated_at_not_in = None
        self._role = None
        self._role_in = None
        self._role_not = None
        self._role_not_in = None
        self._roles_every = None
        self._roles_none = None
        self._roles_some = None
        self._source = None
        self._source_in = None
        self._source_not = None
        self._source_not_in = None
        self._username = None
        self._username_contains = None
        self._username_ends_with = None
        self._username_gt = None
        self._username_gte = None
        self._username_in = None
        self._username_lt = None
        self._username_lte = None
        self._username_not = None
        self._username_not_contains = None
        self._username_not_ends_with = None
        self._username_not_in = None
        self._username_not_starts_with = None
        self._username_starts_with = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.auth_config_id = kwargs.get("auth_config_id", None)
        self.auth_config_id_contains = kwargs.get("auth_config_id_contains", None)
        self.auth_config_id_ends_with = kwargs.get("auth_config_id_ends_with", None)
        self.auth_config_id_gt = kwargs.get("auth_config_id_gt", None)
        self.auth_config_id_gte = kwargs.get("auth_config_id_gte", None)
        self.auth_config_id_in = kwargs.get("auth_config_id_in", None)
        self.auth_config_id_lt = kwargs.get("auth_config_id_lt", None)
        self.auth_config_id_lte = kwargs.get("auth_config_id_lte", None)
        self.auth_config_id_not = kwargs.get("auth_config_id_not", None)
        self.auth_config_id_not_contains = kwargs.get("auth_config_id_not_contains", None)
        self.auth_config_id_not_ends_with = kwargs.get("auth_config_id_not_ends_with", None)
        self.auth_config_id_not_in = kwargs.get("auth_config_id_not_in", None)
        self.auth_config_id_not_starts_with = kwargs.get("auth_config_id_not_starts_with", None)
        self.auth_config_id_starts_with = kwargs.get("auth_config_id_starts_with", None)
        self.display_username = kwargs.get("display_username", None)
        self.display_username_contains = kwargs.get("display_username_contains", None)
        self.display_username_ends_with = kwargs.get("display_username_ends_with", None)
        self.display_username_gt = kwargs.get("display_username_gt", None)
        self.display_username_gte = kwargs.get("display_username_gte", None)
        self.display_username_in = kwargs.get("display_username_in", None)
        self.display_username_lt = kwargs.get("display_username_lt", None)
        self.display_username_lte = kwargs.get("display_username_lte", None)
        self.display_username_not = kwargs.get("display_username_not", None)
        self.display_username_not_contains = kwargs.get("display_username_not_contains", None)
        self.display_username_not_ends_with = kwargs.get("display_username_not_ends_with", None)
        self.display_username_not_in = kwargs.get("display_username_not_in", None)
        self.display_username_not_starts_with = kwargs.get("display_username_not_starts_with", None)
        self.display_username_starts_with = kwargs.get("display_username_starts_with", None)
        self.email_address = kwargs.get("email_address", None)
        self.email_address_contains = kwargs.get("email_address_contains", None)
        self.email_address_ends_with = kwargs.get("email_address_ends_with", None)
        self.email_address_gt = kwargs.get("email_address_gt", None)
        self.email_address_gte = kwargs.get("email_address_gte", None)
        self.email_address_in = kwargs.get("email_address_in", None)
        self.email_address_lt = kwargs.get("email_address_lt", None)
        self.email_address_lte = kwargs.get("email_address_lte", None)
        self.email_address_not = kwargs.get("email_address_not", None)
        self.email_address_not_contains = kwargs.get("email_address_not_contains", None)
        self.email_address_not_ends_with = kwargs.get("email_address_not_ends_with", None)
        self.email_address_not_in = kwargs.get("email_address_not_in", None)
        self.email_address_not_starts_with = kwargs.get("email_address_not_starts_with", None)
        self.email_address_starts_with = kwargs.get("email_address_starts_with", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.internal = kwargs.get("internal", None)
        self.internal_not = kwargs.get("internal_not", None)
        self.ldap_dn = kwargs.get("ldap_dn", None)
        self.ldap_dn_contains = kwargs.get("ldap_dn_contains", None)
        self.ldap_dn_ends_with = kwargs.get("ldap_dn_ends_with", None)
        self.ldap_dn_gt = kwargs.get("ldap_dn_gt", None)
        self.ldap_dn_gte = kwargs.get("ldap_dn_gte", None)
        self.ldap_dn_in = kwargs.get("ldap_dn_in", None)
        self.ldap_dn_lt = kwargs.get("ldap_dn_lt", None)
        self.ldap_dn_lte = kwargs.get("ldap_dn_lte", None)
        self.ldap_dn_not = kwargs.get("ldap_dn_not", None)
        self.ldap_dn_not_contains = kwargs.get("ldap_dn_not_contains", None)
        self.ldap_dn_not_ends_with = kwargs.get("ldap_dn_not_ends_with", None)
        self.ldap_dn_not_in = kwargs.get("ldap_dn_not_in", None)
        self.ldap_dn_not_starts_with = kwargs.get("ldap_dn_not_starts_with", None)
        self.ldap_dn_starts_with = kwargs.get("ldap_dn_starts_with", None)
        self.mobile_phone = kwargs.get("mobile_phone", None)
        self.mobile_phone_contains = kwargs.get("mobile_phone_contains", None)
        self.mobile_phone_ends_with = kwargs.get("mobile_phone_ends_with", None)
        self.mobile_phone_gt = kwargs.get("mobile_phone_gt", None)
        self.mobile_phone_gte = kwargs.get("mobile_phone_gte", None)
        self.mobile_phone_in = kwargs.get("mobile_phone_in", None)
        self.mobile_phone_lt = kwargs.get("mobile_phone_lt", None)
        self.mobile_phone_lte = kwargs.get("mobile_phone_lte", None)
        self.mobile_phone_not = kwargs.get("mobile_phone_not", None)
        self.mobile_phone_not_contains = kwargs.get("mobile_phone_not_contains", None)
        self.mobile_phone_not_ends_with = kwargs.get("mobile_phone_not_ends_with", None)
        self.mobile_phone_not_in = kwargs.get("mobile_phone_not_in", None)
        self.mobile_phone_not_starts_with = kwargs.get("mobile_phone_not_starts_with", None)
        self.mobile_phone_starts_with = kwargs.get("mobile_phone_starts_with", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.password_expired = kwargs.get("password_expired", None)
        self.password_expired_not = kwargs.get("password_expired_not", None)
        self.password_updated_at = kwargs.get("password_updated_at", None)
        self.password_updated_at_gt = kwargs.get("password_updated_at_gt", None)
        self.password_updated_at_gte = kwargs.get("password_updated_at_gte", None)
        self.password_updated_at_in = kwargs.get("password_updated_at_in", None)
        self.password_updated_at_lt = kwargs.get("password_updated_at_lt", None)
        self.password_updated_at_lte = kwargs.get("password_updated_at_lte", None)
        self.password_updated_at_not = kwargs.get("password_updated_at_not", None)
        self.password_updated_at_not_in = kwargs.get("password_updated_at_not_in", None)
        self.role = kwargs.get("role", None)
        self.role_in = kwargs.get("role_in", None)
        self.role_not = kwargs.get("role_not", None)
        self.role_not_in = kwargs.get("role_not_in", None)
        self.roles_every = kwargs.get("roles_every", None)
        self.roles_none = kwargs.get("roles_none", None)
        self.roles_some = kwargs.get("roles_some", None)
        self.source = kwargs.get("source", None)
        self.source_in = kwargs.get("source_in", None)
        self.source_not = kwargs.get("source_not", None)
        self.source_not_in = kwargs.get("source_not_in", None)
        self.username = kwargs.get("username", None)
        self.username_contains = kwargs.get("username_contains", None)
        self.username_ends_with = kwargs.get("username_ends_with", None)
        self.username_gt = kwargs.get("username_gt", None)
        self.username_gte = kwargs.get("username_gte", None)
        self.username_in = kwargs.get("username_in", None)
        self.username_lt = kwargs.get("username_lt", None)
        self.username_lte = kwargs.get("username_lte", None)
        self.username_not = kwargs.get("username_not", None)
        self.username_not_contains = kwargs.get("username_not_contains", None)
        self.username_not_ends_with = kwargs.get("username_not_ends_with", None)
        self.username_not_in = kwargs.get("username_not_in", None)
        self.username_not_starts_with = kwargs.get("username_not_starts_with", None)
        self.username_starts_with = kwargs.get("username_starts_with", None)

    @property
    def _and(self):
        """Gets the _and of this UserWhereInput.  # noqa: E501


        :return: The _and of this UserWhereInput.  # noqa: E501
        :rtype: list[UserWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this UserWhereInput.


        :param _and: The _and of this UserWhereInput.  # noqa: E501
        :type _and: list[UserWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this UserWhereInput.  # noqa: E501


        :return: The _not of this UserWhereInput.  # noqa: E501
        :rtype: list[UserWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this UserWhereInput.


        :param _not: The _not of this UserWhereInput.  # noqa: E501
        :type _not: list[UserWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this UserWhereInput.  # noqa: E501


        :return: The _or of this UserWhereInput.  # noqa: E501
        :rtype: list[UserWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this UserWhereInput.


        :param _or: The _or of this UserWhereInput.  # noqa: E501
        :type _or: list[UserWhereInput]
        """

        self.__or = _or

    @property
    def auth_config_id(self):
        """Gets the auth_config_id of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id

    @auth_config_id.setter
    def auth_config_id(self, auth_config_id):
        """Sets the auth_config_id of this UserWhereInput.


        :param auth_config_id: The auth_config_id of this UserWhereInput.  # noqa: E501
        :type auth_config_id: str
        """

        self._auth_config_id = auth_config_id

    @property
    def auth_config_id_contains(self):
        """Gets the auth_config_id_contains of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_contains

    @auth_config_id_contains.setter
    def auth_config_id_contains(self, auth_config_id_contains):
        """Sets the auth_config_id_contains of this UserWhereInput.


        :param auth_config_id_contains: The auth_config_id_contains of this UserWhereInput.  # noqa: E501
        :type auth_config_id_contains: str
        """

        self._auth_config_id_contains = auth_config_id_contains

    @property
    def auth_config_id_ends_with(self):
        """Gets the auth_config_id_ends_with of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_ends_with

    @auth_config_id_ends_with.setter
    def auth_config_id_ends_with(self, auth_config_id_ends_with):
        """Sets the auth_config_id_ends_with of this UserWhereInput.


        :param auth_config_id_ends_with: The auth_config_id_ends_with of this UserWhereInput.  # noqa: E501
        :type auth_config_id_ends_with: str
        """

        self._auth_config_id_ends_with = auth_config_id_ends_with

    @property
    def auth_config_id_gt(self):
        """Gets the auth_config_id_gt of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_gt

    @auth_config_id_gt.setter
    def auth_config_id_gt(self, auth_config_id_gt):
        """Sets the auth_config_id_gt of this UserWhereInput.


        :param auth_config_id_gt: The auth_config_id_gt of this UserWhereInput.  # noqa: E501
        :type auth_config_id_gt: str
        """

        self._auth_config_id_gt = auth_config_id_gt

    @property
    def auth_config_id_gte(self):
        """Gets the auth_config_id_gte of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_gte

    @auth_config_id_gte.setter
    def auth_config_id_gte(self, auth_config_id_gte):
        """Sets the auth_config_id_gte of this UserWhereInput.


        :param auth_config_id_gte: The auth_config_id_gte of this UserWhereInput.  # noqa: E501
        :type auth_config_id_gte: str
        """

        self._auth_config_id_gte = auth_config_id_gte

    @property
    def auth_config_id_in(self):
        """Gets the auth_config_id_in of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._auth_config_id_in

    @auth_config_id_in.setter
    def auth_config_id_in(self, auth_config_id_in):
        """Sets the auth_config_id_in of this UserWhereInput.


        :param auth_config_id_in: The auth_config_id_in of this UserWhereInput.  # noqa: E501
        :type auth_config_id_in: list[str]
        """

        self._auth_config_id_in = auth_config_id_in

    @property
    def auth_config_id_lt(self):
        """Gets the auth_config_id_lt of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_lt

    @auth_config_id_lt.setter
    def auth_config_id_lt(self, auth_config_id_lt):
        """Sets the auth_config_id_lt of this UserWhereInput.


        :param auth_config_id_lt: The auth_config_id_lt of this UserWhereInput.  # noqa: E501
        :type auth_config_id_lt: str
        """

        self._auth_config_id_lt = auth_config_id_lt

    @property
    def auth_config_id_lte(self):
        """Gets the auth_config_id_lte of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_lte

    @auth_config_id_lte.setter
    def auth_config_id_lte(self, auth_config_id_lte):
        """Sets the auth_config_id_lte of this UserWhereInput.


        :param auth_config_id_lte: The auth_config_id_lte of this UserWhereInput.  # noqa: E501
        :type auth_config_id_lte: str
        """

        self._auth_config_id_lte = auth_config_id_lte

    @property
    def auth_config_id_not(self):
        """Gets the auth_config_id_not of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_not

    @auth_config_id_not.setter
    def auth_config_id_not(self, auth_config_id_not):
        """Sets the auth_config_id_not of this UserWhereInput.


        :param auth_config_id_not: The auth_config_id_not of this UserWhereInput.  # noqa: E501
        :type auth_config_id_not: str
        """

        self._auth_config_id_not = auth_config_id_not

    @property
    def auth_config_id_not_contains(self):
        """Gets the auth_config_id_not_contains of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_not_contains

    @auth_config_id_not_contains.setter
    def auth_config_id_not_contains(self, auth_config_id_not_contains):
        """Sets the auth_config_id_not_contains of this UserWhereInput.


        :param auth_config_id_not_contains: The auth_config_id_not_contains of this UserWhereInput.  # noqa: E501
        :type auth_config_id_not_contains: str
        """

        self._auth_config_id_not_contains = auth_config_id_not_contains

    @property
    def auth_config_id_not_ends_with(self):
        """Gets the auth_config_id_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_not_ends_with

    @auth_config_id_not_ends_with.setter
    def auth_config_id_not_ends_with(self, auth_config_id_not_ends_with):
        """Sets the auth_config_id_not_ends_with of this UserWhereInput.


        :param auth_config_id_not_ends_with: The auth_config_id_not_ends_with of this UserWhereInput.  # noqa: E501
        :type auth_config_id_not_ends_with: str
        """

        self._auth_config_id_not_ends_with = auth_config_id_not_ends_with

    @property
    def auth_config_id_not_in(self):
        """Gets the auth_config_id_not_in of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._auth_config_id_not_in

    @auth_config_id_not_in.setter
    def auth_config_id_not_in(self, auth_config_id_not_in):
        """Sets the auth_config_id_not_in of this UserWhereInput.


        :param auth_config_id_not_in: The auth_config_id_not_in of this UserWhereInput.  # noqa: E501
        :type auth_config_id_not_in: list[str]
        """

        self._auth_config_id_not_in = auth_config_id_not_in

    @property
    def auth_config_id_not_starts_with(self):
        """Gets the auth_config_id_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_not_starts_with

    @auth_config_id_not_starts_with.setter
    def auth_config_id_not_starts_with(self, auth_config_id_not_starts_with):
        """Sets the auth_config_id_not_starts_with of this UserWhereInput.


        :param auth_config_id_not_starts_with: The auth_config_id_not_starts_with of this UserWhereInput.  # noqa: E501
        :type auth_config_id_not_starts_with: str
        """

        self._auth_config_id_not_starts_with = auth_config_id_not_starts_with

    @property
    def auth_config_id_starts_with(self):
        """Gets the auth_config_id_starts_with of this UserWhereInput.  # noqa: E501


        :return: The auth_config_id_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_config_id_starts_with

    @auth_config_id_starts_with.setter
    def auth_config_id_starts_with(self, auth_config_id_starts_with):
        """Sets the auth_config_id_starts_with of this UserWhereInput.


        :param auth_config_id_starts_with: The auth_config_id_starts_with of this UserWhereInput.  # noqa: E501
        :type auth_config_id_starts_with: str
        """

        self._auth_config_id_starts_with = auth_config_id_starts_with

    @property
    def display_username(self):
        """Gets the display_username of this UserWhereInput.  # noqa: E501


        :return: The display_username of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username

    @display_username.setter
    def display_username(self, display_username):
        """Sets the display_username of this UserWhereInput.


        :param display_username: The display_username of this UserWhereInput.  # noqa: E501
        :type display_username: str
        """

        self._display_username = display_username

    @property
    def display_username_contains(self):
        """Gets the display_username_contains of this UserWhereInput.  # noqa: E501


        :return: The display_username_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_contains

    @display_username_contains.setter
    def display_username_contains(self, display_username_contains):
        """Sets the display_username_contains of this UserWhereInput.


        :param display_username_contains: The display_username_contains of this UserWhereInput.  # noqa: E501
        :type display_username_contains: str
        """

        self._display_username_contains = display_username_contains

    @property
    def display_username_ends_with(self):
        """Gets the display_username_ends_with of this UserWhereInput.  # noqa: E501


        :return: The display_username_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_ends_with

    @display_username_ends_with.setter
    def display_username_ends_with(self, display_username_ends_with):
        """Sets the display_username_ends_with of this UserWhereInput.


        :param display_username_ends_with: The display_username_ends_with of this UserWhereInput.  # noqa: E501
        :type display_username_ends_with: str
        """

        self._display_username_ends_with = display_username_ends_with

    @property
    def display_username_gt(self):
        """Gets the display_username_gt of this UserWhereInput.  # noqa: E501


        :return: The display_username_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_gt

    @display_username_gt.setter
    def display_username_gt(self, display_username_gt):
        """Sets the display_username_gt of this UserWhereInput.


        :param display_username_gt: The display_username_gt of this UserWhereInput.  # noqa: E501
        :type display_username_gt: str
        """

        self._display_username_gt = display_username_gt

    @property
    def display_username_gte(self):
        """Gets the display_username_gte of this UserWhereInput.  # noqa: E501


        :return: The display_username_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_gte

    @display_username_gte.setter
    def display_username_gte(self, display_username_gte):
        """Sets the display_username_gte of this UserWhereInput.


        :param display_username_gte: The display_username_gte of this UserWhereInput.  # noqa: E501
        :type display_username_gte: str
        """

        self._display_username_gte = display_username_gte

    @property
    def display_username_in(self):
        """Gets the display_username_in of this UserWhereInput.  # noqa: E501


        :return: The display_username_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._display_username_in

    @display_username_in.setter
    def display_username_in(self, display_username_in):
        """Sets the display_username_in of this UserWhereInput.


        :param display_username_in: The display_username_in of this UserWhereInput.  # noqa: E501
        :type display_username_in: list[str]
        """

        self._display_username_in = display_username_in

    @property
    def display_username_lt(self):
        """Gets the display_username_lt of this UserWhereInput.  # noqa: E501


        :return: The display_username_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_lt

    @display_username_lt.setter
    def display_username_lt(self, display_username_lt):
        """Sets the display_username_lt of this UserWhereInput.


        :param display_username_lt: The display_username_lt of this UserWhereInput.  # noqa: E501
        :type display_username_lt: str
        """

        self._display_username_lt = display_username_lt

    @property
    def display_username_lte(self):
        """Gets the display_username_lte of this UserWhereInput.  # noqa: E501


        :return: The display_username_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_lte

    @display_username_lte.setter
    def display_username_lte(self, display_username_lte):
        """Sets the display_username_lte of this UserWhereInput.


        :param display_username_lte: The display_username_lte of this UserWhereInput.  # noqa: E501
        :type display_username_lte: str
        """

        self._display_username_lte = display_username_lte

    @property
    def display_username_not(self):
        """Gets the display_username_not of this UserWhereInput.  # noqa: E501


        :return: The display_username_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_not

    @display_username_not.setter
    def display_username_not(self, display_username_not):
        """Sets the display_username_not of this UserWhereInput.


        :param display_username_not: The display_username_not of this UserWhereInput.  # noqa: E501
        :type display_username_not: str
        """

        self._display_username_not = display_username_not

    @property
    def display_username_not_contains(self):
        """Gets the display_username_not_contains of this UserWhereInput.  # noqa: E501


        :return: The display_username_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_not_contains

    @display_username_not_contains.setter
    def display_username_not_contains(self, display_username_not_contains):
        """Sets the display_username_not_contains of this UserWhereInput.


        :param display_username_not_contains: The display_username_not_contains of this UserWhereInput.  # noqa: E501
        :type display_username_not_contains: str
        """

        self._display_username_not_contains = display_username_not_contains

    @property
    def display_username_not_ends_with(self):
        """Gets the display_username_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The display_username_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_not_ends_with

    @display_username_not_ends_with.setter
    def display_username_not_ends_with(self, display_username_not_ends_with):
        """Sets the display_username_not_ends_with of this UserWhereInput.


        :param display_username_not_ends_with: The display_username_not_ends_with of this UserWhereInput.  # noqa: E501
        :type display_username_not_ends_with: str
        """

        self._display_username_not_ends_with = display_username_not_ends_with

    @property
    def display_username_not_in(self):
        """Gets the display_username_not_in of this UserWhereInput.  # noqa: E501


        :return: The display_username_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._display_username_not_in

    @display_username_not_in.setter
    def display_username_not_in(self, display_username_not_in):
        """Sets the display_username_not_in of this UserWhereInput.


        :param display_username_not_in: The display_username_not_in of this UserWhereInput.  # noqa: E501
        :type display_username_not_in: list[str]
        """

        self._display_username_not_in = display_username_not_in

    @property
    def display_username_not_starts_with(self):
        """Gets the display_username_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The display_username_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_not_starts_with

    @display_username_not_starts_with.setter
    def display_username_not_starts_with(self, display_username_not_starts_with):
        """Sets the display_username_not_starts_with of this UserWhereInput.


        :param display_username_not_starts_with: The display_username_not_starts_with of this UserWhereInput.  # noqa: E501
        :type display_username_not_starts_with: str
        """

        self._display_username_not_starts_with = display_username_not_starts_with

    @property
    def display_username_starts_with(self):
        """Gets the display_username_starts_with of this UserWhereInput.  # noqa: E501


        :return: The display_username_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._display_username_starts_with

    @display_username_starts_with.setter
    def display_username_starts_with(self, display_username_starts_with):
        """Sets the display_username_starts_with of this UserWhereInput.


        :param display_username_starts_with: The display_username_starts_with of this UserWhereInput.  # noqa: E501
        :type display_username_starts_with: str
        """

        self._display_username_starts_with = display_username_starts_with

    @property
    def email_address(self):
        """Gets the email_address of this UserWhereInput.  # noqa: E501


        :return: The email_address of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this UserWhereInput.


        :param email_address: The email_address of this UserWhereInput.  # noqa: E501
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def email_address_contains(self):
        """Gets the email_address_contains of this UserWhereInput.  # noqa: E501


        :return: The email_address_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_contains

    @email_address_contains.setter
    def email_address_contains(self, email_address_contains):
        """Sets the email_address_contains of this UserWhereInput.


        :param email_address_contains: The email_address_contains of this UserWhereInput.  # noqa: E501
        :type email_address_contains: str
        """

        self._email_address_contains = email_address_contains

    @property
    def email_address_ends_with(self):
        """Gets the email_address_ends_with of this UserWhereInput.  # noqa: E501


        :return: The email_address_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_ends_with

    @email_address_ends_with.setter
    def email_address_ends_with(self, email_address_ends_with):
        """Sets the email_address_ends_with of this UserWhereInput.


        :param email_address_ends_with: The email_address_ends_with of this UserWhereInput.  # noqa: E501
        :type email_address_ends_with: str
        """

        self._email_address_ends_with = email_address_ends_with

    @property
    def email_address_gt(self):
        """Gets the email_address_gt of this UserWhereInput.  # noqa: E501


        :return: The email_address_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_gt

    @email_address_gt.setter
    def email_address_gt(self, email_address_gt):
        """Sets the email_address_gt of this UserWhereInput.


        :param email_address_gt: The email_address_gt of this UserWhereInput.  # noqa: E501
        :type email_address_gt: str
        """

        self._email_address_gt = email_address_gt

    @property
    def email_address_gte(self):
        """Gets the email_address_gte of this UserWhereInput.  # noqa: E501


        :return: The email_address_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_gte

    @email_address_gte.setter
    def email_address_gte(self, email_address_gte):
        """Sets the email_address_gte of this UserWhereInput.


        :param email_address_gte: The email_address_gte of this UserWhereInput.  # noqa: E501
        :type email_address_gte: str
        """

        self._email_address_gte = email_address_gte

    @property
    def email_address_in(self):
        """Gets the email_address_in of this UserWhereInput.  # noqa: E501


        :return: The email_address_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._email_address_in

    @email_address_in.setter
    def email_address_in(self, email_address_in):
        """Sets the email_address_in of this UserWhereInput.


        :param email_address_in: The email_address_in of this UserWhereInput.  # noqa: E501
        :type email_address_in: list[str]
        """

        self._email_address_in = email_address_in

    @property
    def email_address_lt(self):
        """Gets the email_address_lt of this UserWhereInput.  # noqa: E501


        :return: The email_address_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_lt

    @email_address_lt.setter
    def email_address_lt(self, email_address_lt):
        """Sets the email_address_lt of this UserWhereInput.


        :param email_address_lt: The email_address_lt of this UserWhereInput.  # noqa: E501
        :type email_address_lt: str
        """

        self._email_address_lt = email_address_lt

    @property
    def email_address_lte(self):
        """Gets the email_address_lte of this UserWhereInput.  # noqa: E501


        :return: The email_address_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_lte

    @email_address_lte.setter
    def email_address_lte(self, email_address_lte):
        """Sets the email_address_lte of this UserWhereInput.


        :param email_address_lte: The email_address_lte of this UserWhereInput.  # noqa: E501
        :type email_address_lte: str
        """

        self._email_address_lte = email_address_lte

    @property
    def email_address_not(self):
        """Gets the email_address_not of this UserWhereInput.  # noqa: E501


        :return: The email_address_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_not

    @email_address_not.setter
    def email_address_not(self, email_address_not):
        """Sets the email_address_not of this UserWhereInput.


        :param email_address_not: The email_address_not of this UserWhereInput.  # noqa: E501
        :type email_address_not: str
        """

        self._email_address_not = email_address_not

    @property
    def email_address_not_contains(self):
        """Gets the email_address_not_contains of this UserWhereInput.  # noqa: E501


        :return: The email_address_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_not_contains

    @email_address_not_contains.setter
    def email_address_not_contains(self, email_address_not_contains):
        """Sets the email_address_not_contains of this UserWhereInput.


        :param email_address_not_contains: The email_address_not_contains of this UserWhereInput.  # noqa: E501
        :type email_address_not_contains: str
        """

        self._email_address_not_contains = email_address_not_contains

    @property
    def email_address_not_ends_with(self):
        """Gets the email_address_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The email_address_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_not_ends_with

    @email_address_not_ends_with.setter
    def email_address_not_ends_with(self, email_address_not_ends_with):
        """Sets the email_address_not_ends_with of this UserWhereInput.


        :param email_address_not_ends_with: The email_address_not_ends_with of this UserWhereInput.  # noqa: E501
        :type email_address_not_ends_with: str
        """

        self._email_address_not_ends_with = email_address_not_ends_with

    @property
    def email_address_not_in(self):
        """Gets the email_address_not_in of this UserWhereInput.  # noqa: E501


        :return: The email_address_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._email_address_not_in

    @email_address_not_in.setter
    def email_address_not_in(self, email_address_not_in):
        """Sets the email_address_not_in of this UserWhereInput.


        :param email_address_not_in: The email_address_not_in of this UserWhereInput.  # noqa: E501
        :type email_address_not_in: list[str]
        """

        self._email_address_not_in = email_address_not_in

    @property
    def email_address_not_starts_with(self):
        """Gets the email_address_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The email_address_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_not_starts_with

    @email_address_not_starts_with.setter
    def email_address_not_starts_with(self, email_address_not_starts_with):
        """Sets the email_address_not_starts_with of this UserWhereInput.


        :param email_address_not_starts_with: The email_address_not_starts_with of this UserWhereInput.  # noqa: E501
        :type email_address_not_starts_with: str
        """

        self._email_address_not_starts_with = email_address_not_starts_with

    @property
    def email_address_starts_with(self):
        """Gets the email_address_starts_with of this UserWhereInput.  # noqa: E501


        :return: The email_address_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._email_address_starts_with

    @email_address_starts_with.setter
    def email_address_starts_with(self, email_address_starts_with):
        """Sets the email_address_starts_with of this UserWhereInput.


        :param email_address_starts_with: The email_address_starts_with of this UserWhereInput.  # noqa: E501
        :type email_address_starts_with: str
        """

        self._email_address_starts_with = email_address_starts_with

    @property
    def id(self):
        """Gets the id of this UserWhereInput.  # noqa: E501


        :return: The id of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserWhereInput.


        :param id: The id of this UserWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this UserWhereInput.  # noqa: E501


        :return: The id_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this UserWhereInput.


        :param id_contains: The id_contains of this UserWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this UserWhereInput.  # noqa: E501


        :return: The id_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this UserWhereInput.


        :param id_ends_with: The id_ends_with of this UserWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this UserWhereInput.  # noqa: E501


        :return: The id_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this UserWhereInput.


        :param id_gt: The id_gt of this UserWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this UserWhereInput.  # noqa: E501


        :return: The id_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this UserWhereInput.


        :param id_gte: The id_gte of this UserWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this UserWhereInput.  # noqa: E501


        :return: The id_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this UserWhereInput.


        :param id_in: The id_in of this UserWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this UserWhereInput.  # noqa: E501


        :return: The id_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this UserWhereInput.


        :param id_lt: The id_lt of this UserWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this UserWhereInput.  # noqa: E501


        :return: The id_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this UserWhereInput.


        :param id_lte: The id_lte of this UserWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this UserWhereInput.  # noqa: E501


        :return: The id_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this UserWhereInput.


        :param id_not: The id_not of this UserWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this UserWhereInput.  # noqa: E501


        :return: The id_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this UserWhereInput.


        :param id_not_contains: The id_not_contains of this UserWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this UserWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this UserWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this UserWhereInput.  # noqa: E501


        :return: The id_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this UserWhereInput.


        :param id_not_in: The id_not_in of this UserWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this UserWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this UserWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this UserWhereInput.  # noqa: E501


        :return: The id_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this UserWhereInput.


        :param id_starts_with: The id_starts_with of this UserWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def internal(self):
        """Gets the internal of this UserWhereInput.  # noqa: E501


        :return: The internal of this UserWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._internal

    @internal.setter
    def internal(self, internal):
        """Sets the internal of this UserWhereInput.


        :param internal: The internal of this UserWhereInput.  # noqa: E501
        :type internal: bool
        """

        self._internal = internal

    @property
    def internal_not(self):
        """Gets the internal_not of this UserWhereInput.  # noqa: E501


        :return: The internal_not of this UserWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._internal_not

    @internal_not.setter
    def internal_not(self, internal_not):
        """Sets the internal_not of this UserWhereInput.


        :param internal_not: The internal_not of this UserWhereInput.  # noqa: E501
        :type internal_not: bool
        """

        self._internal_not = internal_not

    @property
    def ldap_dn(self):
        """Gets the ldap_dn of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn

    @ldap_dn.setter
    def ldap_dn(self, ldap_dn):
        """Sets the ldap_dn of this UserWhereInput.


        :param ldap_dn: The ldap_dn of this UserWhereInput.  # noqa: E501
        :type ldap_dn: str
        """

        self._ldap_dn = ldap_dn

    @property
    def ldap_dn_contains(self):
        """Gets the ldap_dn_contains of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_contains

    @ldap_dn_contains.setter
    def ldap_dn_contains(self, ldap_dn_contains):
        """Sets the ldap_dn_contains of this UserWhereInput.


        :param ldap_dn_contains: The ldap_dn_contains of this UserWhereInput.  # noqa: E501
        :type ldap_dn_contains: str
        """

        self._ldap_dn_contains = ldap_dn_contains

    @property
    def ldap_dn_ends_with(self):
        """Gets the ldap_dn_ends_with of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_ends_with

    @ldap_dn_ends_with.setter
    def ldap_dn_ends_with(self, ldap_dn_ends_with):
        """Sets the ldap_dn_ends_with of this UserWhereInput.


        :param ldap_dn_ends_with: The ldap_dn_ends_with of this UserWhereInput.  # noqa: E501
        :type ldap_dn_ends_with: str
        """

        self._ldap_dn_ends_with = ldap_dn_ends_with

    @property
    def ldap_dn_gt(self):
        """Gets the ldap_dn_gt of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_gt

    @ldap_dn_gt.setter
    def ldap_dn_gt(self, ldap_dn_gt):
        """Sets the ldap_dn_gt of this UserWhereInput.


        :param ldap_dn_gt: The ldap_dn_gt of this UserWhereInput.  # noqa: E501
        :type ldap_dn_gt: str
        """

        self._ldap_dn_gt = ldap_dn_gt

    @property
    def ldap_dn_gte(self):
        """Gets the ldap_dn_gte of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_gte

    @ldap_dn_gte.setter
    def ldap_dn_gte(self, ldap_dn_gte):
        """Sets the ldap_dn_gte of this UserWhereInput.


        :param ldap_dn_gte: The ldap_dn_gte of this UserWhereInput.  # noqa: E501
        :type ldap_dn_gte: str
        """

        self._ldap_dn_gte = ldap_dn_gte

    @property
    def ldap_dn_in(self):
        """Gets the ldap_dn_in of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ldap_dn_in

    @ldap_dn_in.setter
    def ldap_dn_in(self, ldap_dn_in):
        """Sets the ldap_dn_in of this UserWhereInput.


        :param ldap_dn_in: The ldap_dn_in of this UserWhereInput.  # noqa: E501
        :type ldap_dn_in: list[str]
        """

        self._ldap_dn_in = ldap_dn_in

    @property
    def ldap_dn_lt(self):
        """Gets the ldap_dn_lt of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_lt

    @ldap_dn_lt.setter
    def ldap_dn_lt(self, ldap_dn_lt):
        """Sets the ldap_dn_lt of this UserWhereInput.


        :param ldap_dn_lt: The ldap_dn_lt of this UserWhereInput.  # noqa: E501
        :type ldap_dn_lt: str
        """

        self._ldap_dn_lt = ldap_dn_lt

    @property
    def ldap_dn_lte(self):
        """Gets the ldap_dn_lte of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_lte

    @ldap_dn_lte.setter
    def ldap_dn_lte(self, ldap_dn_lte):
        """Sets the ldap_dn_lte of this UserWhereInput.


        :param ldap_dn_lte: The ldap_dn_lte of this UserWhereInput.  # noqa: E501
        :type ldap_dn_lte: str
        """

        self._ldap_dn_lte = ldap_dn_lte

    @property
    def ldap_dn_not(self):
        """Gets the ldap_dn_not of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_not

    @ldap_dn_not.setter
    def ldap_dn_not(self, ldap_dn_not):
        """Sets the ldap_dn_not of this UserWhereInput.


        :param ldap_dn_not: The ldap_dn_not of this UserWhereInput.  # noqa: E501
        :type ldap_dn_not: str
        """

        self._ldap_dn_not = ldap_dn_not

    @property
    def ldap_dn_not_contains(self):
        """Gets the ldap_dn_not_contains of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_not_contains

    @ldap_dn_not_contains.setter
    def ldap_dn_not_contains(self, ldap_dn_not_contains):
        """Sets the ldap_dn_not_contains of this UserWhereInput.


        :param ldap_dn_not_contains: The ldap_dn_not_contains of this UserWhereInput.  # noqa: E501
        :type ldap_dn_not_contains: str
        """

        self._ldap_dn_not_contains = ldap_dn_not_contains

    @property
    def ldap_dn_not_ends_with(self):
        """Gets the ldap_dn_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_not_ends_with

    @ldap_dn_not_ends_with.setter
    def ldap_dn_not_ends_with(self, ldap_dn_not_ends_with):
        """Sets the ldap_dn_not_ends_with of this UserWhereInput.


        :param ldap_dn_not_ends_with: The ldap_dn_not_ends_with of this UserWhereInput.  # noqa: E501
        :type ldap_dn_not_ends_with: str
        """

        self._ldap_dn_not_ends_with = ldap_dn_not_ends_with

    @property
    def ldap_dn_not_in(self):
        """Gets the ldap_dn_not_in of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ldap_dn_not_in

    @ldap_dn_not_in.setter
    def ldap_dn_not_in(self, ldap_dn_not_in):
        """Sets the ldap_dn_not_in of this UserWhereInput.


        :param ldap_dn_not_in: The ldap_dn_not_in of this UserWhereInput.  # noqa: E501
        :type ldap_dn_not_in: list[str]
        """

        self._ldap_dn_not_in = ldap_dn_not_in

    @property
    def ldap_dn_not_starts_with(self):
        """Gets the ldap_dn_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_not_starts_with

    @ldap_dn_not_starts_with.setter
    def ldap_dn_not_starts_with(self, ldap_dn_not_starts_with):
        """Sets the ldap_dn_not_starts_with of this UserWhereInput.


        :param ldap_dn_not_starts_with: The ldap_dn_not_starts_with of this UserWhereInput.  # noqa: E501
        :type ldap_dn_not_starts_with: str
        """

        self._ldap_dn_not_starts_with = ldap_dn_not_starts_with

    @property
    def ldap_dn_starts_with(self):
        """Gets the ldap_dn_starts_with of this UserWhereInput.  # noqa: E501


        :return: The ldap_dn_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ldap_dn_starts_with

    @ldap_dn_starts_with.setter
    def ldap_dn_starts_with(self, ldap_dn_starts_with):
        """Sets the ldap_dn_starts_with of this UserWhereInput.


        :param ldap_dn_starts_with: The ldap_dn_starts_with of this UserWhereInput.  # noqa: E501
        :type ldap_dn_starts_with: str
        """

        self._ldap_dn_starts_with = ldap_dn_starts_with

    @property
    def mobile_phone(self):
        """Gets the mobile_phone of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone

    @mobile_phone.setter
    def mobile_phone(self, mobile_phone):
        """Sets the mobile_phone of this UserWhereInput.


        :param mobile_phone: The mobile_phone of this UserWhereInput.  # noqa: E501
        :type mobile_phone: str
        """

        self._mobile_phone = mobile_phone

    @property
    def mobile_phone_contains(self):
        """Gets the mobile_phone_contains of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_contains

    @mobile_phone_contains.setter
    def mobile_phone_contains(self, mobile_phone_contains):
        """Sets the mobile_phone_contains of this UserWhereInput.


        :param mobile_phone_contains: The mobile_phone_contains of this UserWhereInput.  # noqa: E501
        :type mobile_phone_contains: str
        """

        self._mobile_phone_contains = mobile_phone_contains

    @property
    def mobile_phone_ends_with(self):
        """Gets the mobile_phone_ends_with of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_ends_with

    @mobile_phone_ends_with.setter
    def mobile_phone_ends_with(self, mobile_phone_ends_with):
        """Sets the mobile_phone_ends_with of this UserWhereInput.


        :param mobile_phone_ends_with: The mobile_phone_ends_with of this UserWhereInput.  # noqa: E501
        :type mobile_phone_ends_with: str
        """

        self._mobile_phone_ends_with = mobile_phone_ends_with

    @property
    def mobile_phone_gt(self):
        """Gets the mobile_phone_gt of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_gt

    @mobile_phone_gt.setter
    def mobile_phone_gt(self, mobile_phone_gt):
        """Sets the mobile_phone_gt of this UserWhereInput.


        :param mobile_phone_gt: The mobile_phone_gt of this UserWhereInput.  # noqa: E501
        :type mobile_phone_gt: str
        """

        self._mobile_phone_gt = mobile_phone_gt

    @property
    def mobile_phone_gte(self):
        """Gets the mobile_phone_gte of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_gte

    @mobile_phone_gte.setter
    def mobile_phone_gte(self, mobile_phone_gte):
        """Sets the mobile_phone_gte of this UserWhereInput.


        :param mobile_phone_gte: The mobile_phone_gte of this UserWhereInput.  # noqa: E501
        :type mobile_phone_gte: str
        """

        self._mobile_phone_gte = mobile_phone_gte

    @property
    def mobile_phone_in(self):
        """Gets the mobile_phone_in of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._mobile_phone_in

    @mobile_phone_in.setter
    def mobile_phone_in(self, mobile_phone_in):
        """Sets the mobile_phone_in of this UserWhereInput.


        :param mobile_phone_in: The mobile_phone_in of this UserWhereInput.  # noqa: E501
        :type mobile_phone_in: list[str]
        """

        self._mobile_phone_in = mobile_phone_in

    @property
    def mobile_phone_lt(self):
        """Gets the mobile_phone_lt of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_lt

    @mobile_phone_lt.setter
    def mobile_phone_lt(self, mobile_phone_lt):
        """Sets the mobile_phone_lt of this UserWhereInput.


        :param mobile_phone_lt: The mobile_phone_lt of this UserWhereInput.  # noqa: E501
        :type mobile_phone_lt: str
        """

        self._mobile_phone_lt = mobile_phone_lt

    @property
    def mobile_phone_lte(self):
        """Gets the mobile_phone_lte of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_lte

    @mobile_phone_lte.setter
    def mobile_phone_lte(self, mobile_phone_lte):
        """Sets the mobile_phone_lte of this UserWhereInput.


        :param mobile_phone_lte: The mobile_phone_lte of this UserWhereInput.  # noqa: E501
        :type mobile_phone_lte: str
        """

        self._mobile_phone_lte = mobile_phone_lte

    @property
    def mobile_phone_not(self):
        """Gets the mobile_phone_not of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_not

    @mobile_phone_not.setter
    def mobile_phone_not(self, mobile_phone_not):
        """Sets the mobile_phone_not of this UserWhereInput.


        :param mobile_phone_not: The mobile_phone_not of this UserWhereInput.  # noqa: E501
        :type mobile_phone_not: str
        """

        self._mobile_phone_not = mobile_phone_not

    @property
    def mobile_phone_not_contains(self):
        """Gets the mobile_phone_not_contains of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_not_contains

    @mobile_phone_not_contains.setter
    def mobile_phone_not_contains(self, mobile_phone_not_contains):
        """Sets the mobile_phone_not_contains of this UserWhereInput.


        :param mobile_phone_not_contains: The mobile_phone_not_contains of this UserWhereInput.  # noqa: E501
        :type mobile_phone_not_contains: str
        """

        self._mobile_phone_not_contains = mobile_phone_not_contains

    @property
    def mobile_phone_not_ends_with(self):
        """Gets the mobile_phone_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_not_ends_with

    @mobile_phone_not_ends_with.setter
    def mobile_phone_not_ends_with(self, mobile_phone_not_ends_with):
        """Sets the mobile_phone_not_ends_with of this UserWhereInput.


        :param mobile_phone_not_ends_with: The mobile_phone_not_ends_with of this UserWhereInput.  # noqa: E501
        :type mobile_phone_not_ends_with: str
        """

        self._mobile_phone_not_ends_with = mobile_phone_not_ends_with

    @property
    def mobile_phone_not_in(self):
        """Gets the mobile_phone_not_in of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._mobile_phone_not_in

    @mobile_phone_not_in.setter
    def mobile_phone_not_in(self, mobile_phone_not_in):
        """Sets the mobile_phone_not_in of this UserWhereInput.


        :param mobile_phone_not_in: The mobile_phone_not_in of this UserWhereInput.  # noqa: E501
        :type mobile_phone_not_in: list[str]
        """

        self._mobile_phone_not_in = mobile_phone_not_in

    @property
    def mobile_phone_not_starts_with(self):
        """Gets the mobile_phone_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_not_starts_with

    @mobile_phone_not_starts_with.setter
    def mobile_phone_not_starts_with(self, mobile_phone_not_starts_with):
        """Sets the mobile_phone_not_starts_with of this UserWhereInput.


        :param mobile_phone_not_starts_with: The mobile_phone_not_starts_with of this UserWhereInput.  # noqa: E501
        :type mobile_phone_not_starts_with: str
        """

        self._mobile_phone_not_starts_with = mobile_phone_not_starts_with

    @property
    def mobile_phone_starts_with(self):
        """Gets the mobile_phone_starts_with of this UserWhereInput.  # noqa: E501


        :return: The mobile_phone_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone_starts_with

    @mobile_phone_starts_with.setter
    def mobile_phone_starts_with(self, mobile_phone_starts_with):
        """Sets the mobile_phone_starts_with of this UserWhereInput.


        :param mobile_phone_starts_with: The mobile_phone_starts_with of this UserWhereInput.  # noqa: E501
        :type mobile_phone_starts_with: str
        """

        self._mobile_phone_starts_with = mobile_phone_starts_with

    @property
    def name(self):
        """Gets the name of this UserWhereInput.  # noqa: E501


        :return: The name of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserWhereInput.


        :param name: The name of this UserWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this UserWhereInput.  # noqa: E501


        :return: The name_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this UserWhereInput.


        :param name_contains: The name_contains of this UserWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this UserWhereInput.  # noqa: E501


        :return: The name_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this UserWhereInput.


        :param name_ends_with: The name_ends_with of this UserWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this UserWhereInput.  # noqa: E501


        :return: The name_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this UserWhereInput.


        :param name_gt: The name_gt of this UserWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this UserWhereInput.  # noqa: E501


        :return: The name_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this UserWhereInput.


        :param name_gte: The name_gte of this UserWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this UserWhereInput.  # noqa: E501


        :return: The name_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this UserWhereInput.


        :param name_in: The name_in of this UserWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this UserWhereInput.  # noqa: E501


        :return: The name_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this UserWhereInput.


        :param name_lt: The name_lt of this UserWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this UserWhereInput.  # noqa: E501


        :return: The name_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this UserWhereInput.


        :param name_lte: The name_lte of this UserWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this UserWhereInput.  # noqa: E501


        :return: The name_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this UserWhereInput.


        :param name_not: The name_not of this UserWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this UserWhereInput.  # noqa: E501


        :return: The name_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this UserWhereInput.


        :param name_not_contains: The name_not_contains of this UserWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this UserWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this UserWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this UserWhereInput.  # noqa: E501


        :return: The name_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this UserWhereInput.


        :param name_not_in: The name_not_in of this UserWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this UserWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this UserWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this UserWhereInput.  # noqa: E501


        :return: The name_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this UserWhereInput.


        :param name_starts_with: The name_starts_with of this UserWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def password_expired(self):
        """Gets the password_expired of this UserWhereInput.  # noqa: E501


        :return: The password_expired of this UserWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._password_expired

    @password_expired.setter
    def password_expired(self, password_expired):
        """Sets the password_expired of this UserWhereInput.


        :param password_expired: The password_expired of this UserWhereInput.  # noqa: E501
        :type password_expired: bool
        """

        self._password_expired = password_expired

    @property
    def password_expired_not(self):
        """Gets the password_expired_not of this UserWhereInput.  # noqa: E501


        :return: The password_expired_not of this UserWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._password_expired_not

    @password_expired_not.setter
    def password_expired_not(self, password_expired_not):
        """Sets the password_expired_not of this UserWhereInput.


        :param password_expired_not: The password_expired_not of this UserWhereInput.  # noqa: E501
        :type password_expired_not: bool
        """

        self._password_expired_not = password_expired_not

    @property
    def password_updated_at(self):
        """Gets the password_updated_at of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_updated_at

    @password_updated_at.setter
    def password_updated_at(self, password_updated_at):
        """Sets the password_updated_at of this UserWhereInput.


        :param password_updated_at: The password_updated_at of this UserWhereInput.  # noqa: E501
        :type password_updated_at: str
        """

        self._password_updated_at = password_updated_at

    @property
    def password_updated_at_gt(self):
        """Gets the password_updated_at_gt of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_updated_at_gt

    @password_updated_at_gt.setter
    def password_updated_at_gt(self, password_updated_at_gt):
        """Sets the password_updated_at_gt of this UserWhereInput.


        :param password_updated_at_gt: The password_updated_at_gt of this UserWhereInput.  # noqa: E501
        :type password_updated_at_gt: str
        """

        self._password_updated_at_gt = password_updated_at_gt

    @property
    def password_updated_at_gte(self):
        """Gets the password_updated_at_gte of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_updated_at_gte

    @password_updated_at_gte.setter
    def password_updated_at_gte(self, password_updated_at_gte):
        """Sets the password_updated_at_gte of this UserWhereInput.


        :param password_updated_at_gte: The password_updated_at_gte of this UserWhereInput.  # noqa: E501
        :type password_updated_at_gte: str
        """

        self._password_updated_at_gte = password_updated_at_gte

    @property
    def password_updated_at_in(self):
        """Gets the password_updated_at_in of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._password_updated_at_in

    @password_updated_at_in.setter
    def password_updated_at_in(self, password_updated_at_in):
        """Sets the password_updated_at_in of this UserWhereInput.


        :param password_updated_at_in: The password_updated_at_in of this UserWhereInput.  # noqa: E501
        :type password_updated_at_in: list[str]
        """

        self._password_updated_at_in = password_updated_at_in

    @property
    def password_updated_at_lt(self):
        """Gets the password_updated_at_lt of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_updated_at_lt

    @password_updated_at_lt.setter
    def password_updated_at_lt(self, password_updated_at_lt):
        """Sets the password_updated_at_lt of this UserWhereInput.


        :param password_updated_at_lt: The password_updated_at_lt of this UserWhereInput.  # noqa: E501
        :type password_updated_at_lt: str
        """

        self._password_updated_at_lt = password_updated_at_lt

    @property
    def password_updated_at_lte(self):
        """Gets the password_updated_at_lte of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_updated_at_lte

    @password_updated_at_lte.setter
    def password_updated_at_lte(self, password_updated_at_lte):
        """Sets the password_updated_at_lte of this UserWhereInput.


        :param password_updated_at_lte: The password_updated_at_lte of this UserWhereInput.  # noqa: E501
        :type password_updated_at_lte: str
        """

        self._password_updated_at_lte = password_updated_at_lte

    @property
    def password_updated_at_not(self):
        """Gets the password_updated_at_not of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_updated_at_not

    @password_updated_at_not.setter
    def password_updated_at_not(self, password_updated_at_not):
        """Sets the password_updated_at_not of this UserWhereInput.


        :param password_updated_at_not: The password_updated_at_not of this UserWhereInput.  # noqa: E501
        :type password_updated_at_not: str
        """

        self._password_updated_at_not = password_updated_at_not

    @property
    def password_updated_at_not_in(self):
        """Gets the password_updated_at_not_in of this UserWhereInput.  # noqa: E501


        :return: The password_updated_at_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._password_updated_at_not_in

    @password_updated_at_not_in.setter
    def password_updated_at_not_in(self, password_updated_at_not_in):
        """Sets the password_updated_at_not_in of this UserWhereInput.


        :param password_updated_at_not_in: The password_updated_at_not_in of this UserWhereInput.  # noqa: E501
        :type password_updated_at_not_in: list[str]
        """

        self._password_updated_at_not_in = password_updated_at_not_in

    @property
    def role(self):
        """Gets the role of this UserWhereInput.  # noqa: E501


        :return: The role of this UserWhereInput.  # noqa: E501
        :rtype: UserRole
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this UserWhereInput.


        :param role: The role of this UserWhereInput.  # noqa: E501
        :type role: UserRole
        """

        self._role = role

    @property
    def role_in(self):
        """Gets the role_in of this UserWhereInput.  # noqa: E501


        :return: The role_in of this UserWhereInput.  # noqa: E501
        :rtype: list[UserRole]
        """
        return self._role_in

    @role_in.setter
    def role_in(self, role_in):
        """Sets the role_in of this UserWhereInput.


        :param role_in: The role_in of this UserWhereInput.  # noqa: E501
        :type role_in: list[UserRole]
        """

        self._role_in = role_in

    @property
    def role_not(self):
        """Gets the role_not of this UserWhereInput.  # noqa: E501


        :return: The role_not of this UserWhereInput.  # noqa: E501
        :rtype: UserRole
        """
        return self._role_not

    @role_not.setter
    def role_not(self, role_not):
        """Sets the role_not of this UserWhereInput.


        :param role_not: The role_not of this UserWhereInput.  # noqa: E501
        :type role_not: UserRole
        """

        self._role_not = role_not

    @property
    def role_not_in(self):
        """Gets the role_not_in of this UserWhereInput.  # noqa: E501


        :return: The role_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[UserRole]
        """
        return self._role_not_in

    @role_not_in.setter
    def role_not_in(self, role_not_in):
        """Sets the role_not_in of this UserWhereInput.


        :param role_not_in: The role_not_in of this UserWhereInput.  # noqa: E501
        :type role_not_in: list[UserRole]
        """

        self._role_not_in = role_not_in

    @property
    def roles_every(self):
        """Gets the roles_every of this UserWhereInput.  # noqa: E501


        :return: The roles_every of this UserWhereInput.  # noqa: E501
        :rtype: UserRoleNextWhereInput
        """
        return self._roles_every

    @roles_every.setter
    def roles_every(self, roles_every):
        """Sets the roles_every of this UserWhereInput.


        :param roles_every: The roles_every of this UserWhereInput.  # noqa: E501
        :type roles_every: UserRoleNextWhereInput
        """

        self._roles_every = roles_every

    @property
    def roles_none(self):
        """Gets the roles_none of this UserWhereInput.  # noqa: E501


        :return: The roles_none of this UserWhereInput.  # noqa: E501
        :rtype: UserRoleNextWhereInput
        """
        return self._roles_none

    @roles_none.setter
    def roles_none(self, roles_none):
        """Sets the roles_none of this UserWhereInput.


        :param roles_none: The roles_none of this UserWhereInput.  # noqa: E501
        :type roles_none: UserRoleNextWhereInput
        """

        self._roles_none = roles_none

    @property
    def roles_some(self):
        """Gets the roles_some of this UserWhereInput.  # noqa: E501


        :return: The roles_some of this UserWhereInput.  # noqa: E501
        :rtype: UserRoleNextWhereInput
        """
        return self._roles_some

    @roles_some.setter
    def roles_some(self, roles_some):
        """Sets the roles_some of this UserWhereInput.


        :param roles_some: The roles_some of this UserWhereInput.  # noqa: E501
        :type roles_some: UserRoleNextWhereInput
        """

        self._roles_some = roles_some

    @property
    def source(self):
        """Gets the source of this UserWhereInput.  # noqa: E501


        :return: The source of this UserWhereInput.  # noqa: E501
        :rtype: UserSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this UserWhereInput.


        :param source: The source of this UserWhereInput.  # noqa: E501
        :type source: UserSource
        """

        self._source = source

    @property
    def source_in(self):
        """Gets the source_in of this UserWhereInput.  # noqa: E501


        :return: The source_in of this UserWhereInput.  # noqa: E501
        :rtype: list[UserSource]
        """
        return self._source_in

    @source_in.setter
    def source_in(self, source_in):
        """Sets the source_in of this UserWhereInput.


        :param source_in: The source_in of this UserWhereInput.  # noqa: E501
        :type source_in: list[UserSource]
        """

        self._source_in = source_in

    @property
    def source_not(self):
        """Gets the source_not of this UserWhereInput.  # noqa: E501


        :return: The source_not of this UserWhereInput.  # noqa: E501
        :rtype: UserSource
        """
        return self._source_not

    @source_not.setter
    def source_not(self, source_not):
        """Sets the source_not of this UserWhereInput.


        :param source_not: The source_not of this UserWhereInput.  # noqa: E501
        :type source_not: UserSource
        """

        self._source_not = source_not

    @property
    def source_not_in(self):
        """Gets the source_not_in of this UserWhereInput.  # noqa: E501


        :return: The source_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[UserSource]
        """
        return self._source_not_in

    @source_not_in.setter
    def source_not_in(self, source_not_in):
        """Sets the source_not_in of this UserWhereInput.


        :param source_not_in: The source_not_in of this UserWhereInput.  # noqa: E501
        :type source_not_in: list[UserSource]
        """

        self._source_not_in = source_not_in

    @property
    def username(self):
        """Gets the username of this UserWhereInput.  # noqa: E501


        :return: The username of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserWhereInput.


        :param username: The username of this UserWhereInput.  # noqa: E501
        :type username: str
        """

        self._username = username

    @property
    def username_contains(self):
        """Gets the username_contains of this UserWhereInput.  # noqa: E501


        :return: The username_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_contains

    @username_contains.setter
    def username_contains(self, username_contains):
        """Sets the username_contains of this UserWhereInput.


        :param username_contains: The username_contains of this UserWhereInput.  # noqa: E501
        :type username_contains: str
        """

        self._username_contains = username_contains

    @property
    def username_ends_with(self):
        """Gets the username_ends_with of this UserWhereInput.  # noqa: E501


        :return: The username_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_ends_with

    @username_ends_with.setter
    def username_ends_with(self, username_ends_with):
        """Sets the username_ends_with of this UserWhereInput.


        :param username_ends_with: The username_ends_with of this UserWhereInput.  # noqa: E501
        :type username_ends_with: str
        """

        self._username_ends_with = username_ends_with

    @property
    def username_gt(self):
        """Gets the username_gt of this UserWhereInput.  # noqa: E501


        :return: The username_gt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gt

    @username_gt.setter
    def username_gt(self, username_gt):
        """Sets the username_gt of this UserWhereInput.


        :param username_gt: The username_gt of this UserWhereInput.  # noqa: E501
        :type username_gt: str
        """

        self._username_gt = username_gt

    @property
    def username_gte(self):
        """Gets the username_gte of this UserWhereInput.  # noqa: E501


        :return: The username_gte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gte

    @username_gte.setter
    def username_gte(self, username_gte):
        """Sets the username_gte of this UserWhereInput.


        :param username_gte: The username_gte of this UserWhereInput.  # noqa: E501
        :type username_gte: str
        """

        self._username_gte = username_gte

    @property
    def username_in(self):
        """Gets the username_in of this UserWhereInput.  # noqa: E501


        :return: The username_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_in

    @username_in.setter
    def username_in(self, username_in):
        """Sets the username_in of this UserWhereInput.


        :param username_in: The username_in of this UserWhereInput.  # noqa: E501
        :type username_in: list[str]
        """

        self._username_in = username_in

    @property
    def username_lt(self):
        """Gets the username_lt of this UserWhereInput.  # noqa: E501


        :return: The username_lt of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lt

    @username_lt.setter
    def username_lt(self, username_lt):
        """Sets the username_lt of this UserWhereInput.


        :param username_lt: The username_lt of this UserWhereInput.  # noqa: E501
        :type username_lt: str
        """

        self._username_lt = username_lt

    @property
    def username_lte(self):
        """Gets the username_lte of this UserWhereInput.  # noqa: E501


        :return: The username_lte of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lte

    @username_lte.setter
    def username_lte(self, username_lte):
        """Sets the username_lte of this UserWhereInput.


        :param username_lte: The username_lte of this UserWhereInput.  # noqa: E501
        :type username_lte: str
        """

        self._username_lte = username_lte

    @property
    def username_not(self):
        """Gets the username_not of this UserWhereInput.  # noqa: E501


        :return: The username_not of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not

    @username_not.setter
    def username_not(self, username_not):
        """Sets the username_not of this UserWhereInput.


        :param username_not: The username_not of this UserWhereInput.  # noqa: E501
        :type username_not: str
        """

        self._username_not = username_not

    @property
    def username_not_contains(self):
        """Gets the username_not_contains of this UserWhereInput.  # noqa: E501


        :return: The username_not_contains of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_contains

    @username_not_contains.setter
    def username_not_contains(self, username_not_contains):
        """Sets the username_not_contains of this UserWhereInput.


        :param username_not_contains: The username_not_contains of this UserWhereInput.  # noqa: E501
        :type username_not_contains: str
        """

        self._username_not_contains = username_not_contains

    @property
    def username_not_ends_with(self):
        """Gets the username_not_ends_with of this UserWhereInput.  # noqa: E501


        :return: The username_not_ends_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_ends_with

    @username_not_ends_with.setter
    def username_not_ends_with(self, username_not_ends_with):
        """Sets the username_not_ends_with of this UserWhereInput.


        :param username_not_ends_with: The username_not_ends_with of this UserWhereInput.  # noqa: E501
        :type username_not_ends_with: str
        """

        self._username_not_ends_with = username_not_ends_with

    @property
    def username_not_in(self):
        """Gets the username_not_in of this UserWhereInput.  # noqa: E501


        :return: The username_not_in of this UserWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_not_in

    @username_not_in.setter
    def username_not_in(self, username_not_in):
        """Sets the username_not_in of this UserWhereInput.


        :param username_not_in: The username_not_in of this UserWhereInput.  # noqa: E501
        :type username_not_in: list[str]
        """

        self._username_not_in = username_not_in

    @property
    def username_not_starts_with(self):
        """Gets the username_not_starts_with of this UserWhereInput.  # noqa: E501


        :return: The username_not_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_starts_with

    @username_not_starts_with.setter
    def username_not_starts_with(self, username_not_starts_with):
        """Sets the username_not_starts_with of this UserWhereInput.


        :param username_not_starts_with: The username_not_starts_with of this UserWhereInput.  # noqa: E501
        :type username_not_starts_with: str
        """

        self._username_not_starts_with = username_not_starts_with

    @property
    def username_starts_with(self):
        """Gets the username_starts_with of this UserWhereInput.  # noqa: E501


        :return: The username_starts_with of this UserWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_starts_with

    @username_starts_with.setter
    def username_starts_with(self, username_starts_with):
        """Sets the username_starts_with of this UserWhereInput.


        :param username_starts_with: The username_starts_with of this UserWhereInput.  # noqa: E501
        :type username_starts_with: str
        """

        self._username_starts_with = username_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UserWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, UserWhereInput):
            return True

        return self.to_dict() != other.to_dict()

# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class SnmpTrapReceiverWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[SnmpTrapReceiverWhereInput]',
        '_not': 'list[SnmpTrapReceiverWhereInput]',
        '_or': 'list[SnmpTrapReceiverWhereInput]',
        'auth_pass_phrase': 'str',
        'auth_pass_phrase_contains': 'str',
        'auth_pass_phrase_ends_with': 'str',
        'auth_pass_phrase_gt': 'str',
        'auth_pass_phrase_gte': 'str',
        'auth_pass_phrase_in': 'list[str]',
        'auth_pass_phrase_lt': 'str',
        'auth_pass_phrase_lte': 'str',
        'auth_pass_phrase_not': 'str',
        'auth_pass_phrase_not_contains': 'str',
        'auth_pass_phrase_not_ends_with': 'str',
        'auth_pass_phrase_not_in': 'list[str]',
        'auth_pass_phrase_not_starts_with': 'str',
        'auth_pass_phrase_starts_with': 'str',
        'auth_protocol': 'SnmpAuthProtocol',
        'auth_protocol_in': 'list[SnmpAuthProtocol]',
        'auth_protocol_not': 'SnmpAuthProtocol',
        'auth_protocol_not_in': 'list[SnmpAuthProtocol]',
        'cluster': 'ClusterWhereInput',
        'community': 'str',
        'community_contains': 'str',
        'community_ends_with': 'str',
        'community_gt': 'str',
        'community_gte': 'str',
        'community_in': 'list[str]',
        'community_lt': 'str',
        'community_lte': 'str',
        'community_not': 'str',
        'community_not_contains': 'str',
        'community_not_ends_with': 'str',
        'community_not_in': 'list[str]',
        'community_not_starts_with': 'str',
        'community_starts_with': 'str',
        'disabled': 'bool',
        'disabled_not': 'bool',
        'engine_id': 'str',
        'engine_id_contains': 'str',
        'engine_id_ends_with': 'str',
        'engine_id_gt': 'str',
        'engine_id_gte': 'str',
        'engine_id_in': 'list[str]',
        'engine_id_lt': 'str',
        'engine_id_lte': 'str',
        'engine_id_not': 'str',
        'engine_id_not_contains': 'str',
        'engine_id_not_ends_with': 'str',
        'engine_id_not_in': 'list[str]',
        'engine_id_not_starts_with': 'str',
        'engine_id_starts_with': 'str',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'host': 'str',
        'host_contains': 'str',
        'host_ends_with': 'str',
        'host_gt': 'str',
        'host_gte': 'str',
        'host_in': 'list[str]',
        'host_lt': 'str',
        'host_lte': 'str',
        'host_not': 'str',
        'host_not_contains': 'str',
        'host_not_ends_with': 'str',
        'host_not_in': 'list[str]',
        'host_not_starts_with': 'str',
        'host_starts_with': 'str',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'inform': 'bool',
        'inform_not': 'bool',
        'language_code': 'SnmpLanguageCode',
        'language_code_in': 'list[SnmpLanguageCode]',
        'language_code_not': 'SnmpLanguageCode',
        'language_code_not_in': 'list[SnmpLanguageCode]',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'port': 'int',
        'port_gt': 'int',
        'port_gte': 'int',
        'port_in': 'list[int]',
        'port_lt': 'int',
        'port_lte': 'int',
        'port_not': 'int',
        'port_not_in': 'list[int]',
        'privacy_pass_phrase': 'str',
        'privacy_pass_phrase_contains': 'str',
        'privacy_pass_phrase_ends_with': 'str',
        'privacy_pass_phrase_gt': 'str',
        'privacy_pass_phrase_gte': 'str',
        'privacy_pass_phrase_in': 'list[str]',
        'privacy_pass_phrase_lt': 'str',
        'privacy_pass_phrase_lte': 'str',
        'privacy_pass_phrase_not': 'str',
        'privacy_pass_phrase_not_contains': 'str',
        'privacy_pass_phrase_not_ends_with': 'str',
        'privacy_pass_phrase_not_in': 'list[str]',
        'privacy_pass_phrase_not_starts_with': 'str',
        'privacy_pass_phrase_starts_with': 'str',
        'privacy_protocol': 'SnmpPrivacyProtocol',
        'privacy_protocol_in': 'list[SnmpPrivacyProtocol]',
        'privacy_protocol_not': 'SnmpPrivacyProtocol',
        'privacy_protocol_not_in': 'list[SnmpPrivacyProtocol]',
        'protocol': 'SnmpProtocol',
        'protocol_in': 'list[SnmpProtocol]',
        'protocol_not': 'SnmpProtocol',
        'protocol_not_in': 'list[SnmpProtocol]',
        'username': 'str',
        'username_contains': 'str',
        'username_ends_with': 'str',
        'username_gt': 'str',
        'username_gte': 'str',
        'username_in': 'list[str]',
        'username_lt': 'str',
        'username_lte': 'str',
        'username_not': 'str',
        'username_not_contains': 'str',
        'username_not_ends_with': 'str',
        'username_not_in': 'list[str]',
        'username_not_starts_with': 'str',
        'username_starts_with': 'str',
        'version': 'SnmpVersion',
        'version_in': 'list[SnmpVersion]',
        'version_not': 'SnmpVersion',
        'version_not_in': 'list[SnmpVersion]'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'auth_pass_phrase': 'auth_pass_phrase',
        'auth_pass_phrase_contains': 'auth_pass_phrase_contains',
        'auth_pass_phrase_ends_with': 'auth_pass_phrase_ends_with',
        'auth_pass_phrase_gt': 'auth_pass_phrase_gt',
        'auth_pass_phrase_gte': 'auth_pass_phrase_gte',
        'auth_pass_phrase_in': 'auth_pass_phrase_in',
        'auth_pass_phrase_lt': 'auth_pass_phrase_lt',
        'auth_pass_phrase_lte': 'auth_pass_phrase_lte',
        'auth_pass_phrase_not': 'auth_pass_phrase_not',
        'auth_pass_phrase_not_contains': 'auth_pass_phrase_not_contains',
        'auth_pass_phrase_not_ends_with': 'auth_pass_phrase_not_ends_with',
        'auth_pass_phrase_not_in': 'auth_pass_phrase_not_in',
        'auth_pass_phrase_not_starts_with': 'auth_pass_phrase_not_starts_with',
        'auth_pass_phrase_starts_with': 'auth_pass_phrase_starts_with',
        'auth_protocol': 'auth_protocol',
        'auth_protocol_in': 'auth_protocol_in',
        'auth_protocol_not': 'auth_protocol_not',
        'auth_protocol_not_in': 'auth_protocol_not_in',
        'cluster': 'cluster',
        'community': 'community',
        'community_contains': 'community_contains',
        'community_ends_with': 'community_ends_with',
        'community_gt': 'community_gt',
        'community_gte': 'community_gte',
        'community_in': 'community_in',
        'community_lt': 'community_lt',
        'community_lte': 'community_lte',
        'community_not': 'community_not',
        'community_not_contains': 'community_not_contains',
        'community_not_ends_with': 'community_not_ends_with',
        'community_not_in': 'community_not_in',
        'community_not_starts_with': 'community_not_starts_with',
        'community_starts_with': 'community_starts_with',
        'disabled': 'disabled',
        'disabled_not': 'disabled_not',
        'engine_id': 'engine_id',
        'engine_id_contains': 'engine_id_contains',
        'engine_id_ends_with': 'engine_id_ends_with',
        'engine_id_gt': 'engine_id_gt',
        'engine_id_gte': 'engine_id_gte',
        'engine_id_in': 'engine_id_in',
        'engine_id_lt': 'engine_id_lt',
        'engine_id_lte': 'engine_id_lte',
        'engine_id_not': 'engine_id_not',
        'engine_id_not_contains': 'engine_id_not_contains',
        'engine_id_not_ends_with': 'engine_id_not_ends_with',
        'engine_id_not_in': 'engine_id_not_in',
        'engine_id_not_starts_with': 'engine_id_not_starts_with',
        'engine_id_starts_with': 'engine_id_starts_with',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'host': 'host',
        'host_contains': 'host_contains',
        'host_ends_with': 'host_ends_with',
        'host_gt': 'host_gt',
        'host_gte': 'host_gte',
        'host_in': 'host_in',
        'host_lt': 'host_lt',
        'host_lte': 'host_lte',
        'host_not': 'host_not',
        'host_not_contains': 'host_not_contains',
        'host_not_ends_with': 'host_not_ends_with',
        'host_not_in': 'host_not_in',
        'host_not_starts_with': 'host_not_starts_with',
        'host_starts_with': 'host_starts_with',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'inform': 'inform',
        'inform_not': 'inform_not',
        'language_code': 'language_code',
        'language_code_in': 'language_code_in',
        'language_code_not': 'language_code_not',
        'language_code_not_in': 'language_code_not_in',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'port': 'port',
        'port_gt': 'port_gt',
        'port_gte': 'port_gte',
        'port_in': 'port_in',
        'port_lt': 'port_lt',
        'port_lte': 'port_lte',
        'port_not': 'port_not',
        'port_not_in': 'port_not_in',
        'privacy_pass_phrase': 'privacy_pass_phrase',
        'privacy_pass_phrase_contains': 'privacy_pass_phrase_contains',
        'privacy_pass_phrase_ends_with': 'privacy_pass_phrase_ends_with',
        'privacy_pass_phrase_gt': 'privacy_pass_phrase_gt',
        'privacy_pass_phrase_gte': 'privacy_pass_phrase_gte',
        'privacy_pass_phrase_in': 'privacy_pass_phrase_in',
        'privacy_pass_phrase_lt': 'privacy_pass_phrase_lt',
        'privacy_pass_phrase_lte': 'privacy_pass_phrase_lte',
        'privacy_pass_phrase_not': 'privacy_pass_phrase_not',
        'privacy_pass_phrase_not_contains': 'privacy_pass_phrase_not_contains',
        'privacy_pass_phrase_not_ends_with': 'privacy_pass_phrase_not_ends_with',
        'privacy_pass_phrase_not_in': 'privacy_pass_phrase_not_in',
        'privacy_pass_phrase_not_starts_with': 'privacy_pass_phrase_not_starts_with',
        'privacy_pass_phrase_starts_with': 'privacy_pass_phrase_starts_with',
        'privacy_protocol': 'privacy_protocol',
        'privacy_protocol_in': 'privacy_protocol_in',
        'privacy_protocol_not': 'privacy_protocol_not',
        'privacy_protocol_not_in': 'privacy_protocol_not_in',
        'protocol': 'protocol',
        'protocol_in': 'protocol_in',
        'protocol_not': 'protocol_not',
        'protocol_not_in': 'protocol_not_in',
        'username': 'username',
        'username_contains': 'username_contains',
        'username_ends_with': 'username_ends_with',
        'username_gt': 'username_gt',
        'username_gte': 'username_gte',
        'username_in': 'username_in',
        'username_lt': 'username_lt',
        'username_lte': 'username_lte',
        'username_not': 'username_not',
        'username_not_contains': 'username_not_contains',
        'username_not_ends_with': 'username_not_ends_with',
        'username_not_in': 'username_not_in',
        'username_not_starts_with': 'username_not_starts_with',
        'username_starts_with': 'username_starts_with',
        'version': 'version',
        'version_in': 'version_in',
        'version_not': 'version_not',
        'version_not_in': 'version_not_in'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """SnmpTrapReceiverWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._auth_pass_phrase = None
        self._auth_pass_phrase_contains = None
        self._auth_pass_phrase_ends_with = None
        self._auth_pass_phrase_gt = None
        self._auth_pass_phrase_gte = None
        self._auth_pass_phrase_in = None
        self._auth_pass_phrase_lt = None
        self._auth_pass_phrase_lte = None
        self._auth_pass_phrase_not = None
        self._auth_pass_phrase_not_contains = None
        self._auth_pass_phrase_not_ends_with = None
        self._auth_pass_phrase_not_in = None
        self._auth_pass_phrase_not_starts_with = None
        self._auth_pass_phrase_starts_with = None
        self._auth_protocol = None
        self._auth_protocol_in = None
        self._auth_protocol_not = None
        self._auth_protocol_not_in = None
        self._cluster = None
        self._community = None
        self._community_contains = None
        self._community_ends_with = None
        self._community_gt = None
        self._community_gte = None
        self._community_in = None
        self._community_lt = None
        self._community_lte = None
        self._community_not = None
        self._community_not_contains = None
        self._community_not_ends_with = None
        self._community_not_in = None
        self._community_not_starts_with = None
        self._community_starts_with = None
        self._disabled = None
        self._disabled_not = None
        self._engine_id = None
        self._engine_id_contains = None
        self._engine_id_ends_with = None
        self._engine_id_gt = None
        self._engine_id_gte = None
        self._engine_id_in = None
        self._engine_id_lt = None
        self._engine_id_lte = None
        self._engine_id_not = None
        self._engine_id_not_contains = None
        self._engine_id_not_ends_with = None
        self._engine_id_not_in = None
        self._engine_id_not_starts_with = None
        self._engine_id_starts_with = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._host = None
        self._host_contains = None
        self._host_ends_with = None
        self._host_gt = None
        self._host_gte = None
        self._host_in = None
        self._host_lt = None
        self._host_lte = None
        self._host_not = None
        self._host_not_contains = None
        self._host_not_ends_with = None
        self._host_not_in = None
        self._host_not_starts_with = None
        self._host_starts_with = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._inform = None
        self._inform_not = None
        self._language_code = None
        self._language_code_in = None
        self._language_code_not = None
        self._language_code_not_in = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._port = None
        self._port_gt = None
        self._port_gte = None
        self._port_in = None
        self._port_lt = None
        self._port_lte = None
        self._port_not = None
        self._port_not_in = None
        self._privacy_pass_phrase = None
        self._privacy_pass_phrase_contains = None
        self._privacy_pass_phrase_ends_with = None
        self._privacy_pass_phrase_gt = None
        self._privacy_pass_phrase_gte = None
        self._privacy_pass_phrase_in = None
        self._privacy_pass_phrase_lt = None
        self._privacy_pass_phrase_lte = None
        self._privacy_pass_phrase_not = None
        self._privacy_pass_phrase_not_contains = None
        self._privacy_pass_phrase_not_ends_with = None
        self._privacy_pass_phrase_not_in = None
        self._privacy_pass_phrase_not_starts_with = None
        self._privacy_pass_phrase_starts_with = None
        self._privacy_protocol = None
        self._privacy_protocol_in = None
        self._privacy_protocol_not = None
        self._privacy_protocol_not_in = None
        self._protocol = None
        self._protocol_in = None
        self._protocol_not = None
        self._protocol_not_in = None
        self._username = None
        self._username_contains = None
        self._username_ends_with = None
        self._username_gt = None
        self._username_gte = None
        self._username_in = None
        self._username_lt = None
        self._username_lte = None
        self._username_not = None
        self._username_not_contains = None
        self._username_not_ends_with = None
        self._username_not_in = None
        self._username_not_starts_with = None
        self._username_starts_with = None
        self._version = None
        self._version_in = None
        self._version_not = None
        self._version_not_in = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.auth_pass_phrase = kwargs.get("auth_pass_phrase", None)
        self.auth_pass_phrase_contains = kwargs.get("auth_pass_phrase_contains", None)
        self.auth_pass_phrase_ends_with = kwargs.get("auth_pass_phrase_ends_with", None)
        self.auth_pass_phrase_gt = kwargs.get("auth_pass_phrase_gt", None)
        self.auth_pass_phrase_gte = kwargs.get("auth_pass_phrase_gte", None)
        self.auth_pass_phrase_in = kwargs.get("auth_pass_phrase_in", None)
        self.auth_pass_phrase_lt = kwargs.get("auth_pass_phrase_lt", None)
        self.auth_pass_phrase_lte = kwargs.get("auth_pass_phrase_lte", None)
        self.auth_pass_phrase_not = kwargs.get("auth_pass_phrase_not", None)
        self.auth_pass_phrase_not_contains = kwargs.get("auth_pass_phrase_not_contains", None)
        self.auth_pass_phrase_not_ends_with = kwargs.get("auth_pass_phrase_not_ends_with", None)
        self.auth_pass_phrase_not_in = kwargs.get("auth_pass_phrase_not_in", None)
        self.auth_pass_phrase_not_starts_with = kwargs.get("auth_pass_phrase_not_starts_with", None)
        self.auth_pass_phrase_starts_with = kwargs.get("auth_pass_phrase_starts_with", None)
        self.auth_protocol = kwargs.get("auth_protocol", None)
        self.auth_protocol_in = kwargs.get("auth_protocol_in", None)
        self.auth_protocol_not = kwargs.get("auth_protocol_not", None)
        self.auth_protocol_not_in = kwargs.get("auth_protocol_not_in", None)
        self.cluster = kwargs.get("cluster", None)
        self.community = kwargs.get("community", None)
        self.community_contains = kwargs.get("community_contains", None)
        self.community_ends_with = kwargs.get("community_ends_with", None)
        self.community_gt = kwargs.get("community_gt", None)
        self.community_gte = kwargs.get("community_gte", None)
        self.community_in = kwargs.get("community_in", None)
        self.community_lt = kwargs.get("community_lt", None)
        self.community_lte = kwargs.get("community_lte", None)
        self.community_not = kwargs.get("community_not", None)
        self.community_not_contains = kwargs.get("community_not_contains", None)
        self.community_not_ends_with = kwargs.get("community_not_ends_with", None)
        self.community_not_in = kwargs.get("community_not_in", None)
        self.community_not_starts_with = kwargs.get("community_not_starts_with", None)
        self.community_starts_with = kwargs.get("community_starts_with", None)
        self.disabled = kwargs.get("disabled", None)
        self.disabled_not = kwargs.get("disabled_not", None)
        self.engine_id = kwargs.get("engine_id", None)
        self.engine_id_contains = kwargs.get("engine_id_contains", None)
        self.engine_id_ends_with = kwargs.get("engine_id_ends_with", None)
        self.engine_id_gt = kwargs.get("engine_id_gt", None)
        self.engine_id_gte = kwargs.get("engine_id_gte", None)
        self.engine_id_in = kwargs.get("engine_id_in", None)
        self.engine_id_lt = kwargs.get("engine_id_lt", None)
        self.engine_id_lte = kwargs.get("engine_id_lte", None)
        self.engine_id_not = kwargs.get("engine_id_not", None)
        self.engine_id_not_contains = kwargs.get("engine_id_not_contains", None)
        self.engine_id_not_ends_with = kwargs.get("engine_id_not_ends_with", None)
        self.engine_id_not_in = kwargs.get("engine_id_not_in", None)
        self.engine_id_not_starts_with = kwargs.get("engine_id_not_starts_with", None)
        self.engine_id_starts_with = kwargs.get("engine_id_starts_with", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.host = kwargs.get("host", None)
        self.host_contains = kwargs.get("host_contains", None)
        self.host_ends_with = kwargs.get("host_ends_with", None)
        self.host_gt = kwargs.get("host_gt", None)
        self.host_gte = kwargs.get("host_gte", None)
        self.host_in = kwargs.get("host_in", None)
        self.host_lt = kwargs.get("host_lt", None)
        self.host_lte = kwargs.get("host_lte", None)
        self.host_not = kwargs.get("host_not", None)
        self.host_not_contains = kwargs.get("host_not_contains", None)
        self.host_not_ends_with = kwargs.get("host_not_ends_with", None)
        self.host_not_in = kwargs.get("host_not_in", None)
        self.host_not_starts_with = kwargs.get("host_not_starts_with", None)
        self.host_starts_with = kwargs.get("host_starts_with", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.inform = kwargs.get("inform", None)
        self.inform_not = kwargs.get("inform_not", None)
        self.language_code = kwargs.get("language_code", None)
        self.language_code_in = kwargs.get("language_code_in", None)
        self.language_code_not = kwargs.get("language_code_not", None)
        self.language_code_not_in = kwargs.get("language_code_not_in", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.port = kwargs.get("port", None)
        self.port_gt = kwargs.get("port_gt", None)
        self.port_gte = kwargs.get("port_gte", None)
        self.port_in = kwargs.get("port_in", None)
        self.port_lt = kwargs.get("port_lt", None)
        self.port_lte = kwargs.get("port_lte", None)
        self.port_not = kwargs.get("port_not", None)
        self.port_not_in = kwargs.get("port_not_in", None)
        self.privacy_pass_phrase = kwargs.get("privacy_pass_phrase", None)
        self.privacy_pass_phrase_contains = kwargs.get("privacy_pass_phrase_contains", None)
        self.privacy_pass_phrase_ends_with = kwargs.get("privacy_pass_phrase_ends_with", None)
        self.privacy_pass_phrase_gt = kwargs.get("privacy_pass_phrase_gt", None)
        self.privacy_pass_phrase_gte = kwargs.get("privacy_pass_phrase_gte", None)
        self.privacy_pass_phrase_in = kwargs.get("privacy_pass_phrase_in", None)
        self.privacy_pass_phrase_lt = kwargs.get("privacy_pass_phrase_lt", None)
        self.privacy_pass_phrase_lte = kwargs.get("privacy_pass_phrase_lte", None)
        self.privacy_pass_phrase_not = kwargs.get("privacy_pass_phrase_not", None)
        self.privacy_pass_phrase_not_contains = kwargs.get("privacy_pass_phrase_not_contains", None)
        self.privacy_pass_phrase_not_ends_with = kwargs.get("privacy_pass_phrase_not_ends_with", None)
        self.privacy_pass_phrase_not_in = kwargs.get("privacy_pass_phrase_not_in", None)
        self.privacy_pass_phrase_not_starts_with = kwargs.get("privacy_pass_phrase_not_starts_with", None)
        self.privacy_pass_phrase_starts_with = kwargs.get("privacy_pass_phrase_starts_with", None)
        self.privacy_protocol = kwargs.get("privacy_protocol", None)
        self.privacy_protocol_in = kwargs.get("privacy_protocol_in", None)
        self.privacy_protocol_not = kwargs.get("privacy_protocol_not", None)
        self.privacy_protocol_not_in = kwargs.get("privacy_protocol_not_in", None)
        self.protocol = kwargs.get("protocol", None)
        self.protocol_in = kwargs.get("protocol_in", None)
        self.protocol_not = kwargs.get("protocol_not", None)
        self.protocol_not_in = kwargs.get("protocol_not_in", None)
        self.username = kwargs.get("username", None)
        self.username_contains = kwargs.get("username_contains", None)
        self.username_ends_with = kwargs.get("username_ends_with", None)
        self.username_gt = kwargs.get("username_gt", None)
        self.username_gte = kwargs.get("username_gte", None)
        self.username_in = kwargs.get("username_in", None)
        self.username_lt = kwargs.get("username_lt", None)
        self.username_lte = kwargs.get("username_lte", None)
        self.username_not = kwargs.get("username_not", None)
        self.username_not_contains = kwargs.get("username_not_contains", None)
        self.username_not_ends_with = kwargs.get("username_not_ends_with", None)
        self.username_not_in = kwargs.get("username_not_in", None)
        self.username_not_starts_with = kwargs.get("username_not_starts_with", None)
        self.username_starts_with = kwargs.get("username_starts_with", None)
        self.version = kwargs.get("version", None)
        self.version_in = kwargs.get("version_in", None)
        self.version_not = kwargs.get("version_not", None)
        self.version_not_in = kwargs.get("version_not_in", None)

    @property
    def _and(self):
        """Gets the _and of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The _and of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpTrapReceiverWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this SnmpTrapReceiverWhereInput.


        :param _and: The _and of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type _and: list[SnmpTrapReceiverWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The _not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpTrapReceiverWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this SnmpTrapReceiverWhereInput.


        :param _not: The _not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type _not: list[SnmpTrapReceiverWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The _or of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpTrapReceiverWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this SnmpTrapReceiverWhereInput.


        :param _or: The _or of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type _or: list[SnmpTrapReceiverWhereInput]
        """

        self.__or = _or

    @property
    def auth_pass_phrase(self):
        """Gets the auth_pass_phrase of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase

    @auth_pass_phrase.setter
    def auth_pass_phrase(self, auth_pass_phrase):
        """Sets the auth_pass_phrase of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase: The auth_pass_phrase of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase: str
        """

        self._auth_pass_phrase = auth_pass_phrase

    @property
    def auth_pass_phrase_contains(self):
        """Gets the auth_pass_phrase_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_contains

    @auth_pass_phrase_contains.setter
    def auth_pass_phrase_contains(self, auth_pass_phrase_contains):
        """Sets the auth_pass_phrase_contains of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_contains: The auth_pass_phrase_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_contains: str
        """

        self._auth_pass_phrase_contains = auth_pass_phrase_contains

    @property
    def auth_pass_phrase_ends_with(self):
        """Gets the auth_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_ends_with

    @auth_pass_phrase_ends_with.setter
    def auth_pass_phrase_ends_with(self, auth_pass_phrase_ends_with):
        """Sets the auth_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_ends_with: The auth_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_ends_with: str
        """

        self._auth_pass_phrase_ends_with = auth_pass_phrase_ends_with

    @property
    def auth_pass_phrase_gt(self):
        """Gets the auth_pass_phrase_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_gt

    @auth_pass_phrase_gt.setter
    def auth_pass_phrase_gt(self, auth_pass_phrase_gt):
        """Sets the auth_pass_phrase_gt of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_gt: The auth_pass_phrase_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_gt: str
        """

        self._auth_pass_phrase_gt = auth_pass_phrase_gt

    @property
    def auth_pass_phrase_gte(self):
        """Gets the auth_pass_phrase_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_gte

    @auth_pass_phrase_gte.setter
    def auth_pass_phrase_gte(self, auth_pass_phrase_gte):
        """Sets the auth_pass_phrase_gte of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_gte: The auth_pass_phrase_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_gte: str
        """

        self._auth_pass_phrase_gte = auth_pass_phrase_gte

    @property
    def auth_pass_phrase_in(self):
        """Gets the auth_pass_phrase_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._auth_pass_phrase_in

    @auth_pass_phrase_in.setter
    def auth_pass_phrase_in(self, auth_pass_phrase_in):
        """Sets the auth_pass_phrase_in of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_in: The auth_pass_phrase_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_in: list[str]
        """

        self._auth_pass_phrase_in = auth_pass_phrase_in

    @property
    def auth_pass_phrase_lt(self):
        """Gets the auth_pass_phrase_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_lt

    @auth_pass_phrase_lt.setter
    def auth_pass_phrase_lt(self, auth_pass_phrase_lt):
        """Sets the auth_pass_phrase_lt of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_lt: The auth_pass_phrase_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_lt: str
        """

        self._auth_pass_phrase_lt = auth_pass_phrase_lt

    @property
    def auth_pass_phrase_lte(self):
        """Gets the auth_pass_phrase_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_lte

    @auth_pass_phrase_lte.setter
    def auth_pass_phrase_lte(self, auth_pass_phrase_lte):
        """Sets the auth_pass_phrase_lte of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_lte: The auth_pass_phrase_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_lte: str
        """

        self._auth_pass_phrase_lte = auth_pass_phrase_lte

    @property
    def auth_pass_phrase_not(self):
        """Gets the auth_pass_phrase_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_not

    @auth_pass_phrase_not.setter
    def auth_pass_phrase_not(self, auth_pass_phrase_not):
        """Sets the auth_pass_phrase_not of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_not: The auth_pass_phrase_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_not: str
        """

        self._auth_pass_phrase_not = auth_pass_phrase_not

    @property
    def auth_pass_phrase_not_contains(self):
        """Gets the auth_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_not_contains

    @auth_pass_phrase_not_contains.setter
    def auth_pass_phrase_not_contains(self, auth_pass_phrase_not_contains):
        """Sets the auth_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_not_contains: The auth_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_not_contains: str
        """

        self._auth_pass_phrase_not_contains = auth_pass_phrase_not_contains

    @property
    def auth_pass_phrase_not_ends_with(self):
        """Gets the auth_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_not_ends_with

    @auth_pass_phrase_not_ends_with.setter
    def auth_pass_phrase_not_ends_with(self, auth_pass_phrase_not_ends_with):
        """Sets the auth_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_not_ends_with: The auth_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_not_ends_with: str
        """

        self._auth_pass_phrase_not_ends_with = auth_pass_phrase_not_ends_with

    @property
    def auth_pass_phrase_not_in(self):
        """Gets the auth_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._auth_pass_phrase_not_in

    @auth_pass_phrase_not_in.setter
    def auth_pass_phrase_not_in(self, auth_pass_phrase_not_in):
        """Sets the auth_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_not_in: The auth_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_not_in: list[str]
        """

        self._auth_pass_phrase_not_in = auth_pass_phrase_not_in

    @property
    def auth_pass_phrase_not_starts_with(self):
        """Gets the auth_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_not_starts_with

    @auth_pass_phrase_not_starts_with.setter
    def auth_pass_phrase_not_starts_with(self, auth_pass_phrase_not_starts_with):
        """Sets the auth_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_not_starts_with: The auth_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_not_starts_with: str
        """

        self._auth_pass_phrase_not_starts_with = auth_pass_phrase_not_starts_with

    @property
    def auth_pass_phrase_starts_with(self):
        """Gets the auth_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_pass_phrase_starts_with

    @auth_pass_phrase_starts_with.setter
    def auth_pass_phrase_starts_with(self, auth_pass_phrase_starts_with):
        """Sets the auth_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.


        :param auth_pass_phrase_starts_with: The auth_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_pass_phrase_starts_with: str
        """

        self._auth_pass_phrase_starts_with = auth_pass_phrase_starts_with

    @property
    def auth_protocol(self):
        """Gets the auth_protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpAuthProtocol
        """
        return self._auth_protocol

    @auth_protocol.setter
    def auth_protocol(self, auth_protocol):
        """Sets the auth_protocol of this SnmpTrapReceiverWhereInput.


        :param auth_protocol: The auth_protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_protocol: SnmpAuthProtocol
        """

        self._auth_protocol = auth_protocol

    @property
    def auth_protocol_in(self):
        """Gets the auth_protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpAuthProtocol]
        """
        return self._auth_protocol_in

    @auth_protocol_in.setter
    def auth_protocol_in(self, auth_protocol_in):
        """Sets the auth_protocol_in of this SnmpTrapReceiverWhereInput.


        :param auth_protocol_in: The auth_protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_protocol_in: list[SnmpAuthProtocol]
        """

        self._auth_protocol_in = auth_protocol_in

    @property
    def auth_protocol_not(self):
        """Gets the auth_protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpAuthProtocol
        """
        return self._auth_protocol_not

    @auth_protocol_not.setter
    def auth_protocol_not(self, auth_protocol_not):
        """Sets the auth_protocol_not of this SnmpTrapReceiverWhereInput.


        :param auth_protocol_not: The auth_protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_protocol_not: SnmpAuthProtocol
        """

        self._auth_protocol_not = auth_protocol_not

    @property
    def auth_protocol_not_in(self):
        """Gets the auth_protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The auth_protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpAuthProtocol]
        """
        return self._auth_protocol_not_in

    @auth_protocol_not_in.setter
    def auth_protocol_not_in(self, auth_protocol_not_in):
        """Sets the auth_protocol_not_in of this SnmpTrapReceiverWhereInput.


        :param auth_protocol_not_in: The auth_protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type auth_protocol_not_in: list[SnmpAuthProtocol]
        """

        self._auth_protocol_not_in = auth_protocol_not_in

    @property
    def cluster(self):
        """Gets the cluster of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The cluster of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this SnmpTrapReceiverWhereInput.


        :param cluster: The cluster of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def community(self):
        """Gets the community of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community

    @community.setter
    def community(self, community):
        """Sets the community of this SnmpTrapReceiverWhereInput.


        :param community: The community of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community: str
        """

        self._community = community

    @property
    def community_contains(self):
        """Gets the community_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_contains

    @community_contains.setter
    def community_contains(self, community_contains):
        """Sets the community_contains of this SnmpTrapReceiverWhereInput.


        :param community_contains: The community_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_contains: str
        """

        self._community_contains = community_contains

    @property
    def community_ends_with(self):
        """Gets the community_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_ends_with

    @community_ends_with.setter
    def community_ends_with(self, community_ends_with):
        """Sets the community_ends_with of this SnmpTrapReceiverWhereInput.


        :param community_ends_with: The community_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_ends_with: str
        """

        self._community_ends_with = community_ends_with

    @property
    def community_gt(self):
        """Gets the community_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_gt

    @community_gt.setter
    def community_gt(self, community_gt):
        """Sets the community_gt of this SnmpTrapReceiverWhereInput.


        :param community_gt: The community_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_gt: str
        """

        self._community_gt = community_gt

    @property
    def community_gte(self):
        """Gets the community_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_gte

    @community_gte.setter
    def community_gte(self, community_gte):
        """Sets the community_gte of this SnmpTrapReceiverWhereInput.


        :param community_gte: The community_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_gte: str
        """

        self._community_gte = community_gte

    @property
    def community_in(self):
        """Gets the community_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._community_in

    @community_in.setter
    def community_in(self, community_in):
        """Sets the community_in of this SnmpTrapReceiverWhereInput.


        :param community_in: The community_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_in: list[str]
        """

        self._community_in = community_in

    @property
    def community_lt(self):
        """Gets the community_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_lt

    @community_lt.setter
    def community_lt(self, community_lt):
        """Sets the community_lt of this SnmpTrapReceiverWhereInput.


        :param community_lt: The community_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_lt: str
        """

        self._community_lt = community_lt

    @property
    def community_lte(self):
        """Gets the community_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_lte

    @community_lte.setter
    def community_lte(self, community_lte):
        """Sets the community_lte of this SnmpTrapReceiverWhereInput.


        :param community_lte: The community_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_lte: str
        """

        self._community_lte = community_lte

    @property
    def community_not(self):
        """Gets the community_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_not

    @community_not.setter
    def community_not(self, community_not):
        """Sets the community_not of this SnmpTrapReceiverWhereInput.


        :param community_not: The community_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_not: str
        """

        self._community_not = community_not

    @property
    def community_not_contains(self):
        """Gets the community_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_not_contains

    @community_not_contains.setter
    def community_not_contains(self, community_not_contains):
        """Sets the community_not_contains of this SnmpTrapReceiverWhereInput.


        :param community_not_contains: The community_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_not_contains: str
        """

        self._community_not_contains = community_not_contains

    @property
    def community_not_ends_with(self):
        """Gets the community_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_not_ends_with

    @community_not_ends_with.setter
    def community_not_ends_with(self, community_not_ends_with):
        """Sets the community_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param community_not_ends_with: The community_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_not_ends_with: str
        """

        self._community_not_ends_with = community_not_ends_with

    @property
    def community_not_in(self):
        """Gets the community_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._community_not_in

    @community_not_in.setter
    def community_not_in(self, community_not_in):
        """Sets the community_not_in of this SnmpTrapReceiverWhereInput.


        :param community_not_in: The community_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_not_in: list[str]
        """

        self._community_not_in = community_not_in

    @property
    def community_not_starts_with(self):
        """Gets the community_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_not_starts_with

    @community_not_starts_with.setter
    def community_not_starts_with(self, community_not_starts_with):
        """Sets the community_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param community_not_starts_with: The community_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_not_starts_with: str
        """

        self._community_not_starts_with = community_not_starts_with

    @property
    def community_starts_with(self):
        """Gets the community_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The community_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._community_starts_with

    @community_starts_with.setter
    def community_starts_with(self, community_starts_with):
        """Sets the community_starts_with of this SnmpTrapReceiverWhereInput.


        :param community_starts_with: The community_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type community_starts_with: str
        """

        self._community_starts_with = community_starts_with

    @property
    def disabled(self):
        """Gets the disabled of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The disabled of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this SnmpTrapReceiverWhereInput.


        :param disabled: The disabled of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def disabled_not(self):
        """Gets the disabled_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The disabled_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._disabled_not

    @disabled_not.setter
    def disabled_not(self, disabled_not):
        """Sets the disabled_not of this SnmpTrapReceiverWhereInput.


        :param disabled_not: The disabled_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type disabled_not: bool
        """

        self._disabled_not = disabled_not

    @property
    def engine_id(self):
        """Gets the engine_id of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id

    @engine_id.setter
    def engine_id(self, engine_id):
        """Sets the engine_id of this SnmpTrapReceiverWhereInput.


        :param engine_id: The engine_id of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id: str
        """

        self._engine_id = engine_id

    @property
    def engine_id_contains(self):
        """Gets the engine_id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_contains

    @engine_id_contains.setter
    def engine_id_contains(self, engine_id_contains):
        """Sets the engine_id_contains of this SnmpTrapReceiverWhereInput.


        :param engine_id_contains: The engine_id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_contains: str
        """

        self._engine_id_contains = engine_id_contains

    @property
    def engine_id_ends_with(self):
        """Gets the engine_id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_ends_with

    @engine_id_ends_with.setter
    def engine_id_ends_with(self, engine_id_ends_with):
        """Sets the engine_id_ends_with of this SnmpTrapReceiverWhereInput.


        :param engine_id_ends_with: The engine_id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_ends_with: str
        """

        self._engine_id_ends_with = engine_id_ends_with

    @property
    def engine_id_gt(self):
        """Gets the engine_id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_gt

    @engine_id_gt.setter
    def engine_id_gt(self, engine_id_gt):
        """Sets the engine_id_gt of this SnmpTrapReceiverWhereInput.


        :param engine_id_gt: The engine_id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_gt: str
        """

        self._engine_id_gt = engine_id_gt

    @property
    def engine_id_gte(self):
        """Gets the engine_id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_gte

    @engine_id_gte.setter
    def engine_id_gte(self, engine_id_gte):
        """Sets the engine_id_gte of this SnmpTrapReceiverWhereInput.


        :param engine_id_gte: The engine_id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_gte: str
        """

        self._engine_id_gte = engine_id_gte

    @property
    def engine_id_in(self):
        """Gets the engine_id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._engine_id_in

    @engine_id_in.setter
    def engine_id_in(self, engine_id_in):
        """Sets the engine_id_in of this SnmpTrapReceiverWhereInput.


        :param engine_id_in: The engine_id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_in: list[str]
        """

        self._engine_id_in = engine_id_in

    @property
    def engine_id_lt(self):
        """Gets the engine_id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_lt

    @engine_id_lt.setter
    def engine_id_lt(self, engine_id_lt):
        """Sets the engine_id_lt of this SnmpTrapReceiverWhereInput.


        :param engine_id_lt: The engine_id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_lt: str
        """

        self._engine_id_lt = engine_id_lt

    @property
    def engine_id_lte(self):
        """Gets the engine_id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_lte

    @engine_id_lte.setter
    def engine_id_lte(self, engine_id_lte):
        """Sets the engine_id_lte of this SnmpTrapReceiverWhereInput.


        :param engine_id_lte: The engine_id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_lte: str
        """

        self._engine_id_lte = engine_id_lte

    @property
    def engine_id_not(self):
        """Gets the engine_id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_not

    @engine_id_not.setter
    def engine_id_not(self, engine_id_not):
        """Sets the engine_id_not of this SnmpTrapReceiverWhereInput.


        :param engine_id_not: The engine_id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_not: str
        """

        self._engine_id_not = engine_id_not

    @property
    def engine_id_not_contains(self):
        """Gets the engine_id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_not_contains

    @engine_id_not_contains.setter
    def engine_id_not_contains(self, engine_id_not_contains):
        """Sets the engine_id_not_contains of this SnmpTrapReceiverWhereInput.


        :param engine_id_not_contains: The engine_id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_not_contains: str
        """

        self._engine_id_not_contains = engine_id_not_contains

    @property
    def engine_id_not_ends_with(self):
        """Gets the engine_id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_not_ends_with

    @engine_id_not_ends_with.setter
    def engine_id_not_ends_with(self, engine_id_not_ends_with):
        """Sets the engine_id_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param engine_id_not_ends_with: The engine_id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_not_ends_with: str
        """

        self._engine_id_not_ends_with = engine_id_not_ends_with

    @property
    def engine_id_not_in(self):
        """Gets the engine_id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._engine_id_not_in

    @engine_id_not_in.setter
    def engine_id_not_in(self, engine_id_not_in):
        """Sets the engine_id_not_in of this SnmpTrapReceiverWhereInput.


        :param engine_id_not_in: The engine_id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_not_in: list[str]
        """

        self._engine_id_not_in = engine_id_not_in

    @property
    def engine_id_not_starts_with(self):
        """Gets the engine_id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_not_starts_with

    @engine_id_not_starts_with.setter
    def engine_id_not_starts_with(self, engine_id_not_starts_with):
        """Sets the engine_id_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param engine_id_not_starts_with: The engine_id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_not_starts_with: str
        """

        self._engine_id_not_starts_with = engine_id_not_starts_with

    @property
    def engine_id_starts_with(self):
        """Gets the engine_id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The engine_id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._engine_id_starts_with

    @engine_id_starts_with.setter
    def engine_id_starts_with(self, engine_id_starts_with):
        """Sets the engine_id_starts_with of this SnmpTrapReceiverWhereInput.


        :param engine_id_starts_with: The engine_id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type engine_id_starts_with: str
        """

        self._engine_id_starts_with = engine_id_starts_with

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The entity_async_status of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this SnmpTrapReceiverWhereInput.


        :param entity_async_status: The entity_async_status of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this SnmpTrapReceiverWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this SnmpTrapReceiverWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this SnmpTrapReceiverWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def host(self):
        """Gets the host of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this SnmpTrapReceiverWhereInput.


        :param host: The host of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host: str
        """

        self._host = host

    @property
    def host_contains(self):
        """Gets the host_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_contains

    @host_contains.setter
    def host_contains(self, host_contains):
        """Sets the host_contains of this SnmpTrapReceiverWhereInput.


        :param host_contains: The host_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_contains: str
        """

        self._host_contains = host_contains

    @property
    def host_ends_with(self):
        """Gets the host_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_ends_with

    @host_ends_with.setter
    def host_ends_with(self, host_ends_with):
        """Sets the host_ends_with of this SnmpTrapReceiverWhereInput.


        :param host_ends_with: The host_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_ends_with: str
        """

        self._host_ends_with = host_ends_with

    @property
    def host_gt(self):
        """Gets the host_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_gt

    @host_gt.setter
    def host_gt(self, host_gt):
        """Sets the host_gt of this SnmpTrapReceiverWhereInput.


        :param host_gt: The host_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_gt: str
        """

        self._host_gt = host_gt

    @property
    def host_gte(self):
        """Gets the host_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_gte

    @host_gte.setter
    def host_gte(self, host_gte):
        """Sets the host_gte of this SnmpTrapReceiverWhereInput.


        :param host_gte: The host_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_gte: str
        """

        self._host_gte = host_gte

    @property
    def host_in(self):
        """Gets the host_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._host_in

    @host_in.setter
    def host_in(self, host_in):
        """Sets the host_in of this SnmpTrapReceiverWhereInput.


        :param host_in: The host_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_in: list[str]
        """

        self._host_in = host_in

    @property
    def host_lt(self):
        """Gets the host_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_lt

    @host_lt.setter
    def host_lt(self, host_lt):
        """Sets the host_lt of this SnmpTrapReceiverWhereInput.


        :param host_lt: The host_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_lt: str
        """

        self._host_lt = host_lt

    @property
    def host_lte(self):
        """Gets the host_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_lte

    @host_lte.setter
    def host_lte(self, host_lte):
        """Sets the host_lte of this SnmpTrapReceiverWhereInput.


        :param host_lte: The host_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_lte: str
        """

        self._host_lte = host_lte

    @property
    def host_not(self):
        """Gets the host_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not

    @host_not.setter
    def host_not(self, host_not):
        """Sets the host_not of this SnmpTrapReceiverWhereInput.


        :param host_not: The host_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_not: str
        """

        self._host_not = host_not

    @property
    def host_not_contains(self):
        """Gets the host_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not_contains

    @host_not_contains.setter
    def host_not_contains(self, host_not_contains):
        """Sets the host_not_contains of this SnmpTrapReceiverWhereInput.


        :param host_not_contains: The host_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_not_contains: str
        """

        self._host_not_contains = host_not_contains

    @property
    def host_not_ends_with(self):
        """Gets the host_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not_ends_with

    @host_not_ends_with.setter
    def host_not_ends_with(self, host_not_ends_with):
        """Sets the host_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param host_not_ends_with: The host_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_not_ends_with: str
        """

        self._host_not_ends_with = host_not_ends_with

    @property
    def host_not_in(self):
        """Gets the host_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._host_not_in

    @host_not_in.setter
    def host_not_in(self, host_not_in):
        """Sets the host_not_in of this SnmpTrapReceiverWhereInput.


        :param host_not_in: The host_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_not_in: list[str]
        """

        self._host_not_in = host_not_in

    @property
    def host_not_starts_with(self):
        """Gets the host_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not_starts_with

    @host_not_starts_with.setter
    def host_not_starts_with(self, host_not_starts_with):
        """Sets the host_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param host_not_starts_with: The host_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_not_starts_with: str
        """

        self._host_not_starts_with = host_not_starts_with

    @property
    def host_starts_with(self):
        """Gets the host_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The host_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_starts_with

    @host_starts_with.setter
    def host_starts_with(self, host_starts_with):
        """Sets the host_starts_with of this SnmpTrapReceiverWhereInput.


        :param host_starts_with: The host_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type host_starts_with: str
        """

        self._host_starts_with = host_starts_with

    @property
    def id(self):
        """Gets the id of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SnmpTrapReceiverWhereInput.


        :param id: The id of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this SnmpTrapReceiverWhereInput.


        :param id_contains: The id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this SnmpTrapReceiverWhereInput.


        :param id_ends_with: The id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this SnmpTrapReceiverWhereInput.


        :param id_gt: The id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this SnmpTrapReceiverWhereInput.


        :param id_gte: The id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this SnmpTrapReceiverWhereInput.


        :param id_in: The id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this SnmpTrapReceiverWhereInput.


        :param id_lt: The id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this SnmpTrapReceiverWhereInput.


        :param id_lte: The id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this SnmpTrapReceiverWhereInput.


        :param id_not: The id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this SnmpTrapReceiverWhereInput.


        :param id_not_contains: The id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this SnmpTrapReceiverWhereInput.


        :param id_not_in: The id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this SnmpTrapReceiverWhereInput.


        :param id_starts_with: The id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def inform(self):
        """Gets the inform of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The inform of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._inform

    @inform.setter
    def inform(self, inform):
        """Sets the inform of this SnmpTrapReceiverWhereInput.


        :param inform: The inform of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type inform: bool
        """

        self._inform = inform

    @property
    def inform_not(self):
        """Gets the inform_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The inform_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._inform_not

    @inform_not.setter
    def inform_not(self, inform_not):
        """Sets the inform_not of this SnmpTrapReceiverWhereInput.


        :param inform_not: The inform_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type inform_not: bool
        """

        self._inform_not = inform_not

    @property
    def language_code(self):
        """Gets the language_code of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The language_code of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpLanguageCode
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this SnmpTrapReceiverWhereInput.


        :param language_code: The language_code of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type language_code: SnmpLanguageCode
        """

        self._language_code = language_code

    @property
    def language_code_in(self):
        """Gets the language_code_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The language_code_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpLanguageCode]
        """
        return self._language_code_in

    @language_code_in.setter
    def language_code_in(self, language_code_in):
        """Sets the language_code_in of this SnmpTrapReceiverWhereInput.


        :param language_code_in: The language_code_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type language_code_in: list[SnmpLanguageCode]
        """

        self._language_code_in = language_code_in

    @property
    def language_code_not(self):
        """Gets the language_code_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The language_code_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpLanguageCode
        """
        return self._language_code_not

    @language_code_not.setter
    def language_code_not(self, language_code_not):
        """Sets the language_code_not of this SnmpTrapReceiverWhereInput.


        :param language_code_not: The language_code_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type language_code_not: SnmpLanguageCode
        """

        self._language_code_not = language_code_not

    @property
    def language_code_not_in(self):
        """Gets the language_code_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The language_code_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpLanguageCode]
        """
        return self._language_code_not_in

    @language_code_not_in.setter
    def language_code_not_in(self, language_code_not_in):
        """Sets the language_code_not_in of this SnmpTrapReceiverWhereInput.


        :param language_code_not_in: The language_code_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type language_code_not_in: list[SnmpLanguageCode]
        """

        self._language_code_not_in = language_code_not_in

    @property
    def local_id(self):
        """Gets the local_id of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this SnmpTrapReceiverWhereInput.


        :param local_id: The local_id of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this SnmpTrapReceiverWhereInput.


        :param local_id_contains: The local_id_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this SnmpTrapReceiverWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this SnmpTrapReceiverWhereInput.


        :param local_id_gt: The local_id_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this SnmpTrapReceiverWhereInput.


        :param local_id_gte: The local_id_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this SnmpTrapReceiverWhereInput.


        :param local_id_in: The local_id_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this SnmpTrapReceiverWhereInput.


        :param local_id_lt: The local_id_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this SnmpTrapReceiverWhereInput.


        :param local_id_lte: The local_id_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this SnmpTrapReceiverWhereInput.


        :param local_id_not: The local_id_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this SnmpTrapReceiverWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this SnmpTrapReceiverWhereInput.


        :param local_id_not_in: The local_id_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this SnmpTrapReceiverWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def name(self):
        """Gets the name of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SnmpTrapReceiverWhereInput.


        :param name: The name of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this SnmpTrapReceiverWhereInput.


        :param name_contains: The name_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this SnmpTrapReceiverWhereInput.


        :param name_ends_with: The name_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this SnmpTrapReceiverWhereInput.


        :param name_gt: The name_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this SnmpTrapReceiverWhereInput.


        :param name_gte: The name_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this SnmpTrapReceiverWhereInput.


        :param name_in: The name_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this SnmpTrapReceiverWhereInput.


        :param name_lt: The name_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this SnmpTrapReceiverWhereInput.


        :param name_lte: The name_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this SnmpTrapReceiverWhereInput.


        :param name_not: The name_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this SnmpTrapReceiverWhereInput.


        :param name_not_contains: The name_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this SnmpTrapReceiverWhereInput.


        :param name_not_in: The name_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The name_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this SnmpTrapReceiverWhereInput.


        :param name_starts_with: The name_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def port(self):
        """Gets the port of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this SnmpTrapReceiverWhereInput.


        :param port: The port of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port: int
        """

        self._port = port

    @property
    def port_gt(self):
        """Gets the port_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_gt

    @port_gt.setter
    def port_gt(self, port_gt):
        """Sets the port_gt of this SnmpTrapReceiverWhereInput.


        :param port_gt: The port_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port_gt: int
        """

        self._port_gt = port_gt

    @property
    def port_gte(self):
        """Gets the port_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_gte

    @port_gte.setter
    def port_gte(self, port_gte):
        """Sets the port_gte of this SnmpTrapReceiverWhereInput.


        :param port_gte: The port_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port_gte: int
        """

        self._port_gte = port_gte

    @property
    def port_in(self):
        """Gets the port_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._port_in

    @port_in.setter
    def port_in(self, port_in):
        """Sets the port_in of this SnmpTrapReceiverWhereInput.


        :param port_in: The port_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port_in: list[int]
        """

        self._port_in = port_in

    @property
    def port_lt(self):
        """Gets the port_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_lt

    @port_lt.setter
    def port_lt(self, port_lt):
        """Sets the port_lt of this SnmpTrapReceiverWhereInput.


        :param port_lt: The port_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port_lt: int
        """

        self._port_lt = port_lt

    @property
    def port_lte(self):
        """Gets the port_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_lte

    @port_lte.setter
    def port_lte(self, port_lte):
        """Sets the port_lte of this SnmpTrapReceiverWhereInput.


        :param port_lte: The port_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port_lte: int
        """

        self._port_lte = port_lte

    @property
    def port_not(self):
        """Gets the port_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_not

    @port_not.setter
    def port_not(self, port_not):
        """Sets the port_not of this SnmpTrapReceiverWhereInput.


        :param port_not: The port_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port_not: int
        """

        self._port_not = port_not

    @property
    def port_not_in(self):
        """Gets the port_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The port_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._port_not_in

    @port_not_in.setter
    def port_not_in(self, port_not_in):
        """Sets the port_not_in of this SnmpTrapReceiverWhereInput.


        :param port_not_in: The port_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type port_not_in: list[int]
        """

        self._port_not_in = port_not_in

    @property
    def privacy_pass_phrase(self):
        """Gets the privacy_pass_phrase of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase

    @privacy_pass_phrase.setter
    def privacy_pass_phrase(self, privacy_pass_phrase):
        """Sets the privacy_pass_phrase of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase: The privacy_pass_phrase of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase: str
        """

        self._privacy_pass_phrase = privacy_pass_phrase

    @property
    def privacy_pass_phrase_contains(self):
        """Gets the privacy_pass_phrase_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_contains

    @privacy_pass_phrase_contains.setter
    def privacy_pass_phrase_contains(self, privacy_pass_phrase_contains):
        """Sets the privacy_pass_phrase_contains of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_contains: The privacy_pass_phrase_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_contains: str
        """

        self._privacy_pass_phrase_contains = privacy_pass_phrase_contains

    @property
    def privacy_pass_phrase_ends_with(self):
        """Gets the privacy_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_ends_with

    @privacy_pass_phrase_ends_with.setter
    def privacy_pass_phrase_ends_with(self, privacy_pass_phrase_ends_with):
        """Sets the privacy_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_ends_with: The privacy_pass_phrase_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_ends_with: str
        """

        self._privacy_pass_phrase_ends_with = privacy_pass_phrase_ends_with

    @property
    def privacy_pass_phrase_gt(self):
        """Gets the privacy_pass_phrase_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_gt

    @privacy_pass_phrase_gt.setter
    def privacy_pass_phrase_gt(self, privacy_pass_phrase_gt):
        """Sets the privacy_pass_phrase_gt of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_gt: The privacy_pass_phrase_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_gt: str
        """

        self._privacy_pass_phrase_gt = privacy_pass_phrase_gt

    @property
    def privacy_pass_phrase_gte(self):
        """Gets the privacy_pass_phrase_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_gte

    @privacy_pass_phrase_gte.setter
    def privacy_pass_phrase_gte(self, privacy_pass_phrase_gte):
        """Sets the privacy_pass_phrase_gte of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_gte: The privacy_pass_phrase_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_gte: str
        """

        self._privacy_pass_phrase_gte = privacy_pass_phrase_gte

    @property
    def privacy_pass_phrase_in(self):
        """Gets the privacy_pass_phrase_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._privacy_pass_phrase_in

    @privacy_pass_phrase_in.setter
    def privacy_pass_phrase_in(self, privacy_pass_phrase_in):
        """Sets the privacy_pass_phrase_in of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_in: The privacy_pass_phrase_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_in: list[str]
        """

        self._privacy_pass_phrase_in = privacy_pass_phrase_in

    @property
    def privacy_pass_phrase_lt(self):
        """Gets the privacy_pass_phrase_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_lt

    @privacy_pass_phrase_lt.setter
    def privacy_pass_phrase_lt(self, privacy_pass_phrase_lt):
        """Sets the privacy_pass_phrase_lt of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_lt: The privacy_pass_phrase_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_lt: str
        """

        self._privacy_pass_phrase_lt = privacy_pass_phrase_lt

    @property
    def privacy_pass_phrase_lte(self):
        """Gets the privacy_pass_phrase_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_lte

    @privacy_pass_phrase_lte.setter
    def privacy_pass_phrase_lte(self, privacy_pass_phrase_lte):
        """Sets the privacy_pass_phrase_lte of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_lte: The privacy_pass_phrase_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_lte: str
        """

        self._privacy_pass_phrase_lte = privacy_pass_phrase_lte

    @property
    def privacy_pass_phrase_not(self):
        """Gets the privacy_pass_phrase_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_not

    @privacy_pass_phrase_not.setter
    def privacy_pass_phrase_not(self, privacy_pass_phrase_not):
        """Sets the privacy_pass_phrase_not of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_not: The privacy_pass_phrase_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_not: str
        """

        self._privacy_pass_phrase_not = privacy_pass_phrase_not

    @property
    def privacy_pass_phrase_not_contains(self):
        """Gets the privacy_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_not_contains

    @privacy_pass_phrase_not_contains.setter
    def privacy_pass_phrase_not_contains(self, privacy_pass_phrase_not_contains):
        """Sets the privacy_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_not_contains: The privacy_pass_phrase_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_not_contains: str
        """

        self._privacy_pass_phrase_not_contains = privacy_pass_phrase_not_contains

    @property
    def privacy_pass_phrase_not_ends_with(self):
        """Gets the privacy_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_not_ends_with

    @privacy_pass_phrase_not_ends_with.setter
    def privacy_pass_phrase_not_ends_with(self, privacy_pass_phrase_not_ends_with):
        """Sets the privacy_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_not_ends_with: The privacy_pass_phrase_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_not_ends_with: str
        """

        self._privacy_pass_phrase_not_ends_with = privacy_pass_phrase_not_ends_with

    @property
    def privacy_pass_phrase_not_in(self):
        """Gets the privacy_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._privacy_pass_phrase_not_in

    @privacy_pass_phrase_not_in.setter
    def privacy_pass_phrase_not_in(self, privacy_pass_phrase_not_in):
        """Sets the privacy_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_not_in: The privacy_pass_phrase_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_not_in: list[str]
        """

        self._privacy_pass_phrase_not_in = privacy_pass_phrase_not_in

    @property
    def privacy_pass_phrase_not_starts_with(self):
        """Gets the privacy_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_not_starts_with

    @privacy_pass_phrase_not_starts_with.setter
    def privacy_pass_phrase_not_starts_with(self, privacy_pass_phrase_not_starts_with):
        """Sets the privacy_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_not_starts_with: The privacy_pass_phrase_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_not_starts_with: str
        """

        self._privacy_pass_phrase_not_starts_with = privacy_pass_phrase_not_starts_with

    @property
    def privacy_pass_phrase_starts_with(self):
        """Gets the privacy_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._privacy_pass_phrase_starts_with

    @privacy_pass_phrase_starts_with.setter
    def privacy_pass_phrase_starts_with(self, privacy_pass_phrase_starts_with):
        """Sets the privacy_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.


        :param privacy_pass_phrase_starts_with: The privacy_pass_phrase_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_pass_phrase_starts_with: str
        """

        self._privacy_pass_phrase_starts_with = privacy_pass_phrase_starts_with

    @property
    def privacy_protocol(self):
        """Gets the privacy_protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpPrivacyProtocol
        """
        return self._privacy_protocol

    @privacy_protocol.setter
    def privacy_protocol(self, privacy_protocol):
        """Sets the privacy_protocol of this SnmpTrapReceiverWhereInput.


        :param privacy_protocol: The privacy_protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_protocol: SnmpPrivacyProtocol
        """

        self._privacy_protocol = privacy_protocol

    @property
    def privacy_protocol_in(self):
        """Gets the privacy_protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpPrivacyProtocol]
        """
        return self._privacy_protocol_in

    @privacy_protocol_in.setter
    def privacy_protocol_in(self, privacy_protocol_in):
        """Sets the privacy_protocol_in of this SnmpTrapReceiverWhereInput.


        :param privacy_protocol_in: The privacy_protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_protocol_in: list[SnmpPrivacyProtocol]
        """

        self._privacy_protocol_in = privacy_protocol_in

    @property
    def privacy_protocol_not(self):
        """Gets the privacy_protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpPrivacyProtocol
        """
        return self._privacy_protocol_not

    @privacy_protocol_not.setter
    def privacy_protocol_not(self, privacy_protocol_not):
        """Sets the privacy_protocol_not of this SnmpTrapReceiverWhereInput.


        :param privacy_protocol_not: The privacy_protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_protocol_not: SnmpPrivacyProtocol
        """

        self._privacy_protocol_not = privacy_protocol_not

    @property
    def privacy_protocol_not_in(self):
        """Gets the privacy_protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The privacy_protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpPrivacyProtocol]
        """
        return self._privacy_protocol_not_in

    @privacy_protocol_not_in.setter
    def privacy_protocol_not_in(self, privacy_protocol_not_in):
        """Sets the privacy_protocol_not_in of this SnmpTrapReceiverWhereInput.


        :param privacy_protocol_not_in: The privacy_protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type privacy_protocol_not_in: list[SnmpPrivacyProtocol]
        """

        self._privacy_protocol_not_in = privacy_protocol_not_in

    @property
    def protocol(self):
        """Gets the protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this SnmpTrapReceiverWhereInput.


        :param protocol: The protocol of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type protocol: SnmpProtocol
        """

        self._protocol = protocol

    @property
    def protocol_in(self):
        """Gets the protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpProtocol]
        """
        return self._protocol_in

    @protocol_in.setter
    def protocol_in(self, protocol_in):
        """Sets the protocol_in of this SnmpTrapReceiverWhereInput.


        :param protocol_in: The protocol_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type protocol_in: list[SnmpProtocol]
        """

        self._protocol_in = protocol_in

    @property
    def protocol_not(self):
        """Gets the protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpProtocol
        """
        return self._protocol_not

    @protocol_not.setter
    def protocol_not(self, protocol_not):
        """Sets the protocol_not of this SnmpTrapReceiverWhereInput.


        :param protocol_not: The protocol_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type protocol_not: SnmpProtocol
        """

        self._protocol_not = protocol_not

    @property
    def protocol_not_in(self):
        """Gets the protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpProtocol]
        """
        return self._protocol_not_in

    @protocol_not_in.setter
    def protocol_not_in(self, protocol_not_in):
        """Sets the protocol_not_in of this SnmpTrapReceiverWhereInput.


        :param protocol_not_in: The protocol_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type protocol_not_in: list[SnmpProtocol]
        """

        self._protocol_not_in = protocol_not_in

    @property
    def username(self):
        """Gets the username of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this SnmpTrapReceiverWhereInput.


        :param username: The username of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username: str
        """

        self._username = username

    @property
    def username_contains(self):
        """Gets the username_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_contains

    @username_contains.setter
    def username_contains(self, username_contains):
        """Sets the username_contains of this SnmpTrapReceiverWhereInput.


        :param username_contains: The username_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_contains: str
        """

        self._username_contains = username_contains

    @property
    def username_ends_with(self):
        """Gets the username_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_ends_with

    @username_ends_with.setter
    def username_ends_with(self, username_ends_with):
        """Sets the username_ends_with of this SnmpTrapReceiverWhereInput.


        :param username_ends_with: The username_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_ends_with: str
        """

        self._username_ends_with = username_ends_with

    @property
    def username_gt(self):
        """Gets the username_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gt

    @username_gt.setter
    def username_gt(self, username_gt):
        """Sets the username_gt of this SnmpTrapReceiverWhereInput.


        :param username_gt: The username_gt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_gt: str
        """

        self._username_gt = username_gt

    @property
    def username_gte(self):
        """Gets the username_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gte

    @username_gte.setter
    def username_gte(self, username_gte):
        """Sets the username_gte of this SnmpTrapReceiverWhereInput.


        :param username_gte: The username_gte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_gte: str
        """

        self._username_gte = username_gte

    @property
    def username_in(self):
        """Gets the username_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_in

    @username_in.setter
    def username_in(self, username_in):
        """Sets the username_in of this SnmpTrapReceiverWhereInput.


        :param username_in: The username_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_in: list[str]
        """

        self._username_in = username_in

    @property
    def username_lt(self):
        """Gets the username_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lt

    @username_lt.setter
    def username_lt(self, username_lt):
        """Sets the username_lt of this SnmpTrapReceiverWhereInput.


        :param username_lt: The username_lt of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_lt: str
        """

        self._username_lt = username_lt

    @property
    def username_lte(self):
        """Gets the username_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lte

    @username_lte.setter
    def username_lte(self, username_lte):
        """Sets the username_lte of this SnmpTrapReceiverWhereInput.


        :param username_lte: The username_lte of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_lte: str
        """

        self._username_lte = username_lte

    @property
    def username_not(self):
        """Gets the username_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not

    @username_not.setter
    def username_not(self, username_not):
        """Sets the username_not of this SnmpTrapReceiverWhereInput.


        :param username_not: The username_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_not: str
        """

        self._username_not = username_not

    @property
    def username_not_contains(self):
        """Gets the username_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_contains

    @username_not_contains.setter
    def username_not_contains(self, username_not_contains):
        """Sets the username_not_contains of this SnmpTrapReceiverWhereInput.


        :param username_not_contains: The username_not_contains of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_not_contains: str
        """

        self._username_not_contains = username_not_contains

    @property
    def username_not_ends_with(self):
        """Gets the username_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_ends_with

    @username_not_ends_with.setter
    def username_not_ends_with(self, username_not_ends_with):
        """Sets the username_not_ends_with of this SnmpTrapReceiverWhereInput.


        :param username_not_ends_with: The username_not_ends_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_not_ends_with: str
        """

        self._username_not_ends_with = username_not_ends_with

    @property
    def username_not_in(self):
        """Gets the username_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_not_in

    @username_not_in.setter
    def username_not_in(self, username_not_in):
        """Sets the username_not_in of this SnmpTrapReceiverWhereInput.


        :param username_not_in: The username_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_not_in: list[str]
        """

        self._username_not_in = username_not_in

    @property
    def username_not_starts_with(self):
        """Gets the username_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_starts_with

    @username_not_starts_with.setter
    def username_not_starts_with(self, username_not_starts_with):
        """Sets the username_not_starts_with of this SnmpTrapReceiverWhereInput.


        :param username_not_starts_with: The username_not_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_not_starts_with: str
        """

        self._username_not_starts_with = username_not_starts_with

    @property
    def username_starts_with(self):
        """Gets the username_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The username_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_starts_with

    @username_starts_with.setter
    def username_starts_with(self, username_starts_with):
        """Sets the username_starts_with of this SnmpTrapReceiverWhereInput.


        :param username_starts_with: The username_starts_with of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type username_starts_with: str
        """

        self._username_starts_with = username_starts_with

    @property
    def version(self):
        """Gets the version of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The version of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this SnmpTrapReceiverWhereInput.


        :param version: The version of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type version: SnmpVersion
        """

        self._version = version

    @property
    def version_in(self):
        """Gets the version_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The version_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpVersion]
        """
        return self._version_in

    @version_in.setter
    def version_in(self, version_in):
        """Sets the version_in of this SnmpTrapReceiverWhereInput.


        :param version_in: The version_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type version_in: list[SnmpVersion]
        """

        self._version_in = version_in

    @property
    def version_not(self):
        """Gets the version_not of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The version_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: SnmpVersion
        """
        return self._version_not

    @version_not.setter
    def version_not(self, version_not):
        """Sets the version_not of this SnmpTrapReceiverWhereInput.


        :param version_not: The version_not of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type version_not: SnmpVersion
        """

        self._version_not = version_not

    @property
    def version_not_in(self):
        """Gets the version_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501


        :return: The version_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :rtype: list[SnmpVersion]
        """
        return self._version_not_in

    @version_not_in.setter
    def version_not_in(self, version_not_in):
        """Sets the version_not_in of this SnmpTrapReceiverWhereInput.


        :param version_not_in: The version_not_in of this SnmpTrapReceiverWhereInput.  # noqa: E501
        :type version_not_in: list[SnmpVersion]
        """

        self._version_not_in = version_not_in

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SnmpTrapReceiverWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SnmpTrapReceiverWhereInput):
            return True

        return self.to_dict() != other.to_dict()

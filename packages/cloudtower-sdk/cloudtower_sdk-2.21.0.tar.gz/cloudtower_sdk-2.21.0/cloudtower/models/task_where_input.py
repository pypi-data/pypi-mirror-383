# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class TaskWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[TaskWhereInput]',
        '_not': 'list[TaskWhereInput]',
        '_or': 'list[TaskWhereInput]',
        'cluster': 'ClusterWhereInput',
        'description': 'str',
        'description_contains': 'str',
        'description_ends_with': 'str',
        'description_gt': 'str',
        'description_gte': 'str',
        'description_in': 'list[str]',
        'description_lt': 'str',
        'description_lte': 'str',
        'description_not': 'str',
        'description_not_contains': 'str',
        'description_not_ends_with': 'str',
        'description_not_in': 'list[str]',
        'description_not_starts_with': 'str',
        'description_starts_with': 'str',
        'error_code': 'str',
        'error_code_contains': 'str',
        'error_code_ends_with': 'str',
        'error_code_gt': 'str',
        'error_code_gte': 'str',
        'error_code_in': 'list[str]',
        'error_code_lt': 'str',
        'error_code_lte': 'str',
        'error_code_not': 'str',
        'error_code_not_contains': 'str',
        'error_code_not_ends_with': 'str',
        'error_code_not_in': 'list[str]',
        'error_code_not_starts_with': 'str',
        'error_code_starts_with': 'str',
        'error_message': 'str',
        'error_message_contains': 'str',
        'error_message_ends_with': 'str',
        'error_message_gt': 'str',
        'error_message_gte': 'str',
        'error_message_in': 'list[str]',
        'error_message_lt': 'str',
        'error_message_lte': 'str',
        'error_message_not': 'str',
        'error_message_not_contains': 'str',
        'error_message_not_ends_with': 'str',
        'error_message_not_in': 'list[str]',
        'error_message_not_starts_with': 'str',
        'error_message_starts_with': 'str',
        'finished_at': 'str',
        'finished_at_gt': 'str',
        'finished_at_gte': 'str',
        'finished_at_in': 'list[str]',
        'finished_at_lt': 'str',
        'finished_at_lte': 'str',
        'finished_at_not': 'str',
        'finished_at_not_in': 'list[str]',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'internal': 'bool',
        'internal_not': 'bool',
        'key': 'str',
        'key_contains': 'str',
        'key_ends_with': 'str',
        'key_gt': 'str',
        'key_gte': 'str',
        'key_in': 'list[str]',
        'key_lt': 'str',
        'key_lte': 'str',
        'key_not': 'str',
        'key_not_contains': 'str',
        'key_not_ends_with': 'str',
        'key_not_in': 'list[str]',
        'key_not_starts_with': 'str',
        'key_starts_with': 'str',
        'local_created_at': 'str',
        'local_created_at_gt': 'str',
        'local_created_at_gte': 'str',
        'local_created_at_in': 'list[str]',
        'local_created_at_lt': 'str',
        'local_created_at_lte': 'str',
        'local_created_at_not': 'str',
        'local_created_at_not_in': 'list[str]',
        'progress': 'float',
        'progress_gt': 'float',
        'progress_gte': 'float',
        'progress_in': 'list[float]',
        'progress_lt': 'float',
        'progress_lte': 'float',
        'progress_not': 'float',
        'progress_not_in': 'list[float]',
        'resource_id': 'str',
        'resource_id_contains': 'str',
        'resource_id_ends_with': 'str',
        'resource_id_gt': 'str',
        'resource_id_gte': 'str',
        'resource_id_in': 'list[str]',
        'resource_id_lt': 'str',
        'resource_id_lte': 'str',
        'resource_id_not': 'str',
        'resource_id_not_contains': 'str',
        'resource_id_not_ends_with': 'str',
        'resource_id_not_in': 'list[str]',
        'resource_id_not_starts_with': 'str',
        'resource_id_starts_with': 'str',
        'resource_mutation': 'str',
        'resource_mutation_contains': 'str',
        'resource_mutation_ends_with': 'str',
        'resource_mutation_gt': 'str',
        'resource_mutation_gte': 'str',
        'resource_mutation_in': 'list[str]',
        'resource_mutation_lt': 'str',
        'resource_mutation_lte': 'str',
        'resource_mutation_not': 'str',
        'resource_mutation_not_contains': 'str',
        'resource_mutation_not_ends_with': 'str',
        'resource_mutation_not_in': 'list[str]',
        'resource_mutation_not_starts_with': 'str',
        'resource_mutation_starts_with': 'str',
        'resource_rollback_error': 'str',
        'resource_rollback_error_contains': 'str',
        'resource_rollback_error_ends_with': 'str',
        'resource_rollback_error_gt': 'str',
        'resource_rollback_error_gte': 'str',
        'resource_rollback_error_in': 'list[str]',
        'resource_rollback_error_lt': 'str',
        'resource_rollback_error_lte': 'str',
        'resource_rollback_error_not': 'str',
        'resource_rollback_error_not_contains': 'str',
        'resource_rollback_error_not_ends_with': 'str',
        'resource_rollback_error_not_in': 'list[str]',
        'resource_rollback_error_not_starts_with': 'str',
        'resource_rollback_error_starts_with': 'str',
        'resource_rollback_retry_count': 'int',
        'resource_rollback_retry_count_gt': 'int',
        'resource_rollback_retry_count_gte': 'int',
        'resource_rollback_retry_count_in': 'list[int]',
        'resource_rollback_retry_count_lt': 'int',
        'resource_rollback_retry_count_lte': 'int',
        'resource_rollback_retry_count_not': 'int',
        'resource_rollback_retry_count_not_in': 'list[int]',
        'resource_rollbacked': 'bool',
        'resource_rollbacked_not': 'bool',
        'resource_type': 'str',
        'resource_type_contains': 'str',
        'resource_type_ends_with': 'str',
        'resource_type_gt': 'str',
        'resource_type_gte': 'str',
        'resource_type_in': 'list[str]',
        'resource_type_lt': 'str',
        'resource_type_lte': 'str',
        'resource_type_not': 'str',
        'resource_type_not_contains': 'str',
        'resource_type_not_ends_with': 'str',
        'resource_type_not_in': 'list[str]',
        'resource_type_not_starts_with': 'str',
        'resource_type_starts_with': 'str',
        'snapshot': 'str',
        'snapshot_contains': 'str',
        'snapshot_ends_with': 'str',
        'snapshot_gt': 'str',
        'snapshot_gte': 'str',
        'snapshot_in': 'list[str]',
        'snapshot_lt': 'str',
        'snapshot_lte': 'str',
        'snapshot_not': 'str',
        'snapshot_not_contains': 'str',
        'snapshot_not_ends_with': 'str',
        'snapshot_not_in': 'list[str]',
        'snapshot_not_starts_with': 'str',
        'snapshot_starts_with': 'str',
        'started_at': 'str',
        'started_at_gt': 'str',
        'started_at_gte': 'str',
        'started_at_in': 'list[str]',
        'started_at_lt': 'str',
        'started_at_lte': 'str',
        'started_at_not': 'str',
        'started_at_not_in': 'list[str]',
        'status': 'TaskStatus',
        'status_in': 'list[TaskStatus]',
        'status_not': 'TaskStatus',
        'status_not_in': 'list[TaskStatus]',
        'type': 'TaskType',
        'type_in': 'list[TaskType]',
        'type_not': 'TaskType',
        'type_not_in': 'list[TaskType]',
        'user': 'UserWhereInput'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'cluster': 'cluster',
        'description': 'description',
        'description_contains': 'description_contains',
        'description_ends_with': 'description_ends_with',
        'description_gt': 'description_gt',
        'description_gte': 'description_gte',
        'description_in': 'description_in',
        'description_lt': 'description_lt',
        'description_lte': 'description_lte',
        'description_not': 'description_not',
        'description_not_contains': 'description_not_contains',
        'description_not_ends_with': 'description_not_ends_with',
        'description_not_in': 'description_not_in',
        'description_not_starts_with': 'description_not_starts_with',
        'description_starts_with': 'description_starts_with',
        'error_code': 'error_code',
        'error_code_contains': 'error_code_contains',
        'error_code_ends_with': 'error_code_ends_with',
        'error_code_gt': 'error_code_gt',
        'error_code_gte': 'error_code_gte',
        'error_code_in': 'error_code_in',
        'error_code_lt': 'error_code_lt',
        'error_code_lte': 'error_code_lte',
        'error_code_not': 'error_code_not',
        'error_code_not_contains': 'error_code_not_contains',
        'error_code_not_ends_with': 'error_code_not_ends_with',
        'error_code_not_in': 'error_code_not_in',
        'error_code_not_starts_with': 'error_code_not_starts_with',
        'error_code_starts_with': 'error_code_starts_with',
        'error_message': 'error_message',
        'error_message_contains': 'error_message_contains',
        'error_message_ends_with': 'error_message_ends_with',
        'error_message_gt': 'error_message_gt',
        'error_message_gte': 'error_message_gte',
        'error_message_in': 'error_message_in',
        'error_message_lt': 'error_message_lt',
        'error_message_lte': 'error_message_lte',
        'error_message_not': 'error_message_not',
        'error_message_not_contains': 'error_message_not_contains',
        'error_message_not_ends_with': 'error_message_not_ends_with',
        'error_message_not_in': 'error_message_not_in',
        'error_message_not_starts_with': 'error_message_not_starts_with',
        'error_message_starts_with': 'error_message_starts_with',
        'finished_at': 'finished_at',
        'finished_at_gt': 'finished_at_gt',
        'finished_at_gte': 'finished_at_gte',
        'finished_at_in': 'finished_at_in',
        'finished_at_lt': 'finished_at_lt',
        'finished_at_lte': 'finished_at_lte',
        'finished_at_not': 'finished_at_not',
        'finished_at_not_in': 'finished_at_not_in',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'internal': 'internal',
        'internal_not': 'internal_not',
        'key': 'key',
        'key_contains': 'key_contains',
        'key_ends_with': 'key_ends_with',
        'key_gt': 'key_gt',
        'key_gte': 'key_gte',
        'key_in': 'key_in',
        'key_lt': 'key_lt',
        'key_lte': 'key_lte',
        'key_not': 'key_not',
        'key_not_contains': 'key_not_contains',
        'key_not_ends_with': 'key_not_ends_with',
        'key_not_in': 'key_not_in',
        'key_not_starts_with': 'key_not_starts_with',
        'key_starts_with': 'key_starts_with',
        'local_created_at': 'local_created_at',
        'local_created_at_gt': 'local_created_at_gt',
        'local_created_at_gte': 'local_created_at_gte',
        'local_created_at_in': 'local_created_at_in',
        'local_created_at_lt': 'local_created_at_lt',
        'local_created_at_lte': 'local_created_at_lte',
        'local_created_at_not': 'local_created_at_not',
        'local_created_at_not_in': 'local_created_at_not_in',
        'progress': 'progress',
        'progress_gt': 'progress_gt',
        'progress_gte': 'progress_gte',
        'progress_in': 'progress_in',
        'progress_lt': 'progress_lt',
        'progress_lte': 'progress_lte',
        'progress_not': 'progress_not',
        'progress_not_in': 'progress_not_in',
        'resource_id': 'resource_id',
        'resource_id_contains': 'resource_id_contains',
        'resource_id_ends_with': 'resource_id_ends_with',
        'resource_id_gt': 'resource_id_gt',
        'resource_id_gte': 'resource_id_gte',
        'resource_id_in': 'resource_id_in',
        'resource_id_lt': 'resource_id_lt',
        'resource_id_lte': 'resource_id_lte',
        'resource_id_not': 'resource_id_not',
        'resource_id_not_contains': 'resource_id_not_contains',
        'resource_id_not_ends_with': 'resource_id_not_ends_with',
        'resource_id_not_in': 'resource_id_not_in',
        'resource_id_not_starts_with': 'resource_id_not_starts_with',
        'resource_id_starts_with': 'resource_id_starts_with',
        'resource_mutation': 'resource_mutation',
        'resource_mutation_contains': 'resource_mutation_contains',
        'resource_mutation_ends_with': 'resource_mutation_ends_with',
        'resource_mutation_gt': 'resource_mutation_gt',
        'resource_mutation_gte': 'resource_mutation_gte',
        'resource_mutation_in': 'resource_mutation_in',
        'resource_mutation_lt': 'resource_mutation_lt',
        'resource_mutation_lte': 'resource_mutation_lte',
        'resource_mutation_not': 'resource_mutation_not',
        'resource_mutation_not_contains': 'resource_mutation_not_contains',
        'resource_mutation_not_ends_with': 'resource_mutation_not_ends_with',
        'resource_mutation_not_in': 'resource_mutation_not_in',
        'resource_mutation_not_starts_with': 'resource_mutation_not_starts_with',
        'resource_mutation_starts_with': 'resource_mutation_starts_with',
        'resource_rollback_error': 'resource_rollback_error',
        'resource_rollback_error_contains': 'resource_rollback_error_contains',
        'resource_rollback_error_ends_with': 'resource_rollback_error_ends_with',
        'resource_rollback_error_gt': 'resource_rollback_error_gt',
        'resource_rollback_error_gte': 'resource_rollback_error_gte',
        'resource_rollback_error_in': 'resource_rollback_error_in',
        'resource_rollback_error_lt': 'resource_rollback_error_lt',
        'resource_rollback_error_lte': 'resource_rollback_error_lte',
        'resource_rollback_error_not': 'resource_rollback_error_not',
        'resource_rollback_error_not_contains': 'resource_rollback_error_not_contains',
        'resource_rollback_error_not_ends_with': 'resource_rollback_error_not_ends_with',
        'resource_rollback_error_not_in': 'resource_rollback_error_not_in',
        'resource_rollback_error_not_starts_with': 'resource_rollback_error_not_starts_with',
        'resource_rollback_error_starts_with': 'resource_rollback_error_starts_with',
        'resource_rollback_retry_count': 'resource_rollback_retry_count',
        'resource_rollback_retry_count_gt': 'resource_rollback_retry_count_gt',
        'resource_rollback_retry_count_gte': 'resource_rollback_retry_count_gte',
        'resource_rollback_retry_count_in': 'resource_rollback_retry_count_in',
        'resource_rollback_retry_count_lt': 'resource_rollback_retry_count_lt',
        'resource_rollback_retry_count_lte': 'resource_rollback_retry_count_lte',
        'resource_rollback_retry_count_not': 'resource_rollback_retry_count_not',
        'resource_rollback_retry_count_not_in': 'resource_rollback_retry_count_not_in',
        'resource_rollbacked': 'resource_rollbacked',
        'resource_rollbacked_not': 'resource_rollbacked_not',
        'resource_type': 'resource_type',
        'resource_type_contains': 'resource_type_contains',
        'resource_type_ends_with': 'resource_type_ends_with',
        'resource_type_gt': 'resource_type_gt',
        'resource_type_gte': 'resource_type_gte',
        'resource_type_in': 'resource_type_in',
        'resource_type_lt': 'resource_type_lt',
        'resource_type_lte': 'resource_type_lte',
        'resource_type_not': 'resource_type_not',
        'resource_type_not_contains': 'resource_type_not_contains',
        'resource_type_not_ends_with': 'resource_type_not_ends_with',
        'resource_type_not_in': 'resource_type_not_in',
        'resource_type_not_starts_with': 'resource_type_not_starts_with',
        'resource_type_starts_with': 'resource_type_starts_with',
        'snapshot': 'snapshot',
        'snapshot_contains': 'snapshot_contains',
        'snapshot_ends_with': 'snapshot_ends_with',
        'snapshot_gt': 'snapshot_gt',
        'snapshot_gte': 'snapshot_gte',
        'snapshot_in': 'snapshot_in',
        'snapshot_lt': 'snapshot_lt',
        'snapshot_lte': 'snapshot_lte',
        'snapshot_not': 'snapshot_not',
        'snapshot_not_contains': 'snapshot_not_contains',
        'snapshot_not_ends_with': 'snapshot_not_ends_with',
        'snapshot_not_in': 'snapshot_not_in',
        'snapshot_not_starts_with': 'snapshot_not_starts_with',
        'snapshot_starts_with': 'snapshot_starts_with',
        'started_at': 'started_at',
        'started_at_gt': 'started_at_gt',
        'started_at_gte': 'started_at_gte',
        'started_at_in': 'started_at_in',
        'started_at_lt': 'started_at_lt',
        'started_at_lte': 'started_at_lte',
        'started_at_not': 'started_at_not',
        'started_at_not_in': 'started_at_not_in',
        'status': 'status',
        'status_in': 'status_in',
        'status_not': 'status_not',
        'status_not_in': 'status_not_in',
        'type': 'type',
        'type_in': 'type_in',
        'type_not': 'type_not',
        'type_not_in': 'type_not_in',
        'user': 'user'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """TaskWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._cluster = None
        self._description = None
        self._description_contains = None
        self._description_ends_with = None
        self._description_gt = None
        self._description_gte = None
        self._description_in = None
        self._description_lt = None
        self._description_lte = None
        self._description_not = None
        self._description_not_contains = None
        self._description_not_ends_with = None
        self._description_not_in = None
        self._description_not_starts_with = None
        self._description_starts_with = None
        self._error_code = None
        self._error_code_contains = None
        self._error_code_ends_with = None
        self._error_code_gt = None
        self._error_code_gte = None
        self._error_code_in = None
        self._error_code_lt = None
        self._error_code_lte = None
        self._error_code_not = None
        self._error_code_not_contains = None
        self._error_code_not_ends_with = None
        self._error_code_not_in = None
        self._error_code_not_starts_with = None
        self._error_code_starts_with = None
        self._error_message = None
        self._error_message_contains = None
        self._error_message_ends_with = None
        self._error_message_gt = None
        self._error_message_gte = None
        self._error_message_in = None
        self._error_message_lt = None
        self._error_message_lte = None
        self._error_message_not = None
        self._error_message_not_contains = None
        self._error_message_not_ends_with = None
        self._error_message_not_in = None
        self._error_message_not_starts_with = None
        self._error_message_starts_with = None
        self._finished_at = None
        self._finished_at_gt = None
        self._finished_at_gte = None
        self._finished_at_in = None
        self._finished_at_lt = None
        self._finished_at_lte = None
        self._finished_at_not = None
        self._finished_at_not_in = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._internal = None
        self._internal_not = None
        self._key = None
        self._key_contains = None
        self._key_ends_with = None
        self._key_gt = None
        self._key_gte = None
        self._key_in = None
        self._key_lt = None
        self._key_lte = None
        self._key_not = None
        self._key_not_contains = None
        self._key_not_ends_with = None
        self._key_not_in = None
        self._key_not_starts_with = None
        self._key_starts_with = None
        self._local_created_at = None
        self._local_created_at_gt = None
        self._local_created_at_gte = None
        self._local_created_at_in = None
        self._local_created_at_lt = None
        self._local_created_at_lte = None
        self._local_created_at_not = None
        self._local_created_at_not_in = None
        self._progress = None
        self._progress_gt = None
        self._progress_gte = None
        self._progress_in = None
        self._progress_lt = None
        self._progress_lte = None
        self._progress_not = None
        self._progress_not_in = None
        self._resource_id = None
        self._resource_id_contains = None
        self._resource_id_ends_with = None
        self._resource_id_gt = None
        self._resource_id_gte = None
        self._resource_id_in = None
        self._resource_id_lt = None
        self._resource_id_lte = None
        self._resource_id_not = None
        self._resource_id_not_contains = None
        self._resource_id_not_ends_with = None
        self._resource_id_not_in = None
        self._resource_id_not_starts_with = None
        self._resource_id_starts_with = None
        self._resource_mutation = None
        self._resource_mutation_contains = None
        self._resource_mutation_ends_with = None
        self._resource_mutation_gt = None
        self._resource_mutation_gte = None
        self._resource_mutation_in = None
        self._resource_mutation_lt = None
        self._resource_mutation_lte = None
        self._resource_mutation_not = None
        self._resource_mutation_not_contains = None
        self._resource_mutation_not_ends_with = None
        self._resource_mutation_not_in = None
        self._resource_mutation_not_starts_with = None
        self._resource_mutation_starts_with = None
        self._resource_rollback_error = None
        self._resource_rollback_error_contains = None
        self._resource_rollback_error_ends_with = None
        self._resource_rollback_error_gt = None
        self._resource_rollback_error_gte = None
        self._resource_rollback_error_in = None
        self._resource_rollback_error_lt = None
        self._resource_rollback_error_lte = None
        self._resource_rollback_error_not = None
        self._resource_rollback_error_not_contains = None
        self._resource_rollback_error_not_ends_with = None
        self._resource_rollback_error_not_in = None
        self._resource_rollback_error_not_starts_with = None
        self._resource_rollback_error_starts_with = None
        self._resource_rollback_retry_count = None
        self._resource_rollback_retry_count_gt = None
        self._resource_rollback_retry_count_gte = None
        self._resource_rollback_retry_count_in = None
        self._resource_rollback_retry_count_lt = None
        self._resource_rollback_retry_count_lte = None
        self._resource_rollback_retry_count_not = None
        self._resource_rollback_retry_count_not_in = None
        self._resource_rollbacked = None
        self._resource_rollbacked_not = None
        self._resource_type = None
        self._resource_type_contains = None
        self._resource_type_ends_with = None
        self._resource_type_gt = None
        self._resource_type_gte = None
        self._resource_type_in = None
        self._resource_type_lt = None
        self._resource_type_lte = None
        self._resource_type_not = None
        self._resource_type_not_contains = None
        self._resource_type_not_ends_with = None
        self._resource_type_not_in = None
        self._resource_type_not_starts_with = None
        self._resource_type_starts_with = None
        self._snapshot = None
        self._snapshot_contains = None
        self._snapshot_ends_with = None
        self._snapshot_gt = None
        self._snapshot_gte = None
        self._snapshot_in = None
        self._snapshot_lt = None
        self._snapshot_lte = None
        self._snapshot_not = None
        self._snapshot_not_contains = None
        self._snapshot_not_ends_with = None
        self._snapshot_not_in = None
        self._snapshot_not_starts_with = None
        self._snapshot_starts_with = None
        self._started_at = None
        self._started_at_gt = None
        self._started_at_gte = None
        self._started_at_in = None
        self._started_at_lt = None
        self._started_at_lte = None
        self._started_at_not = None
        self._started_at_not_in = None
        self._status = None
        self._status_in = None
        self._status_not = None
        self._status_not_in = None
        self._type = None
        self._type_in = None
        self._type_not = None
        self._type_not_in = None
        self._user = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.cluster = kwargs.get("cluster", None)
        self.description = kwargs.get("description", None)
        self.description_contains = kwargs.get("description_contains", None)
        self.description_ends_with = kwargs.get("description_ends_with", None)
        self.description_gt = kwargs.get("description_gt", None)
        self.description_gte = kwargs.get("description_gte", None)
        self.description_in = kwargs.get("description_in", None)
        self.description_lt = kwargs.get("description_lt", None)
        self.description_lte = kwargs.get("description_lte", None)
        self.description_not = kwargs.get("description_not", None)
        self.description_not_contains = kwargs.get("description_not_contains", None)
        self.description_not_ends_with = kwargs.get("description_not_ends_with", None)
        self.description_not_in = kwargs.get("description_not_in", None)
        self.description_not_starts_with = kwargs.get("description_not_starts_with", None)
        self.description_starts_with = kwargs.get("description_starts_with", None)
        self.error_code = kwargs.get("error_code", None)
        self.error_code_contains = kwargs.get("error_code_contains", None)
        self.error_code_ends_with = kwargs.get("error_code_ends_with", None)
        self.error_code_gt = kwargs.get("error_code_gt", None)
        self.error_code_gte = kwargs.get("error_code_gte", None)
        self.error_code_in = kwargs.get("error_code_in", None)
        self.error_code_lt = kwargs.get("error_code_lt", None)
        self.error_code_lte = kwargs.get("error_code_lte", None)
        self.error_code_not = kwargs.get("error_code_not", None)
        self.error_code_not_contains = kwargs.get("error_code_not_contains", None)
        self.error_code_not_ends_with = kwargs.get("error_code_not_ends_with", None)
        self.error_code_not_in = kwargs.get("error_code_not_in", None)
        self.error_code_not_starts_with = kwargs.get("error_code_not_starts_with", None)
        self.error_code_starts_with = kwargs.get("error_code_starts_with", None)
        self.error_message = kwargs.get("error_message", None)
        self.error_message_contains = kwargs.get("error_message_contains", None)
        self.error_message_ends_with = kwargs.get("error_message_ends_with", None)
        self.error_message_gt = kwargs.get("error_message_gt", None)
        self.error_message_gte = kwargs.get("error_message_gte", None)
        self.error_message_in = kwargs.get("error_message_in", None)
        self.error_message_lt = kwargs.get("error_message_lt", None)
        self.error_message_lte = kwargs.get("error_message_lte", None)
        self.error_message_not = kwargs.get("error_message_not", None)
        self.error_message_not_contains = kwargs.get("error_message_not_contains", None)
        self.error_message_not_ends_with = kwargs.get("error_message_not_ends_with", None)
        self.error_message_not_in = kwargs.get("error_message_not_in", None)
        self.error_message_not_starts_with = kwargs.get("error_message_not_starts_with", None)
        self.error_message_starts_with = kwargs.get("error_message_starts_with", None)
        self.finished_at = kwargs.get("finished_at", None)
        self.finished_at_gt = kwargs.get("finished_at_gt", None)
        self.finished_at_gte = kwargs.get("finished_at_gte", None)
        self.finished_at_in = kwargs.get("finished_at_in", None)
        self.finished_at_lt = kwargs.get("finished_at_lt", None)
        self.finished_at_lte = kwargs.get("finished_at_lte", None)
        self.finished_at_not = kwargs.get("finished_at_not", None)
        self.finished_at_not_in = kwargs.get("finished_at_not_in", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.internal = kwargs.get("internal", None)
        self.internal_not = kwargs.get("internal_not", None)
        self.key = kwargs.get("key", None)
        self.key_contains = kwargs.get("key_contains", None)
        self.key_ends_with = kwargs.get("key_ends_with", None)
        self.key_gt = kwargs.get("key_gt", None)
        self.key_gte = kwargs.get("key_gte", None)
        self.key_in = kwargs.get("key_in", None)
        self.key_lt = kwargs.get("key_lt", None)
        self.key_lte = kwargs.get("key_lte", None)
        self.key_not = kwargs.get("key_not", None)
        self.key_not_contains = kwargs.get("key_not_contains", None)
        self.key_not_ends_with = kwargs.get("key_not_ends_with", None)
        self.key_not_in = kwargs.get("key_not_in", None)
        self.key_not_starts_with = kwargs.get("key_not_starts_with", None)
        self.key_starts_with = kwargs.get("key_starts_with", None)
        self.local_created_at = kwargs.get("local_created_at", None)
        self.local_created_at_gt = kwargs.get("local_created_at_gt", None)
        self.local_created_at_gte = kwargs.get("local_created_at_gte", None)
        self.local_created_at_in = kwargs.get("local_created_at_in", None)
        self.local_created_at_lt = kwargs.get("local_created_at_lt", None)
        self.local_created_at_lte = kwargs.get("local_created_at_lte", None)
        self.local_created_at_not = kwargs.get("local_created_at_not", None)
        self.local_created_at_not_in = kwargs.get("local_created_at_not_in", None)
        self.progress = kwargs.get("progress", None)
        self.progress_gt = kwargs.get("progress_gt", None)
        self.progress_gte = kwargs.get("progress_gte", None)
        self.progress_in = kwargs.get("progress_in", None)
        self.progress_lt = kwargs.get("progress_lt", None)
        self.progress_lte = kwargs.get("progress_lte", None)
        self.progress_not = kwargs.get("progress_not", None)
        self.progress_not_in = kwargs.get("progress_not_in", None)
        self.resource_id = kwargs.get("resource_id", None)
        self.resource_id_contains = kwargs.get("resource_id_contains", None)
        self.resource_id_ends_with = kwargs.get("resource_id_ends_with", None)
        self.resource_id_gt = kwargs.get("resource_id_gt", None)
        self.resource_id_gte = kwargs.get("resource_id_gte", None)
        self.resource_id_in = kwargs.get("resource_id_in", None)
        self.resource_id_lt = kwargs.get("resource_id_lt", None)
        self.resource_id_lte = kwargs.get("resource_id_lte", None)
        self.resource_id_not = kwargs.get("resource_id_not", None)
        self.resource_id_not_contains = kwargs.get("resource_id_not_contains", None)
        self.resource_id_not_ends_with = kwargs.get("resource_id_not_ends_with", None)
        self.resource_id_not_in = kwargs.get("resource_id_not_in", None)
        self.resource_id_not_starts_with = kwargs.get("resource_id_not_starts_with", None)
        self.resource_id_starts_with = kwargs.get("resource_id_starts_with", None)
        self.resource_mutation = kwargs.get("resource_mutation", None)
        self.resource_mutation_contains = kwargs.get("resource_mutation_contains", None)
        self.resource_mutation_ends_with = kwargs.get("resource_mutation_ends_with", None)
        self.resource_mutation_gt = kwargs.get("resource_mutation_gt", None)
        self.resource_mutation_gte = kwargs.get("resource_mutation_gte", None)
        self.resource_mutation_in = kwargs.get("resource_mutation_in", None)
        self.resource_mutation_lt = kwargs.get("resource_mutation_lt", None)
        self.resource_mutation_lte = kwargs.get("resource_mutation_lte", None)
        self.resource_mutation_not = kwargs.get("resource_mutation_not", None)
        self.resource_mutation_not_contains = kwargs.get("resource_mutation_not_contains", None)
        self.resource_mutation_not_ends_with = kwargs.get("resource_mutation_not_ends_with", None)
        self.resource_mutation_not_in = kwargs.get("resource_mutation_not_in", None)
        self.resource_mutation_not_starts_with = kwargs.get("resource_mutation_not_starts_with", None)
        self.resource_mutation_starts_with = kwargs.get("resource_mutation_starts_with", None)
        self.resource_rollback_error = kwargs.get("resource_rollback_error", None)
        self.resource_rollback_error_contains = kwargs.get("resource_rollback_error_contains", None)
        self.resource_rollback_error_ends_with = kwargs.get("resource_rollback_error_ends_with", None)
        self.resource_rollback_error_gt = kwargs.get("resource_rollback_error_gt", None)
        self.resource_rollback_error_gte = kwargs.get("resource_rollback_error_gte", None)
        self.resource_rollback_error_in = kwargs.get("resource_rollback_error_in", None)
        self.resource_rollback_error_lt = kwargs.get("resource_rollback_error_lt", None)
        self.resource_rollback_error_lte = kwargs.get("resource_rollback_error_lte", None)
        self.resource_rollback_error_not = kwargs.get("resource_rollback_error_not", None)
        self.resource_rollback_error_not_contains = kwargs.get("resource_rollback_error_not_contains", None)
        self.resource_rollback_error_not_ends_with = kwargs.get("resource_rollback_error_not_ends_with", None)
        self.resource_rollback_error_not_in = kwargs.get("resource_rollback_error_not_in", None)
        self.resource_rollback_error_not_starts_with = kwargs.get("resource_rollback_error_not_starts_with", None)
        self.resource_rollback_error_starts_with = kwargs.get("resource_rollback_error_starts_with", None)
        self.resource_rollback_retry_count = kwargs.get("resource_rollback_retry_count", None)
        self.resource_rollback_retry_count_gt = kwargs.get("resource_rollback_retry_count_gt", None)
        self.resource_rollback_retry_count_gte = kwargs.get("resource_rollback_retry_count_gte", None)
        self.resource_rollback_retry_count_in = kwargs.get("resource_rollback_retry_count_in", None)
        self.resource_rollback_retry_count_lt = kwargs.get("resource_rollback_retry_count_lt", None)
        self.resource_rollback_retry_count_lte = kwargs.get("resource_rollback_retry_count_lte", None)
        self.resource_rollback_retry_count_not = kwargs.get("resource_rollback_retry_count_not", None)
        self.resource_rollback_retry_count_not_in = kwargs.get("resource_rollback_retry_count_not_in", None)
        self.resource_rollbacked = kwargs.get("resource_rollbacked", None)
        self.resource_rollbacked_not = kwargs.get("resource_rollbacked_not", None)
        self.resource_type = kwargs.get("resource_type", None)
        self.resource_type_contains = kwargs.get("resource_type_contains", None)
        self.resource_type_ends_with = kwargs.get("resource_type_ends_with", None)
        self.resource_type_gt = kwargs.get("resource_type_gt", None)
        self.resource_type_gte = kwargs.get("resource_type_gte", None)
        self.resource_type_in = kwargs.get("resource_type_in", None)
        self.resource_type_lt = kwargs.get("resource_type_lt", None)
        self.resource_type_lte = kwargs.get("resource_type_lte", None)
        self.resource_type_not = kwargs.get("resource_type_not", None)
        self.resource_type_not_contains = kwargs.get("resource_type_not_contains", None)
        self.resource_type_not_ends_with = kwargs.get("resource_type_not_ends_with", None)
        self.resource_type_not_in = kwargs.get("resource_type_not_in", None)
        self.resource_type_not_starts_with = kwargs.get("resource_type_not_starts_with", None)
        self.resource_type_starts_with = kwargs.get("resource_type_starts_with", None)
        self.snapshot = kwargs.get("snapshot", None)
        self.snapshot_contains = kwargs.get("snapshot_contains", None)
        self.snapshot_ends_with = kwargs.get("snapshot_ends_with", None)
        self.snapshot_gt = kwargs.get("snapshot_gt", None)
        self.snapshot_gte = kwargs.get("snapshot_gte", None)
        self.snapshot_in = kwargs.get("snapshot_in", None)
        self.snapshot_lt = kwargs.get("snapshot_lt", None)
        self.snapshot_lte = kwargs.get("snapshot_lte", None)
        self.snapshot_not = kwargs.get("snapshot_not", None)
        self.snapshot_not_contains = kwargs.get("snapshot_not_contains", None)
        self.snapshot_not_ends_with = kwargs.get("snapshot_not_ends_with", None)
        self.snapshot_not_in = kwargs.get("snapshot_not_in", None)
        self.snapshot_not_starts_with = kwargs.get("snapshot_not_starts_with", None)
        self.snapshot_starts_with = kwargs.get("snapshot_starts_with", None)
        self.started_at = kwargs.get("started_at", None)
        self.started_at_gt = kwargs.get("started_at_gt", None)
        self.started_at_gte = kwargs.get("started_at_gte", None)
        self.started_at_in = kwargs.get("started_at_in", None)
        self.started_at_lt = kwargs.get("started_at_lt", None)
        self.started_at_lte = kwargs.get("started_at_lte", None)
        self.started_at_not = kwargs.get("started_at_not", None)
        self.started_at_not_in = kwargs.get("started_at_not_in", None)
        self.status = kwargs.get("status", None)
        self.status_in = kwargs.get("status_in", None)
        self.status_not = kwargs.get("status_not", None)
        self.status_not_in = kwargs.get("status_not_in", None)
        self.type = kwargs.get("type", None)
        self.type_in = kwargs.get("type_in", None)
        self.type_not = kwargs.get("type_not", None)
        self.type_not_in = kwargs.get("type_not_in", None)
        self.user = kwargs.get("user", None)

    @property
    def _and(self):
        """Gets the _and of this TaskWhereInput.  # noqa: E501


        :return: The _and of this TaskWhereInput.  # noqa: E501
        :rtype: list[TaskWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this TaskWhereInput.


        :param _and: The _and of this TaskWhereInput.  # noqa: E501
        :type _and: list[TaskWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this TaskWhereInput.  # noqa: E501


        :return: The _not of this TaskWhereInput.  # noqa: E501
        :rtype: list[TaskWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this TaskWhereInput.


        :param _not: The _not of this TaskWhereInput.  # noqa: E501
        :type _not: list[TaskWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this TaskWhereInput.  # noqa: E501


        :return: The _or of this TaskWhereInput.  # noqa: E501
        :rtype: list[TaskWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this TaskWhereInput.


        :param _or: The _or of this TaskWhereInput.  # noqa: E501
        :type _or: list[TaskWhereInput]
        """

        self.__or = _or

    @property
    def cluster(self):
        """Gets the cluster of this TaskWhereInput.  # noqa: E501


        :return: The cluster of this TaskWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this TaskWhereInput.


        :param cluster: The cluster of this TaskWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def description(self):
        """Gets the description of this TaskWhereInput.  # noqa: E501


        :return: The description of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TaskWhereInput.


        :param description: The description of this TaskWhereInput.  # noqa: E501
        :type description: str
        """

        self._description = description

    @property
    def description_contains(self):
        """Gets the description_contains of this TaskWhereInput.  # noqa: E501


        :return: The description_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_contains

    @description_contains.setter
    def description_contains(self, description_contains):
        """Sets the description_contains of this TaskWhereInput.


        :param description_contains: The description_contains of this TaskWhereInput.  # noqa: E501
        :type description_contains: str
        """

        self._description_contains = description_contains

    @property
    def description_ends_with(self):
        """Gets the description_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The description_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_ends_with

    @description_ends_with.setter
    def description_ends_with(self, description_ends_with):
        """Sets the description_ends_with of this TaskWhereInput.


        :param description_ends_with: The description_ends_with of this TaskWhereInput.  # noqa: E501
        :type description_ends_with: str
        """

        self._description_ends_with = description_ends_with

    @property
    def description_gt(self):
        """Gets the description_gt of this TaskWhereInput.  # noqa: E501


        :return: The description_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gt

    @description_gt.setter
    def description_gt(self, description_gt):
        """Sets the description_gt of this TaskWhereInput.


        :param description_gt: The description_gt of this TaskWhereInput.  # noqa: E501
        :type description_gt: str
        """

        self._description_gt = description_gt

    @property
    def description_gte(self):
        """Gets the description_gte of this TaskWhereInput.  # noqa: E501


        :return: The description_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gte

    @description_gte.setter
    def description_gte(self, description_gte):
        """Sets the description_gte of this TaskWhereInput.


        :param description_gte: The description_gte of this TaskWhereInput.  # noqa: E501
        :type description_gte: str
        """

        self._description_gte = description_gte

    @property
    def description_in(self):
        """Gets the description_in of this TaskWhereInput.  # noqa: E501


        :return: The description_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_in

    @description_in.setter
    def description_in(self, description_in):
        """Sets the description_in of this TaskWhereInput.


        :param description_in: The description_in of this TaskWhereInput.  # noqa: E501
        :type description_in: list[str]
        """

        self._description_in = description_in

    @property
    def description_lt(self):
        """Gets the description_lt of this TaskWhereInput.  # noqa: E501


        :return: The description_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lt

    @description_lt.setter
    def description_lt(self, description_lt):
        """Sets the description_lt of this TaskWhereInput.


        :param description_lt: The description_lt of this TaskWhereInput.  # noqa: E501
        :type description_lt: str
        """

        self._description_lt = description_lt

    @property
    def description_lte(self):
        """Gets the description_lte of this TaskWhereInput.  # noqa: E501


        :return: The description_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lte

    @description_lte.setter
    def description_lte(self, description_lte):
        """Sets the description_lte of this TaskWhereInput.


        :param description_lte: The description_lte of this TaskWhereInput.  # noqa: E501
        :type description_lte: str
        """

        self._description_lte = description_lte

    @property
    def description_not(self):
        """Gets the description_not of this TaskWhereInput.  # noqa: E501


        :return: The description_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not

    @description_not.setter
    def description_not(self, description_not):
        """Sets the description_not of this TaskWhereInput.


        :param description_not: The description_not of this TaskWhereInput.  # noqa: E501
        :type description_not: str
        """

        self._description_not = description_not

    @property
    def description_not_contains(self):
        """Gets the description_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The description_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_contains

    @description_not_contains.setter
    def description_not_contains(self, description_not_contains):
        """Sets the description_not_contains of this TaskWhereInput.


        :param description_not_contains: The description_not_contains of this TaskWhereInput.  # noqa: E501
        :type description_not_contains: str
        """

        self._description_not_contains = description_not_contains

    @property
    def description_not_ends_with(self):
        """Gets the description_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The description_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_ends_with

    @description_not_ends_with.setter
    def description_not_ends_with(self, description_not_ends_with):
        """Sets the description_not_ends_with of this TaskWhereInput.


        :param description_not_ends_with: The description_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type description_not_ends_with: str
        """

        self._description_not_ends_with = description_not_ends_with

    @property
    def description_not_in(self):
        """Gets the description_not_in of this TaskWhereInput.  # noqa: E501


        :return: The description_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_not_in

    @description_not_in.setter
    def description_not_in(self, description_not_in):
        """Sets the description_not_in of this TaskWhereInput.


        :param description_not_in: The description_not_in of this TaskWhereInput.  # noqa: E501
        :type description_not_in: list[str]
        """

        self._description_not_in = description_not_in

    @property
    def description_not_starts_with(self):
        """Gets the description_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The description_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_starts_with

    @description_not_starts_with.setter
    def description_not_starts_with(self, description_not_starts_with):
        """Sets the description_not_starts_with of this TaskWhereInput.


        :param description_not_starts_with: The description_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type description_not_starts_with: str
        """

        self._description_not_starts_with = description_not_starts_with

    @property
    def description_starts_with(self):
        """Gets the description_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The description_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_starts_with

    @description_starts_with.setter
    def description_starts_with(self, description_starts_with):
        """Sets the description_starts_with of this TaskWhereInput.


        :param description_starts_with: The description_starts_with of this TaskWhereInput.  # noqa: E501
        :type description_starts_with: str
        """

        self._description_starts_with = description_starts_with

    @property
    def error_code(self):
        """Gets the error_code of this TaskWhereInput.  # noqa: E501


        :return: The error_code of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this TaskWhereInput.


        :param error_code: The error_code of this TaskWhereInput.  # noqa: E501
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def error_code_contains(self):
        """Gets the error_code_contains of this TaskWhereInput.  # noqa: E501


        :return: The error_code_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_contains

    @error_code_contains.setter
    def error_code_contains(self, error_code_contains):
        """Sets the error_code_contains of this TaskWhereInput.


        :param error_code_contains: The error_code_contains of this TaskWhereInput.  # noqa: E501
        :type error_code_contains: str
        """

        self._error_code_contains = error_code_contains

    @property
    def error_code_ends_with(self):
        """Gets the error_code_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The error_code_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_ends_with

    @error_code_ends_with.setter
    def error_code_ends_with(self, error_code_ends_with):
        """Sets the error_code_ends_with of this TaskWhereInput.


        :param error_code_ends_with: The error_code_ends_with of this TaskWhereInput.  # noqa: E501
        :type error_code_ends_with: str
        """

        self._error_code_ends_with = error_code_ends_with

    @property
    def error_code_gt(self):
        """Gets the error_code_gt of this TaskWhereInput.  # noqa: E501


        :return: The error_code_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_gt

    @error_code_gt.setter
    def error_code_gt(self, error_code_gt):
        """Sets the error_code_gt of this TaskWhereInput.


        :param error_code_gt: The error_code_gt of this TaskWhereInput.  # noqa: E501
        :type error_code_gt: str
        """

        self._error_code_gt = error_code_gt

    @property
    def error_code_gte(self):
        """Gets the error_code_gte of this TaskWhereInput.  # noqa: E501


        :return: The error_code_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_gte

    @error_code_gte.setter
    def error_code_gte(self, error_code_gte):
        """Sets the error_code_gte of this TaskWhereInput.


        :param error_code_gte: The error_code_gte of this TaskWhereInput.  # noqa: E501
        :type error_code_gte: str
        """

        self._error_code_gte = error_code_gte

    @property
    def error_code_in(self):
        """Gets the error_code_in of this TaskWhereInput.  # noqa: E501


        :return: The error_code_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._error_code_in

    @error_code_in.setter
    def error_code_in(self, error_code_in):
        """Sets the error_code_in of this TaskWhereInput.


        :param error_code_in: The error_code_in of this TaskWhereInput.  # noqa: E501
        :type error_code_in: list[str]
        """

        self._error_code_in = error_code_in

    @property
    def error_code_lt(self):
        """Gets the error_code_lt of this TaskWhereInput.  # noqa: E501


        :return: The error_code_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_lt

    @error_code_lt.setter
    def error_code_lt(self, error_code_lt):
        """Sets the error_code_lt of this TaskWhereInput.


        :param error_code_lt: The error_code_lt of this TaskWhereInput.  # noqa: E501
        :type error_code_lt: str
        """

        self._error_code_lt = error_code_lt

    @property
    def error_code_lte(self):
        """Gets the error_code_lte of this TaskWhereInput.  # noqa: E501


        :return: The error_code_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_lte

    @error_code_lte.setter
    def error_code_lte(self, error_code_lte):
        """Sets the error_code_lte of this TaskWhereInput.


        :param error_code_lte: The error_code_lte of this TaskWhereInput.  # noqa: E501
        :type error_code_lte: str
        """

        self._error_code_lte = error_code_lte

    @property
    def error_code_not(self):
        """Gets the error_code_not of this TaskWhereInput.  # noqa: E501


        :return: The error_code_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_not

    @error_code_not.setter
    def error_code_not(self, error_code_not):
        """Sets the error_code_not of this TaskWhereInput.


        :param error_code_not: The error_code_not of this TaskWhereInput.  # noqa: E501
        :type error_code_not: str
        """

        self._error_code_not = error_code_not

    @property
    def error_code_not_contains(self):
        """Gets the error_code_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The error_code_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_not_contains

    @error_code_not_contains.setter
    def error_code_not_contains(self, error_code_not_contains):
        """Sets the error_code_not_contains of this TaskWhereInput.


        :param error_code_not_contains: The error_code_not_contains of this TaskWhereInput.  # noqa: E501
        :type error_code_not_contains: str
        """

        self._error_code_not_contains = error_code_not_contains

    @property
    def error_code_not_ends_with(self):
        """Gets the error_code_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The error_code_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_not_ends_with

    @error_code_not_ends_with.setter
    def error_code_not_ends_with(self, error_code_not_ends_with):
        """Sets the error_code_not_ends_with of this TaskWhereInput.


        :param error_code_not_ends_with: The error_code_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type error_code_not_ends_with: str
        """

        self._error_code_not_ends_with = error_code_not_ends_with

    @property
    def error_code_not_in(self):
        """Gets the error_code_not_in of this TaskWhereInput.  # noqa: E501


        :return: The error_code_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._error_code_not_in

    @error_code_not_in.setter
    def error_code_not_in(self, error_code_not_in):
        """Sets the error_code_not_in of this TaskWhereInput.


        :param error_code_not_in: The error_code_not_in of this TaskWhereInput.  # noqa: E501
        :type error_code_not_in: list[str]
        """

        self._error_code_not_in = error_code_not_in

    @property
    def error_code_not_starts_with(self):
        """Gets the error_code_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The error_code_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_not_starts_with

    @error_code_not_starts_with.setter
    def error_code_not_starts_with(self, error_code_not_starts_with):
        """Sets the error_code_not_starts_with of this TaskWhereInput.


        :param error_code_not_starts_with: The error_code_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type error_code_not_starts_with: str
        """

        self._error_code_not_starts_with = error_code_not_starts_with

    @property
    def error_code_starts_with(self):
        """Gets the error_code_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The error_code_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_code_starts_with

    @error_code_starts_with.setter
    def error_code_starts_with(self, error_code_starts_with):
        """Sets the error_code_starts_with of this TaskWhereInput.


        :param error_code_starts_with: The error_code_starts_with of this TaskWhereInput.  # noqa: E501
        :type error_code_starts_with: str
        """

        self._error_code_starts_with = error_code_starts_with

    @property
    def error_message(self):
        """Gets the error_message of this TaskWhereInput.  # noqa: E501


        :return: The error_message of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this TaskWhereInput.


        :param error_message: The error_message of this TaskWhereInput.  # noqa: E501
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_message_contains(self):
        """Gets the error_message_contains of this TaskWhereInput.  # noqa: E501


        :return: The error_message_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_contains

    @error_message_contains.setter
    def error_message_contains(self, error_message_contains):
        """Sets the error_message_contains of this TaskWhereInput.


        :param error_message_contains: The error_message_contains of this TaskWhereInput.  # noqa: E501
        :type error_message_contains: str
        """

        self._error_message_contains = error_message_contains

    @property
    def error_message_ends_with(self):
        """Gets the error_message_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The error_message_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_ends_with

    @error_message_ends_with.setter
    def error_message_ends_with(self, error_message_ends_with):
        """Sets the error_message_ends_with of this TaskWhereInput.


        :param error_message_ends_with: The error_message_ends_with of this TaskWhereInput.  # noqa: E501
        :type error_message_ends_with: str
        """

        self._error_message_ends_with = error_message_ends_with

    @property
    def error_message_gt(self):
        """Gets the error_message_gt of this TaskWhereInput.  # noqa: E501


        :return: The error_message_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_gt

    @error_message_gt.setter
    def error_message_gt(self, error_message_gt):
        """Sets the error_message_gt of this TaskWhereInput.


        :param error_message_gt: The error_message_gt of this TaskWhereInput.  # noqa: E501
        :type error_message_gt: str
        """

        self._error_message_gt = error_message_gt

    @property
    def error_message_gte(self):
        """Gets the error_message_gte of this TaskWhereInput.  # noqa: E501


        :return: The error_message_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_gte

    @error_message_gte.setter
    def error_message_gte(self, error_message_gte):
        """Sets the error_message_gte of this TaskWhereInput.


        :param error_message_gte: The error_message_gte of this TaskWhereInput.  # noqa: E501
        :type error_message_gte: str
        """

        self._error_message_gte = error_message_gte

    @property
    def error_message_in(self):
        """Gets the error_message_in of this TaskWhereInput.  # noqa: E501


        :return: The error_message_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._error_message_in

    @error_message_in.setter
    def error_message_in(self, error_message_in):
        """Sets the error_message_in of this TaskWhereInput.


        :param error_message_in: The error_message_in of this TaskWhereInput.  # noqa: E501
        :type error_message_in: list[str]
        """

        self._error_message_in = error_message_in

    @property
    def error_message_lt(self):
        """Gets the error_message_lt of this TaskWhereInput.  # noqa: E501


        :return: The error_message_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_lt

    @error_message_lt.setter
    def error_message_lt(self, error_message_lt):
        """Sets the error_message_lt of this TaskWhereInput.


        :param error_message_lt: The error_message_lt of this TaskWhereInput.  # noqa: E501
        :type error_message_lt: str
        """

        self._error_message_lt = error_message_lt

    @property
    def error_message_lte(self):
        """Gets the error_message_lte of this TaskWhereInput.  # noqa: E501


        :return: The error_message_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_lte

    @error_message_lte.setter
    def error_message_lte(self, error_message_lte):
        """Sets the error_message_lte of this TaskWhereInput.


        :param error_message_lte: The error_message_lte of this TaskWhereInput.  # noqa: E501
        :type error_message_lte: str
        """

        self._error_message_lte = error_message_lte

    @property
    def error_message_not(self):
        """Gets the error_message_not of this TaskWhereInput.  # noqa: E501


        :return: The error_message_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_not

    @error_message_not.setter
    def error_message_not(self, error_message_not):
        """Sets the error_message_not of this TaskWhereInput.


        :param error_message_not: The error_message_not of this TaskWhereInput.  # noqa: E501
        :type error_message_not: str
        """

        self._error_message_not = error_message_not

    @property
    def error_message_not_contains(self):
        """Gets the error_message_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The error_message_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_not_contains

    @error_message_not_contains.setter
    def error_message_not_contains(self, error_message_not_contains):
        """Sets the error_message_not_contains of this TaskWhereInput.


        :param error_message_not_contains: The error_message_not_contains of this TaskWhereInput.  # noqa: E501
        :type error_message_not_contains: str
        """

        self._error_message_not_contains = error_message_not_contains

    @property
    def error_message_not_ends_with(self):
        """Gets the error_message_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The error_message_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_not_ends_with

    @error_message_not_ends_with.setter
    def error_message_not_ends_with(self, error_message_not_ends_with):
        """Sets the error_message_not_ends_with of this TaskWhereInput.


        :param error_message_not_ends_with: The error_message_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type error_message_not_ends_with: str
        """

        self._error_message_not_ends_with = error_message_not_ends_with

    @property
    def error_message_not_in(self):
        """Gets the error_message_not_in of this TaskWhereInput.  # noqa: E501


        :return: The error_message_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._error_message_not_in

    @error_message_not_in.setter
    def error_message_not_in(self, error_message_not_in):
        """Sets the error_message_not_in of this TaskWhereInput.


        :param error_message_not_in: The error_message_not_in of this TaskWhereInput.  # noqa: E501
        :type error_message_not_in: list[str]
        """

        self._error_message_not_in = error_message_not_in

    @property
    def error_message_not_starts_with(self):
        """Gets the error_message_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The error_message_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_not_starts_with

    @error_message_not_starts_with.setter
    def error_message_not_starts_with(self, error_message_not_starts_with):
        """Sets the error_message_not_starts_with of this TaskWhereInput.


        :param error_message_not_starts_with: The error_message_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type error_message_not_starts_with: str
        """

        self._error_message_not_starts_with = error_message_not_starts_with

    @property
    def error_message_starts_with(self):
        """Gets the error_message_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The error_message_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._error_message_starts_with

    @error_message_starts_with.setter
    def error_message_starts_with(self, error_message_starts_with):
        """Sets the error_message_starts_with of this TaskWhereInput.


        :param error_message_starts_with: The error_message_starts_with of this TaskWhereInput.  # noqa: E501
        :type error_message_starts_with: str
        """

        self._error_message_starts_with = error_message_starts_with

    @property
    def finished_at(self):
        """Gets the finished_at of this TaskWhereInput.  # noqa: E501


        :return: The finished_at of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at

    @finished_at.setter
    def finished_at(self, finished_at):
        """Sets the finished_at of this TaskWhereInput.


        :param finished_at: The finished_at of this TaskWhereInput.  # noqa: E501
        :type finished_at: str
        """

        self._finished_at = finished_at

    @property
    def finished_at_gt(self):
        """Gets the finished_at_gt of this TaskWhereInput.  # noqa: E501


        :return: The finished_at_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_gt

    @finished_at_gt.setter
    def finished_at_gt(self, finished_at_gt):
        """Sets the finished_at_gt of this TaskWhereInput.


        :param finished_at_gt: The finished_at_gt of this TaskWhereInput.  # noqa: E501
        :type finished_at_gt: str
        """

        self._finished_at_gt = finished_at_gt

    @property
    def finished_at_gte(self):
        """Gets the finished_at_gte of this TaskWhereInput.  # noqa: E501


        :return: The finished_at_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_gte

    @finished_at_gte.setter
    def finished_at_gte(self, finished_at_gte):
        """Sets the finished_at_gte of this TaskWhereInput.


        :param finished_at_gte: The finished_at_gte of this TaskWhereInput.  # noqa: E501
        :type finished_at_gte: str
        """

        self._finished_at_gte = finished_at_gte

    @property
    def finished_at_in(self):
        """Gets the finished_at_in of this TaskWhereInput.  # noqa: E501


        :return: The finished_at_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._finished_at_in

    @finished_at_in.setter
    def finished_at_in(self, finished_at_in):
        """Sets the finished_at_in of this TaskWhereInput.


        :param finished_at_in: The finished_at_in of this TaskWhereInput.  # noqa: E501
        :type finished_at_in: list[str]
        """

        self._finished_at_in = finished_at_in

    @property
    def finished_at_lt(self):
        """Gets the finished_at_lt of this TaskWhereInput.  # noqa: E501


        :return: The finished_at_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_lt

    @finished_at_lt.setter
    def finished_at_lt(self, finished_at_lt):
        """Sets the finished_at_lt of this TaskWhereInput.


        :param finished_at_lt: The finished_at_lt of this TaskWhereInput.  # noqa: E501
        :type finished_at_lt: str
        """

        self._finished_at_lt = finished_at_lt

    @property
    def finished_at_lte(self):
        """Gets the finished_at_lte of this TaskWhereInput.  # noqa: E501


        :return: The finished_at_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_lte

    @finished_at_lte.setter
    def finished_at_lte(self, finished_at_lte):
        """Sets the finished_at_lte of this TaskWhereInput.


        :param finished_at_lte: The finished_at_lte of this TaskWhereInput.  # noqa: E501
        :type finished_at_lte: str
        """

        self._finished_at_lte = finished_at_lte

    @property
    def finished_at_not(self):
        """Gets the finished_at_not of this TaskWhereInput.  # noqa: E501


        :return: The finished_at_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_not

    @finished_at_not.setter
    def finished_at_not(self, finished_at_not):
        """Sets the finished_at_not of this TaskWhereInput.


        :param finished_at_not: The finished_at_not of this TaskWhereInput.  # noqa: E501
        :type finished_at_not: str
        """

        self._finished_at_not = finished_at_not

    @property
    def finished_at_not_in(self):
        """Gets the finished_at_not_in of this TaskWhereInput.  # noqa: E501


        :return: The finished_at_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._finished_at_not_in

    @finished_at_not_in.setter
    def finished_at_not_in(self, finished_at_not_in):
        """Sets the finished_at_not_in of this TaskWhereInput.


        :param finished_at_not_in: The finished_at_not_in of this TaskWhereInput.  # noqa: E501
        :type finished_at_not_in: list[str]
        """

        self._finished_at_not_in = finished_at_not_in

    @property
    def id(self):
        """Gets the id of this TaskWhereInput.  # noqa: E501


        :return: The id of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TaskWhereInput.


        :param id: The id of this TaskWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this TaskWhereInput.  # noqa: E501


        :return: The id_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this TaskWhereInput.


        :param id_contains: The id_contains of this TaskWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The id_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this TaskWhereInput.


        :param id_ends_with: The id_ends_with of this TaskWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this TaskWhereInput.  # noqa: E501


        :return: The id_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this TaskWhereInput.


        :param id_gt: The id_gt of this TaskWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this TaskWhereInput.  # noqa: E501


        :return: The id_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this TaskWhereInput.


        :param id_gte: The id_gte of this TaskWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this TaskWhereInput.  # noqa: E501


        :return: The id_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this TaskWhereInput.


        :param id_in: The id_in of this TaskWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this TaskWhereInput.  # noqa: E501


        :return: The id_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this TaskWhereInput.


        :param id_lt: The id_lt of this TaskWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this TaskWhereInput.  # noqa: E501


        :return: The id_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this TaskWhereInput.


        :param id_lte: The id_lte of this TaskWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this TaskWhereInput.  # noqa: E501


        :return: The id_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this TaskWhereInput.


        :param id_not: The id_not of this TaskWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The id_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this TaskWhereInput.


        :param id_not_contains: The id_not_contains of this TaskWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this TaskWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this TaskWhereInput.  # noqa: E501


        :return: The id_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this TaskWhereInput.


        :param id_not_in: The id_not_in of this TaskWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this TaskWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The id_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this TaskWhereInput.


        :param id_starts_with: The id_starts_with of this TaskWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def internal(self):
        """Gets the internal of this TaskWhereInput.  # noqa: E501


        :return: The internal of this TaskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._internal

    @internal.setter
    def internal(self, internal):
        """Sets the internal of this TaskWhereInput.


        :param internal: The internal of this TaskWhereInput.  # noqa: E501
        :type internal: bool
        """

        self._internal = internal

    @property
    def internal_not(self):
        """Gets the internal_not of this TaskWhereInput.  # noqa: E501


        :return: The internal_not of this TaskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._internal_not

    @internal_not.setter
    def internal_not(self, internal_not):
        """Sets the internal_not of this TaskWhereInput.


        :param internal_not: The internal_not of this TaskWhereInput.  # noqa: E501
        :type internal_not: bool
        """

        self._internal_not = internal_not

    @property
    def key(self):
        """Gets the key of this TaskWhereInput.  # noqa: E501


        :return: The key of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this TaskWhereInput.


        :param key: The key of this TaskWhereInput.  # noqa: E501
        :type key: str
        """

        self._key = key

    @property
    def key_contains(self):
        """Gets the key_contains of this TaskWhereInput.  # noqa: E501


        :return: The key_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_contains

    @key_contains.setter
    def key_contains(self, key_contains):
        """Sets the key_contains of this TaskWhereInput.


        :param key_contains: The key_contains of this TaskWhereInput.  # noqa: E501
        :type key_contains: str
        """

        self._key_contains = key_contains

    @property
    def key_ends_with(self):
        """Gets the key_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The key_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_ends_with

    @key_ends_with.setter
    def key_ends_with(self, key_ends_with):
        """Sets the key_ends_with of this TaskWhereInput.


        :param key_ends_with: The key_ends_with of this TaskWhereInput.  # noqa: E501
        :type key_ends_with: str
        """

        self._key_ends_with = key_ends_with

    @property
    def key_gt(self):
        """Gets the key_gt of this TaskWhereInput.  # noqa: E501


        :return: The key_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_gt

    @key_gt.setter
    def key_gt(self, key_gt):
        """Sets the key_gt of this TaskWhereInput.


        :param key_gt: The key_gt of this TaskWhereInput.  # noqa: E501
        :type key_gt: str
        """

        self._key_gt = key_gt

    @property
    def key_gte(self):
        """Gets the key_gte of this TaskWhereInput.  # noqa: E501


        :return: The key_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_gte

    @key_gte.setter
    def key_gte(self, key_gte):
        """Sets the key_gte of this TaskWhereInput.


        :param key_gte: The key_gte of this TaskWhereInput.  # noqa: E501
        :type key_gte: str
        """

        self._key_gte = key_gte

    @property
    def key_in(self):
        """Gets the key_in of this TaskWhereInput.  # noqa: E501


        :return: The key_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._key_in

    @key_in.setter
    def key_in(self, key_in):
        """Sets the key_in of this TaskWhereInput.


        :param key_in: The key_in of this TaskWhereInput.  # noqa: E501
        :type key_in: list[str]
        """

        self._key_in = key_in

    @property
    def key_lt(self):
        """Gets the key_lt of this TaskWhereInput.  # noqa: E501


        :return: The key_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_lt

    @key_lt.setter
    def key_lt(self, key_lt):
        """Sets the key_lt of this TaskWhereInput.


        :param key_lt: The key_lt of this TaskWhereInput.  # noqa: E501
        :type key_lt: str
        """

        self._key_lt = key_lt

    @property
    def key_lte(self):
        """Gets the key_lte of this TaskWhereInput.  # noqa: E501


        :return: The key_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_lte

    @key_lte.setter
    def key_lte(self, key_lte):
        """Sets the key_lte of this TaskWhereInput.


        :param key_lte: The key_lte of this TaskWhereInput.  # noqa: E501
        :type key_lte: str
        """

        self._key_lte = key_lte

    @property
    def key_not(self):
        """Gets the key_not of this TaskWhereInput.  # noqa: E501


        :return: The key_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_not

    @key_not.setter
    def key_not(self, key_not):
        """Sets the key_not of this TaskWhereInput.


        :param key_not: The key_not of this TaskWhereInput.  # noqa: E501
        :type key_not: str
        """

        self._key_not = key_not

    @property
    def key_not_contains(self):
        """Gets the key_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The key_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_not_contains

    @key_not_contains.setter
    def key_not_contains(self, key_not_contains):
        """Sets the key_not_contains of this TaskWhereInput.


        :param key_not_contains: The key_not_contains of this TaskWhereInput.  # noqa: E501
        :type key_not_contains: str
        """

        self._key_not_contains = key_not_contains

    @property
    def key_not_ends_with(self):
        """Gets the key_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The key_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_not_ends_with

    @key_not_ends_with.setter
    def key_not_ends_with(self, key_not_ends_with):
        """Sets the key_not_ends_with of this TaskWhereInput.


        :param key_not_ends_with: The key_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type key_not_ends_with: str
        """

        self._key_not_ends_with = key_not_ends_with

    @property
    def key_not_in(self):
        """Gets the key_not_in of this TaskWhereInput.  # noqa: E501


        :return: The key_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._key_not_in

    @key_not_in.setter
    def key_not_in(self, key_not_in):
        """Sets the key_not_in of this TaskWhereInput.


        :param key_not_in: The key_not_in of this TaskWhereInput.  # noqa: E501
        :type key_not_in: list[str]
        """

        self._key_not_in = key_not_in

    @property
    def key_not_starts_with(self):
        """Gets the key_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The key_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_not_starts_with

    @key_not_starts_with.setter
    def key_not_starts_with(self, key_not_starts_with):
        """Sets the key_not_starts_with of this TaskWhereInput.


        :param key_not_starts_with: The key_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type key_not_starts_with: str
        """

        self._key_not_starts_with = key_not_starts_with

    @property
    def key_starts_with(self):
        """Gets the key_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The key_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._key_starts_with

    @key_starts_with.setter
    def key_starts_with(self, key_starts_with):
        """Sets the key_starts_with of this TaskWhereInput.


        :param key_starts_with: The key_starts_with of this TaskWhereInput.  # noqa: E501
        :type key_starts_with: str
        """

        self._key_starts_with = key_starts_with

    @property
    def local_created_at(self):
        """Gets the local_created_at of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at

    @local_created_at.setter
    def local_created_at(self, local_created_at):
        """Sets the local_created_at of this TaskWhereInput.


        :param local_created_at: The local_created_at of this TaskWhereInput.  # noqa: E501
        :type local_created_at: str
        """

        self._local_created_at = local_created_at

    @property
    def local_created_at_gt(self):
        """Gets the local_created_at_gt of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_gt

    @local_created_at_gt.setter
    def local_created_at_gt(self, local_created_at_gt):
        """Sets the local_created_at_gt of this TaskWhereInput.


        :param local_created_at_gt: The local_created_at_gt of this TaskWhereInput.  # noqa: E501
        :type local_created_at_gt: str
        """

        self._local_created_at_gt = local_created_at_gt

    @property
    def local_created_at_gte(self):
        """Gets the local_created_at_gte of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_gte

    @local_created_at_gte.setter
    def local_created_at_gte(self, local_created_at_gte):
        """Sets the local_created_at_gte of this TaskWhereInput.


        :param local_created_at_gte: The local_created_at_gte of this TaskWhereInput.  # noqa: E501
        :type local_created_at_gte: str
        """

        self._local_created_at_gte = local_created_at_gte

    @property
    def local_created_at_in(self):
        """Gets the local_created_at_in of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_created_at_in

    @local_created_at_in.setter
    def local_created_at_in(self, local_created_at_in):
        """Sets the local_created_at_in of this TaskWhereInput.


        :param local_created_at_in: The local_created_at_in of this TaskWhereInput.  # noqa: E501
        :type local_created_at_in: list[str]
        """

        self._local_created_at_in = local_created_at_in

    @property
    def local_created_at_lt(self):
        """Gets the local_created_at_lt of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_lt

    @local_created_at_lt.setter
    def local_created_at_lt(self, local_created_at_lt):
        """Sets the local_created_at_lt of this TaskWhereInput.


        :param local_created_at_lt: The local_created_at_lt of this TaskWhereInput.  # noqa: E501
        :type local_created_at_lt: str
        """

        self._local_created_at_lt = local_created_at_lt

    @property
    def local_created_at_lte(self):
        """Gets the local_created_at_lte of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_lte

    @local_created_at_lte.setter
    def local_created_at_lte(self, local_created_at_lte):
        """Sets the local_created_at_lte of this TaskWhereInput.


        :param local_created_at_lte: The local_created_at_lte of this TaskWhereInput.  # noqa: E501
        :type local_created_at_lte: str
        """

        self._local_created_at_lte = local_created_at_lte

    @property
    def local_created_at_not(self):
        """Gets the local_created_at_not of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_not

    @local_created_at_not.setter
    def local_created_at_not(self, local_created_at_not):
        """Sets the local_created_at_not of this TaskWhereInput.


        :param local_created_at_not: The local_created_at_not of this TaskWhereInput.  # noqa: E501
        :type local_created_at_not: str
        """

        self._local_created_at_not = local_created_at_not

    @property
    def local_created_at_not_in(self):
        """Gets the local_created_at_not_in of this TaskWhereInput.  # noqa: E501


        :return: The local_created_at_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_created_at_not_in

    @local_created_at_not_in.setter
    def local_created_at_not_in(self, local_created_at_not_in):
        """Sets the local_created_at_not_in of this TaskWhereInput.


        :param local_created_at_not_in: The local_created_at_not_in of this TaskWhereInput.  # noqa: E501
        :type local_created_at_not_in: list[str]
        """

        self._local_created_at_not_in = local_created_at_not_in

    @property
    def progress(self):
        """Gets the progress of this TaskWhereInput.  # noqa: E501


        :return: The progress of this TaskWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this TaskWhereInput.


        :param progress: The progress of this TaskWhereInput.  # noqa: E501
        :type progress: float
        """

        self._progress = progress

    @property
    def progress_gt(self):
        """Gets the progress_gt of this TaskWhereInput.  # noqa: E501


        :return: The progress_gt of this TaskWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._progress_gt

    @progress_gt.setter
    def progress_gt(self, progress_gt):
        """Sets the progress_gt of this TaskWhereInput.


        :param progress_gt: The progress_gt of this TaskWhereInput.  # noqa: E501
        :type progress_gt: float
        """

        self._progress_gt = progress_gt

    @property
    def progress_gte(self):
        """Gets the progress_gte of this TaskWhereInput.  # noqa: E501


        :return: The progress_gte of this TaskWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._progress_gte

    @progress_gte.setter
    def progress_gte(self, progress_gte):
        """Sets the progress_gte of this TaskWhereInput.


        :param progress_gte: The progress_gte of this TaskWhereInput.  # noqa: E501
        :type progress_gte: float
        """

        self._progress_gte = progress_gte

    @property
    def progress_in(self):
        """Gets the progress_in of this TaskWhereInput.  # noqa: E501


        :return: The progress_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._progress_in

    @progress_in.setter
    def progress_in(self, progress_in):
        """Sets the progress_in of this TaskWhereInput.


        :param progress_in: The progress_in of this TaskWhereInput.  # noqa: E501
        :type progress_in: list[float]
        """

        self._progress_in = progress_in

    @property
    def progress_lt(self):
        """Gets the progress_lt of this TaskWhereInput.  # noqa: E501


        :return: The progress_lt of this TaskWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._progress_lt

    @progress_lt.setter
    def progress_lt(self, progress_lt):
        """Sets the progress_lt of this TaskWhereInput.


        :param progress_lt: The progress_lt of this TaskWhereInput.  # noqa: E501
        :type progress_lt: float
        """

        self._progress_lt = progress_lt

    @property
    def progress_lte(self):
        """Gets the progress_lte of this TaskWhereInput.  # noqa: E501


        :return: The progress_lte of this TaskWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._progress_lte

    @progress_lte.setter
    def progress_lte(self, progress_lte):
        """Sets the progress_lte of this TaskWhereInput.


        :param progress_lte: The progress_lte of this TaskWhereInput.  # noqa: E501
        :type progress_lte: float
        """

        self._progress_lte = progress_lte

    @property
    def progress_not(self):
        """Gets the progress_not of this TaskWhereInput.  # noqa: E501


        :return: The progress_not of this TaskWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._progress_not

    @progress_not.setter
    def progress_not(self, progress_not):
        """Sets the progress_not of this TaskWhereInput.


        :param progress_not: The progress_not of this TaskWhereInput.  # noqa: E501
        :type progress_not: float
        """

        self._progress_not = progress_not

    @property
    def progress_not_in(self):
        """Gets the progress_not_in of this TaskWhereInput.  # noqa: E501


        :return: The progress_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._progress_not_in

    @progress_not_in.setter
    def progress_not_in(self, progress_not_in):
        """Sets the progress_not_in of this TaskWhereInput.


        :param progress_not_in: The progress_not_in of this TaskWhereInput.  # noqa: E501
        :type progress_not_in: list[float]
        """

        self._progress_not_in = progress_not_in

    @property
    def resource_id(self):
        """Gets the resource_id of this TaskWhereInput.  # noqa: E501


        :return: The resource_id of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this TaskWhereInput.


        :param resource_id: The resource_id of this TaskWhereInput.  # noqa: E501
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_id_contains(self):
        """Gets the resource_id_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_contains

    @resource_id_contains.setter
    def resource_id_contains(self, resource_id_contains):
        """Sets the resource_id_contains of this TaskWhereInput.


        :param resource_id_contains: The resource_id_contains of this TaskWhereInput.  # noqa: E501
        :type resource_id_contains: str
        """

        self._resource_id_contains = resource_id_contains

    @property
    def resource_id_ends_with(self):
        """Gets the resource_id_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_ends_with

    @resource_id_ends_with.setter
    def resource_id_ends_with(self, resource_id_ends_with):
        """Sets the resource_id_ends_with of this TaskWhereInput.


        :param resource_id_ends_with: The resource_id_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_id_ends_with: str
        """

        self._resource_id_ends_with = resource_id_ends_with

    @property
    def resource_id_gt(self):
        """Gets the resource_id_gt of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_gt

    @resource_id_gt.setter
    def resource_id_gt(self, resource_id_gt):
        """Sets the resource_id_gt of this TaskWhereInput.


        :param resource_id_gt: The resource_id_gt of this TaskWhereInput.  # noqa: E501
        :type resource_id_gt: str
        """

        self._resource_id_gt = resource_id_gt

    @property
    def resource_id_gte(self):
        """Gets the resource_id_gte of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_gte

    @resource_id_gte.setter
    def resource_id_gte(self, resource_id_gte):
        """Sets the resource_id_gte of this TaskWhereInput.


        :param resource_id_gte: The resource_id_gte of this TaskWhereInput.  # noqa: E501
        :type resource_id_gte: str
        """

        self._resource_id_gte = resource_id_gte

    @property
    def resource_id_in(self):
        """Gets the resource_id_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_id_in

    @resource_id_in.setter
    def resource_id_in(self, resource_id_in):
        """Sets the resource_id_in of this TaskWhereInput.


        :param resource_id_in: The resource_id_in of this TaskWhereInput.  # noqa: E501
        :type resource_id_in: list[str]
        """

        self._resource_id_in = resource_id_in

    @property
    def resource_id_lt(self):
        """Gets the resource_id_lt of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_lt

    @resource_id_lt.setter
    def resource_id_lt(self, resource_id_lt):
        """Sets the resource_id_lt of this TaskWhereInput.


        :param resource_id_lt: The resource_id_lt of this TaskWhereInput.  # noqa: E501
        :type resource_id_lt: str
        """

        self._resource_id_lt = resource_id_lt

    @property
    def resource_id_lte(self):
        """Gets the resource_id_lte of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_lte

    @resource_id_lte.setter
    def resource_id_lte(self, resource_id_lte):
        """Sets the resource_id_lte of this TaskWhereInput.


        :param resource_id_lte: The resource_id_lte of this TaskWhereInput.  # noqa: E501
        :type resource_id_lte: str
        """

        self._resource_id_lte = resource_id_lte

    @property
    def resource_id_not(self):
        """Gets the resource_id_not of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not

    @resource_id_not.setter
    def resource_id_not(self, resource_id_not):
        """Sets the resource_id_not of this TaskWhereInput.


        :param resource_id_not: The resource_id_not of this TaskWhereInput.  # noqa: E501
        :type resource_id_not: str
        """

        self._resource_id_not = resource_id_not

    @property
    def resource_id_not_contains(self):
        """Gets the resource_id_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not_contains

    @resource_id_not_contains.setter
    def resource_id_not_contains(self, resource_id_not_contains):
        """Sets the resource_id_not_contains of this TaskWhereInput.


        :param resource_id_not_contains: The resource_id_not_contains of this TaskWhereInput.  # noqa: E501
        :type resource_id_not_contains: str
        """

        self._resource_id_not_contains = resource_id_not_contains

    @property
    def resource_id_not_ends_with(self):
        """Gets the resource_id_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not_ends_with

    @resource_id_not_ends_with.setter
    def resource_id_not_ends_with(self, resource_id_not_ends_with):
        """Sets the resource_id_not_ends_with of this TaskWhereInput.


        :param resource_id_not_ends_with: The resource_id_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_id_not_ends_with: str
        """

        self._resource_id_not_ends_with = resource_id_not_ends_with

    @property
    def resource_id_not_in(self):
        """Gets the resource_id_not_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_id_not_in

    @resource_id_not_in.setter
    def resource_id_not_in(self, resource_id_not_in):
        """Sets the resource_id_not_in of this TaskWhereInput.


        :param resource_id_not_in: The resource_id_not_in of this TaskWhereInput.  # noqa: E501
        :type resource_id_not_in: list[str]
        """

        self._resource_id_not_in = resource_id_not_in

    @property
    def resource_id_not_starts_with(self):
        """Gets the resource_id_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not_starts_with

    @resource_id_not_starts_with.setter
    def resource_id_not_starts_with(self, resource_id_not_starts_with):
        """Sets the resource_id_not_starts_with of this TaskWhereInput.


        :param resource_id_not_starts_with: The resource_id_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_id_not_starts_with: str
        """

        self._resource_id_not_starts_with = resource_id_not_starts_with

    @property
    def resource_id_starts_with(self):
        """Gets the resource_id_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_id_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_starts_with

    @resource_id_starts_with.setter
    def resource_id_starts_with(self, resource_id_starts_with):
        """Sets the resource_id_starts_with of this TaskWhereInput.


        :param resource_id_starts_with: The resource_id_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_id_starts_with: str
        """

        self._resource_id_starts_with = resource_id_starts_with

    @property
    def resource_mutation(self):
        """Gets the resource_mutation of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation

    @resource_mutation.setter
    def resource_mutation(self, resource_mutation):
        """Sets the resource_mutation of this TaskWhereInput.


        :param resource_mutation: The resource_mutation of this TaskWhereInput.  # noqa: E501
        :type resource_mutation: str
        """

        self._resource_mutation = resource_mutation

    @property
    def resource_mutation_contains(self):
        """Gets the resource_mutation_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_contains

    @resource_mutation_contains.setter
    def resource_mutation_contains(self, resource_mutation_contains):
        """Sets the resource_mutation_contains of this TaskWhereInput.


        :param resource_mutation_contains: The resource_mutation_contains of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_contains: str
        """

        self._resource_mutation_contains = resource_mutation_contains

    @property
    def resource_mutation_ends_with(self):
        """Gets the resource_mutation_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_ends_with

    @resource_mutation_ends_with.setter
    def resource_mutation_ends_with(self, resource_mutation_ends_with):
        """Sets the resource_mutation_ends_with of this TaskWhereInput.


        :param resource_mutation_ends_with: The resource_mutation_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_ends_with: str
        """

        self._resource_mutation_ends_with = resource_mutation_ends_with

    @property
    def resource_mutation_gt(self):
        """Gets the resource_mutation_gt of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_gt

    @resource_mutation_gt.setter
    def resource_mutation_gt(self, resource_mutation_gt):
        """Sets the resource_mutation_gt of this TaskWhereInput.


        :param resource_mutation_gt: The resource_mutation_gt of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_gt: str
        """

        self._resource_mutation_gt = resource_mutation_gt

    @property
    def resource_mutation_gte(self):
        """Gets the resource_mutation_gte of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_gte

    @resource_mutation_gte.setter
    def resource_mutation_gte(self, resource_mutation_gte):
        """Sets the resource_mutation_gte of this TaskWhereInput.


        :param resource_mutation_gte: The resource_mutation_gte of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_gte: str
        """

        self._resource_mutation_gte = resource_mutation_gte

    @property
    def resource_mutation_in(self):
        """Gets the resource_mutation_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_mutation_in

    @resource_mutation_in.setter
    def resource_mutation_in(self, resource_mutation_in):
        """Sets the resource_mutation_in of this TaskWhereInput.


        :param resource_mutation_in: The resource_mutation_in of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_in: list[str]
        """

        self._resource_mutation_in = resource_mutation_in

    @property
    def resource_mutation_lt(self):
        """Gets the resource_mutation_lt of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_lt

    @resource_mutation_lt.setter
    def resource_mutation_lt(self, resource_mutation_lt):
        """Sets the resource_mutation_lt of this TaskWhereInput.


        :param resource_mutation_lt: The resource_mutation_lt of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_lt: str
        """

        self._resource_mutation_lt = resource_mutation_lt

    @property
    def resource_mutation_lte(self):
        """Gets the resource_mutation_lte of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_lte

    @resource_mutation_lte.setter
    def resource_mutation_lte(self, resource_mutation_lte):
        """Sets the resource_mutation_lte of this TaskWhereInput.


        :param resource_mutation_lte: The resource_mutation_lte of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_lte: str
        """

        self._resource_mutation_lte = resource_mutation_lte

    @property
    def resource_mutation_not(self):
        """Gets the resource_mutation_not of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_not

    @resource_mutation_not.setter
    def resource_mutation_not(self, resource_mutation_not):
        """Sets the resource_mutation_not of this TaskWhereInput.


        :param resource_mutation_not: The resource_mutation_not of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_not: str
        """

        self._resource_mutation_not = resource_mutation_not

    @property
    def resource_mutation_not_contains(self):
        """Gets the resource_mutation_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_not_contains

    @resource_mutation_not_contains.setter
    def resource_mutation_not_contains(self, resource_mutation_not_contains):
        """Sets the resource_mutation_not_contains of this TaskWhereInput.


        :param resource_mutation_not_contains: The resource_mutation_not_contains of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_not_contains: str
        """

        self._resource_mutation_not_contains = resource_mutation_not_contains

    @property
    def resource_mutation_not_ends_with(self):
        """Gets the resource_mutation_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_not_ends_with

    @resource_mutation_not_ends_with.setter
    def resource_mutation_not_ends_with(self, resource_mutation_not_ends_with):
        """Sets the resource_mutation_not_ends_with of this TaskWhereInput.


        :param resource_mutation_not_ends_with: The resource_mutation_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_not_ends_with: str
        """

        self._resource_mutation_not_ends_with = resource_mutation_not_ends_with

    @property
    def resource_mutation_not_in(self):
        """Gets the resource_mutation_not_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_mutation_not_in

    @resource_mutation_not_in.setter
    def resource_mutation_not_in(self, resource_mutation_not_in):
        """Sets the resource_mutation_not_in of this TaskWhereInput.


        :param resource_mutation_not_in: The resource_mutation_not_in of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_not_in: list[str]
        """

        self._resource_mutation_not_in = resource_mutation_not_in

    @property
    def resource_mutation_not_starts_with(self):
        """Gets the resource_mutation_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_not_starts_with

    @resource_mutation_not_starts_with.setter
    def resource_mutation_not_starts_with(self, resource_mutation_not_starts_with):
        """Sets the resource_mutation_not_starts_with of this TaskWhereInput.


        :param resource_mutation_not_starts_with: The resource_mutation_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_not_starts_with: str
        """

        self._resource_mutation_not_starts_with = resource_mutation_not_starts_with

    @property
    def resource_mutation_starts_with(self):
        """Gets the resource_mutation_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_mutation_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_mutation_starts_with

    @resource_mutation_starts_with.setter
    def resource_mutation_starts_with(self, resource_mutation_starts_with):
        """Sets the resource_mutation_starts_with of this TaskWhereInput.


        :param resource_mutation_starts_with: The resource_mutation_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_mutation_starts_with: str
        """

        self._resource_mutation_starts_with = resource_mutation_starts_with

    @property
    def resource_rollback_error(self):
        """Gets the resource_rollback_error of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error

    @resource_rollback_error.setter
    def resource_rollback_error(self, resource_rollback_error):
        """Sets the resource_rollback_error of this TaskWhereInput.


        :param resource_rollback_error: The resource_rollback_error of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error: str
        """

        self._resource_rollback_error = resource_rollback_error

    @property
    def resource_rollback_error_contains(self):
        """Gets the resource_rollback_error_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_contains

    @resource_rollback_error_contains.setter
    def resource_rollback_error_contains(self, resource_rollback_error_contains):
        """Sets the resource_rollback_error_contains of this TaskWhereInput.


        :param resource_rollback_error_contains: The resource_rollback_error_contains of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_contains: str
        """

        self._resource_rollback_error_contains = resource_rollback_error_contains

    @property
    def resource_rollback_error_ends_with(self):
        """Gets the resource_rollback_error_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_ends_with

    @resource_rollback_error_ends_with.setter
    def resource_rollback_error_ends_with(self, resource_rollback_error_ends_with):
        """Sets the resource_rollback_error_ends_with of this TaskWhereInput.


        :param resource_rollback_error_ends_with: The resource_rollback_error_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_ends_with: str
        """

        self._resource_rollback_error_ends_with = resource_rollback_error_ends_with

    @property
    def resource_rollback_error_gt(self):
        """Gets the resource_rollback_error_gt of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_gt

    @resource_rollback_error_gt.setter
    def resource_rollback_error_gt(self, resource_rollback_error_gt):
        """Sets the resource_rollback_error_gt of this TaskWhereInput.


        :param resource_rollback_error_gt: The resource_rollback_error_gt of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_gt: str
        """

        self._resource_rollback_error_gt = resource_rollback_error_gt

    @property
    def resource_rollback_error_gte(self):
        """Gets the resource_rollback_error_gte of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_gte

    @resource_rollback_error_gte.setter
    def resource_rollback_error_gte(self, resource_rollback_error_gte):
        """Sets the resource_rollback_error_gte of this TaskWhereInput.


        :param resource_rollback_error_gte: The resource_rollback_error_gte of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_gte: str
        """

        self._resource_rollback_error_gte = resource_rollback_error_gte

    @property
    def resource_rollback_error_in(self):
        """Gets the resource_rollback_error_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_rollback_error_in

    @resource_rollback_error_in.setter
    def resource_rollback_error_in(self, resource_rollback_error_in):
        """Sets the resource_rollback_error_in of this TaskWhereInput.


        :param resource_rollback_error_in: The resource_rollback_error_in of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_in: list[str]
        """

        self._resource_rollback_error_in = resource_rollback_error_in

    @property
    def resource_rollback_error_lt(self):
        """Gets the resource_rollback_error_lt of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_lt

    @resource_rollback_error_lt.setter
    def resource_rollback_error_lt(self, resource_rollback_error_lt):
        """Sets the resource_rollback_error_lt of this TaskWhereInput.


        :param resource_rollback_error_lt: The resource_rollback_error_lt of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_lt: str
        """

        self._resource_rollback_error_lt = resource_rollback_error_lt

    @property
    def resource_rollback_error_lte(self):
        """Gets the resource_rollback_error_lte of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_lte

    @resource_rollback_error_lte.setter
    def resource_rollback_error_lte(self, resource_rollback_error_lte):
        """Sets the resource_rollback_error_lte of this TaskWhereInput.


        :param resource_rollback_error_lte: The resource_rollback_error_lte of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_lte: str
        """

        self._resource_rollback_error_lte = resource_rollback_error_lte

    @property
    def resource_rollback_error_not(self):
        """Gets the resource_rollback_error_not of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_not

    @resource_rollback_error_not.setter
    def resource_rollback_error_not(self, resource_rollback_error_not):
        """Sets the resource_rollback_error_not of this TaskWhereInput.


        :param resource_rollback_error_not: The resource_rollback_error_not of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_not: str
        """

        self._resource_rollback_error_not = resource_rollback_error_not

    @property
    def resource_rollback_error_not_contains(self):
        """Gets the resource_rollback_error_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_not_contains

    @resource_rollback_error_not_contains.setter
    def resource_rollback_error_not_contains(self, resource_rollback_error_not_contains):
        """Sets the resource_rollback_error_not_contains of this TaskWhereInput.


        :param resource_rollback_error_not_contains: The resource_rollback_error_not_contains of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_not_contains: str
        """

        self._resource_rollback_error_not_contains = resource_rollback_error_not_contains

    @property
    def resource_rollback_error_not_ends_with(self):
        """Gets the resource_rollback_error_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_not_ends_with

    @resource_rollback_error_not_ends_with.setter
    def resource_rollback_error_not_ends_with(self, resource_rollback_error_not_ends_with):
        """Sets the resource_rollback_error_not_ends_with of this TaskWhereInput.


        :param resource_rollback_error_not_ends_with: The resource_rollback_error_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_not_ends_with: str
        """

        self._resource_rollback_error_not_ends_with = resource_rollback_error_not_ends_with

    @property
    def resource_rollback_error_not_in(self):
        """Gets the resource_rollback_error_not_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_rollback_error_not_in

    @resource_rollback_error_not_in.setter
    def resource_rollback_error_not_in(self, resource_rollback_error_not_in):
        """Sets the resource_rollback_error_not_in of this TaskWhereInput.


        :param resource_rollback_error_not_in: The resource_rollback_error_not_in of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_not_in: list[str]
        """

        self._resource_rollback_error_not_in = resource_rollback_error_not_in

    @property
    def resource_rollback_error_not_starts_with(self):
        """Gets the resource_rollback_error_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_not_starts_with

    @resource_rollback_error_not_starts_with.setter
    def resource_rollback_error_not_starts_with(self, resource_rollback_error_not_starts_with):
        """Sets the resource_rollback_error_not_starts_with of this TaskWhereInput.


        :param resource_rollback_error_not_starts_with: The resource_rollback_error_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_not_starts_with: str
        """

        self._resource_rollback_error_not_starts_with = resource_rollback_error_not_starts_with

    @property
    def resource_rollback_error_starts_with(self):
        """Gets the resource_rollback_error_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_error_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_rollback_error_starts_with

    @resource_rollback_error_starts_with.setter
    def resource_rollback_error_starts_with(self, resource_rollback_error_starts_with):
        """Sets the resource_rollback_error_starts_with of this TaskWhereInput.


        :param resource_rollback_error_starts_with: The resource_rollback_error_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_error_starts_with: str
        """

        self._resource_rollback_error_starts_with = resource_rollback_error_starts_with

    @property
    def resource_rollback_retry_count(self):
        """Gets the resource_rollback_retry_count of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count of this TaskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_rollback_retry_count

    @resource_rollback_retry_count.setter
    def resource_rollback_retry_count(self, resource_rollback_retry_count):
        """Sets the resource_rollback_retry_count of this TaskWhereInput.


        :param resource_rollback_retry_count: The resource_rollback_retry_count of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count: int
        """

        self._resource_rollback_retry_count = resource_rollback_retry_count

    @property
    def resource_rollback_retry_count_gt(self):
        """Gets the resource_rollback_retry_count_gt of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count_gt of this TaskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_rollback_retry_count_gt

    @resource_rollback_retry_count_gt.setter
    def resource_rollback_retry_count_gt(self, resource_rollback_retry_count_gt):
        """Sets the resource_rollback_retry_count_gt of this TaskWhereInput.


        :param resource_rollback_retry_count_gt: The resource_rollback_retry_count_gt of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count_gt: int
        """

        self._resource_rollback_retry_count_gt = resource_rollback_retry_count_gt

    @property
    def resource_rollback_retry_count_gte(self):
        """Gets the resource_rollback_retry_count_gte of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count_gte of this TaskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_rollback_retry_count_gte

    @resource_rollback_retry_count_gte.setter
    def resource_rollback_retry_count_gte(self, resource_rollback_retry_count_gte):
        """Sets the resource_rollback_retry_count_gte of this TaskWhereInput.


        :param resource_rollback_retry_count_gte: The resource_rollback_retry_count_gte of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count_gte: int
        """

        self._resource_rollback_retry_count_gte = resource_rollback_retry_count_gte

    @property
    def resource_rollback_retry_count_in(self):
        """Gets the resource_rollback_retry_count_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._resource_rollback_retry_count_in

    @resource_rollback_retry_count_in.setter
    def resource_rollback_retry_count_in(self, resource_rollback_retry_count_in):
        """Sets the resource_rollback_retry_count_in of this TaskWhereInput.


        :param resource_rollback_retry_count_in: The resource_rollback_retry_count_in of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count_in: list[int]
        """

        self._resource_rollback_retry_count_in = resource_rollback_retry_count_in

    @property
    def resource_rollback_retry_count_lt(self):
        """Gets the resource_rollback_retry_count_lt of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count_lt of this TaskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_rollback_retry_count_lt

    @resource_rollback_retry_count_lt.setter
    def resource_rollback_retry_count_lt(self, resource_rollback_retry_count_lt):
        """Sets the resource_rollback_retry_count_lt of this TaskWhereInput.


        :param resource_rollback_retry_count_lt: The resource_rollback_retry_count_lt of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count_lt: int
        """

        self._resource_rollback_retry_count_lt = resource_rollback_retry_count_lt

    @property
    def resource_rollback_retry_count_lte(self):
        """Gets the resource_rollback_retry_count_lte of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count_lte of this TaskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_rollback_retry_count_lte

    @resource_rollback_retry_count_lte.setter
    def resource_rollback_retry_count_lte(self, resource_rollback_retry_count_lte):
        """Sets the resource_rollback_retry_count_lte of this TaskWhereInput.


        :param resource_rollback_retry_count_lte: The resource_rollback_retry_count_lte of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count_lte: int
        """

        self._resource_rollback_retry_count_lte = resource_rollback_retry_count_lte

    @property
    def resource_rollback_retry_count_not(self):
        """Gets the resource_rollback_retry_count_not of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count_not of this TaskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_rollback_retry_count_not

    @resource_rollback_retry_count_not.setter
    def resource_rollback_retry_count_not(self, resource_rollback_retry_count_not):
        """Sets the resource_rollback_retry_count_not of this TaskWhereInput.


        :param resource_rollback_retry_count_not: The resource_rollback_retry_count_not of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count_not: int
        """

        self._resource_rollback_retry_count_not = resource_rollback_retry_count_not

    @property
    def resource_rollback_retry_count_not_in(self):
        """Gets the resource_rollback_retry_count_not_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollback_retry_count_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._resource_rollback_retry_count_not_in

    @resource_rollback_retry_count_not_in.setter
    def resource_rollback_retry_count_not_in(self, resource_rollback_retry_count_not_in):
        """Sets the resource_rollback_retry_count_not_in of this TaskWhereInput.


        :param resource_rollback_retry_count_not_in: The resource_rollback_retry_count_not_in of this TaskWhereInput.  # noqa: E501
        :type resource_rollback_retry_count_not_in: list[int]
        """

        self._resource_rollback_retry_count_not_in = resource_rollback_retry_count_not_in

    @property
    def resource_rollbacked(self):
        """Gets the resource_rollbacked of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollbacked of this TaskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._resource_rollbacked

    @resource_rollbacked.setter
    def resource_rollbacked(self, resource_rollbacked):
        """Sets the resource_rollbacked of this TaskWhereInput.


        :param resource_rollbacked: The resource_rollbacked of this TaskWhereInput.  # noqa: E501
        :type resource_rollbacked: bool
        """

        self._resource_rollbacked = resource_rollbacked

    @property
    def resource_rollbacked_not(self):
        """Gets the resource_rollbacked_not of this TaskWhereInput.  # noqa: E501


        :return: The resource_rollbacked_not of this TaskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._resource_rollbacked_not

    @resource_rollbacked_not.setter
    def resource_rollbacked_not(self, resource_rollbacked_not):
        """Sets the resource_rollbacked_not of this TaskWhereInput.


        :param resource_rollbacked_not: The resource_rollbacked_not of this TaskWhereInput.  # noqa: E501
        :type resource_rollbacked_not: bool
        """

        self._resource_rollbacked_not = resource_rollbacked_not

    @property
    def resource_type(self):
        """Gets the resource_type of this TaskWhereInput.  # noqa: E501


        :return: The resource_type of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this TaskWhereInput.


        :param resource_type: The resource_type of this TaskWhereInput.  # noqa: E501
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_type_contains(self):
        """Gets the resource_type_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_contains

    @resource_type_contains.setter
    def resource_type_contains(self, resource_type_contains):
        """Sets the resource_type_contains of this TaskWhereInput.


        :param resource_type_contains: The resource_type_contains of this TaskWhereInput.  # noqa: E501
        :type resource_type_contains: str
        """

        self._resource_type_contains = resource_type_contains

    @property
    def resource_type_ends_with(self):
        """Gets the resource_type_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_ends_with

    @resource_type_ends_with.setter
    def resource_type_ends_with(self, resource_type_ends_with):
        """Sets the resource_type_ends_with of this TaskWhereInput.


        :param resource_type_ends_with: The resource_type_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_type_ends_with: str
        """

        self._resource_type_ends_with = resource_type_ends_with

    @property
    def resource_type_gt(self):
        """Gets the resource_type_gt of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_gt

    @resource_type_gt.setter
    def resource_type_gt(self, resource_type_gt):
        """Sets the resource_type_gt of this TaskWhereInput.


        :param resource_type_gt: The resource_type_gt of this TaskWhereInput.  # noqa: E501
        :type resource_type_gt: str
        """

        self._resource_type_gt = resource_type_gt

    @property
    def resource_type_gte(self):
        """Gets the resource_type_gte of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_gte

    @resource_type_gte.setter
    def resource_type_gte(self, resource_type_gte):
        """Sets the resource_type_gte of this TaskWhereInput.


        :param resource_type_gte: The resource_type_gte of this TaskWhereInput.  # noqa: E501
        :type resource_type_gte: str
        """

        self._resource_type_gte = resource_type_gte

    @property
    def resource_type_in(self):
        """Gets the resource_type_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_type_in

    @resource_type_in.setter
    def resource_type_in(self, resource_type_in):
        """Sets the resource_type_in of this TaskWhereInput.


        :param resource_type_in: The resource_type_in of this TaskWhereInput.  # noqa: E501
        :type resource_type_in: list[str]
        """

        self._resource_type_in = resource_type_in

    @property
    def resource_type_lt(self):
        """Gets the resource_type_lt of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_lt

    @resource_type_lt.setter
    def resource_type_lt(self, resource_type_lt):
        """Sets the resource_type_lt of this TaskWhereInput.


        :param resource_type_lt: The resource_type_lt of this TaskWhereInput.  # noqa: E501
        :type resource_type_lt: str
        """

        self._resource_type_lt = resource_type_lt

    @property
    def resource_type_lte(self):
        """Gets the resource_type_lte of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_lte

    @resource_type_lte.setter
    def resource_type_lte(self, resource_type_lte):
        """Sets the resource_type_lte of this TaskWhereInput.


        :param resource_type_lte: The resource_type_lte of this TaskWhereInput.  # noqa: E501
        :type resource_type_lte: str
        """

        self._resource_type_lte = resource_type_lte

    @property
    def resource_type_not(self):
        """Gets the resource_type_not of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not

    @resource_type_not.setter
    def resource_type_not(self, resource_type_not):
        """Sets the resource_type_not of this TaskWhereInput.


        :param resource_type_not: The resource_type_not of this TaskWhereInput.  # noqa: E501
        :type resource_type_not: str
        """

        self._resource_type_not = resource_type_not

    @property
    def resource_type_not_contains(self):
        """Gets the resource_type_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not_contains

    @resource_type_not_contains.setter
    def resource_type_not_contains(self, resource_type_not_contains):
        """Sets the resource_type_not_contains of this TaskWhereInput.


        :param resource_type_not_contains: The resource_type_not_contains of this TaskWhereInput.  # noqa: E501
        :type resource_type_not_contains: str
        """

        self._resource_type_not_contains = resource_type_not_contains

    @property
    def resource_type_not_ends_with(self):
        """Gets the resource_type_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not_ends_with

    @resource_type_not_ends_with.setter
    def resource_type_not_ends_with(self, resource_type_not_ends_with):
        """Sets the resource_type_not_ends_with of this TaskWhereInput.


        :param resource_type_not_ends_with: The resource_type_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type resource_type_not_ends_with: str
        """

        self._resource_type_not_ends_with = resource_type_not_ends_with

    @property
    def resource_type_not_in(self):
        """Gets the resource_type_not_in of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_type_not_in

    @resource_type_not_in.setter
    def resource_type_not_in(self, resource_type_not_in):
        """Sets the resource_type_not_in of this TaskWhereInput.


        :param resource_type_not_in: The resource_type_not_in of this TaskWhereInput.  # noqa: E501
        :type resource_type_not_in: list[str]
        """

        self._resource_type_not_in = resource_type_not_in

    @property
    def resource_type_not_starts_with(self):
        """Gets the resource_type_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not_starts_with

    @resource_type_not_starts_with.setter
    def resource_type_not_starts_with(self, resource_type_not_starts_with):
        """Sets the resource_type_not_starts_with of this TaskWhereInput.


        :param resource_type_not_starts_with: The resource_type_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_type_not_starts_with: str
        """

        self._resource_type_not_starts_with = resource_type_not_starts_with

    @property
    def resource_type_starts_with(self):
        """Gets the resource_type_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The resource_type_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_starts_with

    @resource_type_starts_with.setter
    def resource_type_starts_with(self, resource_type_starts_with):
        """Sets the resource_type_starts_with of this TaskWhereInput.


        :param resource_type_starts_with: The resource_type_starts_with of this TaskWhereInput.  # noqa: E501
        :type resource_type_starts_with: str
        """

        self._resource_type_starts_with = resource_type_starts_with

    @property
    def snapshot(self):
        """Gets the snapshot of this TaskWhereInput.  # noqa: E501


        :return: The snapshot of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot

    @snapshot.setter
    def snapshot(self, snapshot):
        """Sets the snapshot of this TaskWhereInput.


        :param snapshot: The snapshot of this TaskWhereInput.  # noqa: E501
        :type snapshot: str
        """

        self._snapshot = snapshot

    @property
    def snapshot_contains(self):
        """Gets the snapshot_contains of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_contains

    @snapshot_contains.setter
    def snapshot_contains(self, snapshot_contains):
        """Sets the snapshot_contains of this TaskWhereInput.


        :param snapshot_contains: The snapshot_contains of this TaskWhereInput.  # noqa: E501
        :type snapshot_contains: str
        """

        self._snapshot_contains = snapshot_contains

    @property
    def snapshot_ends_with(self):
        """Gets the snapshot_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_ends_with

    @snapshot_ends_with.setter
    def snapshot_ends_with(self, snapshot_ends_with):
        """Sets the snapshot_ends_with of this TaskWhereInput.


        :param snapshot_ends_with: The snapshot_ends_with of this TaskWhereInput.  # noqa: E501
        :type snapshot_ends_with: str
        """

        self._snapshot_ends_with = snapshot_ends_with

    @property
    def snapshot_gt(self):
        """Gets the snapshot_gt of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_gt

    @snapshot_gt.setter
    def snapshot_gt(self, snapshot_gt):
        """Sets the snapshot_gt of this TaskWhereInput.


        :param snapshot_gt: The snapshot_gt of this TaskWhereInput.  # noqa: E501
        :type snapshot_gt: str
        """

        self._snapshot_gt = snapshot_gt

    @property
    def snapshot_gte(self):
        """Gets the snapshot_gte of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_gte

    @snapshot_gte.setter
    def snapshot_gte(self, snapshot_gte):
        """Sets the snapshot_gte of this TaskWhereInput.


        :param snapshot_gte: The snapshot_gte of this TaskWhereInput.  # noqa: E501
        :type snapshot_gte: str
        """

        self._snapshot_gte = snapshot_gte

    @property
    def snapshot_in(self):
        """Gets the snapshot_in of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._snapshot_in

    @snapshot_in.setter
    def snapshot_in(self, snapshot_in):
        """Sets the snapshot_in of this TaskWhereInput.


        :param snapshot_in: The snapshot_in of this TaskWhereInput.  # noqa: E501
        :type snapshot_in: list[str]
        """

        self._snapshot_in = snapshot_in

    @property
    def snapshot_lt(self):
        """Gets the snapshot_lt of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_lt

    @snapshot_lt.setter
    def snapshot_lt(self, snapshot_lt):
        """Sets the snapshot_lt of this TaskWhereInput.


        :param snapshot_lt: The snapshot_lt of this TaskWhereInput.  # noqa: E501
        :type snapshot_lt: str
        """

        self._snapshot_lt = snapshot_lt

    @property
    def snapshot_lte(self):
        """Gets the snapshot_lte of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_lte

    @snapshot_lte.setter
    def snapshot_lte(self, snapshot_lte):
        """Sets the snapshot_lte of this TaskWhereInput.


        :param snapshot_lte: The snapshot_lte of this TaskWhereInput.  # noqa: E501
        :type snapshot_lte: str
        """

        self._snapshot_lte = snapshot_lte

    @property
    def snapshot_not(self):
        """Gets the snapshot_not of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_not

    @snapshot_not.setter
    def snapshot_not(self, snapshot_not):
        """Sets the snapshot_not of this TaskWhereInput.


        :param snapshot_not: The snapshot_not of this TaskWhereInput.  # noqa: E501
        :type snapshot_not: str
        """

        self._snapshot_not = snapshot_not

    @property
    def snapshot_not_contains(self):
        """Gets the snapshot_not_contains of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_not_contains of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_not_contains

    @snapshot_not_contains.setter
    def snapshot_not_contains(self, snapshot_not_contains):
        """Sets the snapshot_not_contains of this TaskWhereInput.


        :param snapshot_not_contains: The snapshot_not_contains of this TaskWhereInput.  # noqa: E501
        :type snapshot_not_contains: str
        """

        self._snapshot_not_contains = snapshot_not_contains

    @property
    def snapshot_not_ends_with(self):
        """Gets the snapshot_not_ends_with of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_not_ends_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_not_ends_with

    @snapshot_not_ends_with.setter
    def snapshot_not_ends_with(self, snapshot_not_ends_with):
        """Sets the snapshot_not_ends_with of this TaskWhereInput.


        :param snapshot_not_ends_with: The snapshot_not_ends_with of this TaskWhereInput.  # noqa: E501
        :type snapshot_not_ends_with: str
        """

        self._snapshot_not_ends_with = snapshot_not_ends_with

    @property
    def snapshot_not_in(self):
        """Gets the snapshot_not_in of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._snapshot_not_in

    @snapshot_not_in.setter
    def snapshot_not_in(self, snapshot_not_in):
        """Sets the snapshot_not_in of this TaskWhereInput.


        :param snapshot_not_in: The snapshot_not_in of this TaskWhereInput.  # noqa: E501
        :type snapshot_not_in: list[str]
        """

        self._snapshot_not_in = snapshot_not_in

    @property
    def snapshot_not_starts_with(self):
        """Gets the snapshot_not_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_not_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_not_starts_with

    @snapshot_not_starts_with.setter
    def snapshot_not_starts_with(self, snapshot_not_starts_with):
        """Sets the snapshot_not_starts_with of this TaskWhereInput.


        :param snapshot_not_starts_with: The snapshot_not_starts_with of this TaskWhereInput.  # noqa: E501
        :type snapshot_not_starts_with: str
        """

        self._snapshot_not_starts_with = snapshot_not_starts_with

    @property
    def snapshot_starts_with(self):
        """Gets the snapshot_starts_with of this TaskWhereInput.  # noqa: E501


        :return: The snapshot_starts_with of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_starts_with

    @snapshot_starts_with.setter
    def snapshot_starts_with(self, snapshot_starts_with):
        """Sets the snapshot_starts_with of this TaskWhereInput.


        :param snapshot_starts_with: The snapshot_starts_with of this TaskWhereInput.  # noqa: E501
        :type snapshot_starts_with: str
        """

        self._snapshot_starts_with = snapshot_starts_with

    @property
    def started_at(self):
        """Gets the started_at of this TaskWhereInput.  # noqa: E501


        :return: The started_at of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this TaskWhereInput.


        :param started_at: The started_at of this TaskWhereInput.  # noqa: E501
        :type started_at: str
        """

        self._started_at = started_at

    @property
    def started_at_gt(self):
        """Gets the started_at_gt of this TaskWhereInput.  # noqa: E501


        :return: The started_at_gt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_gt

    @started_at_gt.setter
    def started_at_gt(self, started_at_gt):
        """Sets the started_at_gt of this TaskWhereInput.


        :param started_at_gt: The started_at_gt of this TaskWhereInput.  # noqa: E501
        :type started_at_gt: str
        """

        self._started_at_gt = started_at_gt

    @property
    def started_at_gte(self):
        """Gets the started_at_gte of this TaskWhereInput.  # noqa: E501


        :return: The started_at_gte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_gte

    @started_at_gte.setter
    def started_at_gte(self, started_at_gte):
        """Sets the started_at_gte of this TaskWhereInput.


        :param started_at_gte: The started_at_gte of this TaskWhereInput.  # noqa: E501
        :type started_at_gte: str
        """

        self._started_at_gte = started_at_gte

    @property
    def started_at_in(self):
        """Gets the started_at_in of this TaskWhereInput.  # noqa: E501


        :return: The started_at_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._started_at_in

    @started_at_in.setter
    def started_at_in(self, started_at_in):
        """Sets the started_at_in of this TaskWhereInput.


        :param started_at_in: The started_at_in of this TaskWhereInput.  # noqa: E501
        :type started_at_in: list[str]
        """

        self._started_at_in = started_at_in

    @property
    def started_at_lt(self):
        """Gets the started_at_lt of this TaskWhereInput.  # noqa: E501


        :return: The started_at_lt of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_lt

    @started_at_lt.setter
    def started_at_lt(self, started_at_lt):
        """Sets the started_at_lt of this TaskWhereInput.


        :param started_at_lt: The started_at_lt of this TaskWhereInput.  # noqa: E501
        :type started_at_lt: str
        """

        self._started_at_lt = started_at_lt

    @property
    def started_at_lte(self):
        """Gets the started_at_lte of this TaskWhereInput.  # noqa: E501


        :return: The started_at_lte of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_lte

    @started_at_lte.setter
    def started_at_lte(self, started_at_lte):
        """Sets the started_at_lte of this TaskWhereInput.


        :param started_at_lte: The started_at_lte of this TaskWhereInput.  # noqa: E501
        :type started_at_lte: str
        """

        self._started_at_lte = started_at_lte

    @property
    def started_at_not(self):
        """Gets the started_at_not of this TaskWhereInput.  # noqa: E501


        :return: The started_at_not of this TaskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_not

    @started_at_not.setter
    def started_at_not(self, started_at_not):
        """Sets the started_at_not of this TaskWhereInput.


        :param started_at_not: The started_at_not of this TaskWhereInput.  # noqa: E501
        :type started_at_not: str
        """

        self._started_at_not = started_at_not

    @property
    def started_at_not_in(self):
        """Gets the started_at_not_in of this TaskWhereInput.  # noqa: E501


        :return: The started_at_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._started_at_not_in

    @started_at_not_in.setter
    def started_at_not_in(self, started_at_not_in):
        """Sets the started_at_not_in of this TaskWhereInput.


        :param started_at_not_in: The started_at_not_in of this TaskWhereInput.  # noqa: E501
        :type started_at_not_in: list[str]
        """

        self._started_at_not_in = started_at_not_in

    @property
    def status(self):
        """Gets the status of this TaskWhereInput.  # noqa: E501


        :return: The status of this TaskWhereInput.  # noqa: E501
        :rtype: TaskStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TaskWhereInput.


        :param status: The status of this TaskWhereInput.  # noqa: E501
        :type status: TaskStatus
        """

        self._status = status

    @property
    def status_in(self):
        """Gets the status_in of this TaskWhereInput.  # noqa: E501


        :return: The status_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[TaskStatus]
        """
        return self._status_in

    @status_in.setter
    def status_in(self, status_in):
        """Sets the status_in of this TaskWhereInput.


        :param status_in: The status_in of this TaskWhereInput.  # noqa: E501
        :type status_in: list[TaskStatus]
        """

        self._status_in = status_in

    @property
    def status_not(self):
        """Gets the status_not of this TaskWhereInput.  # noqa: E501


        :return: The status_not of this TaskWhereInput.  # noqa: E501
        :rtype: TaskStatus
        """
        return self._status_not

    @status_not.setter
    def status_not(self, status_not):
        """Sets the status_not of this TaskWhereInput.


        :param status_not: The status_not of this TaskWhereInput.  # noqa: E501
        :type status_not: TaskStatus
        """

        self._status_not = status_not

    @property
    def status_not_in(self):
        """Gets the status_not_in of this TaskWhereInput.  # noqa: E501


        :return: The status_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[TaskStatus]
        """
        return self._status_not_in

    @status_not_in.setter
    def status_not_in(self, status_not_in):
        """Sets the status_not_in of this TaskWhereInput.


        :param status_not_in: The status_not_in of this TaskWhereInput.  # noqa: E501
        :type status_not_in: list[TaskStatus]
        """

        self._status_not_in = status_not_in

    @property
    def type(self):
        """Gets the type of this TaskWhereInput.  # noqa: E501


        :return: The type of this TaskWhereInput.  # noqa: E501
        :rtype: TaskType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TaskWhereInput.


        :param type: The type of this TaskWhereInput.  # noqa: E501
        :type type: TaskType
        """

        self._type = type

    @property
    def type_in(self):
        """Gets the type_in of this TaskWhereInput.  # noqa: E501


        :return: The type_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[TaskType]
        """
        return self._type_in

    @type_in.setter
    def type_in(self, type_in):
        """Sets the type_in of this TaskWhereInput.


        :param type_in: The type_in of this TaskWhereInput.  # noqa: E501
        :type type_in: list[TaskType]
        """

        self._type_in = type_in

    @property
    def type_not(self):
        """Gets the type_not of this TaskWhereInput.  # noqa: E501


        :return: The type_not of this TaskWhereInput.  # noqa: E501
        :rtype: TaskType
        """
        return self._type_not

    @type_not.setter
    def type_not(self, type_not):
        """Sets the type_not of this TaskWhereInput.


        :param type_not: The type_not of this TaskWhereInput.  # noqa: E501
        :type type_not: TaskType
        """

        self._type_not = type_not

    @property
    def type_not_in(self):
        """Gets the type_not_in of this TaskWhereInput.  # noqa: E501


        :return: The type_not_in of this TaskWhereInput.  # noqa: E501
        :rtype: list[TaskType]
        """
        return self._type_not_in

    @type_not_in.setter
    def type_not_in(self, type_not_in):
        """Sets the type_not_in of this TaskWhereInput.


        :param type_not_in: The type_not_in of this TaskWhereInput.  # noqa: E501
        :type type_not_in: list[TaskType]
        """

        self._type_not_in = type_not_in

    @property
    def user(self):
        """Gets the user of this TaskWhereInput.  # noqa: E501


        :return: The user of this TaskWhereInput.  # noqa: E501
        :rtype: UserWhereInput
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this TaskWhereInput.


        :param user: The user of this TaskWhereInput.  # noqa: E501
        :type user: UserWhereInput
        """

        self._user = user

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TaskWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, TaskWhereInput):
            return True

        return self.to_dict() != other.to_dict()

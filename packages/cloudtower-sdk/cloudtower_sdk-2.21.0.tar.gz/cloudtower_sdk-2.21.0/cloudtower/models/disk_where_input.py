# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class DiskWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[DiskWhereInput]',
        '_not': 'list[DiskWhereInput]',
        '_or': 'list[DiskWhereInput]',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'firmware': 'str',
        'firmware_contains': 'str',
        'firmware_ends_with': 'str',
        'firmware_gt': 'str',
        'firmware_gte': 'str',
        'firmware_in': 'list[str]',
        'firmware_lt': 'str',
        'firmware_lte': 'str',
        'firmware_not': 'str',
        'firmware_not_contains': 'str',
        'firmware_not_ends_with': 'str',
        'firmware_not_in': 'list[str]',
        'firmware_not_starts_with': 'str',
        'firmware_starts_with': 'str',
        'function': 'DiskFunction',
        'function_in': 'list[DiskFunction]',
        'function_not': 'DiskFunction',
        'function_not_in': 'list[DiskFunction]',
        'health_status': 'DiskHealthStatus',
        'health_status_in': 'list[DiskHealthStatus]',
        'health_status_not': 'DiskHealthStatus',
        'health_status_not_in': 'list[DiskHealthStatus]',
        'healthy': 'bool',
        'healthy_not': 'bool',
        'host': 'HostWhereInput',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'labels_every': 'LabelWhereInput',
        'labels_none': 'LabelWhereInput',
        'labels_some': 'LabelWhereInput',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'model': 'str',
        'model_contains': 'str',
        'model_ends_with': 'str',
        'model_gt': 'str',
        'model_gte': 'str',
        'model_in': 'list[str]',
        'model_lt': 'str',
        'model_lte': 'str',
        'model_not': 'str',
        'model_not_contains': 'str',
        'model_not_ends_with': 'str',
        'model_not_in': 'list[str]',
        'model_not_starts_with': 'str',
        'model_starts_with': 'str',
        'mounted': 'bool',
        'mounted_not': 'bool',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'numa_node': 'int',
        'numa_node_gt': 'int',
        'numa_node_gte': 'int',
        'numa_node_in': 'list[int]',
        'numa_node_lt': 'int',
        'numa_node_lte': 'int',
        'numa_node_not': 'int',
        'numa_node_not_in': 'list[int]',
        'offline': 'bool',
        'offline_not': 'bool',
        'path': 'str',
        'path_contains': 'str',
        'path_ends_with': 'str',
        'path_gt': 'str',
        'path_gte': 'str',
        'path_in': 'list[str]',
        'path_lt': 'str',
        'path_lte': 'str',
        'path_not': 'str',
        'path_not_contains': 'str',
        'path_not_ends_with': 'str',
        'path_not_in': 'list[str]',
        'path_not_starts_with': 'str',
        'path_starts_with': 'str',
        'persistent_memory_type': 'str',
        'persistent_memory_type_contains': 'str',
        'persistent_memory_type_ends_with': 'str',
        'persistent_memory_type_gt': 'str',
        'persistent_memory_type_gte': 'str',
        'persistent_memory_type_in': 'list[str]',
        'persistent_memory_type_lt': 'str',
        'persistent_memory_type_lte': 'str',
        'persistent_memory_type_not': 'str',
        'persistent_memory_type_not_contains': 'str',
        'persistent_memory_type_not_ends_with': 'str',
        'persistent_memory_type_not_in': 'list[str]',
        'persistent_memory_type_not_starts_with': 'str',
        'persistent_memory_type_starts_with': 'str',
        'physical_slot_on_brick': 'int',
        'physical_slot_on_brick_gt': 'int',
        'physical_slot_on_brick_gte': 'int',
        'physical_slot_on_brick_in': 'list[int]',
        'physical_slot_on_brick_lt': 'int',
        'physical_slot_on_brick_lte': 'int',
        'physical_slot_on_brick_not': 'int',
        'physical_slot_on_brick_not_in': 'list[int]',
        'pmem_dimms_every': 'PmemDimmWhereInput',
        'pmem_dimms_none': 'PmemDimmWhereInput',
        'pmem_dimms_some': 'PmemDimmWhereInput',
        'recommended_usage': 'DiskUsage',
        'recommended_usage_in': 'list[DiskUsage]',
        'recommended_usage_not': 'DiskUsage',
        'recommended_usage_not_in': 'list[DiskUsage]',
        'remaining_life_percent': 'int',
        'remaining_life_percent_gt': 'int',
        'remaining_life_percent_gte': 'int',
        'remaining_life_percent_in': 'list[int]',
        'remaining_life_percent_lt': 'int',
        'remaining_life_percent_lte': 'int',
        'remaining_life_percent_not': 'int',
        'remaining_life_percent_not_in': 'list[int]',
        'serial': 'str',
        'serial_contains': 'str',
        'serial_ends_with': 'str',
        'serial_gt': 'str',
        'serial_gte': 'str',
        'serial_in': 'list[str]',
        'serial_lt': 'str',
        'serial_lte': 'str',
        'serial_not': 'str',
        'serial_not_contains': 'str',
        'serial_not_ends_with': 'str',
        'serial_not_in': 'list[str]',
        'serial_not_starts_with': 'str',
        'serial_starts_with': 'str',
        'size': 'int',
        'size_gt': 'int',
        'size_gte': 'int',
        'size_in': 'list[int]',
        'size_lt': 'int',
        'size_lte': 'int',
        'size_not': 'int',
        'size_not_in': 'list[int]',
        'type': 'DiskType',
        'type_in': 'list[DiskType]',
        'type_not': 'DiskType',
        'type_not_in': 'list[DiskType]',
        'usage': 'DiskUsage',
        'usage_in': 'list[DiskUsage]',
        'usage_not': 'DiskUsage',
        'usage_not_in': 'list[DiskUsage]',
        'usage_status': 'DiskUsageStatus',
        'usage_status_in': 'list[DiskUsageStatus]',
        'usage_status_not': 'DiskUsageStatus',
        'usage_status_not_in': 'list[DiskUsageStatus]'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'firmware': 'firmware',
        'firmware_contains': 'firmware_contains',
        'firmware_ends_with': 'firmware_ends_with',
        'firmware_gt': 'firmware_gt',
        'firmware_gte': 'firmware_gte',
        'firmware_in': 'firmware_in',
        'firmware_lt': 'firmware_lt',
        'firmware_lte': 'firmware_lte',
        'firmware_not': 'firmware_not',
        'firmware_not_contains': 'firmware_not_contains',
        'firmware_not_ends_with': 'firmware_not_ends_with',
        'firmware_not_in': 'firmware_not_in',
        'firmware_not_starts_with': 'firmware_not_starts_with',
        'firmware_starts_with': 'firmware_starts_with',
        'function': 'function',
        'function_in': 'function_in',
        'function_not': 'function_not',
        'function_not_in': 'function_not_in',
        'health_status': 'health_status',
        'health_status_in': 'health_status_in',
        'health_status_not': 'health_status_not',
        'health_status_not_in': 'health_status_not_in',
        'healthy': 'healthy',
        'healthy_not': 'healthy_not',
        'host': 'host',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'labels_every': 'labels_every',
        'labels_none': 'labels_none',
        'labels_some': 'labels_some',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'model': 'model',
        'model_contains': 'model_contains',
        'model_ends_with': 'model_ends_with',
        'model_gt': 'model_gt',
        'model_gte': 'model_gte',
        'model_in': 'model_in',
        'model_lt': 'model_lt',
        'model_lte': 'model_lte',
        'model_not': 'model_not',
        'model_not_contains': 'model_not_contains',
        'model_not_ends_with': 'model_not_ends_with',
        'model_not_in': 'model_not_in',
        'model_not_starts_with': 'model_not_starts_with',
        'model_starts_with': 'model_starts_with',
        'mounted': 'mounted',
        'mounted_not': 'mounted_not',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'numa_node': 'numa_node',
        'numa_node_gt': 'numa_node_gt',
        'numa_node_gte': 'numa_node_gte',
        'numa_node_in': 'numa_node_in',
        'numa_node_lt': 'numa_node_lt',
        'numa_node_lte': 'numa_node_lte',
        'numa_node_not': 'numa_node_not',
        'numa_node_not_in': 'numa_node_not_in',
        'offline': 'offline',
        'offline_not': 'offline_not',
        'path': 'path',
        'path_contains': 'path_contains',
        'path_ends_with': 'path_ends_with',
        'path_gt': 'path_gt',
        'path_gte': 'path_gte',
        'path_in': 'path_in',
        'path_lt': 'path_lt',
        'path_lte': 'path_lte',
        'path_not': 'path_not',
        'path_not_contains': 'path_not_contains',
        'path_not_ends_with': 'path_not_ends_with',
        'path_not_in': 'path_not_in',
        'path_not_starts_with': 'path_not_starts_with',
        'path_starts_with': 'path_starts_with',
        'persistent_memory_type': 'persistent_memory_type',
        'persistent_memory_type_contains': 'persistent_memory_type_contains',
        'persistent_memory_type_ends_with': 'persistent_memory_type_ends_with',
        'persistent_memory_type_gt': 'persistent_memory_type_gt',
        'persistent_memory_type_gte': 'persistent_memory_type_gte',
        'persistent_memory_type_in': 'persistent_memory_type_in',
        'persistent_memory_type_lt': 'persistent_memory_type_lt',
        'persistent_memory_type_lte': 'persistent_memory_type_lte',
        'persistent_memory_type_not': 'persistent_memory_type_not',
        'persistent_memory_type_not_contains': 'persistent_memory_type_not_contains',
        'persistent_memory_type_not_ends_with': 'persistent_memory_type_not_ends_with',
        'persistent_memory_type_not_in': 'persistent_memory_type_not_in',
        'persistent_memory_type_not_starts_with': 'persistent_memory_type_not_starts_with',
        'persistent_memory_type_starts_with': 'persistent_memory_type_starts_with',
        'physical_slot_on_brick': 'physical_slot_on_brick',
        'physical_slot_on_brick_gt': 'physical_slot_on_brick_gt',
        'physical_slot_on_brick_gte': 'physical_slot_on_brick_gte',
        'physical_slot_on_brick_in': 'physical_slot_on_brick_in',
        'physical_slot_on_brick_lt': 'physical_slot_on_brick_lt',
        'physical_slot_on_brick_lte': 'physical_slot_on_brick_lte',
        'physical_slot_on_brick_not': 'physical_slot_on_brick_not',
        'physical_slot_on_brick_not_in': 'physical_slot_on_brick_not_in',
        'pmem_dimms_every': 'pmem_dimms_every',
        'pmem_dimms_none': 'pmem_dimms_none',
        'pmem_dimms_some': 'pmem_dimms_some',
        'recommended_usage': 'recommended_usage',
        'recommended_usage_in': 'recommended_usage_in',
        'recommended_usage_not': 'recommended_usage_not',
        'recommended_usage_not_in': 'recommended_usage_not_in',
        'remaining_life_percent': 'remaining_life_percent',
        'remaining_life_percent_gt': 'remaining_life_percent_gt',
        'remaining_life_percent_gte': 'remaining_life_percent_gte',
        'remaining_life_percent_in': 'remaining_life_percent_in',
        'remaining_life_percent_lt': 'remaining_life_percent_lt',
        'remaining_life_percent_lte': 'remaining_life_percent_lte',
        'remaining_life_percent_not': 'remaining_life_percent_not',
        'remaining_life_percent_not_in': 'remaining_life_percent_not_in',
        'serial': 'serial',
        'serial_contains': 'serial_contains',
        'serial_ends_with': 'serial_ends_with',
        'serial_gt': 'serial_gt',
        'serial_gte': 'serial_gte',
        'serial_in': 'serial_in',
        'serial_lt': 'serial_lt',
        'serial_lte': 'serial_lte',
        'serial_not': 'serial_not',
        'serial_not_contains': 'serial_not_contains',
        'serial_not_ends_with': 'serial_not_ends_with',
        'serial_not_in': 'serial_not_in',
        'serial_not_starts_with': 'serial_not_starts_with',
        'serial_starts_with': 'serial_starts_with',
        'size': 'size',
        'size_gt': 'size_gt',
        'size_gte': 'size_gte',
        'size_in': 'size_in',
        'size_lt': 'size_lt',
        'size_lte': 'size_lte',
        'size_not': 'size_not',
        'size_not_in': 'size_not_in',
        'type': 'type',
        'type_in': 'type_in',
        'type_not': 'type_not',
        'type_not_in': 'type_not_in',
        'usage': 'usage',
        'usage_in': 'usage_in',
        'usage_not': 'usage_not',
        'usage_not_in': 'usage_not_in',
        'usage_status': 'usage_status',
        'usage_status_in': 'usage_status_in',
        'usage_status_not': 'usage_status_not',
        'usage_status_not_in': 'usage_status_not_in'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """DiskWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._firmware = None
        self._firmware_contains = None
        self._firmware_ends_with = None
        self._firmware_gt = None
        self._firmware_gte = None
        self._firmware_in = None
        self._firmware_lt = None
        self._firmware_lte = None
        self._firmware_not = None
        self._firmware_not_contains = None
        self._firmware_not_ends_with = None
        self._firmware_not_in = None
        self._firmware_not_starts_with = None
        self._firmware_starts_with = None
        self._function = None
        self._function_in = None
        self._function_not = None
        self._function_not_in = None
        self._health_status = None
        self._health_status_in = None
        self._health_status_not = None
        self._health_status_not_in = None
        self._healthy = None
        self._healthy_not = None
        self._host = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._labels_every = None
        self._labels_none = None
        self._labels_some = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._model = None
        self._model_contains = None
        self._model_ends_with = None
        self._model_gt = None
        self._model_gte = None
        self._model_in = None
        self._model_lt = None
        self._model_lte = None
        self._model_not = None
        self._model_not_contains = None
        self._model_not_ends_with = None
        self._model_not_in = None
        self._model_not_starts_with = None
        self._model_starts_with = None
        self._mounted = None
        self._mounted_not = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._numa_node = None
        self._numa_node_gt = None
        self._numa_node_gte = None
        self._numa_node_in = None
        self._numa_node_lt = None
        self._numa_node_lte = None
        self._numa_node_not = None
        self._numa_node_not_in = None
        self._offline = None
        self._offline_not = None
        self._path = None
        self._path_contains = None
        self._path_ends_with = None
        self._path_gt = None
        self._path_gte = None
        self._path_in = None
        self._path_lt = None
        self._path_lte = None
        self._path_not = None
        self._path_not_contains = None
        self._path_not_ends_with = None
        self._path_not_in = None
        self._path_not_starts_with = None
        self._path_starts_with = None
        self._persistent_memory_type = None
        self._persistent_memory_type_contains = None
        self._persistent_memory_type_ends_with = None
        self._persistent_memory_type_gt = None
        self._persistent_memory_type_gte = None
        self._persistent_memory_type_in = None
        self._persistent_memory_type_lt = None
        self._persistent_memory_type_lte = None
        self._persistent_memory_type_not = None
        self._persistent_memory_type_not_contains = None
        self._persistent_memory_type_not_ends_with = None
        self._persistent_memory_type_not_in = None
        self._persistent_memory_type_not_starts_with = None
        self._persistent_memory_type_starts_with = None
        self._physical_slot_on_brick = None
        self._physical_slot_on_brick_gt = None
        self._physical_slot_on_brick_gte = None
        self._physical_slot_on_brick_in = None
        self._physical_slot_on_brick_lt = None
        self._physical_slot_on_brick_lte = None
        self._physical_slot_on_brick_not = None
        self._physical_slot_on_brick_not_in = None
        self._pmem_dimms_every = None
        self._pmem_dimms_none = None
        self._pmem_dimms_some = None
        self._recommended_usage = None
        self._recommended_usage_in = None
        self._recommended_usage_not = None
        self._recommended_usage_not_in = None
        self._remaining_life_percent = None
        self._remaining_life_percent_gt = None
        self._remaining_life_percent_gte = None
        self._remaining_life_percent_in = None
        self._remaining_life_percent_lt = None
        self._remaining_life_percent_lte = None
        self._remaining_life_percent_not = None
        self._remaining_life_percent_not_in = None
        self._serial = None
        self._serial_contains = None
        self._serial_ends_with = None
        self._serial_gt = None
        self._serial_gte = None
        self._serial_in = None
        self._serial_lt = None
        self._serial_lte = None
        self._serial_not = None
        self._serial_not_contains = None
        self._serial_not_ends_with = None
        self._serial_not_in = None
        self._serial_not_starts_with = None
        self._serial_starts_with = None
        self._size = None
        self._size_gt = None
        self._size_gte = None
        self._size_in = None
        self._size_lt = None
        self._size_lte = None
        self._size_not = None
        self._size_not_in = None
        self._type = None
        self._type_in = None
        self._type_not = None
        self._type_not_in = None
        self._usage = None
        self._usage_in = None
        self._usage_not = None
        self._usage_not_in = None
        self._usage_status = None
        self._usage_status_in = None
        self._usage_status_not = None
        self._usage_status_not_in = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.firmware = kwargs.get("firmware", None)
        self.firmware_contains = kwargs.get("firmware_contains", None)
        self.firmware_ends_with = kwargs.get("firmware_ends_with", None)
        self.firmware_gt = kwargs.get("firmware_gt", None)
        self.firmware_gte = kwargs.get("firmware_gte", None)
        self.firmware_in = kwargs.get("firmware_in", None)
        self.firmware_lt = kwargs.get("firmware_lt", None)
        self.firmware_lte = kwargs.get("firmware_lte", None)
        self.firmware_not = kwargs.get("firmware_not", None)
        self.firmware_not_contains = kwargs.get("firmware_not_contains", None)
        self.firmware_not_ends_with = kwargs.get("firmware_not_ends_with", None)
        self.firmware_not_in = kwargs.get("firmware_not_in", None)
        self.firmware_not_starts_with = kwargs.get("firmware_not_starts_with", None)
        self.firmware_starts_with = kwargs.get("firmware_starts_with", None)
        self.function = kwargs.get("function", None)
        self.function_in = kwargs.get("function_in", None)
        self.function_not = kwargs.get("function_not", None)
        self.function_not_in = kwargs.get("function_not_in", None)
        self.health_status = kwargs.get("health_status", None)
        self.health_status_in = kwargs.get("health_status_in", None)
        self.health_status_not = kwargs.get("health_status_not", None)
        self.health_status_not_in = kwargs.get("health_status_not_in", None)
        self.healthy = kwargs.get("healthy", None)
        self.healthy_not = kwargs.get("healthy_not", None)
        self.host = kwargs.get("host", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.labels_every = kwargs.get("labels_every", None)
        self.labels_none = kwargs.get("labels_none", None)
        self.labels_some = kwargs.get("labels_some", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.model = kwargs.get("model", None)
        self.model_contains = kwargs.get("model_contains", None)
        self.model_ends_with = kwargs.get("model_ends_with", None)
        self.model_gt = kwargs.get("model_gt", None)
        self.model_gte = kwargs.get("model_gte", None)
        self.model_in = kwargs.get("model_in", None)
        self.model_lt = kwargs.get("model_lt", None)
        self.model_lte = kwargs.get("model_lte", None)
        self.model_not = kwargs.get("model_not", None)
        self.model_not_contains = kwargs.get("model_not_contains", None)
        self.model_not_ends_with = kwargs.get("model_not_ends_with", None)
        self.model_not_in = kwargs.get("model_not_in", None)
        self.model_not_starts_with = kwargs.get("model_not_starts_with", None)
        self.model_starts_with = kwargs.get("model_starts_with", None)
        self.mounted = kwargs.get("mounted", None)
        self.mounted_not = kwargs.get("mounted_not", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.numa_node = kwargs.get("numa_node", None)
        self.numa_node_gt = kwargs.get("numa_node_gt", None)
        self.numa_node_gte = kwargs.get("numa_node_gte", None)
        self.numa_node_in = kwargs.get("numa_node_in", None)
        self.numa_node_lt = kwargs.get("numa_node_lt", None)
        self.numa_node_lte = kwargs.get("numa_node_lte", None)
        self.numa_node_not = kwargs.get("numa_node_not", None)
        self.numa_node_not_in = kwargs.get("numa_node_not_in", None)
        self.offline = kwargs.get("offline", None)
        self.offline_not = kwargs.get("offline_not", None)
        self.path = kwargs.get("path", None)
        self.path_contains = kwargs.get("path_contains", None)
        self.path_ends_with = kwargs.get("path_ends_with", None)
        self.path_gt = kwargs.get("path_gt", None)
        self.path_gte = kwargs.get("path_gte", None)
        self.path_in = kwargs.get("path_in", None)
        self.path_lt = kwargs.get("path_lt", None)
        self.path_lte = kwargs.get("path_lte", None)
        self.path_not = kwargs.get("path_not", None)
        self.path_not_contains = kwargs.get("path_not_contains", None)
        self.path_not_ends_with = kwargs.get("path_not_ends_with", None)
        self.path_not_in = kwargs.get("path_not_in", None)
        self.path_not_starts_with = kwargs.get("path_not_starts_with", None)
        self.path_starts_with = kwargs.get("path_starts_with", None)
        self.persistent_memory_type = kwargs.get("persistent_memory_type", None)
        self.persistent_memory_type_contains = kwargs.get("persistent_memory_type_contains", None)
        self.persistent_memory_type_ends_with = kwargs.get("persistent_memory_type_ends_with", None)
        self.persistent_memory_type_gt = kwargs.get("persistent_memory_type_gt", None)
        self.persistent_memory_type_gte = kwargs.get("persistent_memory_type_gte", None)
        self.persistent_memory_type_in = kwargs.get("persistent_memory_type_in", None)
        self.persistent_memory_type_lt = kwargs.get("persistent_memory_type_lt", None)
        self.persistent_memory_type_lte = kwargs.get("persistent_memory_type_lte", None)
        self.persistent_memory_type_not = kwargs.get("persistent_memory_type_not", None)
        self.persistent_memory_type_not_contains = kwargs.get("persistent_memory_type_not_contains", None)
        self.persistent_memory_type_not_ends_with = kwargs.get("persistent_memory_type_not_ends_with", None)
        self.persistent_memory_type_not_in = kwargs.get("persistent_memory_type_not_in", None)
        self.persistent_memory_type_not_starts_with = kwargs.get("persistent_memory_type_not_starts_with", None)
        self.persistent_memory_type_starts_with = kwargs.get("persistent_memory_type_starts_with", None)
        self.physical_slot_on_brick = kwargs.get("physical_slot_on_brick", None)
        self.physical_slot_on_brick_gt = kwargs.get("physical_slot_on_brick_gt", None)
        self.physical_slot_on_brick_gte = kwargs.get("physical_slot_on_brick_gte", None)
        self.physical_slot_on_brick_in = kwargs.get("physical_slot_on_brick_in", None)
        self.physical_slot_on_brick_lt = kwargs.get("physical_slot_on_brick_lt", None)
        self.physical_slot_on_brick_lte = kwargs.get("physical_slot_on_brick_lte", None)
        self.physical_slot_on_brick_not = kwargs.get("physical_slot_on_brick_not", None)
        self.physical_slot_on_brick_not_in = kwargs.get("physical_slot_on_brick_not_in", None)
        self.pmem_dimms_every = kwargs.get("pmem_dimms_every", None)
        self.pmem_dimms_none = kwargs.get("pmem_dimms_none", None)
        self.pmem_dimms_some = kwargs.get("pmem_dimms_some", None)
        self.recommended_usage = kwargs.get("recommended_usage", None)
        self.recommended_usage_in = kwargs.get("recommended_usage_in", None)
        self.recommended_usage_not = kwargs.get("recommended_usage_not", None)
        self.recommended_usage_not_in = kwargs.get("recommended_usage_not_in", None)
        self.remaining_life_percent = kwargs.get("remaining_life_percent", None)
        self.remaining_life_percent_gt = kwargs.get("remaining_life_percent_gt", None)
        self.remaining_life_percent_gte = kwargs.get("remaining_life_percent_gte", None)
        self.remaining_life_percent_in = kwargs.get("remaining_life_percent_in", None)
        self.remaining_life_percent_lt = kwargs.get("remaining_life_percent_lt", None)
        self.remaining_life_percent_lte = kwargs.get("remaining_life_percent_lte", None)
        self.remaining_life_percent_not = kwargs.get("remaining_life_percent_not", None)
        self.remaining_life_percent_not_in = kwargs.get("remaining_life_percent_not_in", None)
        self.serial = kwargs.get("serial", None)
        self.serial_contains = kwargs.get("serial_contains", None)
        self.serial_ends_with = kwargs.get("serial_ends_with", None)
        self.serial_gt = kwargs.get("serial_gt", None)
        self.serial_gte = kwargs.get("serial_gte", None)
        self.serial_in = kwargs.get("serial_in", None)
        self.serial_lt = kwargs.get("serial_lt", None)
        self.serial_lte = kwargs.get("serial_lte", None)
        self.serial_not = kwargs.get("serial_not", None)
        self.serial_not_contains = kwargs.get("serial_not_contains", None)
        self.serial_not_ends_with = kwargs.get("serial_not_ends_with", None)
        self.serial_not_in = kwargs.get("serial_not_in", None)
        self.serial_not_starts_with = kwargs.get("serial_not_starts_with", None)
        self.serial_starts_with = kwargs.get("serial_starts_with", None)
        self.size = kwargs.get("size", None)
        self.size_gt = kwargs.get("size_gt", None)
        self.size_gte = kwargs.get("size_gte", None)
        self.size_in = kwargs.get("size_in", None)
        self.size_lt = kwargs.get("size_lt", None)
        self.size_lte = kwargs.get("size_lte", None)
        self.size_not = kwargs.get("size_not", None)
        self.size_not_in = kwargs.get("size_not_in", None)
        self.type = kwargs.get("type", None)
        self.type_in = kwargs.get("type_in", None)
        self.type_not = kwargs.get("type_not", None)
        self.type_not_in = kwargs.get("type_not_in", None)
        self.usage = kwargs.get("usage", None)
        self.usage_in = kwargs.get("usage_in", None)
        self.usage_not = kwargs.get("usage_not", None)
        self.usage_not_in = kwargs.get("usage_not_in", None)
        self.usage_status = kwargs.get("usage_status", None)
        self.usage_status_in = kwargs.get("usage_status_in", None)
        self.usage_status_not = kwargs.get("usage_status_not", None)
        self.usage_status_not_in = kwargs.get("usage_status_not_in", None)

    @property
    def _and(self):
        """Gets the _and of this DiskWhereInput.  # noqa: E501


        :return: The _and of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this DiskWhereInput.


        :param _and: The _and of this DiskWhereInput.  # noqa: E501
        :type _and: list[DiskWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this DiskWhereInput.  # noqa: E501


        :return: The _not of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this DiskWhereInput.


        :param _not: The _not of this DiskWhereInput.  # noqa: E501
        :type _not: list[DiskWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this DiskWhereInput.  # noqa: E501


        :return: The _or of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this DiskWhereInput.


        :param _or: The _or of this DiskWhereInput.  # noqa: E501
        :type _or: list[DiskWhereInput]
        """

        self.__or = _or

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this DiskWhereInput.  # noqa: E501


        :return: The entity_async_status of this DiskWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this DiskWhereInput.


        :param entity_async_status: The entity_async_status of this DiskWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this DiskWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this DiskWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this DiskWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this DiskWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this DiskWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this DiskWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this DiskWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this DiskWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this DiskWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this DiskWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def firmware(self):
        """Gets the firmware of this DiskWhereInput.  # noqa: E501


        :return: The firmware of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware

    @firmware.setter
    def firmware(self, firmware):
        """Sets the firmware of this DiskWhereInput.


        :param firmware: The firmware of this DiskWhereInput.  # noqa: E501
        :type firmware: str
        """

        self._firmware = firmware

    @property
    def firmware_contains(self):
        """Gets the firmware_contains of this DiskWhereInput.  # noqa: E501


        :return: The firmware_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_contains

    @firmware_contains.setter
    def firmware_contains(self, firmware_contains):
        """Sets the firmware_contains of this DiskWhereInput.


        :param firmware_contains: The firmware_contains of this DiskWhereInput.  # noqa: E501
        :type firmware_contains: str
        """

        self._firmware_contains = firmware_contains

    @property
    def firmware_ends_with(self):
        """Gets the firmware_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The firmware_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_ends_with

    @firmware_ends_with.setter
    def firmware_ends_with(self, firmware_ends_with):
        """Sets the firmware_ends_with of this DiskWhereInput.


        :param firmware_ends_with: The firmware_ends_with of this DiskWhereInput.  # noqa: E501
        :type firmware_ends_with: str
        """

        self._firmware_ends_with = firmware_ends_with

    @property
    def firmware_gt(self):
        """Gets the firmware_gt of this DiskWhereInput.  # noqa: E501


        :return: The firmware_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_gt

    @firmware_gt.setter
    def firmware_gt(self, firmware_gt):
        """Sets the firmware_gt of this DiskWhereInput.


        :param firmware_gt: The firmware_gt of this DiskWhereInput.  # noqa: E501
        :type firmware_gt: str
        """

        self._firmware_gt = firmware_gt

    @property
    def firmware_gte(self):
        """Gets the firmware_gte of this DiskWhereInput.  # noqa: E501


        :return: The firmware_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_gte

    @firmware_gte.setter
    def firmware_gte(self, firmware_gte):
        """Sets the firmware_gte of this DiskWhereInput.


        :param firmware_gte: The firmware_gte of this DiskWhereInput.  # noqa: E501
        :type firmware_gte: str
        """

        self._firmware_gte = firmware_gte

    @property
    def firmware_in(self):
        """Gets the firmware_in of this DiskWhereInput.  # noqa: E501


        :return: The firmware_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._firmware_in

    @firmware_in.setter
    def firmware_in(self, firmware_in):
        """Sets the firmware_in of this DiskWhereInput.


        :param firmware_in: The firmware_in of this DiskWhereInput.  # noqa: E501
        :type firmware_in: list[str]
        """

        self._firmware_in = firmware_in

    @property
    def firmware_lt(self):
        """Gets the firmware_lt of this DiskWhereInput.  # noqa: E501


        :return: The firmware_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_lt

    @firmware_lt.setter
    def firmware_lt(self, firmware_lt):
        """Sets the firmware_lt of this DiskWhereInput.


        :param firmware_lt: The firmware_lt of this DiskWhereInput.  # noqa: E501
        :type firmware_lt: str
        """

        self._firmware_lt = firmware_lt

    @property
    def firmware_lte(self):
        """Gets the firmware_lte of this DiskWhereInput.  # noqa: E501


        :return: The firmware_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_lte

    @firmware_lte.setter
    def firmware_lte(self, firmware_lte):
        """Sets the firmware_lte of this DiskWhereInput.


        :param firmware_lte: The firmware_lte of this DiskWhereInput.  # noqa: E501
        :type firmware_lte: str
        """

        self._firmware_lte = firmware_lte

    @property
    def firmware_not(self):
        """Gets the firmware_not of this DiskWhereInput.  # noqa: E501


        :return: The firmware_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_not

    @firmware_not.setter
    def firmware_not(self, firmware_not):
        """Sets the firmware_not of this DiskWhereInput.


        :param firmware_not: The firmware_not of this DiskWhereInput.  # noqa: E501
        :type firmware_not: str
        """

        self._firmware_not = firmware_not

    @property
    def firmware_not_contains(self):
        """Gets the firmware_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The firmware_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_not_contains

    @firmware_not_contains.setter
    def firmware_not_contains(self, firmware_not_contains):
        """Sets the firmware_not_contains of this DiskWhereInput.


        :param firmware_not_contains: The firmware_not_contains of this DiskWhereInput.  # noqa: E501
        :type firmware_not_contains: str
        """

        self._firmware_not_contains = firmware_not_contains

    @property
    def firmware_not_ends_with(self):
        """Gets the firmware_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The firmware_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_not_ends_with

    @firmware_not_ends_with.setter
    def firmware_not_ends_with(self, firmware_not_ends_with):
        """Sets the firmware_not_ends_with of this DiskWhereInput.


        :param firmware_not_ends_with: The firmware_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type firmware_not_ends_with: str
        """

        self._firmware_not_ends_with = firmware_not_ends_with

    @property
    def firmware_not_in(self):
        """Gets the firmware_not_in of this DiskWhereInput.  # noqa: E501


        :return: The firmware_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._firmware_not_in

    @firmware_not_in.setter
    def firmware_not_in(self, firmware_not_in):
        """Sets the firmware_not_in of this DiskWhereInput.


        :param firmware_not_in: The firmware_not_in of this DiskWhereInput.  # noqa: E501
        :type firmware_not_in: list[str]
        """

        self._firmware_not_in = firmware_not_in

    @property
    def firmware_not_starts_with(self):
        """Gets the firmware_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The firmware_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_not_starts_with

    @firmware_not_starts_with.setter
    def firmware_not_starts_with(self, firmware_not_starts_with):
        """Sets the firmware_not_starts_with of this DiskWhereInput.


        :param firmware_not_starts_with: The firmware_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type firmware_not_starts_with: str
        """

        self._firmware_not_starts_with = firmware_not_starts_with

    @property
    def firmware_starts_with(self):
        """Gets the firmware_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The firmware_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._firmware_starts_with

    @firmware_starts_with.setter
    def firmware_starts_with(self, firmware_starts_with):
        """Sets the firmware_starts_with of this DiskWhereInput.


        :param firmware_starts_with: The firmware_starts_with of this DiskWhereInput.  # noqa: E501
        :type firmware_starts_with: str
        """

        self._firmware_starts_with = firmware_starts_with

    @property
    def function(self):
        """Gets the function of this DiskWhereInput.  # noqa: E501


        :return: The function of this DiskWhereInput.  # noqa: E501
        :rtype: DiskFunction
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this DiskWhereInput.


        :param function: The function of this DiskWhereInput.  # noqa: E501
        :type function: DiskFunction
        """

        self._function = function

    @property
    def function_in(self):
        """Gets the function_in of this DiskWhereInput.  # noqa: E501


        :return: The function_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskFunction]
        """
        return self._function_in

    @function_in.setter
    def function_in(self, function_in):
        """Sets the function_in of this DiskWhereInput.


        :param function_in: The function_in of this DiskWhereInput.  # noqa: E501
        :type function_in: list[DiskFunction]
        """

        self._function_in = function_in

    @property
    def function_not(self):
        """Gets the function_not of this DiskWhereInput.  # noqa: E501


        :return: The function_not of this DiskWhereInput.  # noqa: E501
        :rtype: DiskFunction
        """
        return self._function_not

    @function_not.setter
    def function_not(self, function_not):
        """Sets the function_not of this DiskWhereInput.


        :param function_not: The function_not of this DiskWhereInput.  # noqa: E501
        :type function_not: DiskFunction
        """

        self._function_not = function_not

    @property
    def function_not_in(self):
        """Gets the function_not_in of this DiskWhereInput.  # noqa: E501


        :return: The function_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskFunction]
        """
        return self._function_not_in

    @function_not_in.setter
    def function_not_in(self, function_not_in):
        """Sets the function_not_in of this DiskWhereInput.


        :param function_not_in: The function_not_in of this DiskWhereInput.  # noqa: E501
        :type function_not_in: list[DiskFunction]
        """

        self._function_not_in = function_not_in

    @property
    def health_status(self):
        """Gets the health_status of this DiskWhereInput.  # noqa: E501


        :return: The health_status of this DiskWhereInput.  # noqa: E501
        :rtype: DiskHealthStatus
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this DiskWhereInput.


        :param health_status: The health_status of this DiskWhereInput.  # noqa: E501
        :type health_status: DiskHealthStatus
        """

        self._health_status = health_status

    @property
    def health_status_in(self):
        """Gets the health_status_in of this DiskWhereInput.  # noqa: E501


        :return: The health_status_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskHealthStatus]
        """
        return self._health_status_in

    @health_status_in.setter
    def health_status_in(self, health_status_in):
        """Sets the health_status_in of this DiskWhereInput.


        :param health_status_in: The health_status_in of this DiskWhereInput.  # noqa: E501
        :type health_status_in: list[DiskHealthStatus]
        """

        self._health_status_in = health_status_in

    @property
    def health_status_not(self):
        """Gets the health_status_not of this DiskWhereInput.  # noqa: E501


        :return: The health_status_not of this DiskWhereInput.  # noqa: E501
        :rtype: DiskHealthStatus
        """
        return self._health_status_not

    @health_status_not.setter
    def health_status_not(self, health_status_not):
        """Sets the health_status_not of this DiskWhereInput.


        :param health_status_not: The health_status_not of this DiskWhereInput.  # noqa: E501
        :type health_status_not: DiskHealthStatus
        """

        self._health_status_not = health_status_not

    @property
    def health_status_not_in(self):
        """Gets the health_status_not_in of this DiskWhereInput.  # noqa: E501


        :return: The health_status_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskHealthStatus]
        """
        return self._health_status_not_in

    @health_status_not_in.setter
    def health_status_not_in(self, health_status_not_in):
        """Sets the health_status_not_in of this DiskWhereInput.


        :param health_status_not_in: The health_status_not_in of this DiskWhereInput.  # noqa: E501
        :type health_status_not_in: list[DiskHealthStatus]
        """

        self._health_status_not_in = health_status_not_in

    @property
    def healthy(self):
        """Gets the healthy of this DiskWhereInput.  # noqa: E501


        :return: The healthy of this DiskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._healthy

    @healthy.setter
    def healthy(self, healthy):
        """Sets the healthy of this DiskWhereInput.


        :param healthy: The healthy of this DiskWhereInput.  # noqa: E501
        :type healthy: bool
        """

        self._healthy = healthy

    @property
    def healthy_not(self):
        """Gets the healthy_not of this DiskWhereInput.  # noqa: E501


        :return: The healthy_not of this DiskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._healthy_not

    @healthy_not.setter
    def healthy_not(self, healthy_not):
        """Sets the healthy_not of this DiskWhereInput.


        :param healthy_not: The healthy_not of this DiskWhereInput.  # noqa: E501
        :type healthy_not: bool
        """

        self._healthy_not = healthy_not

    @property
    def host(self):
        """Gets the host of this DiskWhereInput.  # noqa: E501


        :return: The host of this DiskWhereInput.  # noqa: E501
        :rtype: HostWhereInput
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this DiskWhereInput.


        :param host: The host of this DiskWhereInput.  # noqa: E501
        :type host: HostWhereInput
        """

        self._host = host

    @property
    def id(self):
        """Gets the id of this DiskWhereInput.  # noqa: E501


        :return: The id of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DiskWhereInput.


        :param id: The id of this DiskWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this DiskWhereInput.  # noqa: E501


        :return: The id_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this DiskWhereInput.


        :param id_contains: The id_contains of this DiskWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The id_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this DiskWhereInput.


        :param id_ends_with: The id_ends_with of this DiskWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this DiskWhereInput.  # noqa: E501


        :return: The id_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this DiskWhereInput.


        :param id_gt: The id_gt of this DiskWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this DiskWhereInput.  # noqa: E501


        :return: The id_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this DiskWhereInput.


        :param id_gte: The id_gte of this DiskWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this DiskWhereInput.  # noqa: E501


        :return: The id_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this DiskWhereInput.


        :param id_in: The id_in of this DiskWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this DiskWhereInput.  # noqa: E501


        :return: The id_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this DiskWhereInput.


        :param id_lt: The id_lt of this DiskWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this DiskWhereInput.  # noqa: E501


        :return: The id_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this DiskWhereInput.


        :param id_lte: The id_lte of this DiskWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this DiskWhereInput.  # noqa: E501


        :return: The id_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this DiskWhereInput.


        :param id_not: The id_not of this DiskWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The id_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this DiskWhereInput.


        :param id_not_contains: The id_not_contains of this DiskWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this DiskWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this DiskWhereInput.  # noqa: E501


        :return: The id_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this DiskWhereInput.


        :param id_not_in: The id_not_in of this DiskWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this DiskWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The id_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this DiskWhereInput.


        :param id_starts_with: The id_starts_with of this DiskWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def labels_every(self):
        """Gets the labels_every of this DiskWhereInput.  # noqa: E501


        :return: The labels_every of this DiskWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_every

    @labels_every.setter
    def labels_every(self, labels_every):
        """Sets the labels_every of this DiskWhereInput.


        :param labels_every: The labels_every of this DiskWhereInput.  # noqa: E501
        :type labels_every: LabelWhereInput
        """

        self._labels_every = labels_every

    @property
    def labels_none(self):
        """Gets the labels_none of this DiskWhereInput.  # noqa: E501


        :return: The labels_none of this DiskWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_none

    @labels_none.setter
    def labels_none(self, labels_none):
        """Sets the labels_none of this DiskWhereInput.


        :param labels_none: The labels_none of this DiskWhereInput.  # noqa: E501
        :type labels_none: LabelWhereInput
        """

        self._labels_none = labels_none

    @property
    def labels_some(self):
        """Gets the labels_some of this DiskWhereInput.  # noqa: E501


        :return: The labels_some of this DiskWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_some

    @labels_some.setter
    def labels_some(self, labels_some):
        """Sets the labels_some of this DiskWhereInput.


        :param labels_some: The labels_some of this DiskWhereInput.  # noqa: E501
        :type labels_some: LabelWhereInput
        """

        self._labels_some = labels_some

    @property
    def local_id(self):
        """Gets the local_id of this DiskWhereInput.  # noqa: E501


        :return: The local_id of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this DiskWhereInput.


        :param local_id: The local_id of this DiskWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this DiskWhereInput.  # noqa: E501


        :return: The local_id_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this DiskWhereInput.


        :param local_id_contains: The local_id_contains of this DiskWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this DiskWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this DiskWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this DiskWhereInput.  # noqa: E501


        :return: The local_id_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this DiskWhereInput.


        :param local_id_gt: The local_id_gt of this DiskWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this DiskWhereInput.  # noqa: E501


        :return: The local_id_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this DiskWhereInput.


        :param local_id_gte: The local_id_gte of this DiskWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this DiskWhereInput.  # noqa: E501


        :return: The local_id_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this DiskWhereInput.


        :param local_id_in: The local_id_in of this DiskWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this DiskWhereInput.  # noqa: E501


        :return: The local_id_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this DiskWhereInput.


        :param local_id_lt: The local_id_lt of this DiskWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this DiskWhereInput.  # noqa: E501


        :return: The local_id_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this DiskWhereInput.


        :param local_id_lte: The local_id_lte of this DiskWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this DiskWhereInput.  # noqa: E501


        :return: The local_id_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this DiskWhereInput.


        :param local_id_not: The local_id_not of this DiskWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this DiskWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this DiskWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this DiskWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this DiskWhereInput.  # noqa: E501


        :return: The local_id_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this DiskWhereInput.


        :param local_id_not_in: The local_id_not_in of this DiskWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this DiskWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this DiskWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this DiskWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def model(self):
        """Gets the model of this DiskWhereInput.  # noqa: E501


        :return: The model of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this DiskWhereInput.


        :param model: The model of this DiskWhereInput.  # noqa: E501
        :type model: str
        """

        self._model = model

    @property
    def model_contains(self):
        """Gets the model_contains of this DiskWhereInput.  # noqa: E501


        :return: The model_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_contains

    @model_contains.setter
    def model_contains(self, model_contains):
        """Sets the model_contains of this DiskWhereInput.


        :param model_contains: The model_contains of this DiskWhereInput.  # noqa: E501
        :type model_contains: str
        """

        self._model_contains = model_contains

    @property
    def model_ends_with(self):
        """Gets the model_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The model_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_ends_with

    @model_ends_with.setter
    def model_ends_with(self, model_ends_with):
        """Sets the model_ends_with of this DiskWhereInput.


        :param model_ends_with: The model_ends_with of this DiskWhereInput.  # noqa: E501
        :type model_ends_with: str
        """

        self._model_ends_with = model_ends_with

    @property
    def model_gt(self):
        """Gets the model_gt of this DiskWhereInput.  # noqa: E501


        :return: The model_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_gt

    @model_gt.setter
    def model_gt(self, model_gt):
        """Sets the model_gt of this DiskWhereInput.


        :param model_gt: The model_gt of this DiskWhereInput.  # noqa: E501
        :type model_gt: str
        """

        self._model_gt = model_gt

    @property
    def model_gte(self):
        """Gets the model_gte of this DiskWhereInput.  # noqa: E501


        :return: The model_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_gte

    @model_gte.setter
    def model_gte(self, model_gte):
        """Sets the model_gte of this DiskWhereInput.


        :param model_gte: The model_gte of this DiskWhereInput.  # noqa: E501
        :type model_gte: str
        """

        self._model_gte = model_gte

    @property
    def model_in(self):
        """Gets the model_in of this DiskWhereInput.  # noqa: E501


        :return: The model_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._model_in

    @model_in.setter
    def model_in(self, model_in):
        """Sets the model_in of this DiskWhereInput.


        :param model_in: The model_in of this DiskWhereInput.  # noqa: E501
        :type model_in: list[str]
        """

        self._model_in = model_in

    @property
    def model_lt(self):
        """Gets the model_lt of this DiskWhereInput.  # noqa: E501


        :return: The model_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_lt

    @model_lt.setter
    def model_lt(self, model_lt):
        """Sets the model_lt of this DiskWhereInput.


        :param model_lt: The model_lt of this DiskWhereInput.  # noqa: E501
        :type model_lt: str
        """

        self._model_lt = model_lt

    @property
    def model_lte(self):
        """Gets the model_lte of this DiskWhereInput.  # noqa: E501


        :return: The model_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_lte

    @model_lte.setter
    def model_lte(self, model_lte):
        """Sets the model_lte of this DiskWhereInput.


        :param model_lte: The model_lte of this DiskWhereInput.  # noqa: E501
        :type model_lte: str
        """

        self._model_lte = model_lte

    @property
    def model_not(self):
        """Gets the model_not of this DiskWhereInput.  # noqa: E501


        :return: The model_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not

    @model_not.setter
    def model_not(self, model_not):
        """Sets the model_not of this DiskWhereInput.


        :param model_not: The model_not of this DiskWhereInput.  # noqa: E501
        :type model_not: str
        """

        self._model_not = model_not

    @property
    def model_not_contains(self):
        """Gets the model_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The model_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not_contains

    @model_not_contains.setter
    def model_not_contains(self, model_not_contains):
        """Sets the model_not_contains of this DiskWhereInput.


        :param model_not_contains: The model_not_contains of this DiskWhereInput.  # noqa: E501
        :type model_not_contains: str
        """

        self._model_not_contains = model_not_contains

    @property
    def model_not_ends_with(self):
        """Gets the model_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The model_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not_ends_with

    @model_not_ends_with.setter
    def model_not_ends_with(self, model_not_ends_with):
        """Sets the model_not_ends_with of this DiskWhereInput.


        :param model_not_ends_with: The model_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type model_not_ends_with: str
        """

        self._model_not_ends_with = model_not_ends_with

    @property
    def model_not_in(self):
        """Gets the model_not_in of this DiskWhereInput.  # noqa: E501


        :return: The model_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._model_not_in

    @model_not_in.setter
    def model_not_in(self, model_not_in):
        """Sets the model_not_in of this DiskWhereInput.


        :param model_not_in: The model_not_in of this DiskWhereInput.  # noqa: E501
        :type model_not_in: list[str]
        """

        self._model_not_in = model_not_in

    @property
    def model_not_starts_with(self):
        """Gets the model_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The model_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_not_starts_with

    @model_not_starts_with.setter
    def model_not_starts_with(self, model_not_starts_with):
        """Sets the model_not_starts_with of this DiskWhereInput.


        :param model_not_starts_with: The model_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type model_not_starts_with: str
        """

        self._model_not_starts_with = model_not_starts_with

    @property
    def model_starts_with(self):
        """Gets the model_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The model_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._model_starts_with

    @model_starts_with.setter
    def model_starts_with(self, model_starts_with):
        """Sets the model_starts_with of this DiskWhereInput.


        :param model_starts_with: The model_starts_with of this DiskWhereInput.  # noqa: E501
        :type model_starts_with: str
        """

        self._model_starts_with = model_starts_with

    @property
    def mounted(self):
        """Gets the mounted of this DiskWhereInput.  # noqa: E501


        :return: The mounted of this DiskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._mounted

    @mounted.setter
    def mounted(self, mounted):
        """Sets the mounted of this DiskWhereInput.


        :param mounted: The mounted of this DiskWhereInput.  # noqa: E501
        :type mounted: bool
        """

        self._mounted = mounted

    @property
    def mounted_not(self):
        """Gets the mounted_not of this DiskWhereInput.  # noqa: E501


        :return: The mounted_not of this DiskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._mounted_not

    @mounted_not.setter
    def mounted_not(self, mounted_not):
        """Sets the mounted_not of this DiskWhereInput.


        :param mounted_not: The mounted_not of this DiskWhereInput.  # noqa: E501
        :type mounted_not: bool
        """

        self._mounted_not = mounted_not

    @property
    def name(self):
        """Gets the name of this DiskWhereInput.  # noqa: E501


        :return: The name of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DiskWhereInput.


        :param name: The name of this DiskWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this DiskWhereInput.  # noqa: E501


        :return: The name_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this DiskWhereInput.


        :param name_contains: The name_contains of this DiskWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The name_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this DiskWhereInput.


        :param name_ends_with: The name_ends_with of this DiskWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this DiskWhereInput.  # noqa: E501


        :return: The name_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this DiskWhereInput.


        :param name_gt: The name_gt of this DiskWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this DiskWhereInput.  # noqa: E501


        :return: The name_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this DiskWhereInput.


        :param name_gte: The name_gte of this DiskWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this DiskWhereInput.  # noqa: E501


        :return: The name_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this DiskWhereInput.


        :param name_in: The name_in of this DiskWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this DiskWhereInput.  # noqa: E501


        :return: The name_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this DiskWhereInput.


        :param name_lt: The name_lt of this DiskWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this DiskWhereInput.  # noqa: E501


        :return: The name_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this DiskWhereInput.


        :param name_lte: The name_lte of this DiskWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this DiskWhereInput.  # noqa: E501


        :return: The name_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this DiskWhereInput.


        :param name_not: The name_not of this DiskWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The name_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this DiskWhereInput.


        :param name_not_contains: The name_not_contains of this DiskWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this DiskWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this DiskWhereInput.  # noqa: E501


        :return: The name_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this DiskWhereInput.


        :param name_not_in: The name_not_in of this DiskWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this DiskWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The name_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this DiskWhereInput.


        :param name_starts_with: The name_starts_with of this DiskWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def numa_node(self):
        """Gets the numa_node of this DiskWhereInput.  # noqa: E501


        :return: The numa_node of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._numa_node

    @numa_node.setter
    def numa_node(self, numa_node):
        """Sets the numa_node of this DiskWhereInput.


        :param numa_node: The numa_node of this DiskWhereInput.  # noqa: E501
        :type numa_node: int
        """

        self._numa_node = numa_node

    @property
    def numa_node_gt(self):
        """Gets the numa_node_gt of this DiskWhereInput.  # noqa: E501


        :return: The numa_node_gt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._numa_node_gt

    @numa_node_gt.setter
    def numa_node_gt(self, numa_node_gt):
        """Sets the numa_node_gt of this DiskWhereInput.


        :param numa_node_gt: The numa_node_gt of this DiskWhereInput.  # noqa: E501
        :type numa_node_gt: int
        """

        self._numa_node_gt = numa_node_gt

    @property
    def numa_node_gte(self):
        """Gets the numa_node_gte of this DiskWhereInput.  # noqa: E501


        :return: The numa_node_gte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._numa_node_gte

    @numa_node_gte.setter
    def numa_node_gte(self, numa_node_gte):
        """Sets the numa_node_gte of this DiskWhereInput.


        :param numa_node_gte: The numa_node_gte of this DiskWhereInput.  # noqa: E501
        :type numa_node_gte: int
        """

        self._numa_node_gte = numa_node_gte

    @property
    def numa_node_in(self):
        """Gets the numa_node_in of this DiskWhereInput.  # noqa: E501


        :return: The numa_node_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._numa_node_in

    @numa_node_in.setter
    def numa_node_in(self, numa_node_in):
        """Sets the numa_node_in of this DiskWhereInput.


        :param numa_node_in: The numa_node_in of this DiskWhereInput.  # noqa: E501
        :type numa_node_in: list[int]
        """

        self._numa_node_in = numa_node_in

    @property
    def numa_node_lt(self):
        """Gets the numa_node_lt of this DiskWhereInput.  # noqa: E501


        :return: The numa_node_lt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._numa_node_lt

    @numa_node_lt.setter
    def numa_node_lt(self, numa_node_lt):
        """Sets the numa_node_lt of this DiskWhereInput.


        :param numa_node_lt: The numa_node_lt of this DiskWhereInput.  # noqa: E501
        :type numa_node_lt: int
        """

        self._numa_node_lt = numa_node_lt

    @property
    def numa_node_lte(self):
        """Gets the numa_node_lte of this DiskWhereInput.  # noqa: E501


        :return: The numa_node_lte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._numa_node_lte

    @numa_node_lte.setter
    def numa_node_lte(self, numa_node_lte):
        """Sets the numa_node_lte of this DiskWhereInput.


        :param numa_node_lte: The numa_node_lte of this DiskWhereInput.  # noqa: E501
        :type numa_node_lte: int
        """

        self._numa_node_lte = numa_node_lte

    @property
    def numa_node_not(self):
        """Gets the numa_node_not of this DiskWhereInput.  # noqa: E501


        :return: The numa_node_not of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._numa_node_not

    @numa_node_not.setter
    def numa_node_not(self, numa_node_not):
        """Sets the numa_node_not of this DiskWhereInput.


        :param numa_node_not: The numa_node_not of this DiskWhereInput.  # noqa: E501
        :type numa_node_not: int
        """

        self._numa_node_not = numa_node_not

    @property
    def numa_node_not_in(self):
        """Gets the numa_node_not_in of this DiskWhereInput.  # noqa: E501


        :return: The numa_node_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._numa_node_not_in

    @numa_node_not_in.setter
    def numa_node_not_in(self, numa_node_not_in):
        """Sets the numa_node_not_in of this DiskWhereInput.


        :param numa_node_not_in: The numa_node_not_in of this DiskWhereInput.  # noqa: E501
        :type numa_node_not_in: list[int]
        """

        self._numa_node_not_in = numa_node_not_in

    @property
    def offline(self):
        """Gets the offline of this DiskWhereInput.  # noqa: E501


        :return: The offline of this DiskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._offline

    @offline.setter
    def offline(self, offline):
        """Sets the offline of this DiskWhereInput.


        :param offline: The offline of this DiskWhereInput.  # noqa: E501
        :type offline: bool
        """

        self._offline = offline

    @property
    def offline_not(self):
        """Gets the offline_not of this DiskWhereInput.  # noqa: E501


        :return: The offline_not of this DiskWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._offline_not

    @offline_not.setter
    def offline_not(self, offline_not):
        """Sets the offline_not of this DiskWhereInput.


        :param offline_not: The offline_not of this DiskWhereInput.  # noqa: E501
        :type offline_not: bool
        """

        self._offline_not = offline_not

    @property
    def path(self):
        """Gets the path of this DiskWhereInput.  # noqa: E501


        :return: The path of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this DiskWhereInput.


        :param path: The path of this DiskWhereInput.  # noqa: E501
        :type path: str
        """

        self._path = path

    @property
    def path_contains(self):
        """Gets the path_contains of this DiskWhereInput.  # noqa: E501


        :return: The path_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_contains

    @path_contains.setter
    def path_contains(self, path_contains):
        """Sets the path_contains of this DiskWhereInput.


        :param path_contains: The path_contains of this DiskWhereInput.  # noqa: E501
        :type path_contains: str
        """

        self._path_contains = path_contains

    @property
    def path_ends_with(self):
        """Gets the path_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The path_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_ends_with

    @path_ends_with.setter
    def path_ends_with(self, path_ends_with):
        """Sets the path_ends_with of this DiskWhereInput.


        :param path_ends_with: The path_ends_with of this DiskWhereInput.  # noqa: E501
        :type path_ends_with: str
        """

        self._path_ends_with = path_ends_with

    @property
    def path_gt(self):
        """Gets the path_gt of this DiskWhereInput.  # noqa: E501


        :return: The path_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_gt

    @path_gt.setter
    def path_gt(self, path_gt):
        """Sets the path_gt of this DiskWhereInput.


        :param path_gt: The path_gt of this DiskWhereInput.  # noqa: E501
        :type path_gt: str
        """

        self._path_gt = path_gt

    @property
    def path_gte(self):
        """Gets the path_gte of this DiskWhereInput.  # noqa: E501


        :return: The path_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_gte

    @path_gte.setter
    def path_gte(self, path_gte):
        """Sets the path_gte of this DiskWhereInput.


        :param path_gte: The path_gte of this DiskWhereInput.  # noqa: E501
        :type path_gte: str
        """

        self._path_gte = path_gte

    @property
    def path_in(self):
        """Gets the path_in of this DiskWhereInput.  # noqa: E501


        :return: The path_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._path_in

    @path_in.setter
    def path_in(self, path_in):
        """Sets the path_in of this DiskWhereInput.


        :param path_in: The path_in of this DiskWhereInput.  # noqa: E501
        :type path_in: list[str]
        """

        self._path_in = path_in

    @property
    def path_lt(self):
        """Gets the path_lt of this DiskWhereInput.  # noqa: E501


        :return: The path_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_lt

    @path_lt.setter
    def path_lt(self, path_lt):
        """Sets the path_lt of this DiskWhereInput.


        :param path_lt: The path_lt of this DiskWhereInput.  # noqa: E501
        :type path_lt: str
        """

        self._path_lt = path_lt

    @property
    def path_lte(self):
        """Gets the path_lte of this DiskWhereInput.  # noqa: E501


        :return: The path_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_lte

    @path_lte.setter
    def path_lte(self, path_lte):
        """Sets the path_lte of this DiskWhereInput.


        :param path_lte: The path_lte of this DiskWhereInput.  # noqa: E501
        :type path_lte: str
        """

        self._path_lte = path_lte

    @property
    def path_not(self):
        """Gets the path_not of this DiskWhereInput.  # noqa: E501


        :return: The path_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_not

    @path_not.setter
    def path_not(self, path_not):
        """Sets the path_not of this DiskWhereInput.


        :param path_not: The path_not of this DiskWhereInput.  # noqa: E501
        :type path_not: str
        """

        self._path_not = path_not

    @property
    def path_not_contains(self):
        """Gets the path_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The path_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_not_contains

    @path_not_contains.setter
    def path_not_contains(self, path_not_contains):
        """Sets the path_not_contains of this DiskWhereInput.


        :param path_not_contains: The path_not_contains of this DiskWhereInput.  # noqa: E501
        :type path_not_contains: str
        """

        self._path_not_contains = path_not_contains

    @property
    def path_not_ends_with(self):
        """Gets the path_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The path_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_not_ends_with

    @path_not_ends_with.setter
    def path_not_ends_with(self, path_not_ends_with):
        """Sets the path_not_ends_with of this DiskWhereInput.


        :param path_not_ends_with: The path_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type path_not_ends_with: str
        """

        self._path_not_ends_with = path_not_ends_with

    @property
    def path_not_in(self):
        """Gets the path_not_in of this DiskWhereInput.  # noqa: E501


        :return: The path_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._path_not_in

    @path_not_in.setter
    def path_not_in(self, path_not_in):
        """Sets the path_not_in of this DiskWhereInput.


        :param path_not_in: The path_not_in of this DiskWhereInput.  # noqa: E501
        :type path_not_in: list[str]
        """

        self._path_not_in = path_not_in

    @property
    def path_not_starts_with(self):
        """Gets the path_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The path_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_not_starts_with

    @path_not_starts_with.setter
    def path_not_starts_with(self, path_not_starts_with):
        """Sets the path_not_starts_with of this DiskWhereInput.


        :param path_not_starts_with: The path_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type path_not_starts_with: str
        """

        self._path_not_starts_with = path_not_starts_with

    @property
    def path_starts_with(self):
        """Gets the path_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The path_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._path_starts_with

    @path_starts_with.setter
    def path_starts_with(self, path_starts_with):
        """Sets the path_starts_with of this DiskWhereInput.


        :param path_starts_with: The path_starts_with of this DiskWhereInput.  # noqa: E501
        :type path_starts_with: str
        """

        self._path_starts_with = path_starts_with

    @property
    def persistent_memory_type(self):
        """Gets the persistent_memory_type of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type

    @persistent_memory_type.setter
    def persistent_memory_type(self, persistent_memory_type):
        """Sets the persistent_memory_type of this DiskWhereInput.


        :param persistent_memory_type: The persistent_memory_type of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type: str
        """

        self._persistent_memory_type = persistent_memory_type

    @property
    def persistent_memory_type_contains(self):
        """Gets the persistent_memory_type_contains of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_contains

    @persistent_memory_type_contains.setter
    def persistent_memory_type_contains(self, persistent_memory_type_contains):
        """Sets the persistent_memory_type_contains of this DiskWhereInput.


        :param persistent_memory_type_contains: The persistent_memory_type_contains of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_contains: str
        """

        self._persistent_memory_type_contains = persistent_memory_type_contains

    @property
    def persistent_memory_type_ends_with(self):
        """Gets the persistent_memory_type_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_ends_with

    @persistent_memory_type_ends_with.setter
    def persistent_memory_type_ends_with(self, persistent_memory_type_ends_with):
        """Sets the persistent_memory_type_ends_with of this DiskWhereInput.


        :param persistent_memory_type_ends_with: The persistent_memory_type_ends_with of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_ends_with: str
        """

        self._persistent_memory_type_ends_with = persistent_memory_type_ends_with

    @property
    def persistent_memory_type_gt(self):
        """Gets the persistent_memory_type_gt of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_gt

    @persistent_memory_type_gt.setter
    def persistent_memory_type_gt(self, persistent_memory_type_gt):
        """Sets the persistent_memory_type_gt of this DiskWhereInput.


        :param persistent_memory_type_gt: The persistent_memory_type_gt of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_gt: str
        """

        self._persistent_memory_type_gt = persistent_memory_type_gt

    @property
    def persistent_memory_type_gte(self):
        """Gets the persistent_memory_type_gte of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_gte

    @persistent_memory_type_gte.setter
    def persistent_memory_type_gte(self, persistent_memory_type_gte):
        """Sets the persistent_memory_type_gte of this DiskWhereInput.


        :param persistent_memory_type_gte: The persistent_memory_type_gte of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_gte: str
        """

        self._persistent_memory_type_gte = persistent_memory_type_gte

    @property
    def persistent_memory_type_in(self):
        """Gets the persistent_memory_type_in of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._persistent_memory_type_in

    @persistent_memory_type_in.setter
    def persistent_memory_type_in(self, persistent_memory_type_in):
        """Sets the persistent_memory_type_in of this DiskWhereInput.


        :param persistent_memory_type_in: The persistent_memory_type_in of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_in: list[str]
        """

        self._persistent_memory_type_in = persistent_memory_type_in

    @property
    def persistent_memory_type_lt(self):
        """Gets the persistent_memory_type_lt of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_lt

    @persistent_memory_type_lt.setter
    def persistent_memory_type_lt(self, persistent_memory_type_lt):
        """Sets the persistent_memory_type_lt of this DiskWhereInput.


        :param persistent_memory_type_lt: The persistent_memory_type_lt of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_lt: str
        """

        self._persistent_memory_type_lt = persistent_memory_type_lt

    @property
    def persistent_memory_type_lte(self):
        """Gets the persistent_memory_type_lte of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_lte

    @persistent_memory_type_lte.setter
    def persistent_memory_type_lte(self, persistent_memory_type_lte):
        """Sets the persistent_memory_type_lte of this DiskWhereInput.


        :param persistent_memory_type_lte: The persistent_memory_type_lte of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_lte: str
        """

        self._persistent_memory_type_lte = persistent_memory_type_lte

    @property
    def persistent_memory_type_not(self):
        """Gets the persistent_memory_type_not of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_not

    @persistent_memory_type_not.setter
    def persistent_memory_type_not(self, persistent_memory_type_not):
        """Sets the persistent_memory_type_not of this DiskWhereInput.


        :param persistent_memory_type_not: The persistent_memory_type_not of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_not: str
        """

        self._persistent_memory_type_not = persistent_memory_type_not

    @property
    def persistent_memory_type_not_contains(self):
        """Gets the persistent_memory_type_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_not_contains

    @persistent_memory_type_not_contains.setter
    def persistent_memory_type_not_contains(self, persistent_memory_type_not_contains):
        """Sets the persistent_memory_type_not_contains of this DiskWhereInput.


        :param persistent_memory_type_not_contains: The persistent_memory_type_not_contains of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_not_contains: str
        """

        self._persistent_memory_type_not_contains = persistent_memory_type_not_contains

    @property
    def persistent_memory_type_not_ends_with(self):
        """Gets the persistent_memory_type_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_not_ends_with

    @persistent_memory_type_not_ends_with.setter
    def persistent_memory_type_not_ends_with(self, persistent_memory_type_not_ends_with):
        """Sets the persistent_memory_type_not_ends_with of this DiskWhereInput.


        :param persistent_memory_type_not_ends_with: The persistent_memory_type_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_not_ends_with: str
        """

        self._persistent_memory_type_not_ends_with = persistent_memory_type_not_ends_with

    @property
    def persistent_memory_type_not_in(self):
        """Gets the persistent_memory_type_not_in of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._persistent_memory_type_not_in

    @persistent_memory_type_not_in.setter
    def persistent_memory_type_not_in(self, persistent_memory_type_not_in):
        """Sets the persistent_memory_type_not_in of this DiskWhereInput.


        :param persistent_memory_type_not_in: The persistent_memory_type_not_in of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_not_in: list[str]
        """

        self._persistent_memory_type_not_in = persistent_memory_type_not_in

    @property
    def persistent_memory_type_not_starts_with(self):
        """Gets the persistent_memory_type_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_not_starts_with

    @persistent_memory_type_not_starts_with.setter
    def persistent_memory_type_not_starts_with(self, persistent_memory_type_not_starts_with):
        """Sets the persistent_memory_type_not_starts_with of this DiskWhereInput.


        :param persistent_memory_type_not_starts_with: The persistent_memory_type_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_not_starts_with: str
        """

        self._persistent_memory_type_not_starts_with = persistent_memory_type_not_starts_with

    @property
    def persistent_memory_type_starts_with(self):
        """Gets the persistent_memory_type_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The persistent_memory_type_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._persistent_memory_type_starts_with

    @persistent_memory_type_starts_with.setter
    def persistent_memory_type_starts_with(self, persistent_memory_type_starts_with):
        """Sets the persistent_memory_type_starts_with of this DiskWhereInput.


        :param persistent_memory_type_starts_with: The persistent_memory_type_starts_with of this DiskWhereInput.  # noqa: E501
        :type persistent_memory_type_starts_with: str
        """

        self._persistent_memory_type_starts_with = persistent_memory_type_starts_with

    @property
    def physical_slot_on_brick(self):
        """Gets the physical_slot_on_brick of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._physical_slot_on_brick

    @physical_slot_on_brick.setter
    def physical_slot_on_brick(self, physical_slot_on_brick):
        """Sets the physical_slot_on_brick of this DiskWhereInput.


        :param physical_slot_on_brick: The physical_slot_on_brick of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick: int
        """

        self._physical_slot_on_brick = physical_slot_on_brick

    @property
    def physical_slot_on_brick_gt(self):
        """Gets the physical_slot_on_brick_gt of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick_gt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._physical_slot_on_brick_gt

    @physical_slot_on_brick_gt.setter
    def physical_slot_on_brick_gt(self, physical_slot_on_brick_gt):
        """Sets the physical_slot_on_brick_gt of this DiskWhereInput.


        :param physical_slot_on_brick_gt: The physical_slot_on_brick_gt of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick_gt: int
        """

        self._physical_slot_on_brick_gt = physical_slot_on_brick_gt

    @property
    def physical_slot_on_brick_gte(self):
        """Gets the physical_slot_on_brick_gte of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick_gte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._physical_slot_on_brick_gte

    @physical_slot_on_brick_gte.setter
    def physical_slot_on_brick_gte(self, physical_slot_on_brick_gte):
        """Sets the physical_slot_on_brick_gte of this DiskWhereInput.


        :param physical_slot_on_brick_gte: The physical_slot_on_brick_gte of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick_gte: int
        """

        self._physical_slot_on_brick_gte = physical_slot_on_brick_gte

    @property
    def physical_slot_on_brick_in(self):
        """Gets the physical_slot_on_brick_in of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._physical_slot_on_brick_in

    @physical_slot_on_brick_in.setter
    def physical_slot_on_brick_in(self, physical_slot_on_brick_in):
        """Sets the physical_slot_on_brick_in of this DiskWhereInput.


        :param physical_slot_on_brick_in: The physical_slot_on_brick_in of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick_in: list[int]
        """

        self._physical_slot_on_brick_in = physical_slot_on_brick_in

    @property
    def physical_slot_on_brick_lt(self):
        """Gets the physical_slot_on_brick_lt of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick_lt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._physical_slot_on_brick_lt

    @physical_slot_on_brick_lt.setter
    def physical_slot_on_brick_lt(self, physical_slot_on_brick_lt):
        """Sets the physical_slot_on_brick_lt of this DiskWhereInput.


        :param physical_slot_on_brick_lt: The physical_slot_on_brick_lt of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick_lt: int
        """

        self._physical_slot_on_brick_lt = physical_slot_on_brick_lt

    @property
    def physical_slot_on_brick_lte(self):
        """Gets the physical_slot_on_brick_lte of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick_lte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._physical_slot_on_brick_lte

    @physical_slot_on_brick_lte.setter
    def physical_slot_on_brick_lte(self, physical_slot_on_brick_lte):
        """Sets the physical_slot_on_brick_lte of this DiskWhereInput.


        :param physical_slot_on_brick_lte: The physical_slot_on_brick_lte of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick_lte: int
        """

        self._physical_slot_on_brick_lte = physical_slot_on_brick_lte

    @property
    def physical_slot_on_brick_not(self):
        """Gets the physical_slot_on_brick_not of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick_not of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._physical_slot_on_brick_not

    @physical_slot_on_brick_not.setter
    def physical_slot_on_brick_not(self, physical_slot_on_brick_not):
        """Sets the physical_slot_on_brick_not of this DiskWhereInput.


        :param physical_slot_on_brick_not: The physical_slot_on_brick_not of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick_not: int
        """

        self._physical_slot_on_brick_not = physical_slot_on_brick_not

    @property
    def physical_slot_on_brick_not_in(self):
        """Gets the physical_slot_on_brick_not_in of this DiskWhereInput.  # noqa: E501


        :return: The physical_slot_on_brick_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._physical_slot_on_brick_not_in

    @physical_slot_on_brick_not_in.setter
    def physical_slot_on_brick_not_in(self, physical_slot_on_brick_not_in):
        """Sets the physical_slot_on_brick_not_in of this DiskWhereInput.


        :param physical_slot_on_brick_not_in: The physical_slot_on_brick_not_in of this DiskWhereInput.  # noqa: E501
        :type physical_slot_on_brick_not_in: list[int]
        """

        self._physical_slot_on_brick_not_in = physical_slot_on_brick_not_in

    @property
    def pmem_dimms_every(self):
        """Gets the pmem_dimms_every of this DiskWhereInput.  # noqa: E501


        :return: The pmem_dimms_every of this DiskWhereInput.  # noqa: E501
        :rtype: PmemDimmWhereInput
        """
        return self._pmem_dimms_every

    @pmem_dimms_every.setter
    def pmem_dimms_every(self, pmem_dimms_every):
        """Sets the pmem_dimms_every of this DiskWhereInput.


        :param pmem_dimms_every: The pmem_dimms_every of this DiskWhereInput.  # noqa: E501
        :type pmem_dimms_every: PmemDimmWhereInput
        """

        self._pmem_dimms_every = pmem_dimms_every

    @property
    def pmem_dimms_none(self):
        """Gets the pmem_dimms_none of this DiskWhereInput.  # noqa: E501


        :return: The pmem_dimms_none of this DiskWhereInput.  # noqa: E501
        :rtype: PmemDimmWhereInput
        """
        return self._pmem_dimms_none

    @pmem_dimms_none.setter
    def pmem_dimms_none(self, pmem_dimms_none):
        """Sets the pmem_dimms_none of this DiskWhereInput.


        :param pmem_dimms_none: The pmem_dimms_none of this DiskWhereInput.  # noqa: E501
        :type pmem_dimms_none: PmemDimmWhereInput
        """

        self._pmem_dimms_none = pmem_dimms_none

    @property
    def pmem_dimms_some(self):
        """Gets the pmem_dimms_some of this DiskWhereInput.  # noqa: E501


        :return: The pmem_dimms_some of this DiskWhereInput.  # noqa: E501
        :rtype: PmemDimmWhereInput
        """
        return self._pmem_dimms_some

    @pmem_dimms_some.setter
    def pmem_dimms_some(self, pmem_dimms_some):
        """Sets the pmem_dimms_some of this DiskWhereInput.


        :param pmem_dimms_some: The pmem_dimms_some of this DiskWhereInput.  # noqa: E501
        :type pmem_dimms_some: PmemDimmWhereInput
        """

        self._pmem_dimms_some = pmem_dimms_some

    @property
    def recommended_usage(self):
        """Gets the recommended_usage of this DiskWhereInput.  # noqa: E501


        :return: The recommended_usage of this DiskWhereInput.  # noqa: E501
        :rtype: DiskUsage
        """
        return self._recommended_usage

    @recommended_usage.setter
    def recommended_usage(self, recommended_usage):
        """Sets the recommended_usage of this DiskWhereInput.


        :param recommended_usage: The recommended_usage of this DiskWhereInput.  # noqa: E501
        :type recommended_usage: DiskUsage
        """

        self._recommended_usage = recommended_usage

    @property
    def recommended_usage_in(self):
        """Gets the recommended_usage_in of this DiskWhereInput.  # noqa: E501


        :return: The recommended_usage_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskUsage]
        """
        return self._recommended_usage_in

    @recommended_usage_in.setter
    def recommended_usage_in(self, recommended_usage_in):
        """Sets the recommended_usage_in of this DiskWhereInput.


        :param recommended_usage_in: The recommended_usage_in of this DiskWhereInput.  # noqa: E501
        :type recommended_usage_in: list[DiskUsage]
        """

        self._recommended_usage_in = recommended_usage_in

    @property
    def recommended_usage_not(self):
        """Gets the recommended_usage_not of this DiskWhereInput.  # noqa: E501


        :return: The recommended_usage_not of this DiskWhereInput.  # noqa: E501
        :rtype: DiskUsage
        """
        return self._recommended_usage_not

    @recommended_usage_not.setter
    def recommended_usage_not(self, recommended_usage_not):
        """Sets the recommended_usage_not of this DiskWhereInput.


        :param recommended_usage_not: The recommended_usage_not of this DiskWhereInput.  # noqa: E501
        :type recommended_usage_not: DiskUsage
        """

        self._recommended_usage_not = recommended_usage_not

    @property
    def recommended_usage_not_in(self):
        """Gets the recommended_usage_not_in of this DiskWhereInput.  # noqa: E501


        :return: The recommended_usage_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskUsage]
        """
        return self._recommended_usage_not_in

    @recommended_usage_not_in.setter
    def recommended_usage_not_in(self, recommended_usage_not_in):
        """Sets the recommended_usage_not_in of this DiskWhereInput.


        :param recommended_usage_not_in: The recommended_usage_not_in of this DiskWhereInput.  # noqa: E501
        :type recommended_usage_not_in: list[DiskUsage]
        """

        self._recommended_usage_not_in = recommended_usage_not_in

    @property
    def remaining_life_percent(self):
        """Gets the remaining_life_percent of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._remaining_life_percent

    @remaining_life_percent.setter
    def remaining_life_percent(self, remaining_life_percent):
        """Sets the remaining_life_percent of this DiskWhereInput.


        :param remaining_life_percent: The remaining_life_percent of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent: int
        """

        self._remaining_life_percent = remaining_life_percent

    @property
    def remaining_life_percent_gt(self):
        """Gets the remaining_life_percent_gt of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent_gt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._remaining_life_percent_gt

    @remaining_life_percent_gt.setter
    def remaining_life_percent_gt(self, remaining_life_percent_gt):
        """Sets the remaining_life_percent_gt of this DiskWhereInput.


        :param remaining_life_percent_gt: The remaining_life_percent_gt of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent_gt: int
        """

        self._remaining_life_percent_gt = remaining_life_percent_gt

    @property
    def remaining_life_percent_gte(self):
        """Gets the remaining_life_percent_gte of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent_gte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._remaining_life_percent_gte

    @remaining_life_percent_gte.setter
    def remaining_life_percent_gte(self, remaining_life_percent_gte):
        """Sets the remaining_life_percent_gte of this DiskWhereInput.


        :param remaining_life_percent_gte: The remaining_life_percent_gte of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent_gte: int
        """

        self._remaining_life_percent_gte = remaining_life_percent_gte

    @property
    def remaining_life_percent_in(self):
        """Gets the remaining_life_percent_in of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._remaining_life_percent_in

    @remaining_life_percent_in.setter
    def remaining_life_percent_in(self, remaining_life_percent_in):
        """Sets the remaining_life_percent_in of this DiskWhereInput.


        :param remaining_life_percent_in: The remaining_life_percent_in of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent_in: list[int]
        """

        self._remaining_life_percent_in = remaining_life_percent_in

    @property
    def remaining_life_percent_lt(self):
        """Gets the remaining_life_percent_lt of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent_lt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._remaining_life_percent_lt

    @remaining_life_percent_lt.setter
    def remaining_life_percent_lt(self, remaining_life_percent_lt):
        """Sets the remaining_life_percent_lt of this DiskWhereInput.


        :param remaining_life_percent_lt: The remaining_life_percent_lt of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent_lt: int
        """

        self._remaining_life_percent_lt = remaining_life_percent_lt

    @property
    def remaining_life_percent_lte(self):
        """Gets the remaining_life_percent_lte of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent_lte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._remaining_life_percent_lte

    @remaining_life_percent_lte.setter
    def remaining_life_percent_lte(self, remaining_life_percent_lte):
        """Sets the remaining_life_percent_lte of this DiskWhereInput.


        :param remaining_life_percent_lte: The remaining_life_percent_lte of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent_lte: int
        """

        self._remaining_life_percent_lte = remaining_life_percent_lte

    @property
    def remaining_life_percent_not(self):
        """Gets the remaining_life_percent_not of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent_not of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._remaining_life_percent_not

    @remaining_life_percent_not.setter
    def remaining_life_percent_not(self, remaining_life_percent_not):
        """Sets the remaining_life_percent_not of this DiskWhereInput.


        :param remaining_life_percent_not: The remaining_life_percent_not of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent_not: int
        """

        self._remaining_life_percent_not = remaining_life_percent_not

    @property
    def remaining_life_percent_not_in(self):
        """Gets the remaining_life_percent_not_in of this DiskWhereInput.  # noqa: E501


        :return: The remaining_life_percent_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._remaining_life_percent_not_in

    @remaining_life_percent_not_in.setter
    def remaining_life_percent_not_in(self, remaining_life_percent_not_in):
        """Sets the remaining_life_percent_not_in of this DiskWhereInput.


        :param remaining_life_percent_not_in: The remaining_life_percent_not_in of this DiskWhereInput.  # noqa: E501
        :type remaining_life_percent_not_in: list[int]
        """

        self._remaining_life_percent_not_in = remaining_life_percent_not_in

    @property
    def serial(self):
        """Gets the serial of this DiskWhereInput.  # noqa: E501


        :return: The serial of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this DiskWhereInput.


        :param serial: The serial of this DiskWhereInput.  # noqa: E501
        :type serial: str
        """

        self._serial = serial

    @property
    def serial_contains(self):
        """Gets the serial_contains of this DiskWhereInput.  # noqa: E501


        :return: The serial_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_contains

    @serial_contains.setter
    def serial_contains(self, serial_contains):
        """Sets the serial_contains of this DiskWhereInput.


        :param serial_contains: The serial_contains of this DiskWhereInput.  # noqa: E501
        :type serial_contains: str
        """

        self._serial_contains = serial_contains

    @property
    def serial_ends_with(self):
        """Gets the serial_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The serial_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_ends_with

    @serial_ends_with.setter
    def serial_ends_with(self, serial_ends_with):
        """Sets the serial_ends_with of this DiskWhereInput.


        :param serial_ends_with: The serial_ends_with of this DiskWhereInput.  # noqa: E501
        :type serial_ends_with: str
        """

        self._serial_ends_with = serial_ends_with

    @property
    def serial_gt(self):
        """Gets the serial_gt of this DiskWhereInput.  # noqa: E501


        :return: The serial_gt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_gt

    @serial_gt.setter
    def serial_gt(self, serial_gt):
        """Sets the serial_gt of this DiskWhereInput.


        :param serial_gt: The serial_gt of this DiskWhereInput.  # noqa: E501
        :type serial_gt: str
        """

        self._serial_gt = serial_gt

    @property
    def serial_gte(self):
        """Gets the serial_gte of this DiskWhereInput.  # noqa: E501


        :return: The serial_gte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_gte

    @serial_gte.setter
    def serial_gte(self, serial_gte):
        """Sets the serial_gte of this DiskWhereInput.


        :param serial_gte: The serial_gte of this DiskWhereInput.  # noqa: E501
        :type serial_gte: str
        """

        self._serial_gte = serial_gte

    @property
    def serial_in(self):
        """Gets the serial_in of this DiskWhereInput.  # noqa: E501


        :return: The serial_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._serial_in

    @serial_in.setter
    def serial_in(self, serial_in):
        """Sets the serial_in of this DiskWhereInput.


        :param serial_in: The serial_in of this DiskWhereInput.  # noqa: E501
        :type serial_in: list[str]
        """

        self._serial_in = serial_in

    @property
    def serial_lt(self):
        """Gets the serial_lt of this DiskWhereInput.  # noqa: E501


        :return: The serial_lt of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_lt

    @serial_lt.setter
    def serial_lt(self, serial_lt):
        """Sets the serial_lt of this DiskWhereInput.


        :param serial_lt: The serial_lt of this DiskWhereInput.  # noqa: E501
        :type serial_lt: str
        """

        self._serial_lt = serial_lt

    @property
    def serial_lte(self):
        """Gets the serial_lte of this DiskWhereInput.  # noqa: E501


        :return: The serial_lte of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_lte

    @serial_lte.setter
    def serial_lte(self, serial_lte):
        """Sets the serial_lte of this DiskWhereInput.


        :param serial_lte: The serial_lte of this DiskWhereInput.  # noqa: E501
        :type serial_lte: str
        """

        self._serial_lte = serial_lte

    @property
    def serial_not(self):
        """Gets the serial_not of this DiskWhereInput.  # noqa: E501


        :return: The serial_not of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_not

    @serial_not.setter
    def serial_not(self, serial_not):
        """Sets the serial_not of this DiskWhereInput.


        :param serial_not: The serial_not of this DiskWhereInput.  # noqa: E501
        :type serial_not: str
        """

        self._serial_not = serial_not

    @property
    def serial_not_contains(self):
        """Gets the serial_not_contains of this DiskWhereInput.  # noqa: E501


        :return: The serial_not_contains of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_not_contains

    @serial_not_contains.setter
    def serial_not_contains(self, serial_not_contains):
        """Sets the serial_not_contains of this DiskWhereInput.


        :param serial_not_contains: The serial_not_contains of this DiskWhereInput.  # noqa: E501
        :type serial_not_contains: str
        """

        self._serial_not_contains = serial_not_contains

    @property
    def serial_not_ends_with(self):
        """Gets the serial_not_ends_with of this DiskWhereInput.  # noqa: E501


        :return: The serial_not_ends_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_not_ends_with

    @serial_not_ends_with.setter
    def serial_not_ends_with(self, serial_not_ends_with):
        """Sets the serial_not_ends_with of this DiskWhereInput.


        :param serial_not_ends_with: The serial_not_ends_with of this DiskWhereInput.  # noqa: E501
        :type serial_not_ends_with: str
        """

        self._serial_not_ends_with = serial_not_ends_with

    @property
    def serial_not_in(self):
        """Gets the serial_not_in of this DiskWhereInput.  # noqa: E501


        :return: The serial_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._serial_not_in

    @serial_not_in.setter
    def serial_not_in(self, serial_not_in):
        """Sets the serial_not_in of this DiskWhereInput.


        :param serial_not_in: The serial_not_in of this DiskWhereInput.  # noqa: E501
        :type serial_not_in: list[str]
        """

        self._serial_not_in = serial_not_in

    @property
    def serial_not_starts_with(self):
        """Gets the serial_not_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The serial_not_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_not_starts_with

    @serial_not_starts_with.setter
    def serial_not_starts_with(self, serial_not_starts_with):
        """Sets the serial_not_starts_with of this DiskWhereInput.


        :param serial_not_starts_with: The serial_not_starts_with of this DiskWhereInput.  # noqa: E501
        :type serial_not_starts_with: str
        """

        self._serial_not_starts_with = serial_not_starts_with

    @property
    def serial_starts_with(self):
        """Gets the serial_starts_with of this DiskWhereInput.  # noqa: E501


        :return: The serial_starts_with of this DiskWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._serial_starts_with

    @serial_starts_with.setter
    def serial_starts_with(self, serial_starts_with):
        """Sets the serial_starts_with of this DiskWhereInput.


        :param serial_starts_with: The serial_starts_with of this DiskWhereInput.  # noqa: E501
        :type serial_starts_with: str
        """

        self._serial_starts_with = serial_starts_with

    @property
    def size(self):
        """Gets the size of this DiskWhereInput.  # noqa: E501


        :return: The size of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this DiskWhereInput.


        :param size: The size of this DiskWhereInput.  # noqa: E501
        :type size: int
        """

        self._size = size

    @property
    def size_gt(self):
        """Gets the size_gt of this DiskWhereInput.  # noqa: E501


        :return: The size_gt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gt

    @size_gt.setter
    def size_gt(self, size_gt):
        """Sets the size_gt of this DiskWhereInput.


        :param size_gt: The size_gt of this DiskWhereInput.  # noqa: E501
        :type size_gt: int
        """

        self._size_gt = size_gt

    @property
    def size_gte(self):
        """Gets the size_gte of this DiskWhereInput.  # noqa: E501


        :return: The size_gte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gte

    @size_gte.setter
    def size_gte(self, size_gte):
        """Sets the size_gte of this DiskWhereInput.


        :param size_gte: The size_gte of this DiskWhereInput.  # noqa: E501
        :type size_gte: int
        """

        self._size_gte = size_gte

    @property
    def size_in(self):
        """Gets the size_in of this DiskWhereInput.  # noqa: E501


        :return: The size_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_in

    @size_in.setter
    def size_in(self, size_in):
        """Sets the size_in of this DiskWhereInput.


        :param size_in: The size_in of this DiskWhereInput.  # noqa: E501
        :type size_in: list[int]
        """

        self._size_in = size_in

    @property
    def size_lt(self):
        """Gets the size_lt of this DiskWhereInput.  # noqa: E501


        :return: The size_lt of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lt

    @size_lt.setter
    def size_lt(self, size_lt):
        """Sets the size_lt of this DiskWhereInput.


        :param size_lt: The size_lt of this DiskWhereInput.  # noqa: E501
        :type size_lt: int
        """

        self._size_lt = size_lt

    @property
    def size_lte(self):
        """Gets the size_lte of this DiskWhereInput.  # noqa: E501


        :return: The size_lte of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lte

    @size_lte.setter
    def size_lte(self, size_lte):
        """Sets the size_lte of this DiskWhereInput.


        :param size_lte: The size_lte of this DiskWhereInput.  # noqa: E501
        :type size_lte: int
        """

        self._size_lte = size_lte

    @property
    def size_not(self):
        """Gets the size_not of this DiskWhereInput.  # noqa: E501


        :return: The size_not of this DiskWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_not

    @size_not.setter
    def size_not(self, size_not):
        """Sets the size_not of this DiskWhereInput.


        :param size_not: The size_not of this DiskWhereInput.  # noqa: E501
        :type size_not: int
        """

        self._size_not = size_not

    @property
    def size_not_in(self):
        """Gets the size_not_in of this DiskWhereInput.  # noqa: E501


        :return: The size_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_not_in

    @size_not_in.setter
    def size_not_in(self, size_not_in):
        """Sets the size_not_in of this DiskWhereInput.


        :param size_not_in: The size_not_in of this DiskWhereInput.  # noqa: E501
        :type size_not_in: list[int]
        """

        self._size_not_in = size_not_in

    @property
    def type(self):
        """Gets the type of this DiskWhereInput.  # noqa: E501


        :return: The type of this DiskWhereInput.  # noqa: E501
        :rtype: DiskType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DiskWhereInput.


        :param type: The type of this DiskWhereInput.  # noqa: E501
        :type type: DiskType
        """

        self._type = type

    @property
    def type_in(self):
        """Gets the type_in of this DiskWhereInput.  # noqa: E501


        :return: The type_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskType]
        """
        return self._type_in

    @type_in.setter
    def type_in(self, type_in):
        """Sets the type_in of this DiskWhereInput.


        :param type_in: The type_in of this DiskWhereInput.  # noqa: E501
        :type type_in: list[DiskType]
        """

        self._type_in = type_in

    @property
    def type_not(self):
        """Gets the type_not of this DiskWhereInput.  # noqa: E501


        :return: The type_not of this DiskWhereInput.  # noqa: E501
        :rtype: DiskType
        """
        return self._type_not

    @type_not.setter
    def type_not(self, type_not):
        """Sets the type_not of this DiskWhereInput.


        :param type_not: The type_not of this DiskWhereInput.  # noqa: E501
        :type type_not: DiskType
        """

        self._type_not = type_not

    @property
    def type_not_in(self):
        """Gets the type_not_in of this DiskWhereInput.  # noqa: E501


        :return: The type_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskType]
        """
        return self._type_not_in

    @type_not_in.setter
    def type_not_in(self, type_not_in):
        """Sets the type_not_in of this DiskWhereInput.


        :param type_not_in: The type_not_in of this DiskWhereInput.  # noqa: E501
        :type type_not_in: list[DiskType]
        """

        self._type_not_in = type_not_in

    @property
    def usage(self):
        """Gets the usage of this DiskWhereInput.  # noqa: E501


        :return: The usage of this DiskWhereInput.  # noqa: E501
        :rtype: DiskUsage
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this DiskWhereInput.


        :param usage: The usage of this DiskWhereInput.  # noqa: E501
        :type usage: DiskUsage
        """

        self._usage = usage

    @property
    def usage_in(self):
        """Gets the usage_in of this DiskWhereInput.  # noqa: E501


        :return: The usage_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskUsage]
        """
        return self._usage_in

    @usage_in.setter
    def usage_in(self, usage_in):
        """Sets the usage_in of this DiskWhereInput.


        :param usage_in: The usage_in of this DiskWhereInput.  # noqa: E501
        :type usage_in: list[DiskUsage]
        """

        self._usage_in = usage_in

    @property
    def usage_not(self):
        """Gets the usage_not of this DiskWhereInput.  # noqa: E501


        :return: The usage_not of this DiskWhereInput.  # noqa: E501
        :rtype: DiskUsage
        """
        return self._usage_not

    @usage_not.setter
    def usage_not(self, usage_not):
        """Sets the usage_not of this DiskWhereInput.


        :param usage_not: The usage_not of this DiskWhereInput.  # noqa: E501
        :type usage_not: DiskUsage
        """

        self._usage_not = usage_not

    @property
    def usage_not_in(self):
        """Gets the usage_not_in of this DiskWhereInput.  # noqa: E501


        :return: The usage_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskUsage]
        """
        return self._usage_not_in

    @usage_not_in.setter
    def usage_not_in(self, usage_not_in):
        """Sets the usage_not_in of this DiskWhereInput.


        :param usage_not_in: The usage_not_in of this DiskWhereInput.  # noqa: E501
        :type usage_not_in: list[DiskUsage]
        """

        self._usage_not_in = usage_not_in

    @property
    def usage_status(self):
        """Gets the usage_status of this DiskWhereInput.  # noqa: E501


        :return: The usage_status of this DiskWhereInput.  # noqa: E501
        :rtype: DiskUsageStatus
        """
        return self._usage_status

    @usage_status.setter
    def usage_status(self, usage_status):
        """Sets the usage_status of this DiskWhereInput.


        :param usage_status: The usage_status of this DiskWhereInput.  # noqa: E501
        :type usage_status: DiskUsageStatus
        """

        self._usage_status = usage_status

    @property
    def usage_status_in(self):
        """Gets the usage_status_in of this DiskWhereInput.  # noqa: E501


        :return: The usage_status_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskUsageStatus]
        """
        return self._usage_status_in

    @usage_status_in.setter
    def usage_status_in(self, usage_status_in):
        """Sets the usage_status_in of this DiskWhereInput.


        :param usage_status_in: The usage_status_in of this DiskWhereInput.  # noqa: E501
        :type usage_status_in: list[DiskUsageStatus]
        """

        self._usage_status_in = usage_status_in

    @property
    def usage_status_not(self):
        """Gets the usage_status_not of this DiskWhereInput.  # noqa: E501


        :return: The usage_status_not of this DiskWhereInput.  # noqa: E501
        :rtype: DiskUsageStatus
        """
        return self._usage_status_not

    @usage_status_not.setter
    def usage_status_not(self, usage_status_not):
        """Sets the usage_status_not of this DiskWhereInput.


        :param usage_status_not: The usage_status_not of this DiskWhereInput.  # noqa: E501
        :type usage_status_not: DiskUsageStatus
        """

        self._usage_status_not = usage_status_not

    @property
    def usage_status_not_in(self):
        """Gets the usage_status_not_in of this DiskWhereInput.  # noqa: E501


        :return: The usage_status_not_in of this DiskWhereInput.  # noqa: E501
        :rtype: list[DiskUsageStatus]
        """
        return self._usage_status_not_in

    @usage_status_not_in.setter
    def usage_status_not_in(self, usage_status_not_in):
        """Sets the usage_status_not_in of this DiskWhereInput.


        :param usage_status_not_in: The usage_status_not_in of this DiskWhereInput.  # noqa: E501
        :type usage_status_not_in: list[DiskUsageStatus]
        """

        self._usage_status_not_in = usage_status_not_in

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DiskWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DiskWhereInput):
            return True

        return self.to_dict() != other.to_dict()

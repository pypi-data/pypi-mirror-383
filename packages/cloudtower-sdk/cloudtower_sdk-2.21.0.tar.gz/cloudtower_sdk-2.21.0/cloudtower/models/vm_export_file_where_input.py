# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class VmExportFileWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[VmExportFileWhereInput]',
        '_not': 'list[VmExportFileWhereInput]',
        '_or': 'list[VmExportFileWhereInput]',
        'content_library_vm_template': 'ContentLibraryVmTemplateWhereInput',
        'created_at': 'str',
        'created_at_gt': 'str',
        'created_at_gte': 'str',
        'created_at_in': 'list[str]',
        'created_at_lt': 'str',
        'created_at_lte': 'str',
        'created_at_not': 'str',
        'created_at_not_in': 'list[str]',
        'damaged': 'bool',
        'damaged_not': 'bool',
        'data_port_id': 'str',
        'data_port_id_contains': 'str',
        'data_port_id_ends_with': 'str',
        'data_port_id_gt': 'str',
        'data_port_id_gte': 'str',
        'data_port_id_in': 'list[str]',
        'data_port_id_lt': 'str',
        'data_port_id_lte': 'str',
        'data_port_id_not': 'str',
        'data_port_id_not_contains': 'str',
        'data_port_id_not_ends_with': 'str',
        'data_port_id_not_in': 'list[str]',
        'data_port_id_not_starts_with': 'str',
        'data_port_id_starts_with': 'str',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'storage_cluster_id': 'str',
        'storage_cluster_id_contains': 'str',
        'storage_cluster_id_ends_with': 'str',
        'storage_cluster_id_gt': 'str',
        'storage_cluster_id_gte': 'str',
        'storage_cluster_id_in': 'list[str]',
        'storage_cluster_id_lt': 'str',
        'storage_cluster_id_lte': 'str',
        'storage_cluster_id_not': 'str',
        'storage_cluster_id_not_contains': 'str',
        'storage_cluster_id_not_ends_with': 'str',
        'storage_cluster_id_not_in': 'list[str]',
        'storage_cluster_id_not_starts_with': 'str',
        'storage_cluster_id_starts_with': 'str',
        'type': 'VmExportFileType',
        'type_in': 'list[VmExportFileType]',
        'type_not': 'VmExportFileType',
        'type_not_in': 'list[VmExportFileType]',
        'vm': 'VmWhereInput',
        'vm_volume': 'VmVolumeWhereInput'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'content_library_vm_template': 'content_library_vm_template',
        'created_at': 'createdAt',
        'created_at_gt': 'createdAt_gt',
        'created_at_gte': 'createdAt_gte',
        'created_at_in': 'createdAt_in',
        'created_at_lt': 'createdAt_lt',
        'created_at_lte': 'createdAt_lte',
        'created_at_not': 'createdAt_not',
        'created_at_not_in': 'createdAt_not_in',
        'damaged': 'damaged',
        'damaged_not': 'damaged_not',
        'data_port_id': 'data_port_id',
        'data_port_id_contains': 'data_port_id_contains',
        'data_port_id_ends_with': 'data_port_id_ends_with',
        'data_port_id_gt': 'data_port_id_gt',
        'data_port_id_gte': 'data_port_id_gte',
        'data_port_id_in': 'data_port_id_in',
        'data_port_id_lt': 'data_port_id_lt',
        'data_port_id_lte': 'data_port_id_lte',
        'data_port_id_not': 'data_port_id_not',
        'data_port_id_not_contains': 'data_port_id_not_contains',
        'data_port_id_not_ends_with': 'data_port_id_not_ends_with',
        'data_port_id_not_in': 'data_port_id_not_in',
        'data_port_id_not_starts_with': 'data_port_id_not_starts_with',
        'data_port_id_starts_with': 'data_port_id_starts_with',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'storage_cluster_id': 'storage_cluster_id',
        'storage_cluster_id_contains': 'storage_cluster_id_contains',
        'storage_cluster_id_ends_with': 'storage_cluster_id_ends_with',
        'storage_cluster_id_gt': 'storage_cluster_id_gt',
        'storage_cluster_id_gte': 'storage_cluster_id_gte',
        'storage_cluster_id_in': 'storage_cluster_id_in',
        'storage_cluster_id_lt': 'storage_cluster_id_lt',
        'storage_cluster_id_lte': 'storage_cluster_id_lte',
        'storage_cluster_id_not': 'storage_cluster_id_not',
        'storage_cluster_id_not_contains': 'storage_cluster_id_not_contains',
        'storage_cluster_id_not_ends_with': 'storage_cluster_id_not_ends_with',
        'storage_cluster_id_not_in': 'storage_cluster_id_not_in',
        'storage_cluster_id_not_starts_with': 'storage_cluster_id_not_starts_with',
        'storage_cluster_id_starts_with': 'storage_cluster_id_starts_with',
        'type': 'type',
        'type_in': 'type_in',
        'type_not': 'type_not',
        'type_not_in': 'type_not_in',
        'vm': 'vm',
        'vm_volume': 'vm_volume'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """VmExportFileWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._content_library_vm_template = None
        self._created_at = None
        self._created_at_gt = None
        self._created_at_gte = None
        self._created_at_in = None
        self._created_at_lt = None
        self._created_at_lte = None
        self._created_at_not = None
        self._created_at_not_in = None
        self._damaged = None
        self._damaged_not = None
        self._data_port_id = None
        self._data_port_id_contains = None
        self._data_port_id_ends_with = None
        self._data_port_id_gt = None
        self._data_port_id_gte = None
        self._data_port_id_in = None
        self._data_port_id_lt = None
        self._data_port_id_lte = None
        self._data_port_id_not = None
        self._data_port_id_not_contains = None
        self._data_port_id_not_ends_with = None
        self._data_port_id_not_in = None
        self._data_port_id_not_starts_with = None
        self._data_port_id_starts_with = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._storage_cluster_id = None
        self._storage_cluster_id_contains = None
        self._storage_cluster_id_ends_with = None
        self._storage_cluster_id_gt = None
        self._storage_cluster_id_gte = None
        self._storage_cluster_id_in = None
        self._storage_cluster_id_lt = None
        self._storage_cluster_id_lte = None
        self._storage_cluster_id_not = None
        self._storage_cluster_id_not_contains = None
        self._storage_cluster_id_not_ends_with = None
        self._storage_cluster_id_not_in = None
        self._storage_cluster_id_not_starts_with = None
        self._storage_cluster_id_starts_with = None
        self._type = None
        self._type_in = None
        self._type_not = None
        self._type_not_in = None
        self._vm = None
        self._vm_volume = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.content_library_vm_template = kwargs.get("content_library_vm_template", None)
        self.created_at = kwargs.get("created_at", None)
        self.created_at_gt = kwargs.get("created_at_gt", None)
        self.created_at_gte = kwargs.get("created_at_gte", None)
        self.created_at_in = kwargs.get("created_at_in", None)
        self.created_at_lt = kwargs.get("created_at_lt", None)
        self.created_at_lte = kwargs.get("created_at_lte", None)
        self.created_at_not = kwargs.get("created_at_not", None)
        self.created_at_not_in = kwargs.get("created_at_not_in", None)
        self.damaged = kwargs.get("damaged", None)
        self.damaged_not = kwargs.get("damaged_not", None)
        self.data_port_id = kwargs.get("data_port_id", None)
        self.data_port_id_contains = kwargs.get("data_port_id_contains", None)
        self.data_port_id_ends_with = kwargs.get("data_port_id_ends_with", None)
        self.data_port_id_gt = kwargs.get("data_port_id_gt", None)
        self.data_port_id_gte = kwargs.get("data_port_id_gte", None)
        self.data_port_id_in = kwargs.get("data_port_id_in", None)
        self.data_port_id_lt = kwargs.get("data_port_id_lt", None)
        self.data_port_id_lte = kwargs.get("data_port_id_lte", None)
        self.data_port_id_not = kwargs.get("data_port_id_not", None)
        self.data_port_id_not_contains = kwargs.get("data_port_id_not_contains", None)
        self.data_port_id_not_ends_with = kwargs.get("data_port_id_not_ends_with", None)
        self.data_port_id_not_in = kwargs.get("data_port_id_not_in", None)
        self.data_port_id_not_starts_with = kwargs.get("data_port_id_not_starts_with", None)
        self.data_port_id_starts_with = kwargs.get("data_port_id_starts_with", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.storage_cluster_id = kwargs.get("storage_cluster_id", None)
        self.storage_cluster_id_contains = kwargs.get("storage_cluster_id_contains", None)
        self.storage_cluster_id_ends_with = kwargs.get("storage_cluster_id_ends_with", None)
        self.storage_cluster_id_gt = kwargs.get("storage_cluster_id_gt", None)
        self.storage_cluster_id_gte = kwargs.get("storage_cluster_id_gte", None)
        self.storage_cluster_id_in = kwargs.get("storage_cluster_id_in", None)
        self.storage_cluster_id_lt = kwargs.get("storage_cluster_id_lt", None)
        self.storage_cluster_id_lte = kwargs.get("storage_cluster_id_lte", None)
        self.storage_cluster_id_not = kwargs.get("storage_cluster_id_not", None)
        self.storage_cluster_id_not_contains = kwargs.get("storage_cluster_id_not_contains", None)
        self.storage_cluster_id_not_ends_with = kwargs.get("storage_cluster_id_not_ends_with", None)
        self.storage_cluster_id_not_in = kwargs.get("storage_cluster_id_not_in", None)
        self.storage_cluster_id_not_starts_with = kwargs.get("storage_cluster_id_not_starts_with", None)
        self.storage_cluster_id_starts_with = kwargs.get("storage_cluster_id_starts_with", None)
        self.type = kwargs.get("type", None)
        self.type_in = kwargs.get("type_in", None)
        self.type_not = kwargs.get("type_not", None)
        self.type_not_in = kwargs.get("type_not_in", None)
        self.vm = kwargs.get("vm", None)
        self.vm_volume = kwargs.get("vm_volume", None)

    @property
    def _and(self):
        """Gets the _and of this VmExportFileWhereInput.  # noqa: E501


        :return: The _and of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[VmExportFileWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this VmExportFileWhereInput.


        :param _and: The _and of this VmExportFileWhereInput.  # noqa: E501
        :type _and: list[VmExportFileWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this VmExportFileWhereInput.  # noqa: E501


        :return: The _not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[VmExportFileWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this VmExportFileWhereInput.


        :param _not: The _not of this VmExportFileWhereInput.  # noqa: E501
        :type _not: list[VmExportFileWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this VmExportFileWhereInput.  # noqa: E501


        :return: The _or of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[VmExportFileWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this VmExportFileWhereInput.


        :param _or: The _or of this VmExportFileWhereInput.  # noqa: E501
        :type _or: list[VmExportFileWhereInput]
        """

        self.__or = _or

    @property
    def content_library_vm_template(self):
        """Gets the content_library_vm_template of this VmExportFileWhereInput.  # noqa: E501


        :return: The content_library_vm_template of this VmExportFileWhereInput.  # noqa: E501
        :rtype: ContentLibraryVmTemplateWhereInput
        """
        return self._content_library_vm_template

    @content_library_vm_template.setter
    def content_library_vm_template(self, content_library_vm_template):
        """Sets the content_library_vm_template of this VmExportFileWhereInput.


        :param content_library_vm_template: The content_library_vm_template of this VmExportFileWhereInput.  # noqa: E501
        :type content_library_vm_template: ContentLibraryVmTemplateWhereInput
        """

        self._content_library_vm_template = content_library_vm_template

    @property
    def created_at(self):
        """Gets the created_at of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this VmExportFileWhereInput.


        :param created_at: The created_at of this VmExportFileWhereInput.  # noqa: E501
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def created_at_gt(self):
        """Gets the created_at_gt of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at_gt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gt

    @created_at_gt.setter
    def created_at_gt(self, created_at_gt):
        """Sets the created_at_gt of this VmExportFileWhereInput.


        :param created_at_gt: The created_at_gt of this VmExportFileWhereInput.  # noqa: E501
        :type created_at_gt: str
        """

        self._created_at_gt = created_at_gt

    @property
    def created_at_gte(self):
        """Gets the created_at_gte of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at_gte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gte

    @created_at_gte.setter
    def created_at_gte(self, created_at_gte):
        """Sets the created_at_gte of this VmExportFileWhereInput.


        :param created_at_gte: The created_at_gte of this VmExportFileWhereInput.  # noqa: E501
        :type created_at_gte: str
        """

        self._created_at_gte = created_at_gte

    @property
    def created_at_in(self):
        """Gets the created_at_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_in

    @created_at_in.setter
    def created_at_in(self, created_at_in):
        """Sets the created_at_in of this VmExportFileWhereInput.


        :param created_at_in: The created_at_in of this VmExportFileWhereInput.  # noqa: E501
        :type created_at_in: list[str]
        """

        self._created_at_in = created_at_in

    @property
    def created_at_lt(self):
        """Gets the created_at_lt of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at_lt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lt

    @created_at_lt.setter
    def created_at_lt(self, created_at_lt):
        """Sets the created_at_lt of this VmExportFileWhereInput.


        :param created_at_lt: The created_at_lt of this VmExportFileWhereInput.  # noqa: E501
        :type created_at_lt: str
        """

        self._created_at_lt = created_at_lt

    @property
    def created_at_lte(self):
        """Gets the created_at_lte of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at_lte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lte

    @created_at_lte.setter
    def created_at_lte(self, created_at_lte):
        """Sets the created_at_lte of this VmExportFileWhereInput.


        :param created_at_lte: The created_at_lte of this VmExportFileWhereInput.  # noqa: E501
        :type created_at_lte: str
        """

        self._created_at_lte = created_at_lte

    @property
    def created_at_not(self):
        """Gets the created_at_not of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at_not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_not

    @created_at_not.setter
    def created_at_not(self, created_at_not):
        """Sets the created_at_not of this VmExportFileWhereInput.


        :param created_at_not: The created_at_not of this VmExportFileWhereInput.  # noqa: E501
        :type created_at_not: str
        """

        self._created_at_not = created_at_not

    @property
    def created_at_not_in(self):
        """Gets the created_at_not_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The created_at_not_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_not_in

    @created_at_not_in.setter
    def created_at_not_in(self, created_at_not_in):
        """Sets the created_at_not_in of this VmExportFileWhereInput.


        :param created_at_not_in: The created_at_not_in of this VmExportFileWhereInput.  # noqa: E501
        :type created_at_not_in: list[str]
        """

        self._created_at_not_in = created_at_not_in

    @property
    def damaged(self):
        """Gets the damaged of this VmExportFileWhereInput.  # noqa: E501


        :return: The damaged of this VmExportFileWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._damaged

    @damaged.setter
    def damaged(self, damaged):
        """Sets the damaged of this VmExportFileWhereInput.


        :param damaged: The damaged of this VmExportFileWhereInput.  # noqa: E501
        :type damaged: bool
        """

        self._damaged = damaged

    @property
    def damaged_not(self):
        """Gets the damaged_not of this VmExportFileWhereInput.  # noqa: E501


        :return: The damaged_not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._damaged_not

    @damaged_not.setter
    def damaged_not(self, damaged_not):
        """Sets the damaged_not of this VmExportFileWhereInput.


        :param damaged_not: The damaged_not of this VmExportFileWhereInput.  # noqa: E501
        :type damaged_not: bool
        """

        self._damaged_not = damaged_not

    @property
    def data_port_id(self):
        """Gets the data_port_id of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id

    @data_port_id.setter
    def data_port_id(self, data_port_id):
        """Sets the data_port_id of this VmExportFileWhereInput.


        :param data_port_id: The data_port_id of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id: str
        """

        self._data_port_id = data_port_id

    @property
    def data_port_id_contains(self):
        """Gets the data_port_id_contains of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_contains of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_contains

    @data_port_id_contains.setter
    def data_port_id_contains(self, data_port_id_contains):
        """Sets the data_port_id_contains of this VmExportFileWhereInput.


        :param data_port_id_contains: The data_port_id_contains of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_contains: str
        """

        self._data_port_id_contains = data_port_id_contains

    @property
    def data_port_id_ends_with(self):
        """Gets the data_port_id_ends_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_ends_with

    @data_port_id_ends_with.setter
    def data_port_id_ends_with(self, data_port_id_ends_with):
        """Sets the data_port_id_ends_with of this VmExportFileWhereInput.


        :param data_port_id_ends_with: The data_port_id_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_ends_with: str
        """

        self._data_port_id_ends_with = data_port_id_ends_with

    @property
    def data_port_id_gt(self):
        """Gets the data_port_id_gt of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_gt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_gt

    @data_port_id_gt.setter
    def data_port_id_gt(self, data_port_id_gt):
        """Sets the data_port_id_gt of this VmExportFileWhereInput.


        :param data_port_id_gt: The data_port_id_gt of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_gt: str
        """

        self._data_port_id_gt = data_port_id_gt

    @property
    def data_port_id_gte(self):
        """Gets the data_port_id_gte of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_gte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_gte

    @data_port_id_gte.setter
    def data_port_id_gte(self, data_port_id_gte):
        """Sets the data_port_id_gte of this VmExportFileWhereInput.


        :param data_port_id_gte: The data_port_id_gte of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_gte: str
        """

        self._data_port_id_gte = data_port_id_gte

    @property
    def data_port_id_in(self):
        """Gets the data_port_id_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._data_port_id_in

    @data_port_id_in.setter
    def data_port_id_in(self, data_port_id_in):
        """Sets the data_port_id_in of this VmExportFileWhereInput.


        :param data_port_id_in: The data_port_id_in of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_in: list[str]
        """

        self._data_port_id_in = data_port_id_in

    @property
    def data_port_id_lt(self):
        """Gets the data_port_id_lt of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_lt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_lt

    @data_port_id_lt.setter
    def data_port_id_lt(self, data_port_id_lt):
        """Sets the data_port_id_lt of this VmExportFileWhereInput.


        :param data_port_id_lt: The data_port_id_lt of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_lt: str
        """

        self._data_port_id_lt = data_port_id_lt

    @property
    def data_port_id_lte(self):
        """Gets the data_port_id_lte of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_lte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_lte

    @data_port_id_lte.setter
    def data_port_id_lte(self, data_port_id_lte):
        """Sets the data_port_id_lte of this VmExportFileWhereInput.


        :param data_port_id_lte: The data_port_id_lte of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_lte: str
        """

        self._data_port_id_lte = data_port_id_lte

    @property
    def data_port_id_not(self):
        """Gets the data_port_id_not of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_not

    @data_port_id_not.setter
    def data_port_id_not(self, data_port_id_not):
        """Sets the data_port_id_not of this VmExportFileWhereInput.


        :param data_port_id_not: The data_port_id_not of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_not: str
        """

        self._data_port_id_not = data_port_id_not

    @property
    def data_port_id_not_contains(self):
        """Gets the data_port_id_not_contains of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_not_contains of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_not_contains

    @data_port_id_not_contains.setter
    def data_port_id_not_contains(self, data_port_id_not_contains):
        """Sets the data_port_id_not_contains of this VmExportFileWhereInput.


        :param data_port_id_not_contains: The data_port_id_not_contains of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_not_contains: str
        """

        self._data_port_id_not_contains = data_port_id_not_contains

    @property
    def data_port_id_not_ends_with(self):
        """Gets the data_port_id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_not_ends_with

    @data_port_id_not_ends_with.setter
    def data_port_id_not_ends_with(self, data_port_id_not_ends_with):
        """Sets the data_port_id_not_ends_with of this VmExportFileWhereInput.


        :param data_port_id_not_ends_with: The data_port_id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_not_ends_with: str
        """

        self._data_port_id_not_ends_with = data_port_id_not_ends_with

    @property
    def data_port_id_not_in(self):
        """Gets the data_port_id_not_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_not_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._data_port_id_not_in

    @data_port_id_not_in.setter
    def data_port_id_not_in(self, data_port_id_not_in):
        """Sets the data_port_id_not_in of this VmExportFileWhereInput.


        :param data_port_id_not_in: The data_port_id_not_in of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_not_in: list[str]
        """

        self._data_port_id_not_in = data_port_id_not_in

    @property
    def data_port_id_not_starts_with(self):
        """Gets the data_port_id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_not_starts_with

    @data_port_id_not_starts_with.setter
    def data_port_id_not_starts_with(self, data_port_id_not_starts_with):
        """Sets the data_port_id_not_starts_with of this VmExportFileWhereInput.


        :param data_port_id_not_starts_with: The data_port_id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_not_starts_with: str
        """

        self._data_port_id_not_starts_with = data_port_id_not_starts_with

    @property
    def data_port_id_starts_with(self):
        """Gets the data_port_id_starts_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The data_port_id_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._data_port_id_starts_with

    @data_port_id_starts_with.setter
    def data_port_id_starts_with(self, data_port_id_starts_with):
        """Sets the data_port_id_starts_with of this VmExportFileWhereInput.


        :param data_port_id_starts_with: The data_port_id_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :type data_port_id_starts_with: str
        """

        self._data_port_id_starts_with = data_port_id_starts_with

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this VmExportFileWhereInput.  # noqa: E501


        :return: The entity_async_status of this VmExportFileWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this VmExportFileWhereInput.


        :param entity_async_status: The entity_async_status of this VmExportFileWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this VmExportFileWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this VmExportFileWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this VmExportFileWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this VmExportFileWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this VmExportFileWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this VmExportFileWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this VmExportFileWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def id(self):
        """Gets the id of this VmExportFileWhereInput.  # noqa: E501


        :return: The id of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VmExportFileWhereInput.


        :param id: The id of this VmExportFileWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_contains of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this VmExportFileWhereInput.


        :param id_contains: The id_contains of this VmExportFileWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this VmExportFileWhereInput.


        :param id_ends_with: The id_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_gt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this VmExportFileWhereInput.


        :param id_gt: The id_gt of this VmExportFileWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_gte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this VmExportFileWhereInput.


        :param id_gte: The id_gte of this VmExportFileWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this VmExportFileWhereInput.


        :param id_in: The id_in of this VmExportFileWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_lt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this VmExportFileWhereInput.


        :param id_lt: The id_lt of this VmExportFileWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_lte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this VmExportFileWhereInput.


        :param id_lte: The id_lte of this VmExportFileWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this VmExportFileWhereInput.


        :param id_not: The id_not of this VmExportFileWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_not_contains of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this VmExportFileWhereInput.


        :param id_not_contains: The id_not_contains of this VmExportFileWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this VmExportFileWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_not_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this VmExportFileWhereInput.


        :param id_not_in: The id_not_in of this VmExportFileWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this VmExportFileWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The id_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this VmExportFileWhereInput.


        :param id_starts_with: The id_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def storage_cluster_id(self):
        """Gets the storage_cluster_id of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id

    @storage_cluster_id.setter
    def storage_cluster_id(self, storage_cluster_id):
        """Sets the storage_cluster_id of this VmExportFileWhereInput.


        :param storage_cluster_id: The storage_cluster_id of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id: str
        """

        self._storage_cluster_id = storage_cluster_id

    @property
    def storage_cluster_id_contains(self):
        """Gets the storage_cluster_id_contains of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_contains of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_contains

    @storage_cluster_id_contains.setter
    def storage_cluster_id_contains(self, storage_cluster_id_contains):
        """Sets the storage_cluster_id_contains of this VmExportFileWhereInput.


        :param storage_cluster_id_contains: The storage_cluster_id_contains of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_contains: str
        """

        self._storage_cluster_id_contains = storage_cluster_id_contains

    @property
    def storage_cluster_id_ends_with(self):
        """Gets the storage_cluster_id_ends_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_ends_with

    @storage_cluster_id_ends_with.setter
    def storage_cluster_id_ends_with(self, storage_cluster_id_ends_with):
        """Sets the storage_cluster_id_ends_with of this VmExportFileWhereInput.


        :param storage_cluster_id_ends_with: The storage_cluster_id_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_ends_with: str
        """

        self._storage_cluster_id_ends_with = storage_cluster_id_ends_with

    @property
    def storage_cluster_id_gt(self):
        """Gets the storage_cluster_id_gt of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_gt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_gt

    @storage_cluster_id_gt.setter
    def storage_cluster_id_gt(self, storage_cluster_id_gt):
        """Sets the storage_cluster_id_gt of this VmExportFileWhereInput.


        :param storage_cluster_id_gt: The storage_cluster_id_gt of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_gt: str
        """

        self._storage_cluster_id_gt = storage_cluster_id_gt

    @property
    def storage_cluster_id_gte(self):
        """Gets the storage_cluster_id_gte of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_gte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_gte

    @storage_cluster_id_gte.setter
    def storage_cluster_id_gte(self, storage_cluster_id_gte):
        """Sets the storage_cluster_id_gte of this VmExportFileWhereInput.


        :param storage_cluster_id_gte: The storage_cluster_id_gte of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_gte: str
        """

        self._storage_cluster_id_gte = storage_cluster_id_gte

    @property
    def storage_cluster_id_in(self):
        """Gets the storage_cluster_id_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._storage_cluster_id_in

    @storage_cluster_id_in.setter
    def storage_cluster_id_in(self, storage_cluster_id_in):
        """Sets the storage_cluster_id_in of this VmExportFileWhereInput.


        :param storage_cluster_id_in: The storage_cluster_id_in of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_in: list[str]
        """

        self._storage_cluster_id_in = storage_cluster_id_in

    @property
    def storage_cluster_id_lt(self):
        """Gets the storage_cluster_id_lt of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_lt of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_lt

    @storage_cluster_id_lt.setter
    def storage_cluster_id_lt(self, storage_cluster_id_lt):
        """Sets the storage_cluster_id_lt of this VmExportFileWhereInput.


        :param storage_cluster_id_lt: The storage_cluster_id_lt of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_lt: str
        """

        self._storage_cluster_id_lt = storage_cluster_id_lt

    @property
    def storage_cluster_id_lte(self):
        """Gets the storage_cluster_id_lte of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_lte of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_lte

    @storage_cluster_id_lte.setter
    def storage_cluster_id_lte(self, storage_cluster_id_lte):
        """Sets the storage_cluster_id_lte of this VmExportFileWhereInput.


        :param storage_cluster_id_lte: The storage_cluster_id_lte of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_lte: str
        """

        self._storage_cluster_id_lte = storage_cluster_id_lte

    @property
    def storage_cluster_id_not(self):
        """Gets the storage_cluster_id_not of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_not

    @storage_cluster_id_not.setter
    def storage_cluster_id_not(self, storage_cluster_id_not):
        """Sets the storage_cluster_id_not of this VmExportFileWhereInput.


        :param storage_cluster_id_not: The storage_cluster_id_not of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_not: str
        """

        self._storage_cluster_id_not = storage_cluster_id_not

    @property
    def storage_cluster_id_not_contains(self):
        """Gets the storage_cluster_id_not_contains of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_not_contains of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_not_contains

    @storage_cluster_id_not_contains.setter
    def storage_cluster_id_not_contains(self, storage_cluster_id_not_contains):
        """Sets the storage_cluster_id_not_contains of this VmExportFileWhereInput.


        :param storage_cluster_id_not_contains: The storage_cluster_id_not_contains of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_not_contains: str
        """

        self._storage_cluster_id_not_contains = storage_cluster_id_not_contains

    @property
    def storage_cluster_id_not_ends_with(self):
        """Gets the storage_cluster_id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_not_ends_with

    @storage_cluster_id_not_ends_with.setter
    def storage_cluster_id_not_ends_with(self, storage_cluster_id_not_ends_with):
        """Sets the storage_cluster_id_not_ends_with of this VmExportFileWhereInput.


        :param storage_cluster_id_not_ends_with: The storage_cluster_id_not_ends_with of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_not_ends_with: str
        """

        self._storage_cluster_id_not_ends_with = storage_cluster_id_not_ends_with

    @property
    def storage_cluster_id_not_in(self):
        """Gets the storage_cluster_id_not_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_not_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._storage_cluster_id_not_in

    @storage_cluster_id_not_in.setter
    def storage_cluster_id_not_in(self, storage_cluster_id_not_in):
        """Sets the storage_cluster_id_not_in of this VmExportFileWhereInput.


        :param storage_cluster_id_not_in: The storage_cluster_id_not_in of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_not_in: list[str]
        """

        self._storage_cluster_id_not_in = storage_cluster_id_not_in

    @property
    def storage_cluster_id_not_starts_with(self):
        """Gets the storage_cluster_id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_not_starts_with

    @storage_cluster_id_not_starts_with.setter
    def storage_cluster_id_not_starts_with(self, storage_cluster_id_not_starts_with):
        """Sets the storage_cluster_id_not_starts_with of this VmExportFileWhereInput.


        :param storage_cluster_id_not_starts_with: The storage_cluster_id_not_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_not_starts_with: str
        """

        self._storage_cluster_id_not_starts_with = storage_cluster_id_not_starts_with

    @property
    def storage_cluster_id_starts_with(self):
        """Gets the storage_cluster_id_starts_with of this VmExportFileWhereInput.  # noqa: E501


        :return: The storage_cluster_id_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._storage_cluster_id_starts_with

    @storage_cluster_id_starts_with.setter
    def storage_cluster_id_starts_with(self, storage_cluster_id_starts_with):
        """Sets the storage_cluster_id_starts_with of this VmExportFileWhereInput.


        :param storage_cluster_id_starts_with: The storage_cluster_id_starts_with of this VmExportFileWhereInput.  # noqa: E501
        :type storage_cluster_id_starts_with: str
        """

        self._storage_cluster_id_starts_with = storage_cluster_id_starts_with

    @property
    def type(self):
        """Gets the type of this VmExportFileWhereInput.  # noqa: E501


        :return: The type of this VmExportFileWhereInput.  # noqa: E501
        :rtype: VmExportFileType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VmExportFileWhereInput.


        :param type: The type of this VmExportFileWhereInput.  # noqa: E501
        :type type: VmExportFileType
        """

        self._type = type

    @property
    def type_in(self):
        """Gets the type_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The type_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[VmExportFileType]
        """
        return self._type_in

    @type_in.setter
    def type_in(self, type_in):
        """Sets the type_in of this VmExportFileWhereInput.


        :param type_in: The type_in of this VmExportFileWhereInput.  # noqa: E501
        :type type_in: list[VmExportFileType]
        """

        self._type_in = type_in

    @property
    def type_not(self):
        """Gets the type_not of this VmExportFileWhereInput.  # noqa: E501


        :return: The type_not of this VmExportFileWhereInput.  # noqa: E501
        :rtype: VmExportFileType
        """
        return self._type_not

    @type_not.setter
    def type_not(self, type_not):
        """Sets the type_not of this VmExportFileWhereInput.


        :param type_not: The type_not of this VmExportFileWhereInput.  # noqa: E501
        :type type_not: VmExportFileType
        """

        self._type_not = type_not

    @property
    def type_not_in(self):
        """Gets the type_not_in of this VmExportFileWhereInput.  # noqa: E501


        :return: The type_not_in of this VmExportFileWhereInput.  # noqa: E501
        :rtype: list[VmExportFileType]
        """
        return self._type_not_in

    @type_not_in.setter
    def type_not_in(self, type_not_in):
        """Sets the type_not_in of this VmExportFileWhereInput.


        :param type_not_in: The type_not_in of this VmExportFileWhereInput.  # noqa: E501
        :type type_not_in: list[VmExportFileType]
        """

        self._type_not_in = type_not_in

    @property
    def vm(self):
        """Gets the vm of this VmExportFileWhereInput.  # noqa: E501


        :return: The vm of this VmExportFileWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vm

    @vm.setter
    def vm(self, vm):
        """Sets the vm of this VmExportFileWhereInput.


        :param vm: The vm of this VmExportFileWhereInput.  # noqa: E501
        :type vm: VmWhereInput
        """

        self._vm = vm

    @property
    def vm_volume(self):
        """Gets the vm_volume of this VmExportFileWhereInput.  # noqa: E501


        :return: The vm_volume of this VmExportFileWhereInput.  # noqa: E501
        :rtype: VmVolumeWhereInput
        """
        return self._vm_volume

    @vm_volume.setter
    def vm_volume(self, vm_volume):
        """Sets the vm_volume of this VmExportFileWhereInput.


        :param vm_volume: The vm_volume of this VmExportFileWhereInput.  # noqa: E501
        :type vm_volume: VmVolumeWhereInput
        """

        self._vm_volume = vm_volume

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VmExportFileWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VmExportFileWhereInput):
            return True

        return self.to_dict() != other.to_dict()

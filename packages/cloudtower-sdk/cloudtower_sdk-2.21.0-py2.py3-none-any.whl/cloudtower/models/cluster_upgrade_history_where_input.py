# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class ClusterUpgradeHistoryWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[ClusterUpgradeHistoryWhereInput]',
        '_not': 'list[ClusterUpgradeHistoryWhereInput]',
        '_or': 'list[ClusterUpgradeHistoryWhereInput]',
        'cluster': 'ClusterWhereInput',
        'date': 'str',
        'date_gt': 'str',
        'date_gte': 'str',
        'date_in': 'list[str]',
        'date_lt': 'str',
        'date_lte': 'str',
        'date_not': 'str',
        'date_not_in': 'list[str]',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'result': 'str',
        'result_contains': 'str',
        'result_ends_with': 'str',
        'result_gt': 'str',
        'result_gte': 'str',
        'result_in': 'list[str]',
        'result_lt': 'str',
        'result_lte': 'str',
        'result_not': 'str',
        'result_not_contains': 'str',
        'result_not_ends_with': 'str',
        'result_not_in': 'list[str]',
        'result_not_starts_with': 'str',
        'result_starts_with': 'str',
        'task_uuid': 'str',
        'task_uuid_contains': 'str',
        'task_uuid_ends_with': 'str',
        'task_uuid_gt': 'str',
        'task_uuid_gte': 'str',
        'task_uuid_in': 'list[str]',
        'task_uuid_lt': 'str',
        'task_uuid_lte': 'str',
        'task_uuid_not': 'str',
        'task_uuid_not_contains': 'str',
        'task_uuid_not_ends_with': 'str',
        'task_uuid_not_in': 'list[str]',
        'task_uuid_not_starts_with': 'str',
        'task_uuid_starts_with': 'str',
        'version': 'str',
        'version_contains': 'str',
        'version_ends_with': 'str',
        'version_gt': 'str',
        'version_gte': 'str',
        'version_in': 'list[str]',
        'version_lt': 'str',
        'version_lte': 'str',
        'version_not': 'str',
        'version_not_contains': 'str',
        'version_not_ends_with': 'str',
        'version_not_in': 'list[str]',
        'version_not_starts_with': 'str',
        'version_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'cluster': 'cluster',
        'date': 'date',
        'date_gt': 'date_gt',
        'date_gte': 'date_gte',
        'date_in': 'date_in',
        'date_lt': 'date_lt',
        'date_lte': 'date_lte',
        'date_not': 'date_not',
        'date_not_in': 'date_not_in',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'result': 'result',
        'result_contains': 'result_contains',
        'result_ends_with': 'result_ends_with',
        'result_gt': 'result_gt',
        'result_gte': 'result_gte',
        'result_in': 'result_in',
        'result_lt': 'result_lt',
        'result_lte': 'result_lte',
        'result_not': 'result_not',
        'result_not_contains': 'result_not_contains',
        'result_not_ends_with': 'result_not_ends_with',
        'result_not_in': 'result_not_in',
        'result_not_starts_with': 'result_not_starts_with',
        'result_starts_with': 'result_starts_with',
        'task_uuid': 'task_uuid',
        'task_uuid_contains': 'task_uuid_contains',
        'task_uuid_ends_with': 'task_uuid_ends_with',
        'task_uuid_gt': 'task_uuid_gt',
        'task_uuid_gte': 'task_uuid_gte',
        'task_uuid_in': 'task_uuid_in',
        'task_uuid_lt': 'task_uuid_lt',
        'task_uuid_lte': 'task_uuid_lte',
        'task_uuid_not': 'task_uuid_not',
        'task_uuid_not_contains': 'task_uuid_not_contains',
        'task_uuid_not_ends_with': 'task_uuid_not_ends_with',
        'task_uuid_not_in': 'task_uuid_not_in',
        'task_uuid_not_starts_with': 'task_uuid_not_starts_with',
        'task_uuid_starts_with': 'task_uuid_starts_with',
        'version': 'version',
        'version_contains': 'version_contains',
        'version_ends_with': 'version_ends_with',
        'version_gt': 'version_gt',
        'version_gte': 'version_gte',
        'version_in': 'version_in',
        'version_lt': 'version_lt',
        'version_lte': 'version_lte',
        'version_not': 'version_not',
        'version_not_contains': 'version_not_contains',
        'version_not_ends_with': 'version_not_ends_with',
        'version_not_in': 'version_not_in',
        'version_not_starts_with': 'version_not_starts_with',
        'version_starts_with': 'version_starts_with'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """ClusterUpgradeHistoryWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._cluster = None
        self._date = None
        self._date_gt = None
        self._date_gte = None
        self._date_in = None
        self._date_lt = None
        self._date_lte = None
        self._date_not = None
        self._date_not_in = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._result = None
        self._result_contains = None
        self._result_ends_with = None
        self._result_gt = None
        self._result_gte = None
        self._result_in = None
        self._result_lt = None
        self._result_lte = None
        self._result_not = None
        self._result_not_contains = None
        self._result_not_ends_with = None
        self._result_not_in = None
        self._result_not_starts_with = None
        self._result_starts_with = None
        self._task_uuid = None
        self._task_uuid_contains = None
        self._task_uuid_ends_with = None
        self._task_uuid_gt = None
        self._task_uuid_gte = None
        self._task_uuid_in = None
        self._task_uuid_lt = None
        self._task_uuid_lte = None
        self._task_uuid_not = None
        self._task_uuid_not_contains = None
        self._task_uuid_not_ends_with = None
        self._task_uuid_not_in = None
        self._task_uuid_not_starts_with = None
        self._task_uuid_starts_with = None
        self._version = None
        self._version_contains = None
        self._version_ends_with = None
        self._version_gt = None
        self._version_gte = None
        self._version_in = None
        self._version_lt = None
        self._version_lte = None
        self._version_not = None
        self._version_not_contains = None
        self._version_not_ends_with = None
        self._version_not_in = None
        self._version_not_starts_with = None
        self._version_starts_with = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.cluster = kwargs.get("cluster", None)
        self.date = kwargs.get("date", None)
        self.date_gt = kwargs.get("date_gt", None)
        self.date_gte = kwargs.get("date_gte", None)
        self.date_in = kwargs.get("date_in", None)
        self.date_lt = kwargs.get("date_lt", None)
        self.date_lte = kwargs.get("date_lte", None)
        self.date_not = kwargs.get("date_not", None)
        self.date_not_in = kwargs.get("date_not_in", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.result = kwargs.get("result", None)
        self.result_contains = kwargs.get("result_contains", None)
        self.result_ends_with = kwargs.get("result_ends_with", None)
        self.result_gt = kwargs.get("result_gt", None)
        self.result_gte = kwargs.get("result_gte", None)
        self.result_in = kwargs.get("result_in", None)
        self.result_lt = kwargs.get("result_lt", None)
        self.result_lte = kwargs.get("result_lte", None)
        self.result_not = kwargs.get("result_not", None)
        self.result_not_contains = kwargs.get("result_not_contains", None)
        self.result_not_ends_with = kwargs.get("result_not_ends_with", None)
        self.result_not_in = kwargs.get("result_not_in", None)
        self.result_not_starts_with = kwargs.get("result_not_starts_with", None)
        self.result_starts_with = kwargs.get("result_starts_with", None)
        self.task_uuid = kwargs.get("task_uuid", None)
        self.task_uuid_contains = kwargs.get("task_uuid_contains", None)
        self.task_uuid_ends_with = kwargs.get("task_uuid_ends_with", None)
        self.task_uuid_gt = kwargs.get("task_uuid_gt", None)
        self.task_uuid_gte = kwargs.get("task_uuid_gte", None)
        self.task_uuid_in = kwargs.get("task_uuid_in", None)
        self.task_uuid_lt = kwargs.get("task_uuid_lt", None)
        self.task_uuid_lte = kwargs.get("task_uuid_lte", None)
        self.task_uuid_not = kwargs.get("task_uuid_not", None)
        self.task_uuid_not_contains = kwargs.get("task_uuid_not_contains", None)
        self.task_uuid_not_ends_with = kwargs.get("task_uuid_not_ends_with", None)
        self.task_uuid_not_in = kwargs.get("task_uuid_not_in", None)
        self.task_uuid_not_starts_with = kwargs.get("task_uuid_not_starts_with", None)
        self.task_uuid_starts_with = kwargs.get("task_uuid_starts_with", None)
        self.version = kwargs.get("version", None)
        self.version_contains = kwargs.get("version_contains", None)
        self.version_ends_with = kwargs.get("version_ends_with", None)
        self.version_gt = kwargs.get("version_gt", None)
        self.version_gte = kwargs.get("version_gte", None)
        self.version_in = kwargs.get("version_in", None)
        self.version_lt = kwargs.get("version_lt", None)
        self.version_lte = kwargs.get("version_lte", None)
        self.version_not = kwargs.get("version_not", None)
        self.version_not_contains = kwargs.get("version_not_contains", None)
        self.version_not_ends_with = kwargs.get("version_not_ends_with", None)
        self.version_not_in = kwargs.get("version_not_in", None)
        self.version_not_starts_with = kwargs.get("version_not_starts_with", None)
        self.version_starts_with = kwargs.get("version_starts_with", None)

    @property
    def _and(self):
        """Gets the _and of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The _and of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[ClusterUpgradeHistoryWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this ClusterUpgradeHistoryWhereInput.


        :param _and: The _and of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type _and: list[ClusterUpgradeHistoryWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The _not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[ClusterUpgradeHistoryWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this ClusterUpgradeHistoryWhereInput.


        :param _not: The _not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type _not: list[ClusterUpgradeHistoryWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The _or of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[ClusterUpgradeHistoryWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this ClusterUpgradeHistoryWhereInput.


        :param _or: The _or of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type _or: list[ClusterUpgradeHistoryWhereInput]
        """

        self.__or = _or

    @property
    def cluster(self):
        """Gets the cluster of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The cluster of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this ClusterUpgradeHistoryWhereInput.


        :param cluster: The cluster of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def date(self):
        """Gets the date of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._date

    @date.setter
    def date(self, date):
        """Sets the date of this ClusterUpgradeHistoryWhereInput.


        :param date: The date of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date: str
        """

        self._date = date

    @property
    def date_gt(self):
        """Gets the date_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._date_gt

    @date_gt.setter
    def date_gt(self, date_gt):
        """Sets the date_gt of this ClusterUpgradeHistoryWhereInput.


        :param date_gt: The date_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date_gt: str
        """

        self._date_gt = date_gt

    @property
    def date_gte(self):
        """Gets the date_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._date_gte

    @date_gte.setter
    def date_gte(self, date_gte):
        """Sets the date_gte of this ClusterUpgradeHistoryWhereInput.


        :param date_gte: The date_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date_gte: str
        """

        self._date_gte = date_gte

    @property
    def date_in(self):
        """Gets the date_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._date_in

    @date_in.setter
    def date_in(self, date_in):
        """Sets the date_in of this ClusterUpgradeHistoryWhereInput.


        :param date_in: The date_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date_in: list[str]
        """

        self._date_in = date_in

    @property
    def date_lt(self):
        """Gets the date_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._date_lt

    @date_lt.setter
    def date_lt(self, date_lt):
        """Sets the date_lt of this ClusterUpgradeHistoryWhereInput.


        :param date_lt: The date_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date_lt: str
        """

        self._date_lt = date_lt

    @property
    def date_lte(self):
        """Gets the date_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._date_lte

    @date_lte.setter
    def date_lte(self, date_lte):
        """Sets the date_lte of this ClusterUpgradeHistoryWhereInput.


        :param date_lte: The date_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date_lte: str
        """

        self._date_lte = date_lte

    @property
    def date_not(self):
        """Gets the date_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._date_not

    @date_not.setter
    def date_not(self, date_not):
        """Sets the date_not of this ClusterUpgradeHistoryWhereInput.


        :param date_not: The date_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date_not: str
        """

        self._date_not = date_not

    @property
    def date_not_in(self):
        """Gets the date_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The date_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._date_not_in

    @date_not_in.setter
    def date_not_in(self, date_not_in):
        """Sets the date_not_in of this ClusterUpgradeHistoryWhereInput.


        :param date_not_in: The date_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type date_not_in: list[str]
        """

        self._date_not_in = date_not_in

    @property
    def id(self):
        """Gets the id of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClusterUpgradeHistoryWhereInput.


        :param id: The id of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this ClusterUpgradeHistoryWhereInput.


        :param id_contains: The id_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param id_ends_with: The id_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this ClusterUpgradeHistoryWhereInput.


        :param id_gt: The id_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this ClusterUpgradeHistoryWhereInput.


        :param id_gte: The id_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this ClusterUpgradeHistoryWhereInput.


        :param id_in: The id_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this ClusterUpgradeHistoryWhereInput.


        :param id_lt: The id_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this ClusterUpgradeHistoryWhereInput.


        :param id_lte: The id_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this ClusterUpgradeHistoryWhereInput.


        :param id_not: The id_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this ClusterUpgradeHistoryWhereInput.


        :param id_not_contains: The id_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this ClusterUpgradeHistoryWhereInput.


        :param id_not_in: The id_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The id_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param id_starts_with: The id_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def local_id(self):
        """Gets the local_id of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this ClusterUpgradeHistoryWhereInput.


        :param local_id: The local_id of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this ClusterUpgradeHistoryWhereInput.


        :param local_id_contains: The local_id_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this ClusterUpgradeHistoryWhereInput.


        :param local_id_gt: The local_id_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this ClusterUpgradeHistoryWhereInput.


        :param local_id_gte: The local_id_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this ClusterUpgradeHistoryWhereInput.


        :param local_id_in: The local_id_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this ClusterUpgradeHistoryWhereInput.


        :param local_id_lt: The local_id_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this ClusterUpgradeHistoryWhereInput.


        :param local_id_lte: The local_id_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this ClusterUpgradeHistoryWhereInput.


        :param local_id_not: The local_id_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this ClusterUpgradeHistoryWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this ClusterUpgradeHistoryWhereInput.


        :param local_id_not_in: The local_id_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def result(self):
        """Gets the result of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this ClusterUpgradeHistoryWhereInput.


        :param result: The result of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result: str
        """

        self._result = result

    @property
    def result_contains(self):
        """Gets the result_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_contains

    @result_contains.setter
    def result_contains(self, result_contains):
        """Sets the result_contains of this ClusterUpgradeHistoryWhereInput.


        :param result_contains: The result_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_contains: str
        """

        self._result_contains = result_contains

    @property
    def result_ends_with(self):
        """Gets the result_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_ends_with

    @result_ends_with.setter
    def result_ends_with(self, result_ends_with):
        """Sets the result_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param result_ends_with: The result_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_ends_with: str
        """

        self._result_ends_with = result_ends_with

    @property
    def result_gt(self):
        """Gets the result_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_gt

    @result_gt.setter
    def result_gt(self, result_gt):
        """Sets the result_gt of this ClusterUpgradeHistoryWhereInput.


        :param result_gt: The result_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_gt: str
        """

        self._result_gt = result_gt

    @property
    def result_gte(self):
        """Gets the result_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_gte

    @result_gte.setter
    def result_gte(self, result_gte):
        """Sets the result_gte of this ClusterUpgradeHistoryWhereInput.


        :param result_gte: The result_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_gte: str
        """

        self._result_gte = result_gte

    @property
    def result_in(self):
        """Gets the result_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._result_in

    @result_in.setter
    def result_in(self, result_in):
        """Sets the result_in of this ClusterUpgradeHistoryWhereInput.


        :param result_in: The result_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_in: list[str]
        """

        self._result_in = result_in

    @property
    def result_lt(self):
        """Gets the result_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_lt

    @result_lt.setter
    def result_lt(self, result_lt):
        """Sets the result_lt of this ClusterUpgradeHistoryWhereInput.


        :param result_lt: The result_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_lt: str
        """

        self._result_lt = result_lt

    @property
    def result_lte(self):
        """Gets the result_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_lte

    @result_lte.setter
    def result_lte(self, result_lte):
        """Sets the result_lte of this ClusterUpgradeHistoryWhereInput.


        :param result_lte: The result_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_lte: str
        """

        self._result_lte = result_lte

    @property
    def result_not(self):
        """Gets the result_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_not

    @result_not.setter
    def result_not(self, result_not):
        """Sets the result_not of this ClusterUpgradeHistoryWhereInput.


        :param result_not: The result_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_not: str
        """

        self._result_not = result_not

    @property
    def result_not_contains(self):
        """Gets the result_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_not_contains

    @result_not_contains.setter
    def result_not_contains(self, result_not_contains):
        """Sets the result_not_contains of this ClusterUpgradeHistoryWhereInput.


        :param result_not_contains: The result_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_not_contains: str
        """

        self._result_not_contains = result_not_contains

    @property
    def result_not_ends_with(self):
        """Gets the result_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_not_ends_with

    @result_not_ends_with.setter
    def result_not_ends_with(self, result_not_ends_with):
        """Sets the result_not_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param result_not_ends_with: The result_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_not_ends_with: str
        """

        self._result_not_ends_with = result_not_ends_with

    @property
    def result_not_in(self):
        """Gets the result_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._result_not_in

    @result_not_in.setter
    def result_not_in(self, result_not_in):
        """Sets the result_not_in of this ClusterUpgradeHistoryWhereInput.


        :param result_not_in: The result_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_not_in: list[str]
        """

        self._result_not_in = result_not_in

    @property
    def result_not_starts_with(self):
        """Gets the result_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_not_starts_with

    @result_not_starts_with.setter
    def result_not_starts_with(self, result_not_starts_with):
        """Sets the result_not_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param result_not_starts_with: The result_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_not_starts_with: str
        """

        self._result_not_starts_with = result_not_starts_with

    @property
    def result_starts_with(self):
        """Gets the result_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The result_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._result_starts_with

    @result_starts_with.setter
    def result_starts_with(self, result_starts_with):
        """Sets the result_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param result_starts_with: The result_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type result_starts_with: str
        """

        self._result_starts_with = result_starts_with

    @property
    def task_uuid(self):
        """Gets the task_uuid of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid

    @task_uuid.setter
    def task_uuid(self, task_uuid):
        """Sets the task_uuid of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid: The task_uuid of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid: str
        """

        self._task_uuid = task_uuid

    @property
    def task_uuid_contains(self):
        """Gets the task_uuid_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_contains

    @task_uuid_contains.setter
    def task_uuid_contains(self, task_uuid_contains):
        """Sets the task_uuid_contains of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_contains: The task_uuid_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_contains: str
        """

        self._task_uuid_contains = task_uuid_contains

    @property
    def task_uuid_ends_with(self):
        """Gets the task_uuid_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_ends_with

    @task_uuid_ends_with.setter
    def task_uuid_ends_with(self, task_uuid_ends_with):
        """Sets the task_uuid_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_ends_with: The task_uuid_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_ends_with: str
        """

        self._task_uuid_ends_with = task_uuid_ends_with

    @property
    def task_uuid_gt(self):
        """Gets the task_uuid_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_gt

    @task_uuid_gt.setter
    def task_uuid_gt(self, task_uuid_gt):
        """Sets the task_uuid_gt of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_gt: The task_uuid_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_gt: str
        """

        self._task_uuid_gt = task_uuid_gt

    @property
    def task_uuid_gte(self):
        """Gets the task_uuid_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_gte

    @task_uuid_gte.setter
    def task_uuid_gte(self, task_uuid_gte):
        """Sets the task_uuid_gte of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_gte: The task_uuid_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_gte: str
        """

        self._task_uuid_gte = task_uuid_gte

    @property
    def task_uuid_in(self):
        """Gets the task_uuid_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._task_uuid_in

    @task_uuid_in.setter
    def task_uuid_in(self, task_uuid_in):
        """Sets the task_uuid_in of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_in: The task_uuid_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_in: list[str]
        """

        self._task_uuid_in = task_uuid_in

    @property
    def task_uuid_lt(self):
        """Gets the task_uuid_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_lt

    @task_uuid_lt.setter
    def task_uuid_lt(self, task_uuid_lt):
        """Sets the task_uuid_lt of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_lt: The task_uuid_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_lt: str
        """

        self._task_uuid_lt = task_uuid_lt

    @property
    def task_uuid_lte(self):
        """Gets the task_uuid_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_lte

    @task_uuid_lte.setter
    def task_uuid_lte(self, task_uuid_lte):
        """Sets the task_uuid_lte of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_lte: The task_uuid_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_lte: str
        """

        self._task_uuid_lte = task_uuid_lte

    @property
    def task_uuid_not(self):
        """Gets the task_uuid_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_not

    @task_uuid_not.setter
    def task_uuid_not(self, task_uuid_not):
        """Sets the task_uuid_not of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_not: The task_uuid_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_not: str
        """

        self._task_uuid_not = task_uuid_not

    @property
    def task_uuid_not_contains(self):
        """Gets the task_uuid_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_not_contains

    @task_uuid_not_contains.setter
    def task_uuid_not_contains(self, task_uuid_not_contains):
        """Sets the task_uuid_not_contains of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_not_contains: The task_uuid_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_not_contains: str
        """

        self._task_uuid_not_contains = task_uuid_not_contains

    @property
    def task_uuid_not_ends_with(self):
        """Gets the task_uuid_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_not_ends_with

    @task_uuid_not_ends_with.setter
    def task_uuid_not_ends_with(self, task_uuid_not_ends_with):
        """Sets the task_uuid_not_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_not_ends_with: The task_uuid_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_not_ends_with: str
        """

        self._task_uuid_not_ends_with = task_uuid_not_ends_with

    @property
    def task_uuid_not_in(self):
        """Gets the task_uuid_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._task_uuid_not_in

    @task_uuid_not_in.setter
    def task_uuid_not_in(self, task_uuid_not_in):
        """Sets the task_uuid_not_in of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_not_in: The task_uuid_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_not_in: list[str]
        """

        self._task_uuid_not_in = task_uuid_not_in

    @property
    def task_uuid_not_starts_with(self):
        """Gets the task_uuid_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_not_starts_with

    @task_uuid_not_starts_with.setter
    def task_uuid_not_starts_with(self, task_uuid_not_starts_with):
        """Sets the task_uuid_not_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_not_starts_with: The task_uuid_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_not_starts_with: str
        """

        self._task_uuid_not_starts_with = task_uuid_not_starts_with

    @property
    def task_uuid_starts_with(self):
        """Gets the task_uuid_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The task_uuid_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._task_uuid_starts_with

    @task_uuid_starts_with.setter
    def task_uuid_starts_with(self, task_uuid_starts_with):
        """Sets the task_uuid_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param task_uuid_starts_with: The task_uuid_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type task_uuid_starts_with: str
        """

        self._task_uuid_starts_with = task_uuid_starts_with

    @property
    def version(self):
        """Gets the version of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ClusterUpgradeHistoryWhereInput.


        :param version: The version of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version: str
        """

        self._version = version

    @property
    def version_contains(self):
        """Gets the version_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_contains

    @version_contains.setter
    def version_contains(self, version_contains):
        """Sets the version_contains of this ClusterUpgradeHistoryWhereInput.


        :param version_contains: The version_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_contains: str
        """

        self._version_contains = version_contains

    @property
    def version_ends_with(self):
        """Gets the version_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_ends_with

    @version_ends_with.setter
    def version_ends_with(self, version_ends_with):
        """Sets the version_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param version_ends_with: The version_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_ends_with: str
        """

        self._version_ends_with = version_ends_with

    @property
    def version_gt(self):
        """Gets the version_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_gt

    @version_gt.setter
    def version_gt(self, version_gt):
        """Sets the version_gt of this ClusterUpgradeHistoryWhereInput.


        :param version_gt: The version_gt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_gt: str
        """

        self._version_gt = version_gt

    @property
    def version_gte(self):
        """Gets the version_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_gte

    @version_gte.setter
    def version_gte(self, version_gte):
        """Sets the version_gte of this ClusterUpgradeHistoryWhereInput.


        :param version_gte: The version_gte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_gte: str
        """

        self._version_gte = version_gte

    @property
    def version_in(self):
        """Gets the version_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._version_in

    @version_in.setter
    def version_in(self, version_in):
        """Sets the version_in of this ClusterUpgradeHistoryWhereInput.


        :param version_in: The version_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_in: list[str]
        """

        self._version_in = version_in

    @property
    def version_lt(self):
        """Gets the version_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_lt

    @version_lt.setter
    def version_lt(self, version_lt):
        """Sets the version_lt of this ClusterUpgradeHistoryWhereInput.


        :param version_lt: The version_lt of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_lt: str
        """

        self._version_lt = version_lt

    @property
    def version_lte(self):
        """Gets the version_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_lte

    @version_lte.setter
    def version_lte(self, version_lte):
        """Sets the version_lte of this ClusterUpgradeHistoryWhereInput.


        :param version_lte: The version_lte of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_lte: str
        """

        self._version_lte = version_lte

    @property
    def version_not(self):
        """Gets the version_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not

    @version_not.setter
    def version_not(self, version_not):
        """Sets the version_not of this ClusterUpgradeHistoryWhereInput.


        :param version_not: The version_not of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_not: str
        """

        self._version_not = version_not

    @property
    def version_not_contains(self):
        """Gets the version_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not_contains

    @version_not_contains.setter
    def version_not_contains(self, version_not_contains):
        """Sets the version_not_contains of this ClusterUpgradeHistoryWhereInput.


        :param version_not_contains: The version_not_contains of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_not_contains: str
        """

        self._version_not_contains = version_not_contains

    @property
    def version_not_ends_with(self):
        """Gets the version_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not_ends_with

    @version_not_ends_with.setter
    def version_not_ends_with(self, version_not_ends_with):
        """Sets the version_not_ends_with of this ClusterUpgradeHistoryWhereInput.


        :param version_not_ends_with: The version_not_ends_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_not_ends_with: str
        """

        self._version_not_ends_with = version_not_ends_with

    @property
    def version_not_in(self):
        """Gets the version_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._version_not_in

    @version_not_in.setter
    def version_not_in(self, version_not_in):
        """Sets the version_not_in of this ClusterUpgradeHistoryWhereInput.


        :param version_not_in: The version_not_in of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_not_in: list[str]
        """

        self._version_not_in = version_not_in

    @property
    def version_not_starts_with(self):
        """Gets the version_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not_starts_with

    @version_not_starts_with.setter
    def version_not_starts_with(self, version_not_starts_with):
        """Sets the version_not_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param version_not_starts_with: The version_not_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_not_starts_with: str
        """

        self._version_not_starts_with = version_not_starts_with

    @property
    def version_starts_with(self):
        """Gets the version_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501


        :return: The version_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_starts_with

    @version_starts_with.setter
    def version_starts_with(self, version_starts_with):
        """Sets the version_starts_with of this ClusterUpgradeHistoryWhereInput.


        :param version_starts_with: The version_starts_with of this ClusterUpgradeHistoryWhereInput.  # noqa: E501
        :type version_starts_with: str
        """

        self._version_starts_with = version_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClusterUpgradeHistoryWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ClusterUpgradeHistoryWhereInput):
            return True

        return self.to_dict() != other.to_dict()

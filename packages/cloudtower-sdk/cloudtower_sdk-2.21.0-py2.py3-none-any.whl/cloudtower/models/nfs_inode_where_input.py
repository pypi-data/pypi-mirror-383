# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class NfsInodeWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[NfsInodeWhereInput]',
        '_not': 'list[NfsInodeWhereInput]',
        '_or': 'list[NfsInodeWhereInput]',
        'assigned_size': 'int',
        'assigned_size_gt': 'int',
        'assigned_size_gte': 'int',
        'assigned_size_in': 'list[int]',
        'assigned_size_lt': 'int',
        'assigned_size_lte': 'int',
        'assigned_size_not': 'int',
        'assigned_size_not_in': 'list[int]',
        'downgraded_prioritized_space': 'int',
        'downgraded_prioritized_space_gt': 'int',
        'downgraded_prioritized_space_gte': 'int',
        'downgraded_prioritized_space_in': 'list[int]',
        'downgraded_prioritized_space_lt': 'int',
        'downgraded_prioritized_space_lte': 'int',
        'downgraded_prioritized_space_not': 'int',
        'downgraded_prioritized_space_not_in': 'list[int]',
        'ec_k': 'int',
        'ec_k_gt': 'int',
        'ec_k_gte': 'int',
        'ec_k_in': 'list[int]',
        'ec_k_lt': 'int',
        'ec_k_lte': 'int',
        'ec_k_not': 'int',
        'ec_k_not_in': 'list[int]',
        'ec_m': 'int',
        'ec_m_gt': 'int',
        'ec_m_gte': 'int',
        'ec_m_in': 'list[int]',
        'ec_m_lt': 'int',
        'ec_m_lte': 'int',
        'ec_m_not': 'int',
        'ec_m_not_in': 'list[int]',
        'encrypt_method': 'EncryptMethod',
        'encrypt_method_in': 'list[EncryptMethod]',
        'encrypt_method_not': 'EncryptMethod',
        'encrypt_method_not_in': 'list[EncryptMethod]',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'file': 'bool',
        'file_not': 'bool',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'labels_every': 'LabelWhereInput',
        'labels_none': 'LabelWhereInput',
        'labels_some': 'LabelWhereInput',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'local_updated_at': 'str',
        'local_updated_at_gt': 'str',
        'local_updated_at_gte': 'str',
        'local_updated_at_in': 'list[str]',
        'local_updated_at_lt': 'str',
        'local_updated_at_lte': 'str',
        'local_updated_at_not': 'str',
        'local_updated_at_not_in': 'list[str]',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'nfs_export': 'NfsExportWhereInput',
        'parent_id': 'str',
        'parent_id_contains': 'str',
        'parent_id_ends_with': 'str',
        'parent_id_gt': 'str',
        'parent_id_gte': 'str',
        'parent_id_in': 'list[str]',
        'parent_id_lt': 'str',
        'parent_id_lte': 'str',
        'parent_id_not': 'str',
        'parent_id_not_contains': 'str',
        'parent_id_not_ends_with': 'str',
        'parent_id_not_in': 'list[str]',
        'parent_id_not_starts_with': 'str',
        'parent_id_starts_with': 'str',
        'prioritized': 'bool',
        'prioritized_not': 'bool',
        'resiliency_type': 'ResiliencyType',
        'resiliency_type_in': 'list[ResiliencyType]',
        'resiliency_type_not': 'ResiliencyType',
        'resiliency_type_not_in': 'list[ResiliencyType]',
        'shared_size': 'int',
        'shared_size_gt': 'int',
        'shared_size_gte': 'int',
        'shared_size_in': 'list[int]',
        'shared_size_lt': 'int',
        'shared_size_lte': 'int',
        'shared_size_not': 'int',
        'shared_size_not_in': 'list[int]',
        'snapshot_num': 'int',
        'snapshot_num_gt': 'int',
        'snapshot_num_gte': 'int',
        'snapshot_num_in': 'list[int]',
        'snapshot_num_lt': 'int',
        'snapshot_num_lte': 'int',
        'snapshot_num_not': 'int',
        'snapshot_num_not_in': 'list[int]',
        'unique_logical_size': 'float',
        'unique_logical_size_gt': 'float',
        'unique_logical_size_gte': 'float',
        'unique_logical_size_in': 'list[float]',
        'unique_logical_size_lt': 'float',
        'unique_logical_size_lte': 'float',
        'unique_logical_size_not': 'float',
        'unique_logical_size_not_in': 'list[float]',
        'unique_size': 'int',
        'unique_size_gt': 'int',
        'unique_size_gte': 'int',
        'unique_size_in': 'list[int]',
        'unique_size_lt': 'int',
        'unique_size_lte': 'int',
        'unique_size_not': 'int',
        'unique_size_not_in': 'list[int]'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'assigned_size': 'assigned_size',
        'assigned_size_gt': 'assigned_size_gt',
        'assigned_size_gte': 'assigned_size_gte',
        'assigned_size_in': 'assigned_size_in',
        'assigned_size_lt': 'assigned_size_lt',
        'assigned_size_lte': 'assigned_size_lte',
        'assigned_size_not': 'assigned_size_not',
        'assigned_size_not_in': 'assigned_size_not_in',
        'downgraded_prioritized_space': 'downgraded_prioritized_space',
        'downgraded_prioritized_space_gt': 'downgraded_prioritized_space_gt',
        'downgraded_prioritized_space_gte': 'downgraded_prioritized_space_gte',
        'downgraded_prioritized_space_in': 'downgraded_prioritized_space_in',
        'downgraded_prioritized_space_lt': 'downgraded_prioritized_space_lt',
        'downgraded_prioritized_space_lte': 'downgraded_prioritized_space_lte',
        'downgraded_prioritized_space_not': 'downgraded_prioritized_space_not',
        'downgraded_prioritized_space_not_in': 'downgraded_prioritized_space_not_in',
        'ec_k': 'ec_k',
        'ec_k_gt': 'ec_k_gt',
        'ec_k_gte': 'ec_k_gte',
        'ec_k_in': 'ec_k_in',
        'ec_k_lt': 'ec_k_lt',
        'ec_k_lte': 'ec_k_lte',
        'ec_k_not': 'ec_k_not',
        'ec_k_not_in': 'ec_k_not_in',
        'ec_m': 'ec_m',
        'ec_m_gt': 'ec_m_gt',
        'ec_m_gte': 'ec_m_gte',
        'ec_m_in': 'ec_m_in',
        'ec_m_lt': 'ec_m_lt',
        'ec_m_lte': 'ec_m_lte',
        'ec_m_not': 'ec_m_not',
        'ec_m_not_in': 'ec_m_not_in',
        'encrypt_method': 'encrypt_method',
        'encrypt_method_in': 'encrypt_method_in',
        'encrypt_method_not': 'encrypt_method_not',
        'encrypt_method_not_in': 'encrypt_method_not_in',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'file': 'file',
        'file_not': 'file_not',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'labels_every': 'labels_every',
        'labels_none': 'labels_none',
        'labels_some': 'labels_some',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'local_updated_at': 'local_updated_at',
        'local_updated_at_gt': 'local_updated_at_gt',
        'local_updated_at_gte': 'local_updated_at_gte',
        'local_updated_at_in': 'local_updated_at_in',
        'local_updated_at_lt': 'local_updated_at_lt',
        'local_updated_at_lte': 'local_updated_at_lte',
        'local_updated_at_not': 'local_updated_at_not',
        'local_updated_at_not_in': 'local_updated_at_not_in',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'nfs_export': 'nfs_export',
        'parent_id': 'parent_id',
        'parent_id_contains': 'parent_id_contains',
        'parent_id_ends_with': 'parent_id_ends_with',
        'parent_id_gt': 'parent_id_gt',
        'parent_id_gte': 'parent_id_gte',
        'parent_id_in': 'parent_id_in',
        'parent_id_lt': 'parent_id_lt',
        'parent_id_lte': 'parent_id_lte',
        'parent_id_not': 'parent_id_not',
        'parent_id_not_contains': 'parent_id_not_contains',
        'parent_id_not_ends_with': 'parent_id_not_ends_with',
        'parent_id_not_in': 'parent_id_not_in',
        'parent_id_not_starts_with': 'parent_id_not_starts_with',
        'parent_id_starts_with': 'parent_id_starts_with',
        'prioritized': 'prioritized',
        'prioritized_not': 'prioritized_not',
        'resiliency_type': 'resiliency_type',
        'resiliency_type_in': 'resiliency_type_in',
        'resiliency_type_not': 'resiliency_type_not',
        'resiliency_type_not_in': 'resiliency_type_not_in',
        'shared_size': 'shared_size',
        'shared_size_gt': 'shared_size_gt',
        'shared_size_gte': 'shared_size_gte',
        'shared_size_in': 'shared_size_in',
        'shared_size_lt': 'shared_size_lt',
        'shared_size_lte': 'shared_size_lte',
        'shared_size_not': 'shared_size_not',
        'shared_size_not_in': 'shared_size_not_in',
        'snapshot_num': 'snapshot_num',
        'snapshot_num_gt': 'snapshot_num_gt',
        'snapshot_num_gte': 'snapshot_num_gte',
        'snapshot_num_in': 'snapshot_num_in',
        'snapshot_num_lt': 'snapshot_num_lt',
        'snapshot_num_lte': 'snapshot_num_lte',
        'snapshot_num_not': 'snapshot_num_not',
        'snapshot_num_not_in': 'snapshot_num_not_in',
        'unique_logical_size': 'unique_logical_size',
        'unique_logical_size_gt': 'unique_logical_size_gt',
        'unique_logical_size_gte': 'unique_logical_size_gte',
        'unique_logical_size_in': 'unique_logical_size_in',
        'unique_logical_size_lt': 'unique_logical_size_lt',
        'unique_logical_size_lte': 'unique_logical_size_lte',
        'unique_logical_size_not': 'unique_logical_size_not',
        'unique_logical_size_not_in': 'unique_logical_size_not_in',
        'unique_size': 'unique_size',
        'unique_size_gt': 'unique_size_gt',
        'unique_size_gte': 'unique_size_gte',
        'unique_size_in': 'unique_size_in',
        'unique_size_lt': 'unique_size_lt',
        'unique_size_lte': 'unique_size_lte',
        'unique_size_not': 'unique_size_not',
        'unique_size_not_in': 'unique_size_not_in'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """NfsInodeWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._assigned_size = None
        self._assigned_size_gt = None
        self._assigned_size_gte = None
        self._assigned_size_in = None
        self._assigned_size_lt = None
        self._assigned_size_lte = None
        self._assigned_size_not = None
        self._assigned_size_not_in = None
        self._downgraded_prioritized_space = None
        self._downgraded_prioritized_space_gt = None
        self._downgraded_prioritized_space_gte = None
        self._downgraded_prioritized_space_in = None
        self._downgraded_prioritized_space_lt = None
        self._downgraded_prioritized_space_lte = None
        self._downgraded_prioritized_space_not = None
        self._downgraded_prioritized_space_not_in = None
        self._ec_k = None
        self._ec_k_gt = None
        self._ec_k_gte = None
        self._ec_k_in = None
        self._ec_k_lt = None
        self._ec_k_lte = None
        self._ec_k_not = None
        self._ec_k_not_in = None
        self._ec_m = None
        self._ec_m_gt = None
        self._ec_m_gte = None
        self._ec_m_in = None
        self._ec_m_lt = None
        self._ec_m_lte = None
        self._ec_m_not = None
        self._ec_m_not_in = None
        self._encrypt_method = None
        self._encrypt_method_in = None
        self._encrypt_method_not = None
        self._encrypt_method_not_in = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._file = None
        self._file_not = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._labels_every = None
        self._labels_none = None
        self._labels_some = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._local_updated_at = None
        self._local_updated_at_gt = None
        self._local_updated_at_gte = None
        self._local_updated_at_in = None
        self._local_updated_at_lt = None
        self._local_updated_at_lte = None
        self._local_updated_at_not = None
        self._local_updated_at_not_in = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._nfs_export = None
        self._parent_id = None
        self._parent_id_contains = None
        self._parent_id_ends_with = None
        self._parent_id_gt = None
        self._parent_id_gte = None
        self._parent_id_in = None
        self._parent_id_lt = None
        self._parent_id_lte = None
        self._parent_id_not = None
        self._parent_id_not_contains = None
        self._parent_id_not_ends_with = None
        self._parent_id_not_in = None
        self._parent_id_not_starts_with = None
        self._parent_id_starts_with = None
        self._prioritized = None
        self._prioritized_not = None
        self._resiliency_type = None
        self._resiliency_type_in = None
        self._resiliency_type_not = None
        self._resiliency_type_not_in = None
        self._shared_size = None
        self._shared_size_gt = None
        self._shared_size_gte = None
        self._shared_size_in = None
        self._shared_size_lt = None
        self._shared_size_lte = None
        self._shared_size_not = None
        self._shared_size_not_in = None
        self._snapshot_num = None
        self._snapshot_num_gt = None
        self._snapshot_num_gte = None
        self._snapshot_num_in = None
        self._snapshot_num_lt = None
        self._snapshot_num_lte = None
        self._snapshot_num_not = None
        self._snapshot_num_not_in = None
        self._unique_logical_size = None
        self._unique_logical_size_gt = None
        self._unique_logical_size_gte = None
        self._unique_logical_size_in = None
        self._unique_logical_size_lt = None
        self._unique_logical_size_lte = None
        self._unique_logical_size_not = None
        self._unique_logical_size_not_in = None
        self._unique_size = None
        self._unique_size_gt = None
        self._unique_size_gte = None
        self._unique_size_in = None
        self._unique_size_lt = None
        self._unique_size_lte = None
        self._unique_size_not = None
        self._unique_size_not_in = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.assigned_size = kwargs.get("assigned_size", None)
        self.assigned_size_gt = kwargs.get("assigned_size_gt", None)
        self.assigned_size_gte = kwargs.get("assigned_size_gte", None)
        self.assigned_size_in = kwargs.get("assigned_size_in", None)
        self.assigned_size_lt = kwargs.get("assigned_size_lt", None)
        self.assigned_size_lte = kwargs.get("assigned_size_lte", None)
        self.assigned_size_not = kwargs.get("assigned_size_not", None)
        self.assigned_size_not_in = kwargs.get("assigned_size_not_in", None)
        self.downgraded_prioritized_space = kwargs.get("downgraded_prioritized_space", None)
        self.downgraded_prioritized_space_gt = kwargs.get("downgraded_prioritized_space_gt", None)
        self.downgraded_prioritized_space_gte = kwargs.get("downgraded_prioritized_space_gte", None)
        self.downgraded_prioritized_space_in = kwargs.get("downgraded_prioritized_space_in", None)
        self.downgraded_prioritized_space_lt = kwargs.get("downgraded_prioritized_space_lt", None)
        self.downgraded_prioritized_space_lte = kwargs.get("downgraded_prioritized_space_lte", None)
        self.downgraded_prioritized_space_not = kwargs.get("downgraded_prioritized_space_not", None)
        self.downgraded_prioritized_space_not_in = kwargs.get("downgraded_prioritized_space_not_in", None)
        self.ec_k = kwargs.get("ec_k", None)
        self.ec_k_gt = kwargs.get("ec_k_gt", None)
        self.ec_k_gte = kwargs.get("ec_k_gte", None)
        self.ec_k_in = kwargs.get("ec_k_in", None)
        self.ec_k_lt = kwargs.get("ec_k_lt", None)
        self.ec_k_lte = kwargs.get("ec_k_lte", None)
        self.ec_k_not = kwargs.get("ec_k_not", None)
        self.ec_k_not_in = kwargs.get("ec_k_not_in", None)
        self.ec_m = kwargs.get("ec_m", None)
        self.ec_m_gt = kwargs.get("ec_m_gt", None)
        self.ec_m_gte = kwargs.get("ec_m_gte", None)
        self.ec_m_in = kwargs.get("ec_m_in", None)
        self.ec_m_lt = kwargs.get("ec_m_lt", None)
        self.ec_m_lte = kwargs.get("ec_m_lte", None)
        self.ec_m_not = kwargs.get("ec_m_not", None)
        self.ec_m_not_in = kwargs.get("ec_m_not_in", None)
        self.encrypt_method = kwargs.get("encrypt_method", None)
        self.encrypt_method_in = kwargs.get("encrypt_method_in", None)
        self.encrypt_method_not = kwargs.get("encrypt_method_not", None)
        self.encrypt_method_not_in = kwargs.get("encrypt_method_not_in", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.file = kwargs.get("file", None)
        self.file_not = kwargs.get("file_not", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.labels_every = kwargs.get("labels_every", None)
        self.labels_none = kwargs.get("labels_none", None)
        self.labels_some = kwargs.get("labels_some", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.local_updated_at = kwargs.get("local_updated_at", None)
        self.local_updated_at_gt = kwargs.get("local_updated_at_gt", None)
        self.local_updated_at_gte = kwargs.get("local_updated_at_gte", None)
        self.local_updated_at_in = kwargs.get("local_updated_at_in", None)
        self.local_updated_at_lt = kwargs.get("local_updated_at_lt", None)
        self.local_updated_at_lte = kwargs.get("local_updated_at_lte", None)
        self.local_updated_at_not = kwargs.get("local_updated_at_not", None)
        self.local_updated_at_not_in = kwargs.get("local_updated_at_not_in", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.nfs_export = kwargs.get("nfs_export", None)
        self.parent_id = kwargs.get("parent_id", None)
        self.parent_id_contains = kwargs.get("parent_id_contains", None)
        self.parent_id_ends_with = kwargs.get("parent_id_ends_with", None)
        self.parent_id_gt = kwargs.get("parent_id_gt", None)
        self.parent_id_gte = kwargs.get("parent_id_gte", None)
        self.parent_id_in = kwargs.get("parent_id_in", None)
        self.parent_id_lt = kwargs.get("parent_id_lt", None)
        self.parent_id_lte = kwargs.get("parent_id_lte", None)
        self.parent_id_not = kwargs.get("parent_id_not", None)
        self.parent_id_not_contains = kwargs.get("parent_id_not_contains", None)
        self.parent_id_not_ends_with = kwargs.get("parent_id_not_ends_with", None)
        self.parent_id_not_in = kwargs.get("parent_id_not_in", None)
        self.parent_id_not_starts_with = kwargs.get("parent_id_not_starts_with", None)
        self.parent_id_starts_with = kwargs.get("parent_id_starts_with", None)
        self.prioritized = kwargs.get("prioritized", None)
        self.prioritized_not = kwargs.get("prioritized_not", None)
        self.resiliency_type = kwargs.get("resiliency_type", None)
        self.resiliency_type_in = kwargs.get("resiliency_type_in", None)
        self.resiliency_type_not = kwargs.get("resiliency_type_not", None)
        self.resiliency_type_not_in = kwargs.get("resiliency_type_not_in", None)
        self.shared_size = kwargs.get("shared_size", None)
        self.shared_size_gt = kwargs.get("shared_size_gt", None)
        self.shared_size_gte = kwargs.get("shared_size_gte", None)
        self.shared_size_in = kwargs.get("shared_size_in", None)
        self.shared_size_lt = kwargs.get("shared_size_lt", None)
        self.shared_size_lte = kwargs.get("shared_size_lte", None)
        self.shared_size_not = kwargs.get("shared_size_not", None)
        self.shared_size_not_in = kwargs.get("shared_size_not_in", None)
        self.snapshot_num = kwargs.get("snapshot_num", None)
        self.snapshot_num_gt = kwargs.get("snapshot_num_gt", None)
        self.snapshot_num_gte = kwargs.get("snapshot_num_gte", None)
        self.snapshot_num_in = kwargs.get("snapshot_num_in", None)
        self.snapshot_num_lt = kwargs.get("snapshot_num_lt", None)
        self.snapshot_num_lte = kwargs.get("snapshot_num_lte", None)
        self.snapshot_num_not = kwargs.get("snapshot_num_not", None)
        self.snapshot_num_not_in = kwargs.get("snapshot_num_not_in", None)
        self.unique_logical_size = kwargs.get("unique_logical_size", None)
        self.unique_logical_size_gt = kwargs.get("unique_logical_size_gt", None)
        self.unique_logical_size_gte = kwargs.get("unique_logical_size_gte", None)
        self.unique_logical_size_in = kwargs.get("unique_logical_size_in", None)
        self.unique_logical_size_lt = kwargs.get("unique_logical_size_lt", None)
        self.unique_logical_size_lte = kwargs.get("unique_logical_size_lte", None)
        self.unique_logical_size_not = kwargs.get("unique_logical_size_not", None)
        self.unique_logical_size_not_in = kwargs.get("unique_logical_size_not_in", None)
        self.unique_size = kwargs.get("unique_size", None)
        self.unique_size_gt = kwargs.get("unique_size_gt", None)
        self.unique_size_gte = kwargs.get("unique_size_gte", None)
        self.unique_size_in = kwargs.get("unique_size_in", None)
        self.unique_size_lt = kwargs.get("unique_size_lt", None)
        self.unique_size_lte = kwargs.get("unique_size_lte", None)
        self.unique_size_not = kwargs.get("unique_size_not", None)
        self.unique_size_not_in = kwargs.get("unique_size_not_in", None)

    @property
    def _and(self):
        """Gets the _and of this NfsInodeWhereInput.  # noqa: E501


        :return: The _and of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[NfsInodeWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this NfsInodeWhereInput.


        :param _and: The _and of this NfsInodeWhereInput.  # noqa: E501
        :type _and: list[NfsInodeWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this NfsInodeWhereInput.  # noqa: E501


        :return: The _not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[NfsInodeWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this NfsInodeWhereInput.


        :param _not: The _not of this NfsInodeWhereInput.  # noqa: E501
        :type _not: list[NfsInodeWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this NfsInodeWhereInput.  # noqa: E501


        :return: The _or of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[NfsInodeWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this NfsInodeWhereInput.


        :param _or: The _or of this NfsInodeWhereInput.  # noqa: E501
        :type _or: list[NfsInodeWhereInput]
        """

        self.__or = _or

    @property
    def assigned_size(self):
        """Gets the assigned_size of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._assigned_size

    @assigned_size.setter
    def assigned_size(self, assigned_size):
        """Sets the assigned_size of this NfsInodeWhereInput.


        :param assigned_size: The assigned_size of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size: int
        """

        self._assigned_size = assigned_size

    @property
    def assigned_size_gt(self):
        """Gets the assigned_size_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._assigned_size_gt

    @assigned_size_gt.setter
    def assigned_size_gt(self, assigned_size_gt):
        """Sets the assigned_size_gt of this NfsInodeWhereInput.


        :param assigned_size_gt: The assigned_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size_gt: int
        """

        self._assigned_size_gt = assigned_size_gt

    @property
    def assigned_size_gte(self):
        """Gets the assigned_size_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._assigned_size_gte

    @assigned_size_gte.setter
    def assigned_size_gte(self, assigned_size_gte):
        """Sets the assigned_size_gte of this NfsInodeWhereInput.


        :param assigned_size_gte: The assigned_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size_gte: int
        """

        self._assigned_size_gte = assigned_size_gte

    @property
    def assigned_size_in(self):
        """Gets the assigned_size_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._assigned_size_in

    @assigned_size_in.setter
    def assigned_size_in(self, assigned_size_in):
        """Sets the assigned_size_in of this NfsInodeWhereInput.


        :param assigned_size_in: The assigned_size_in of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size_in: list[int]
        """

        self._assigned_size_in = assigned_size_in

    @property
    def assigned_size_lt(self):
        """Gets the assigned_size_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._assigned_size_lt

    @assigned_size_lt.setter
    def assigned_size_lt(self, assigned_size_lt):
        """Sets the assigned_size_lt of this NfsInodeWhereInput.


        :param assigned_size_lt: The assigned_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size_lt: int
        """

        self._assigned_size_lt = assigned_size_lt

    @property
    def assigned_size_lte(self):
        """Gets the assigned_size_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._assigned_size_lte

    @assigned_size_lte.setter
    def assigned_size_lte(self, assigned_size_lte):
        """Sets the assigned_size_lte of this NfsInodeWhereInput.


        :param assigned_size_lte: The assigned_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size_lte: int
        """

        self._assigned_size_lte = assigned_size_lte

    @property
    def assigned_size_not(self):
        """Gets the assigned_size_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._assigned_size_not

    @assigned_size_not.setter
    def assigned_size_not(self, assigned_size_not):
        """Sets the assigned_size_not of this NfsInodeWhereInput.


        :param assigned_size_not: The assigned_size_not of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size_not: int
        """

        self._assigned_size_not = assigned_size_not

    @property
    def assigned_size_not_in(self):
        """Gets the assigned_size_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The assigned_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._assigned_size_not_in

    @assigned_size_not_in.setter
    def assigned_size_not_in(self, assigned_size_not_in):
        """Sets the assigned_size_not_in of this NfsInodeWhereInput.


        :param assigned_size_not_in: The assigned_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type assigned_size_not_in: list[int]
        """

        self._assigned_size_not_in = assigned_size_not_in

    @property
    def downgraded_prioritized_space(self):
        """Gets the downgraded_prioritized_space of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._downgraded_prioritized_space

    @downgraded_prioritized_space.setter
    def downgraded_prioritized_space(self, downgraded_prioritized_space):
        """Sets the downgraded_prioritized_space of this NfsInodeWhereInput.


        :param downgraded_prioritized_space: The downgraded_prioritized_space of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space: int
        """

        self._downgraded_prioritized_space = downgraded_prioritized_space

    @property
    def downgraded_prioritized_space_gt(self):
        """Gets the downgraded_prioritized_space_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._downgraded_prioritized_space_gt

    @downgraded_prioritized_space_gt.setter
    def downgraded_prioritized_space_gt(self, downgraded_prioritized_space_gt):
        """Sets the downgraded_prioritized_space_gt of this NfsInodeWhereInput.


        :param downgraded_prioritized_space_gt: The downgraded_prioritized_space_gt of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space_gt: int
        """

        self._downgraded_prioritized_space_gt = downgraded_prioritized_space_gt

    @property
    def downgraded_prioritized_space_gte(self):
        """Gets the downgraded_prioritized_space_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._downgraded_prioritized_space_gte

    @downgraded_prioritized_space_gte.setter
    def downgraded_prioritized_space_gte(self, downgraded_prioritized_space_gte):
        """Sets the downgraded_prioritized_space_gte of this NfsInodeWhereInput.


        :param downgraded_prioritized_space_gte: The downgraded_prioritized_space_gte of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space_gte: int
        """

        self._downgraded_prioritized_space_gte = downgraded_prioritized_space_gte

    @property
    def downgraded_prioritized_space_in(self):
        """Gets the downgraded_prioritized_space_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._downgraded_prioritized_space_in

    @downgraded_prioritized_space_in.setter
    def downgraded_prioritized_space_in(self, downgraded_prioritized_space_in):
        """Sets the downgraded_prioritized_space_in of this NfsInodeWhereInput.


        :param downgraded_prioritized_space_in: The downgraded_prioritized_space_in of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space_in: list[int]
        """

        self._downgraded_prioritized_space_in = downgraded_prioritized_space_in

    @property
    def downgraded_prioritized_space_lt(self):
        """Gets the downgraded_prioritized_space_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._downgraded_prioritized_space_lt

    @downgraded_prioritized_space_lt.setter
    def downgraded_prioritized_space_lt(self, downgraded_prioritized_space_lt):
        """Sets the downgraded_prioritized_space_lt of this NfsInodeWhereInput.


        :param downgraded_prioritized_space_lt: The downgraded_prioritized_space_lt of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space_lt: int
        """

        self._downgraded_prioritized_space_lt = downgraded_prioritized_space_lt

    @property
    def downgraded_prioritized_space_lte(self):
        """Gets the downgraded_prioritized_space_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._downgraded_prioritized_space_lte

    @downgraded_prioritized_space_lte.setter
    def downgraded_prioritized_space_lte(self, downgraded_prioritized_space_lte):
        """Sets the downgraded_prioritized_space_lte of this NfsInodeWhereInput.


        :param downgraded_prioritized_space_lte: The downgraded_prioritized_space_lte of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space_lte: int
        """

        self._downgraded_prioritized_space_lte = downgraded_prioritized_space_lte

    @property
    def downgraded_prioritized_space_not(self):
        """Gets the downgraded_prioritized_space_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._downgraded_prioritized_space_not

    @downgraded_prioritized_space_not.setter
    def downgraded_prioritized_space_not(self, downgraded_prioritized_space_not):
        """Sets the downgraded_prioritized_space_not of this NfsInodeWhereInput.


        :param downgraded_prioritized_space_not: The downgraded_prioritized_space_not of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space_not: int
        """

        self._downgraded_prioritized_space_not = downgraded_prioritized_space_not

    @property
    def downgraded_prioritized_space_not_in(self):
        """Gets the downgraded_prioritized_space_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The downgraded_prioritized_space_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._downgraded_prioritized_space_not_in

    @downgraded_prioritized_space_not_in.setter
    def downgraded_prioritized_space_not_in(self, downgraded_prioritized_space_not_in):
        """Sets the downgraded_prioritized_space_not_in of this NfsInodeWhereInput.


        :param downgraded_prioritized_space_not_in: The downgraded_prioritized_space_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type downgraded_prioritized_space_not_in: list[int]
        """

        self._downgraded_prioritized_space_not_in = downgraded_prioritized_space_not_in

    @property
    def ec_k(self):
        """Gets the ec_k of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_k

    @ec_k.setter
    def ec_k(self, ec_k):
        """Sets the ec_k of this NfsInodeWhereInput.


        :param ec_k: The ec_k of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k: int
        """

        self._ec_k = ec_k

    @property
    def ec_k_gt(self):
        """Gets the ec_k_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_k_gt

    @ec_k_gt.setter
    def ec_k_gt(self, ec_k_gt):
        """Sets the ec_k_gt of this NfsInodeWhereInput.


        :param ec_k_gt: The ec_k_gt of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k_gt: int
        """

        self._ec_k_gt = ec_k_gt

    @property
    def ec_k_gte(self):
        """Gets the ec_k_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_k_gte

    @ec_k_gte.setter
    def ec_k_gte(self, ec_k_gte):
        """Sets the ec_k_gte of this NfsInodeWhereInput.


        :param ec_k_gte: The ec_k_gte of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k_gte: int
        """

        self._ec_k_gte = ec_k_gte

    @property
    def ec_k_in(self):
        """Gets the ec_k_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._ec_k_in

    @ec_k_in.setter
    def ec_k_in(self, ec_k_in):
        """Sets the ec_k_in of this NfsInodeWhereInput.


        :param ec_k_in: The ec_k_in of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k_in: list[int]
        """

        self._ec_k_in = ec_k_in

    @property
    def ec_k_lt(self):
        """Gets the ec_k_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_k_lt

    @ec_k_lt.setter
    def ec_k_lt(self, ec_k_lt):
        """Sets the ec_k_lt of this NfsInodeWhereInput.


        :param ec_k_lt: The ec_k_lt of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k_lt: int
        """

        self._ec_k_lt = ec_k_lt

    @property
    def ec_k_lte(self):
        """Gets the ec_k_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_k_lte

    @ec_k_lte.setter
    def ec_k_lte(self, ec_k_lte):
        """Sets the ec_k_lte of this NfsInodeWhereInput.


        :param ec_k_lte: The ec_k_lte of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k_lte: int
        """

        self._ec_k_lte = ec_k_lte

    @property
    def ec_k_not(self):
        """Gets the ec_k_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_k_not

    @ec_k_not.setter
    def ec_k_not(self, ec_k_not):
        """Sets the ec_k_not of this NfsInodeWhereInput.


        :param ec_k_not: The ec_k_not of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k_not: int
        """

        self._ec_k_not = ec_k_not

    @property
    def ec_k_not_in(self):
        """Gets the ec_k_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_k_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._ec_k_not_in

    @ec_k_not_in.setter
    def ec_k_not_in(self, ec_k_not_in):
        """Sets the ec_k_not_in of this NfsInodeWhereInput.


        :param ec_k_not_in: The ec_k_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type ec_k_not_in: list[int]
        """

        self._ec_k_not_in = ec_k_not_in

    @property
    def ec_m(self):
        """Gets the ec_m of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_m

    @ec_m.setter
    def ec_m(self, ec_m):
        """Sets the ec_m of this NfsInodeWhereInput.


        :param ec_m: The ec_m of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m: int
        """

        self._ec_m = ec_m

    @property
    def ec_m_gt(self):
        """Gets the ec_m_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_m_gt

    @ec_m_gt.setter
    def ec_m_gt(self, ec_m_gt):
        """Sets the ec_m_gt of this NfsInodeWhereInput.


        :param ec_m_gt: The ec_m_gt of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m_gt: int
        """

        self._ec_m_gt = ec_m_gt

    @property
    def ec_m_gte(self):
        """Gets the ec_m_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_m_gte

    @ec_m_gte.setter
    def ec_m_gte(self, ec_m_gte):
        """Sets the ec_m_gte of this NfsInodeWhereInput.


        :param ec_m_gte: The ec_m_gte of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m_gte: int
        """

        self._ec_m_gte = ec_m_gte

    @property
    def ec_m_in(self):
        """Gets the ec_m_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._ec_m_in

    @ec_m_in.setter
    def ec_m_in(self, ec_m_in):
        """Sets the ec_m_in of this NfsInodeWhereInput.


        :param ec_m_in: The ec_m_in of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m_in: list[int]
        """

        self._ec_m_in = ec_m_in

    @property
    def ec_m_lt(self):
        """Gets the ec_m_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_m_lt

    @ec_m_lt.setter
    def ec_m_lt(self, ec_m_lt):
        """Sets the ec_m_lt of this NfsInodeWhereInput.


        :param ec_m_lt: The ec_m_lt of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m_lt: int
        """

        self._ec_m_lt = ec_m_lt

    @property
    def ec_m_lte(self):
        """Gets the ec_m_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_m_lte

    @ec_m_lte.setter
    def ec_m_lte(self, ec_m_lte):
        """Sets the ec_m_lte of this NfsInodeWhereInput.


        :param ec_m_lte: The ec_m_lte of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m_lte: int
        """

        self._ec_m_lte = ec_m_lte

    @property
    def ec_m_not(self):
        """Gets the ec_m_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._ec_m_not

    @ec_m_not.setter
    def ec_m_not(self, ec_m_not):
        """Sets the ec_m_not of this NfsInodeWhereInput.


        :param ec_m_not: The ec_m_not of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m_not: int
        """

        self._ec_m_not = ec_m_not

    @property
    def ec_m_not_in(self):
        """Gets the ec_m_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The ec_m_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._ec_m_not_in

    @ec_m_not_in.setter
    def ec_m_not_in(self, ec_m_not_in):
        """Sets the ec_m_not_in of this NfsInodeWhereInput.


        :param ec_m_not_in: The ec_m_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type ec_m_not_in: list[int]
        """

        self._ec_m_not_in = ec_m_not_in

    @property
    def encrypt_method(self):
        """Gets the encrypt_method of this NfsInodeWhereInput.  # noqa: E501


        :return: The encrypt_method of this NfsInodeWhereInput.  # noqa: E501
        :rtype: EncryptMethod
        """
        return self._encrypt_method

    @encrypt_method.setter
    def encrypt_method(self, encrypt_method):
        """Sets the encrypt_method of this NfsInodeWhereInput.


        :param encrypt_method: The encrypt_method of this NfsInodeWhereInput.  # noqa: E501
        :type encrypt_method: EncryptMethod
        """

        self._encrypt_method = encrypt_method

    @property
    def encrypt_method_in(self):
        """Gets the encrypt_method_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The encrypt_method_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[EncryptMethod]
        """
        return self._encrypt_method_in

    @encrypt_method_in.setter
    def encrypt_method_in(self, encrypt_method_in):
        """Sets the encrypt_method_in of this NfsInodeWhereInput.


        :param encrypt_method_in: The encrypt_method_in of this NfsInodeWhereInput.  # noqa: E501
        :type encrypt_method_in: list[EncryptMethod]
        """

        self._encrypt_method_in = encrypt_method_in

    @property
    def encrypt_method_not(self):
        """Gets the encrypt_method_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The encrypt_method_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: EncryptMethod
        """
        return self._encrypt_method_not

    @encrypt_method_not.setter
    def encrypt_method_not(self, encrypt_method_not):
        """Sets the encrypt_method_not of this NfsInodeWhereInput.


        :param encrypt_method_not: The encrypt_method_not of this NfsInodeWhereInput.  # noqa: E501
        :type encrypt_method_not: EncryptMethod
        """

        self._encrypt_method_not = encrypt_method_not

    @property
    def encrypt_method_not_in(self):
        """Gets the encrypt_method_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The encrypt_method_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[EncryptMethod]
        """
        return self._encrypt_method_not_in

    @encrypt_method_not_in.setter
    def encrypt_method_not_in(self, encrypt_method_not_in):
        """Sets the encrypt_method_not_in of this NfsInodeWhereInput.


        :param encrypt_method_not_in: The encrypt_method_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type encrypt_method_not_in: list[EncryptMethod]
        """

        self._encrypt_method_not_in = encrypt_method_not_in

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this NfsInodeWhereInput.  # noqa: E501


        :return: The entity_async_status of this NfsInodeWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this NfsInodeWhereInput.


        :param entity_async_status: The entity_async_status of this NfsInodeWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this NfsInodeWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this NfsInodeWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this NfsInodeWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this NfsInodeWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this NfsInodeWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def file(self):
        """Gets the file of this NfsInodeWhereInput.  # noqa: E501


        :return: The file of this NfsInodeWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this NfsInodeWhereInput.


        :param file: The file of this NfsInodeWhereInput.  # noqa: E501
        :type file: bool
        """

        self._file = file

    @property
    def file_not(self):
        """Gets the file_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The file_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._file_not

    @file_not.setter
    def file_not(self, file_not):
        """Sets the file_not of this NfsInodeWhereInput.


        :param file_not: The file_not of this NfsInodeWhereInput.  # noqa: E501
        :type file_not: bool
        """

        self._file_not = file_not

    @property
    def id(self):
        """Gets the id of this NfsInodeWhereInput.  # noqa: E501


        :return: The id of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NfsInodeWhereInput.


        :param id: The id of this NfsInodeWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this NfsInodeWhereInput.


        :param id_contains: The id_contains of this NfsInodeWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this NfsInodeWhereInput.


        :param id_ends_with: The id_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this NfsInodeWhereInput.


        :param id_gt: The id_gt of this NfsInodeWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this NfsInodeWhereInput.


        :param id_gte: The id_gte of this NfsInodeWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this NfsInodeWhereInput.


        :param id_in: The id_in of this NfsInodeWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this NfsInodeWhereInput.


        :param id_lt: The id_lt of this NfsInodeWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this NfsInodeWhereInput.


        :param id_lte: The id_lte of this NfsInodeWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this NfsInodeWhereInput.


        :param id_not: The id_not of this NfsInodeWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this NfsInodeWhereInput.


        :param id_not_contains: The id_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this NfsInodeWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this NfsInodeWhereInput.


        :param id_not_in: The id_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this NfsInodeWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The id_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this NfsInodeWhereInput.


        :param id_starts_with: The id_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def labels_every(self):
        """Gets the labels_every of this NfsInodeWhereInput.  # noqa: E501


        :return: The labels_every of this NfsInodeWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_every

    @labels_every.setter
    def labels_every(self, labels_every):
        """Sets the labels_every of this NfsInodeWhereInput.


        :param labels_every: The labels_every of this NfsInodeWhereInput.  # noqa: E501
        :type labels_every: LabelWhereInput
        """

        self._labels_every = labels_every

    @property
    def labels_none(self):
        """Gets the labels_none of this NfsInodeWhereInput.  # noqa: E501


        :return: The labels_none of this NfsInodeWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_none

    @labels_none.setter
    def labels_none(self, labels_none):
        """Sets the labels_none of this NfsInodeWhereInput.


        :param labels_none: The labels_none of this NfsInodeWhereInput.  # noqa: E501
        :type labels_none: LabelWhereInput
        """

        self._labels_none = labels_none

    @property
    def labels_some(self):
        """Gets the labels_some of this NfsInodeWhereInput.  # noqa: E501


        :return: The labels_some of this NfsInodeWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_some

    @labels_some.setter
    def labels_some(self, labels_some):
        """Sets the labels_some of this NfsInodeWhereInput.


        :param labels_some: The labels_some of this NfsInodeWhereInput.  # noqa: E501
        :type labels_some: LabelWhereInput
        """

        self._labels_some = labels_some

    @property
    def local_id(self):
        """Gets the local_id of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this NfsInodeWhereInput.


        :param local_id: The local_id of this NfsInodeWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this NfsInodeWhereInput.


        :param local_id_contains: The local_id_contains of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this NfsInodeWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this NfsInodeWhereInput.


        :param local_id_gt: The local_id_gt of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this NfsInodeWhereInput.


        :param local_id_gte: The local_id_gte of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this NfsInodeWhereInput.


        :param local_id_in: The local_id_in of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this NfsInodeWhereInput.


        :param local_id_lt: The local_id_lt of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this NfsInodeWhereInput.


        :param local_id_lte: The local_id_lte of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this NfsInodeWhereInput.


        :param local_id_not: The local_id_not of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this NfsInodeWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this NfsInodeWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this NfsInodeWhereInput.


        :param local_id_not_in: The local_id_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this NfsInodeWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this NfsInodeWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def local_updated_at(self):
        """Gets the local_updated_at of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_updated_at

    @local_updated_at.setter
    def local_updated_at(self, local_updated_at):
        """Sets the local_updated_at of this NfsInodeWhereInput.


        :param local_updated_at: The local_updated_at of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at: str
        """

        self._local_updated_at = local_updated_at

    @property
    def local_updated_at_gt(self):
        """Gets the local_updated_at_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_updated_at_gt

    @local_updated_at_gt.setter
    def local_updated_at_gt(self, local_updated_at_gt):
        """Sets the local_updated_at_gt of this NfsInodeWhereInput.


        :param local_updated_at_gt: The local_updated_at_gt of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at_gt: str
        """

        self._local_updated_at_gt = local_updated_at_gt

    @property
    def local_updated_at_gte(self):
        """Gets the local_updated_at_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_updated_at_gte

    @local_updated_at_gte.setter
    def local_updated_at_gte(self, local_updated_at_gte):
        """Sets the local_updated_at_gte of this NfsInodeWhereInput.


        :param local_updated_at_gte: The local_updated_at_gte of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at_gte: str
        """

        self._local_updated_at_gte = local_updated_at_gte

    @property
    def local_updated_at_in(self):
        """Gets the local_updated_at_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_updated_at_in

    @local_updated_at_in.setter
    def local_updated_at_in(self, local_updated_at_in):
        """Sets the local_updated_at_in of this NfsInodeWhereInput.


        :param local_updated_at_in: The local_updated_at_in of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at_in: list[str]
        """

        self._local_updated_at_in = local_updated_at_in

    @property
    def local_updated_at_lt(self):
        """Gets the local_updated_at_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_updated_at_lt

    @local_updated_at_lt.setter
    def local_updated_at_lt(self, local_updated_at_lt):
        """Sets the local_updated_at_lt of this NfsInodeWhereInput.


        :param local_updated_at_lt: The local_updated_at_lt of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at_lt: str
        """

        self._local_updated_at_lt = local_updated_at_lt

    @property
    def local_updated_at_lte(self):
        """Gets the local_updated_at_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_updated_at_lte

    @local_updated_at_lte.setter
    def local_updated_at_lte(self, local_updated_at_lte):
        """Sets the local_updated_at_lte of this NfsInodeWhereInput.


        :param local_updated_at_lte: The local_updated_at_lte of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at_lte: str
        """

        self._local_updated_at_lte = local_updated_at_lte

    @property
    def local_updated_at_not(self):
        """Gets the local_updated_at_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_updated_at_not

    @local_updated_at_not.setter
    def local_updated_at_not(self, local_updated_at_not):
        """Sets the local_updated_at_not of this NfsInodeWhereInput.


        :param local_updated_at_not: The local_updated_at_not of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at_not: str
        """

        self._local_updated_at_not = local_updated_at_not

    @property
    def local_updated_at_not_in(self):
        """Gets the local_updated_at_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The local_updated_at_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_updated_at_not_in

    @local_updated_at_not_in.setter
    def local_updated_at_not_in(self, local_updated_at_not_in):
        """Sets the local_updated_at_not_in of this NfsInodeWhereInput.


        :param local_updated_at_not_in: The local_updated_at_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type local_updated_at_not_in: list[str]
        """

        self._local_updated_at_not_in = local_updated_at_not_in

    @property
    def name(self):
        """Gets the name of this NfsInodeWhereInput.  # noqa: E501


        :return: The name of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NfsInodeWhereInput.


        :param name: The name of this NfsInodeWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this NfsInodeWhereInput.


        :param name_contains: The name_contains of this NfsInodeWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this NfsInodeWhereInput.


        :param name_ends_with: The name_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this NfsInodeWhereInput.


        :param name_gt: The name_gt of this NfsInodeWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this NfsInodeWhereInput.


        :param name_gte: The name_gte of this NfsInodeWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this NfsInodeWhereInput.


        :param name_in: The name_in of this NfsInodeWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this NfsInodeWhereInput.


        :param name_lt: The name_lt of this NfsInodeWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this NfsInodeWhereInput.


        :param name_lte: The name_lte of this NfsInodeWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this NfsInodeWhereInput.


        :param name_not: The name_not of this NfsInodeWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this NfsInodeWhereInput.


        :param name_not_contains: The name_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this NfsInodeWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this NfsInodeWhereInput.


        :param name_not_in: The name_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this NfsInodeWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The name_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this NfsInodeWhereInput.


        :param name_starts_with: The name_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def nfs_export(self):
        """Gets the nfs_export of this NfsInodeWhereInput.  # noqa: E501


        :return: The nfs_export of this NfsInodeWhereInput.  # noqa: E501
        :rtype: NfsExportWhereInput
        """
        return self._nfs_export

    @nfs_export.setter
    def nfs_export(self, nfs_export):
        """Sets the nfs_export of this NfsInodeWhereInput.


        :param nfs_export: The nfs_export of this NfsInodeWhereInput.  # noqa: E501
        :type nfs_export: NfsExportWhereInput
        """

        self._nfs_export = nfs_export

    @property
    def parent_id(self):
        """Gets the parent_id of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this NfsInodeWhereInput.


        :param parent_id: The parent_id of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def parent_id_contains(self):
        """Gets the parent_id_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_contains

    @parent_id_contains.setter
    def parent_id_contains(self, parent_id_contains):
        """Sets the parent_id_contains of this NfsInodeWhereInput.


        :param parent_id_contains: The parent_id_contains of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_contains: str
        """

        self._parent_id_contains = parent_id_contains

    @property
    def parent_id_ends_with(self):
        """Gets the parent_id_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_ends_with

    @parent_id_ends_with.setter
    def parent_id_ends_with(self, parent_id_ends_with):
        """Sets the parent_id_ends_with of this NfsInodeWhereInput.


        :param parent_id_ends_with: The parent_id_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_ends_with: str
        """

        self._parent_id_ends_with = parent_id_ends_with

    @property
    def parent_id_gt(self):
        """Gets the parent_id_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_gt

    @parent_id_gt.setter
    def parent_id_gt(self, parent_id_gt):
        """Sets the parent_id_gt of this NfsInodeWhereInput.


        :param parent_id_gt: The parent_id_gt of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_gt: str
        """

        self._parent_id_gt = parent_id_gt

    @property
    def parent_id_gte(self):
        """Gets the parent_id_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_gte

    @parent_id_gte.setter
    def parent_id_gte(self, parent_id_gte):
        """Sets the parent_id_gte of this NfsInodeWhereInput.


        :param parent_id_gte: The parent_id_gte of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_gte: str
        """

        self._parent_id_gte = parent_id_gte

    @property
    def parent_id_in(self):
        """Gets the parent_id_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._parent_id_in

    @parent_id_in.setter
    def parent_id_in(self, parent_id_in):
        """Sets the parent_id_in of this NfsInodeWhereInput.


        :param parent_id_in: The parent_id_in of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_in: list[str]
        """

        self._parent_id_in = parent_id_in

    @property
    def parent_id_lt(self):
        """Gets the parent_id_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_lt

    @parent_id_lt.setter
    def parent_id_lt(self, parent_id_lt):
        """Sets the parent_id_lt of this NfsInodeWhereInput.


        :param parent_id_lt: The parent_id_lt of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_lt: str
        """

        self._parent_id_lt = parent_id_lt

    @property
    def parent_id_lte(self):
        """Gets the parent_id_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_lte

    @parent_id_lte.setter
    def parent_id_lte(self, parent_id_lte):
        """Sets the parent_id_lte of this NfsInodeWhereInput.


        :param parent_id_lte: The parent_id_lte of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_lte: str
        """

        self._parent_id_lte = parent_id_lte

    @property
    def parent_id_not(self):
        """Gets the parent_id_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_not

    @parent_id_not.setter
    def parent_id_not(self, parent_id_not):
        """Sets the parent_id_not of this NfsInodeWhereInput.


        :param parent_id_not: The parent_id_not of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_not: str
        """

        self._parent_id_not = parent_id_not

    @property
    def parent_id_not_contains(self):
        """Gets the parent_id_not_contains of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_not_contains

    @parent_id_not_contains.setter
    def parent_id_not_contains(self, parent_id_not_contains):
        """Sets the parent_id_not_contains of this NfsInodeWhereInput.


        :param parent_id_not_contains: The parent_id_not_contains of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_not_contains: str
        """

        self._parent_id_not_contains = parent_id_not_contains

    @property
    def parent_id_not_ends_with(self):
        """Gets the parent_id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_not_ends_with

    @parent_id_not_ends_with.setter
    def parent_id_not_ends_with(self, parent_id_not_ends_with):
        """Sets the parent_id_not_ends_with of this NfsInodeWhereInput.


        :param parent_id_not_ends_with: The parent_id_not_ends_with of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_not_ends_with: str
        """

        self._parent_id_not_ends_with = parent_id_not_ends_with

    @property
    def parent_id_not_in(self):
        """Gets the parent_id_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._parent_id_not_in

    @parent_id_not_in.setter
    def parent_id_not_in(self, parent_id_not_in):
        """Sets the parent_id_not_in of this NfsInodeWhereInput.


        :param parent_id_not_in: The parent_id_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_not_in: list[str]
        """

        self._parent_id_not_in = parent_id_not_in

    @property
    def parent_id_not_starts_with(self):
        """Gets the parent_id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_not_starts_with

    @parent_id_not_starts_with.setter
    def parent_id_not_starts_with(self, parent_id_not_starts_with):
        """Sets the parent_id_not_starts_with of this NfsInodeWhereInput.


        :param parent_id_not_starts_with: The parent_id_not_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_not_starts_with: str
        """

        self._parent_id_not_starts_with = parent_id_not_starts_with

    @property
    def parent_id_starts_with(self):
        """Gets the parent_id_starts_with of this NfsInodeWhereInput.  # noqa: E501


        :return: The parent_id_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._parent_id_starts_with

    @parent_id_starts_with.setter
    def parent_id_starts_with(self, parent_id_starts_with):
        """Sets the parent_id_starts_with of this NfsInodeWhereInput.


        :param parent_id_starts_with: The parent_id_starts_with of this NfsInodeWhereInput.  # noqa: E501
        :type parent_id_starts_with: str
        """

        self._parent_id_starts_with = parent_id_starts_with

    @property
    def prioritized(self):
        """Gets the prioritized of this NfsInodeWhereInput.  # noqa: E501


        :return: The prioritized of this NfsInodeWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._prioritized

    @prioritized.setter
    def prioritized(self, prioritized):
        """Sets the prioritized of this NfsInodeWhereInput.


        :param prioritized: The prioritized of this NfsInodeWhereInput.  # noqa: E501
        :type prioritized: bool
        """

        self._prioritized = prioritized

    @property
    def prioritized_not(self):
        """Gets the prioritized_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The prioritized_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._prioritized_not

    @prioritized_not.setter
    def prioritized_not(self, prioritized_not):
        """Sets the prioritized_not of this NfsInodeWhereInput.


        :param prioritized_not: The prioritized_not of this NfsInodeWhereInput.  # noqa: E501
        :type prioritized_not: bool
        """

        self._prioritized_not = prioritized_not

    @property
    def resiliency_type(self):
        """Gets the resiliency_type of this NfsInodeWhereInput.  # noqa: E501


        :return: The resiliency_type of this NfsInodeWhereInput.  # noqa: E501
        :rtype: ResiliencyType
        """
        return self._resiliency_type

    @resiliency_type.setter
    def resiliency_type(self, resiliency_type):
        """Sets the resiliency_type of this NfsInodeWhereInput.


        :param resiliency_type: The resiliency_type of this NfsInodeWhereInput.  # noqa: E501
        :type resiliency_type: ResiliencyType
        """

        self._resiliency_type = resiliency_type

    @property
    def resiliency_type_in(self):
        """Gets the resiliency_type_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The resiliency_type_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[ResiliencyType]
        """
        return self._resiliency_type_in

    @resiliency_type_in.setter
    def resiliency_type_in(self, resiliency_type_in):
        """Sets the resiliency_type_in of this NfsInodeWhereInput.


        :param resiliency_type_in: The resiliency_type_in of this NfsInodeWhereInput.  # noqa: E501
        :type resiliency_type_in: list[ResiliencyType]
        """

        self._resiliency_type_in = resiliency_type_in

    @property
    def resiliency_type_not(self):
        """Gets the resiliency_type_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The resiliency_type_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: ResiliencyType
        """
        return self._resiliency_type_not

    @resiliency_type_not.setter
    def resiliency_type_not(self, resiliency_type_not):
        """Sets the resiliency_type_not of this NfsInodeWhereInput.


        :param resiliency_type_not: The resiliency_type_not of this NfsInodeWhereInput.  # noqa: E501
        :type resiliency_type_not: ResiliencyType
        """

        self._resiliency_type_not = resiliency_type_not

    @property
    def resiliency_type_not_in(self):
        """Gets the resiliency_type_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The resiliency_type_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[ResiliencyType]
        """
        return self._resiliency_type_not_in

    @resiliency_type_not_in.setter
    def resiliency_type_not_in(self, resiliency_type_not_in):
        """Sets the resiliency_type_not_in of this NfsInodeWhereInput.


        :param resiliency_type_not_in: The resiliency_type_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type resiliency_type_not_in: list[ResiliencyType]
        """

        self._resiliency_type_not_in = resiliency_type_not_in

    @property
    def shared_size(self):
        """Gets the shared_size of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._shared_size

    @shared_size.setter
    def shared_size(self, shared_size):
        """Sets the shared_size of this NfsInodeWhereInput.


        :param shared_size: The shared_size of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size: int
        """

        self._shared_size = shared_size

    @property
    def shared_size_gt(self):
        """Gets the shared_size_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._shared_size_gt

    @shared_size_gt.setter
    def shared_size_gt(self, shared_size_gt):
        """Sets the shared_size_gt of this NfsInodeWhereInput.


        :param shared_size_gt: The shared_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size_gt: int
        """

        self._shared_size_gt = shared_size_gt

    @property
    def shared_size_gte(self):
        """Gets the shared_size_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._shared_size_gte

    @shared_size_gte.setter
    def shared_size_gte(self, shared_size_gte):
        """Sets the shared_size_gte of this NfsInodeWhereInput.


        :param shared_size_gte: The shared_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size_gte: int
        """

        self._shared_size_gte = shared_size_gte

    @property
    def shared_size_in(self):
        """Gets the shared_size_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._shared_size_in

    @shared_size_in.setter
    def shared_size_in(self, shared_size_in):
        """Sets the shared_size_in of this NfsInodeWhereInput.


        :param shared_size_in: The shared_size_in of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size_in: list[int]
        """

        self._shared_size_in = shared_size_in

    @property
    def shared_size_lt(self):
        """Gets the shared_size_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._shared_size_lt

    @shared_size_lt.setter
    def shared_size_lt(self, shared_size_lt):
        """Sets the shared_size_lt of this NfsInodeWhereInput.


        :param shared_size_lt: The shared_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size_lt: int
        """

        self._shared_size_lt = shared_size_lt

    @property
    def shared_size_lte(self):
        """Gets the shared_size_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._shared_size_lte

    @shared_size_lte.setter
    def shared_size_lte(self, shared_size_lte):
        """Sets the shared_size_lte of this NfsInodeWhereInput.


        :param shared_size_lte: The shared_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size_lte: int
        """

        self._shared_size_lte = shared_size_lte

    @property
    def shared_size_not(self):
        """Gets the shared_size_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._shared_size_not

    @shared_size_not.setter
    def shared_size_not(self, shared_size_not):
        """Sets the shared_size_not of this NfsInodeWhereInput.


        :param shared_size_not: The shared_size_not of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size_not: int
        """

        self._shared_size_not = shared_size_not

    @property
    def shared_size_not_in(self):
        """Gets the shared_size_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The shared_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._shared_size_not_in

    @shared_size_not_in.setter
    def shared_size_not_in(self, shared_size_not_in):
        """Sets the shared_size_not_in of this NfsInodeWhereInput.


        :param shared_size_not_in: The shared_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type shared_size_not_in: list[int]
        """

        self._shared_size_not_in = shared_size_not_in

    @property
    def snapshot_num(self):
        """Gets the snapshot_num of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._snapshot_num

    @snapshot_num.setter
    def snapshot_num(self, snapshot_num):
        """Sets the snapshot_num of this NfsInodeWhereInput.


        :param snapshot_num: The snapshot_num of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num: int
        """

        self._snapshot_num = snapshot_num

    @property
    def snapshot_num_gt(self):
        """Gets the snapshot_num_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._snapshot_num_gt

    @snapshot_num_gt.setter
    def snapshot_num_gt(self, snapshot_num_gt):
        """Sets the snapshot_num_gt of this NfsInodeWhereInput.


        :param snapshot_num_gt: The snapshot_num_gt of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num_gt: int
        """

        self._snapshot_num_gt = snapshot_num_gt

    @property
    def snapshot_num_gte(self):
        """Gets the snapshot_num_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._snapshot_num_gte

    @snapshot_num_gte.setter
    def snapshot_num_gte(self, snapshot_num_gte):
        """Sets the snapshot_num_gte of this NfsInodeWhereInput.


        :param snapshot_num_gte: The snapshot_num_gte of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num_gte: int
        """

        self._snapshot_num_gte = snapshot_num_gte

    @property
    def snapshot_num_in(self):
        """Gets the snapshot_num_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._snapshot_num_in

    @snapshot_num_in.setter
    def snapshot_num_in(self, snapshot_num_in):
        """Sets the snapshot_num_in of this NfsInodeWhereInput.


        :param snapshot_num_in: The snapshot_num_in of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num_in: list[int]
        """

        self._snapshot_num_in = snapshot_num_in

    @property
    def snapshot_num_lt(self):
        """Gets the snapshot_num_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._snapshot_num_lt

    @snapshot_num_lt.setter
    def snapshot_num_lt(self, snapshot_num_lt):
        """Sets the snapshot_num_lt of this NfsInodeWhereInput.


        :param snapshot_num_lt: The snapshot_num_lt of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num_lt: int
        """

        self._snapshot_num_lt = snapshot_num_lt

    @property
    def snapshot_num_lte(self):
        """Gets the snapshot_num_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._snapshot_num_lte

    @snapshot_num_lte.setter
    def snapshot_num_lte(self, snapshot_num_lte):
        """Sets the snapshot_num_lte of this NfsInodeWhereInput.


        :param snapshot_num_lte: The snapshot_num_lte of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num_lte: int
        """

        self._snapshot_num_lte = snapshot_num_lte

    @property
    def snapshot_num_not(self):
        """Gets the snapshot_num_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._snapshot_num_not

    @snapshot_num_not.setter
    def snapshot_num_not(self, snapshot_num_not):
        """Sets the snapshot_num_not of this NfsInodeWhereInput.


        :param snapshot_num_not: The snapshot_num_not of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num_not: int
        """

        self._snapshot_num_not = snapshot_num_not

    @property
    def snapshot_num_not_in(self):
        """Gets the snapshot_num_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The snapshot_num_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._snapshot_num_not_in

    @snapshot_num_not_in.setter
    def snapshot_num_not_in(self, snapshot_num_not_in):
        """Sets the snapshot_num_not_in of this NfsInodeWhereInput.


        :param snapshot_num_not_in: The snapshot_num_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type snapshot_num_not_in: list[int]
        """

        self._snapshot_num_not_in = snapshot_num_not_in

    @property
    def unique_logical_size(self):
        """Gets the unique_logical_size of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size of this NfsInodeWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size

    @unique_logical_size.setter
    def unique_logical_size(self, unique_logical_size):
        """Sets the unique_logical_size of this NfsInodeWhereInput.


        :param unique_logical_size: The unique_logical_size of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size: float
        """

        self._unique_logical_size = unique_logical_size

    @property
    def unique_logical_size_gt(self):
        """Gets the unique_logical_size_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_gt

    @unique_logical_size_gt.setter
    def unique_logical_size_gt(self, unique_logical_size_gt):
        """Sets the unique_logical_size_gt of this NfsInodeWhereInput.


        :param unique_logical_size_gt: The unique_logical_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size_gt: float
        """

        self._unique_logical_size_gt = unique_logical_size_gt

    @property
    def unique_logical_size_gte(self):
        """Gets the unique_logical_size_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_gte

    @unique_logical_size_gte.setter
    def unique_logical_size_gte(self, unique_logical_size_gte):
        """Sets the unique_logical_size_gte of this NfsInodeWhereInput.


        :param unique_logical_size_gte: The unique_logical_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size_gte: float
        """

        self._unique_logical_size_gte = unique_logical_size_gte

    @property
    def unique_logical_size_in(self):
        """Gets the unique_logical_size_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._unique_logical_size_in

    @unique_logical_size_in.setter
    def unique_logical_size_in(self, unique_logical_size_in):
        """Sets the unique_logical_size_in of this NfsInodeWhereInput.


        :param unique_logical_size_in: The unique_logical_size_in of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size_in: list[float]
        """

        self._unique_logical_size_in = unique_logical_size_in

    @property
    def unique_logical_size_lt(self):
        """Gets the unique_logical_size_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_lt

    @unique_logical_size_lt.setter
    def unique_logical_size_lt(self, unique_logical_size_lt):
        """Sets the unique_logical_size_lt of this NfsInodeWhereInput.


        :param unique_logical_size_lt: The unique_logical_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size_lt: float
        """

        self._unique_logical_size_lt = unique_logical_size_lt

    @property
    def unique_logical_size_lte(self):
        """Gets the unique_logical_size_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_lte

    @unique_logical_size_lte.setter
    def unique_logical_size_lte(self, unique_logical_size_lte):
        """Sets the unique_logical_size_lte of this NfsInodeWhereInput.


        :param unique_logical_size_lte: The unique_logical_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size_lte: float
        """

        self._unique_logical_size_lte = unique_logical_size_lte

    @property
    def unique_logical_size_not(self):
        """Gets the unique_logical_size_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_not

    @unique_logical_size_not.setter
    def unique_logical_size_not(self, unique_logical_size_not):
        """Sets the unique_logical_size_not of this NfsInodeWhereInput.


        :param unique_logical_size_not: The unique_logical_size_not of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size_not: float
        """

        self._unique_logical_size_not = unique_logical_size_not

    @property
    def unique_logical_size_not_in(self):
        """Gets the unique_logical_size_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_logical_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._unique_logical_size_not_in

    @unique_logical_size_not_in.setter
    def unique_logical_size_not_in(self, unique_logical_size_not_in):
        """Sets the unique_logical_size_not_in of this NfsInodeWhereInput.


        :param unique_logical_size_not_in: The unique_logical_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type unique_logical_size_not_in: list[float]
        """

        self._unique_logical_size_not_in = unique_logical_size_not_in

    @property
    def unique_size(self):
        """Gets the unique_size of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size

    @unique_size.setter
    def unique_size(self, unique_size):
        """Sets the unique_size of this NfsInodeWhereInput.


        :param unique_size: The unique_size of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size: int
        """

        self._unique_size = unique_size

    @property
    def unique_size_gt(self):
        """Gets the unique_size_gt of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_gt

    @unique_size_gt.setter
    def unique_size_gt(self, unique_size_gt):
        """Sets the unique_size_gt of this NfsInodeWhereInput.


        :param unique_size_gt: The unique_size_gt of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size_gt: int
        """

        self._unique_size_gt = unique_size_gt

    @property
    def unique_size_gte(self):
        """Gets the unique_size_gte of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_gte

    @unique_size_gte.setter
    def unique_size_gte(self, unique_size_gte):
        """Sets the unique_size_gte of this NfsInodeWhereInput.


        :param unique_size_gte: The unique_size_gte of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size_gte: int
        """

        self._unique_size_gte = unique_size_gte

    @property
    def unique_size_in(self):
        """Gets the unique_size_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._unique_size_in

    @unique_size_in.setter
    def unique_size_in(self, unique_size_in):
        """Sets the unique_size_in of this NfsInodeWhereInput.


        :param unique_size_in: The unique_size_in of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size_in: list[int]
        """

        self._unique_size_in = unique_size_in

    @property
    def unique_size_lt(self):
        """Gets the unique_size_lt of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_lt

    @unique_size_lt.setter
    def unique_size_lt(self, unique_size_lt):
        """Sets the unique_size_lt of this NfsInodeWhereInput.


        :param unique_size_lt: The unique_size_lt of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size_lt: int
        """

        self._unique_size_lt = unique_size_lt

    @property
    def unique_size_lte(self):
        """Gets the unique_size_lte of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_lte

    @unique_size_lte.setter
    def unique_size_lte(self, unique_size_lte):
        """Sets the unique_size_lte of this NfsInodeWhereInput.


        :param unique_size_lte: The unique_size_lte of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size_lte: int
        """

        self._unique_size_lte = unique_size_lte

    @property
    def unique_size_not(self):
        """Gets the unique_size_not of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size_not of this NfsInodeWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_not

    @unique_size_not.setter
    def unique_size_not(self, unique_size_not):
        """Sets the unique_size_not of this NfsInodeWhereInput.


        :param unique_size_not: The unique_size_not of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size_not: int
        """

        self._unique_size_not = unique_size_not

    @property
    def unique_size_not_in(self):
        """Gets the unique_size_not_in of this NfsInodeWhereInput.  # noqa: E501


        :return: The unique_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._unique_size_not_in

    @unique_size_not_in.setter
    def unique_size_not_in(self, unique_size_not_in):
        """Sets the unique_size_not_in of this NfsInodeWhereInput.


        :param unique_size_not_in: The unique_size_not_in of this NfsInodeWhereInput.  # noqa: E501
        :type unique_size_not_in: list[int]
        """

        self._unique_size_not_in = unique_size_not_in

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NfsInodeWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, NfsInodeWhereInput):
            return True

        return self.to_dict() != other.to_dict()

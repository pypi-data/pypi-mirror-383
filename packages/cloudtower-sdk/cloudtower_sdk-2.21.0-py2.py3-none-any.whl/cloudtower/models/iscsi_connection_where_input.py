# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class IscsiConnectionWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[IscsiConnectionWhereInput]',
        '_not': 'list[IscsiConnectionWhereInput]',
        '_or': 'list[IscsiConnectionWhereInput]',
        'client_port': 'int',
        'client_port_gt': 'int',
        'client_port_gte': 'int',
        'client_port_in': 'list[int]',
        'client_port_lt': 'int',
        'client_port_lte': 'int',
        'client_port_not': 'int',
        'client_port_not_in': 'list[int]',
        'cluster': 'ClusterWhereInput',
        'host': 'HostWhereInput',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'initiator_ip': 'str',
        'initiator_ip_contains': 'str',
        'initiator_ip_ends_with': 'str',
        'initiator_ip_gt': 'str',
        'initiator_ip_gte': 'str',
        'initiator_ip_in': 'list[str]',
        'initiator_ip_lt': 'str',
        'initiator_ip_lte': 'str',
        'initiator_ip_not': 'str',
        'initiator_ip_not_contains': 'str',
        'initiator_ip_not_ends_with': 'str',
        'initiator_ip_not_in': 'list[str]',
        'initiator_ip_not_starts_with': 'str',
        'initiator_ip_starts_with': 'str',
        'iscsi_target': 'IscsiTargetWhereInput',
        'nvmf_subsystem': 'NvmfSubsystemWhereInput',
        'tr_type': 'StoreTransportType',
        'tr_type_in': 'list[StoreTransportType]',
        'tr_type_not': 'StoreTransportType',
        'tr_type_not_in': 'list[StoreTransportType]',
        'type': 'StoreConnectionType',
        'type_in': 'list[StoreConnectionType]',
        'type_not': 'StoreConnectionType',
        'type_not_in': 'list[StoreConnectionType]'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'client_port': 'client_port',
        'client_port_gt': 'client_port_gt',
        'client_port_gte': 'client_port_gte',
        'client_port_in': 'client_port_in',
        'client_port_lt': 'client_port_lt',
        'client_port_lte': 'client_port_lte',
        'client_port_not': 'client_port_not',
        'client_port_not_in': 'client_port_not_in',
        'cluster': 'cluster',
        'host': 'host',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'initiator_ip': 'initiator_ip',
        'initiator_ip_contains': 'initiator_ip_contains',
        'initiator_ip_ends_with': 'initiator_ip_ends_with',
        'initiator_ip_gt': 'initiator_ip_gt',
        'initiator_ip_gte': 'initiator_ip_gte',
        'initiator_ip_in': 'initiator_ip_in',
        'initiator_ip_lt': 'initiator_ip_lt',
        'initiator_ip_lte': 'initiator_ip_lte',
        'initiator_ip_not': 'initiator_ip_not',
        'initiator_ip_not_contains': 'initiator_ip_not_contains',
        'initiator_ip_not_ends_with': 'initiator_ip_not_ends_with',
        'initiator_ip_not_in': 'initiator_ip_not_in',
        'initiator_ip_not_starts_with': 'initiator_ip_not_starts_with',
        'initiator_ip_starts_with': 'initiator_ip_starts_with',
        'iscsi_target': 'iscsi_target',
        'nvmf_subsystem': 'nvmf_subsystem',
        'tr_type': 'tr_type',
        'tr_type_in': 'tr_type_in',
        'tr_type_not': 'tr_type_not',
        'tr_type_not_in': 'tr_type_not_in',
        'type': 'type',
        'type_in': 'type_in',
        'type_not': 'type_not',
        'type_not_in': 'type_not_in'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """IscsiConnectionWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._client_port = None
        self._client_port_gt = None
        self._client_port_gte = None
        self._client_port_in = None
        self._client_port_lt = None
        self._client_port_lte = None
        self._client_port_not = None
        self._client_port_not_in = None
        self._cluster = None
        self._host = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._initiator_ip = None
        self._initiator_ip_contains = None
        self._initiator_ip_ends_with = None
        self._initiator_ip_gt = None
        self._initiator_ip_gte = None
        self._initiator_ip_in = None
        self._initiator_ip_lt = None
        self._initiator_ip_lte = None
        self._initiator_ip_not = None
        self._initiator_ip_not_contains = None
        self._initiator_ip_not_ends_with = None
        self._initiator_ip_not_in = None
        self._initiator_ip_not_starts_with = None
        self._initiator_ip_starts_with = None
        self._iscsi_target = None
        self._nvmf_subsystem = None
        self._tr_type = None
        self._tr_type_in = None
        self._tr_type_not = None
        self._tr_type_not_in = None
        self._type = None
        self._type_in = None
        self._type_not = None
        self._type_not_in = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.client_port = kwargs.get("client_port", None)
        self.client_port_gt = kwargs.get("client_port_gt", None)
        self.client_port_gte = kwargs.get("client_port_gte", None)
        self.client_port_in = kwargs.get("client_port_in", None)
        self.client_port_lt = kwargs.get("client_port_lt", None)
        self.client_port_lte = kwargs.get("client_port_lte", None)
        self.client_port_not = kwargs.get("client_port_not", None)
        self.client_port_not_in = kwargs.get("client_port_not_in", None)
        self.cluster = kwargs.get("cluster", None)
        self.host = kwargs.get("host", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.initiator_ip = kwargs.get("initiator_ip", None)
        self.initiator_ip_contains = kwargs.get("initiator_ip_contains", None)
        self.initiator_ip_ends_with = kwargs.get("initiator_ip_ends_with", None)
        self.initiator_ip_gt = kwargs.get("initiator_ip_gt", None)
        self.initiator_ip_gte = kwargs.get("initiator_ip_gte", None)
        self.initiator_ip_in = kwargs.get("initiator_ip_in", None)
        self.initiator_ip_lt = kwargs.get("initiator_ip_lt", None)
        self.initiator_ip_lte = kwargs.get("initiator_ip_lte", None)
        self.initiator_ip_not = kwargs.get("initiator_ip_not", None)
        self.initiator_ip_not_contains = kwargs.get("initiator_ip_not_contains", None)
        self.initiator_ip_not_ends_with = kwargs.get("initiator_ip_not_ends_with", None)
        self.initiator_ip_not_in = kwargs.get("initiator_ip_not_in", None)
        self.initiator_ip_not_starts_with = kwargs.get("initiator_ip_not_starts_with", None)
        self.initiator_ip_starts_with = kwargs.get("initiator_ip_starts_with", None)
        self.iscsi_target = kwargs.get("iscsi_target", None)
        self.nvmf_subsystem = kwargs.get("nvmf_subsystem", None)
        self.tr_type = kwargs.get("tr_type", None)
        self.tr_type_in = kwargs.get("tr_type_in", None)
        self.tr_type_not = kwargs.get("tr_type_not", None)
        self.tr_type_not_in = kwargs.get("tr_type_not_in", None)
        self.type = kwargs.get("type", None)
        self.type_in = kwargs.get("type_in", None)
        self.type_not = kwargs.get("type_not", None)
        self.type_not_in = kwargs.get("type_not_in", None)

    @property
    def _and(self):
        """Gets the _and of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The _and of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[IscsiConnectionWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this IscsiConnectionWhereInput.


        :param _and: The _and of this IscsiConnectionWhereInput.  # noqa: E501
        :type _and: list[IscsiConnectionWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The _not of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[IscsiConnectionWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this IscsiConnectionWhereInput.


        :param _not: The _not of this IscsiConnectionWhereInput.  # noqa: E501
        :type _not: list[IscsiConnectionWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The _or of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[IscsiConnectionWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this IscsiConnectionWhereInput.


        :param _or: The _or of this IscsiConnectionWhereInput.  # noqa: E501
        :type _or: list[IscsiConnectionWhereInput]
        """

        self.__or = _or

    @property
    def client_port(self):
        """Gets the client_port of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._client_port

    @client_port.setter
    def client_port(self, client_port):
        """Sets the client_port of this IscsiConnectionWhereInput.


        :param client_port: The client_port of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port: int
        """

        self._client_port = client_port

    @property
    def client_port_gt(self):
        """Gets the client_port_gt of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port_gt of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._client_port_gt

    @client_port_gt.setter
    def client_port_gt(self, client_port_gt):
        """Sets the client_port_gt of this IscsiConnectionWhereInput.


        :param client_port_gt: The client_port_gt of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port_gt: int
        """

        self._client_port_gt = client_port_gt

    @property
    def client_port_gte(self):
        """Gets the client_port_gte of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port_gte of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._client_port_gte

    @client_port_gte.setter
    def client_port_gte(self, client_port_gte):
        """Sets the client_port_gte of this IscsiConnectionWhereInput.


        :param client_port_gte: The client_port_gte of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port_gte: int
        """

        self._client_port_gte = client_port_gte

    @property
    def client_port_in(self):
        """Gets the client_port_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._client_port_in

    @client_port_in.setter
    def client_port_in(self, client_port_in):
        """Sets the client_port_in of this IscsiConnectionWhereInput.


        :param client_port_in: The client_port_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port_in: list[int]
        """

        self._client_port_in = client_port_in

    @property
    def client_port_lt(self):
        """Gets the client_port_lt of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port_lt of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._client_port_lt

    @client_port_lt.setter
    def client_port_lt(self, client_port_lt):
        """Sets the client_port_lt of this IscsiConnectionWhereInput.


        :param client_port_lt: The client_port_lt of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port_lt: int
        """

        self._client_port_lt = client_port_lt

    @property
    def client_port_lte(self):
        """Gets the client_port_lte of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port_lte of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._client_port_lte

    @client_port_lte.setter
    def client_port_lte(self, client_port_lte):
        """Sets the client_port_lte of this IscsiConnectionWhereInput.


        :param client_port_lte: The client_port_lte of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port_lte: int
        """

        self._client_port_lte = client_port_lte

    @property
    def client_port_not(self):
        """Gets the client_port_not of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port_not of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._client_port_not

    @client_port_not.setter
    def client_port_not(self, client_port_not):
        """Sets the client_port_not of this IscsiConnectionWhereInput.


        :param client_port_not: The client_port_not of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port_not: int
        """

        self._client_port_not = client_port_not

    @property
    def client_port_not_in(self):
        """Gets the client_port_not_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The client_port_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._client_port_not_in

    @client_port_not_in.setter
    def client_port_not_in(self, client_port_not_in):
        """Sets the client_port_not_in of this IscsiConnectionWhereInput.


        :param client_port_not_in: The client_port_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type client_port_not_in: list[int]
        """

        self._client_port_not_in = client_port_not_in

    @property
    def cluster(self):
        """Gets the cluster of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The cluster of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this IscsiConnectionWhereInput.


        :param cluster: The cluster of this IscsiConnectionWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def host(self):
        """Gets the host of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The host of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: HostWhereInput
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this IscsiConnectionWhereInput.


        :param host: The host of this IscsiConnectionWhereInput.  # noqa: E501
        :type host: HostWhereInput
        """

        self._host = host

    @property
    def id(self):
        """Gets the id of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IscsiConnectionWhereInput.


        :param id: The id of this IscsiConnectionWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this IscsiConnectionWhereInput.


        :param id_contains: The id_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this IscsiConnectionWhereInput.


        :param id_ends_with: The id_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_gt of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this IscsiConnectionWhereInput.


        :param id_gt: The id_gt of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_gte of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this IscsiConnectionWhereInput.


        :param id_gte: The id_gte of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this IscsiConnectionWhereInput.


        :param id_in: The id_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_lt of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this IscsiConnectionWhereInput.


        :param id_lt: The id_lt of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_lte of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this IscsiConnectionWhereInput.


        :param id_lte: The id_lte of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_not of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this IscsiConnectionWhereInput.


        :param id_not: The id_not of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_not_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this IscsiConnectionWhereInput.


        :param id_not_contains: The id_not_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this IscsiConnectionWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this IscsiConnectionWhereInput.


        :param id_not_in: The id_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this IscsiConnectionWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The id_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this IscsiConnectionWhereInput.


        :param id_starts_with: The id_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def initiator_ip(self):
        """Gets the initiator_ip of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip

    @initiator_ip.setter
    def initiator_ip(self, initiator_ip):
        """Sets the initiator_ip of this IscsiConnectionWhereInput.


        :param initiator_ip: The initiator_ip of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip: str
        """

        self._initiator_ip = initiator_ip

    @property
    def initiator_ip_contains(self):
        """Gets the initiator_ip_contains of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_contains

    @initiator_ip_contains.setter
    def initiator_ip_contains(self, initiator_ip_contains):
        """Sets the initiator_ip_contains of this IscsiConnectionWhereInput.


        :param initiator_ip_contains: The initiator_ip_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_contains: str
        """

        self._initiator_ip_contains = initiator_ip_contains

    @property
    def initiator_ip_ends_with(self):
        """Gets the initiator_ip_ends_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_ends_with

    @initiator_ip_ends_with.setter
    def initiator_ip_ends_with(self, initiator_ip_ends_with):
        """Sets the initiator_ip_ends_with of this IscsiConnectionWhereInput.


        :param initiator_ip_ends_with: The initiator_ip_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_ends_with: str
        """

        self._initiator_ip_ends_with = initiator_ip_ends_with

    @property
    def initiator_ip_gt(self):
        """Gets the initiator_ip_gt of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_gt of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_gt

    @initiator_ip_gt.setter
    def initiator_ip_gt(self, initiator_ip_gt):
        """Sets the initiator_ip_gt of this IscsiConnectionWhereInput.


        :param initiator_ip_gt: The initiator_ip_gt of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_gt: str
        """

        self._initiator_ip_gt = initiator_ip_gt

    @property
    def initiator_ip_gte(self):
        """Gets the initiator_ip_gte of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_gte of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_gte

    @initiator_ip_gte.setter
    def initiator_ip_gte(self, initiator_ip_gte):
        """Sets the initiator_ip_gte of this IscsiConnectionWhereInput.


        :param initiator_ip_gte: The initiator_ip_gte of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_gte: str
        """

        self._initiator_ip_gte = initiator_ip_gte

    @property
    def initiator_ip_in(self):
        """Gets the initiator_ip_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._initiator_ip_in

    @initiator_ip_in.setter
    def initiator_ip_in(self, initiator_ip_in):
        """Sets the initiator_ip_in of this IscsiConnectionWhereInput.


        :param initiator_ip_in: The initiator_ip_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_in: list[str]
        """

        self._initiator_ip_in = initiator_ip_in

    @property
    def initiator_ip_lt(self):
        """Gets the initiator_ip_lt of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_lt of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_lt

    @initiator_ip_lt.setter
    def initiator_ip_lt(self, initiator_ip_lt):
        """Sets the initiator_ip_lt of this IscsiConnectionWhereInput.


        :param initiator_ip_lt: The initiator_ip_lt of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_lt: str
        """

        self._initiator_ip_lt = initiator_ip_lt

    @property
    def initiator_ip_lte(self):
        """Gets the initiator_ip_lte of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_lte of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_lte

    @initiator_ip_lte.setter
    def initiator_ip_lte(self, initiator_ip_lte):
        """Sets the initiator_ip_lte of this IscsiConnectionWhereInput.


        :param initiator_ip_lte: The initiator_ip_lte of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_lte: str
        """

        self._initiator_ip_lte = initiator_ip_lte

    @property
    def initiator_ip_not(self):
        """Gets the initiator_ip_not of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_not of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_not

    @initiator_ip_not.setter
    def initiator_ip_not(self, initiator_ip_not):
        """Sets the initiator_ip_not of this IscsiConnectionWhereInput.


        :param initiator_ip_not: The initiator_ip_not of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_not: str
        """

        self._initiator_ip_not = initiator_ip_not

    @property
    def initiator_ip_not_contains(self):
        """Gets the initiator_ip_not_contains of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_not_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_not_contains

    @initiator_ip_not_contains.setter
    def initiator_ip_not_contains(self, initiator_ip_not_contains):
        """Sets the initiator_ip_not_contains of this IscsiConnectionWhereInput.


        :param initiator_ip_not_contains: The initiator_ip_not_contains of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_not_contains: str
        """

        self._initiator_ip_not_contains = initiator_ip_not_contains

    @property
    def initiator_ip_not_ends_with(self):
        """Gets the initiator_ip_not_ends_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_not_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_not_ends_with

    @initiator_ip_not_ends_with.setter
    def initiator_ip_not_ends_with(self, initiator_ip_not_ends_with):
        """Sets the initiator_ip_not_ends_with of this IscsiConnectionWhereInput.


        :param initiator_ip_not_ends_with: The initiator_ip_not_ends_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_not_ends_with: str
        """

        self._initiator_ip_not_ends_with = initiator_ip_not_ends_with

    @property
    def initiator_ip_not_in(self):
        """Gets the initiator_ip_not_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._initiator_ip_not_in

    @initiator_ip_not_in.setter
    def initiator_ip_not_in(self, initiator_ip_not_in):
        """Sets the initiator_ip_not_in of this IscsiConnectionWhereInput.


        :param initiator_ip_not_in: The initiator_ip_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_not_in: list[str]
        """

        self._initiator_ip_not_in = initiator_ip_not_in

    @property
    def initiator_ip_not_starts_with(self):
        """Gets the initiator_ip_not_starts_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_not_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_not_starts_with

    @initiator_ip_not_starts_with.setter
    def initiator_ip_not_starts_with(self, initiator_ip_not_starts_with):
        """Sets the initiator_ip_not_starts_with of this IscsiConnectionWhereInput.


        :param initiator_ip_not_starts_with: The initiator_ip_not_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_not_starts_with: str
        """

        self._initiator_ip_not_starts_with = initiator_ip_not_starts_with

    @property
    def initiator_ip_starts_with(self):
        """Gets the initiator_ip_starts_with of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The initiator_ip_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._initiator_ip_starts_with

    @initiator_ip_starts_with.setter
    def initiator_ip_starts_with(self, initiator_ip_starts_with):
        """Sets the initiator_ip_starts_with of this IscsiConnectionWhereInput.


        :param initiator_ip_starts_with: The initiator_ip_starts_with of this IscsiConnectionWhereInput.  # noqa: E501
        :type initiator_ip_starts_with: str
        """

        self._initiator_ip_starts_with = initiator_ip_starts_with

    @property
    def iscsi_target(self):
        """Gets the iscsi_target of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The iscsi_target of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: IscsiTargetWhereInput
        """
        return self._iscsi_target

    @iscsi_target.setter
    def iscsi_target(self, iscsi_target):
        """Sets the iscsi_target of this IscsiConnectionWhereInput.


        :param iscsi_target: The iscsi_target of this IscsiConnectionWhereInput.  # noqa: E501
        :type iscsi_target: IscsiTargetWhereInput
        """

        self._iscsi_target = iscsi_target

    @property
    def nvmf_subsystem(self):
        """Gets the nvmf_subsystem of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The nvmf_subsystem of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: NvmfSubsystemWhereInput
        """
        return self._nvmf_subsystem

    @nvmf_subsystem.setter
    def nvmf_subsystem(self, nvmf_subsystem):
        """Sets the nvmf_subsystem of this IscsiConnectionWhereInput.


        :param nvmf_subsystem: The nvmf_subsystem of this IscsiConnectionWhereInput.  # noqa: E501
        :type nvmf_subsystem: NvmfSubsystemWhereInput
        """

        self._nvmf_subsystem = nvmf_subsystem

    @property
    def tr_type(self):
        """Gets the tr_type of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The tr_type of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: StoreTransportType
        """
        return self._tr_type

    @tr_type.setter
    def tr_type(self, tr_type):
        """Sets the tr_type of this IscsiConnectionWhereInput.


        :param tr_type: The tr_type of this IscsiConnectionWhereInput.  # noqa: E501
        :type tr_type: StoreTransportType
        """

        self._tr_type = tr_type

    @property
    def tr_type_in(self):
        """Gets the tr_type_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The tr_type_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[StoreTransportType]
        """
        return self._tr_type_in

    @tr_type_in.setter
    def tr_type_in(self, tr_type_in):
        """Sets the tr_type_in of this IscsiConnectionWhereInput.


        :param tr_type_in: The tr_type_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type tr_type_in: list[StoreTransportType]
        """

        self._tr_type_in = tr_type_in

    @property
    def tr_type_not(self):
        """Gets the tr_type_not of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The tr_type_not of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: StoreTransportType
        """
        return self._tr_type_not

    @tr_type_not.setter
    def tr_type_not(self, tr_type_not):
        """Sets the tr_type_not of this IscsiConnectionWhereInput.


        :param tr_type_not: The tr_type_not of this IscsiConnectionWhereInput.  # noqa: E501
        :type tr_type_not: StoreTransportType
        """

        self._tr_type_not = tr_type_not

    @property
    def tr_type_not_in(self):
        """Gets the tr_type_not_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The tr_type_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[StoreTransportType]
        """
        return self._tr_type_not_in

    @tr_type_not_in.setter
    def tr_type_not_in(self, tr_type_not_in):
        """Sets the tr_type_not_in of this IscsiConnectionWhereInput.


        :param tr_type_not_in: The tr_type_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type tr_type_not_in: list[StoreTransportType]
        """

        self._tr_type_not_in = tr_type_not_in

    @property
    def type(self):
        """Gets the type of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The type of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: StoreConnectionType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this IscsiConnectionWhereInput.


        :param type: The type of this IscsiConnectionWhereInput.  # noqa: E501
        :type type: StoreConnectionType
        """

        self._type = type

    @property
    def type_in(self):
        """Gets the type_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The type_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[StoreConnectionType]
        """
        return self._type_in

    @type_in.setter
    def type_in(self, type_in):
        """Sets the type_in of this IscsiConnectionWhereInput.


        :param type_in: The type_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type type_in: list[StoreConnectionType]
        """

        self._type_in = type_in

    @property
    def type_not(self):
        """Gets the type_not of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The type_not of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: StoreConnectionType
        """
        return self._type_not

    @type_not.setter
    def type_not(self, type_not):
        """Sets the type_not of this IscsiConnectionWhereInput.


        :param type_not: The type_not of this IscsiConnectionWhereInput.  # noqa: E501
        :type type_not: StoreConnectionType
        """

        self._type_not = type_not

    @property
    def type_not_in(self):
        """Gets the type_not_in of this IscsiConnectionWhereInput.  # noqa: E501


        :return: The type_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :rtype: list[StoreConnectionType]
        """
        return self._type_not_in

    @type_not_in.setter
    def type_not_in(self, type_not_in):
        """Sets the type_not_in of this IscsiConnectionWhereInput.


        :param type_not_in: The type_not_in of this IscsiConnectionWhereInput.  # noqa: E501
        :type type_not_in: list[StoreConnectionType]
        """

        self._type_not_in = type_not_in

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IscsiConnectionWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IscsiConnectionWhereInput):
            return True

        return self.to_dict() != other.to_dict()

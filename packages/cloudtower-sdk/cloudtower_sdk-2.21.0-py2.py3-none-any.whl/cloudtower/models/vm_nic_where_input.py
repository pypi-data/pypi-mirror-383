# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class VmNicWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[VmNicWhereInput]',
        '_not': 'list[VmNicWhereInput]',
        '_or': 'list[VmNicWhereInput]',
        'egress_rate_limit_burst_in_bit': 'float',
        'egress_rate_limit_burst_in_bit_gt': 'float',
        'egress_rate_limit_burst_in_bit_gte': 'float',
        'egress_rate_limit_burst_in_bit_in': 'list[float]',
        'egress_rate_limit_burst_in_bit_lt': 'float',
        'egress_rate_limit_burst_in_bit_lte': 'float',
        'egress_rate_limit_burst_in_bit_not': 'float',
        'egress_rate_limit_burst_in_bit_not_in': 'list[float]',
        'egress_rate_limit_enabled': 'bool',
        'egress_rate_limit_enabled_not': 'bool',
        'egress_rate_limit_max_rate_in_bitps': 'float',
        'egress_rate_limit_max_rate_in_bitps_gt': 'float',
        'egress_rate_limit_max_rate_in_bitps_gte': 'float',
        'egress_rate_limit_max_rate_in_bitps_in': 'list[float]',
        'egress_rate_limit_max_rate_in_bitps_lt': 'float',
        'egress_rate_limit_max_rate_in_bitps_lte': 'float',
        'egress_rate_limit_max_rate_in_bitps_not': 'float',
        'egress_rate_limit_max_rate_in_bitps_not_in': 'list[float]',
        'enabled': 'bool',
        'enabled_not': 'bool',
        'gateway': 'str',
        'gateway_contains': 'str',
        'gateway_ends_with': 'str',
        'gateway_gt': 'str',
        'gateway_gte': 'str',
        'gateway_in': 'list[str]',
        'gateway_lt': 'str',
        'gateway_lte': 'str',
        'gateway_not': 'str',
        'gateway_not_contains': 'str',
        'gateway_not_ends_with': 'str',
        'gateway_not_in': 'list[str]',
        'gateway_not_starts_with': 'str',
        'gateway_starts_with': 'str',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'ingress_rate_limit_burst_in_bit': 'float',
        'ingress_rate_limit_burst_in_bit_gt': 'float',
        'ingress_rate_limit_burst_in_bit_gte': 'float',
        'ingress_rate_limit_burst_in_bit_in': 'list[float]',
        'ingress_rate_limit_burst_in_bit_lt': 'float',
        'ingress_rate_limit_burst_in_bit_lte': 'float',
        'ingress_rate_limit_burst_in_bit_not': 'float',
        'ingress_rate_limit_burst_in_bit_not_in': 'list[float]',
        'ingress_rate_limit_enabled': 'bool',
        'ingress_rate_limit_enabled_not': 'bool',
        'ingress_rate_limit_max_rate_in_bitps': 'float',
        'ingress_rate_limit_max_rate_in_bitps_gt': 'float',
        'ingress_rate_limit_max_rate_in_bitps_gte': 'float',
        'ingress_rate_limit_max_rate_in_bitps_in': 'list[float]',
        'ingress_rate_limit_max_rate_in_bitps_lt': 'float',
        'ingress_rate_limit_max_rate_in_bitps_lte': 'float',
        'ingress_rate_limit_max_rate_in_bitps_not': 'float',
        'ingress_rate_limit_max_rate_in_bitps_not_in': 'list[float]',
        'interface_id': 'str',
        'interface_id_contains': 'str',
        'interface_id_ends_with': 'str',
        'interface_id_gt': 'str',
        'interface_id_gte': 'str',
        'interface_id_in': 'list[str]',
        'interface_id_lt': 'str',
        'interface_id_lte': 'str',
        'interface_id_not': 'str',
        'interface_id_not_contains': 'str',
        'interface_id_not_ends_with': 'str',
        'interface_id_not_in': 'list[str]',
        'interface_id_not_starts_with': 'str',
        'interface_id_starts_with': 'str',
        'ip_address': 'str',
        'ip_address_contains': 'str',
        'ip_address_ends_with': 'str',
        'ip_address_gt': 'str',
        'ip_address_gte': 'str',
        'ip_address_in': 'list[str]',
        'ip_address_lt': 'str',
        'ip_address_lte': 'str',
        'ip_address_not': 'str',
        'ip_address_not_contains': 'str',
        'ip_address_not_ends_with': 'str',
        'ip_address_not_in': 'list[str]',
        'ip_address_not_starts_with': 'str',
        'ip_address_starts_with': 'str',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'mac_address': 'str',
        'mac_address_contains': 'str',
        'mac_address_ends_with': 'str',
        'mac_address_gt': 'str',
        'mac_address_gte': 'str',
        'mac_address_in': 'list[str]',
        'mac_address_lt': 'str',
        'mac_address_lte': 'str',
        'mac_address_not': 'str',
        'mac_address_not_contains': 'str',
        'mac_address_not_ends_with': 'str',
        'mac_address_not_in': 'list[str]',
        'mac_address_not_starts_with': 'str',
        'mac_address_starts_with': 'str',
        'mirror': 'bool',
        'mirror_not': 'bool',
        'model': 'VmNicModel',
        'model_in': 'list[VmNicModel]',
        'model_not': 'VmNicModel',
        'model_not_in': 'list[VmNicModel]',
        'nic': 'NicWhereInput',
        'order': 'int',
        'order_gt': 'int',
        'order_gte': 'int',
        'order_in': 'list[int]',
        'order_lt': 'int',
        'order_lte': 'int',
        'order_not': 'int',
        'order_not_in': 'list[int]',
        'subnet_mask': 'str',
        'subnet_mask_contains': 'str',
        'subnet_mask_ends_with': 'str',
        'subnet_mask_gt': 'str',
        'subnet_mask_gte': 'str',
        'subnet_mask_in': 'list[str]',
        'subnet_mask_lt': 'str',
        'subnet_mask_lte': 'str',
        'subnet_mask_not': 'str',
        'subnet_mask_not_contains': 'str',
        'subnet_mask_not_ends_with': 'str',
        'subnet_mask_not_in': 'list[str]',
        'subnet_mask_not_starts_with': 'str',
        'subnet_mask_starts_with': 'str',
        'type': 'VmNicType',
        'type_in': 'list[VmNicType]',
        'type_not': 'VmNicType',
        'type_not_in': 'list[VmNicType]',
        'vlan': 'VlanWhereInput',
        'vm': 'VmWhereInput',
        'vpc_nic': 'VirtualPrivateCloudNicWhereInput'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'egress_rate_limit_burst_in_bit': 'egress_rate_limit_burst_in_bit',
        'egress_rate_limit_burst_in_bit_gt': 'egress_rate_limit_burst_in_bit_gt',
        'egress_rate_limit_burst_in_bit_gte': 'egress_rate_limit_burst_in_bit_gte',
        'egress_rate_limit_burst_in_bit_in': 'egress_rate_limit_burst_in_bit_in',
        'egress_rate_limit_burst_in_bit_lt': 'egress_rate_limit_burst_in_bit_lt',
        'egress_rate_limit_burst_in_bit_lte': 'egress_rate_limit_burst_in_bit_lte',
        'egress_rate_limit_burst_in_bit_not': 'egress_rate_limit_burst_in_bit_not',
        'egress_rate_limit_burst_in_bit_not_in': 'egress_rate_limit_burst_in_bit_not_in',
        'egress_rate_limit_enabled': 'egress_rate_limit_enabled',
        'egress_rate_limit_enabled_not': 'egress_rate_limit_enabled_not',
        'egress_rate_limit_max_rate_in_bitps': 'egress_rate_limit_max_rate_in_bitps',
        'egress_rate_limit_max_rate_in_bitps_gt': 'egress_rate_limit_max_rate_in_bitps_gt',
        'egress_rate_limit_max_rate_in_bitps_gte': 'egress_rate_limit_max_rate_in_bitps_gte',
        'egress_rate_limit_max_rate_in_bitps_in': 'egress_rate_limit_max_rate_in_bitps_in',
        'egress_rate_limit_max_rate_in_bitps_lt': 'egress_rate_limit_max_rate_in_bitps_lt',
        'egress_rate_limit_max_rate_in_bitps_lte': 'egress_rate_limit_max_rate_in_bitps_lte',
        'egress_rate_limit_max_rate_in_bitps_not': 'egress_rate_limit_max_rate_in_bitps_not',
        'egress_rate_limit_max_rate_in_bitps_not_in': 'egress_rate_limit_max_rate_in_bitps_not_in',
        'enabled': 'enabled',
        'enabled_not': 'enabled_not',
        'gateway': 'gateway',
        'gateway_contains': 'gateway_contains',
        'gateway_ends_with': 'gateway_ends_with',
        'gateway_gt': 'gateway_gt',
        'gateway_gte': 'gateway_gte',
        'gateway_in': 'gateway_in',
        'gateway_lt': 'gateway_lt',
        'gateway_lte': 'gateway_lte',
        'gateway_not': 'gateway_not',
        'gateway_not_contains': 'gateway_not_contains',
        'gateway_not_ends_with': 'gateway_not_ends_with',
        'gateway_not_in': 'gateway_not_in',
        'gateway_not_starts_with': 'gateway_not_starts_with',
        'gateway_starts_with': 'gateway_starts_with',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'ingress_rate_limit_burst_in_bit': 'ingress_rate_limit_burst_in_bit',
        'ingress_rate_limit_burst_in_bit_gt': 'ingress_rate_limit_burst_in_bit_gt',
        'ingress_rate_limit_burst_in_bit_gte': 'ingress_rate_limit_burst_in_bit_gte',
        'ingress_rate_limit_burst_in_bit_in': 'ingress_rate_limit_burst_in_bit_in',
        'ingress_rate_limit_burst_in_bit_lt': 'ingress_rate_limit_burst_in_bit_lt',
        'ingress_rate_limit_burst_in_bit_lte': 'ingress_rate_limit_burst_in_bit_lte',
        'ingress_rate_limit_burst_in_bit_not': 'ingress_rate_limit_burst_in_bit_not',
        'ingress_rate_limit_burst_in_bit_not_in': 'ingress_rate_limit_burst_in_bit_not_in',
        'ingress_rate_limit_enabled': 'ingress_rate_limit_enabled',
        'ingress_rate_limit_enabled_not': 'ingress_rate_limit_enabled_not',
        'ingress_rate_limit_max_rate_in_bitps': 'ingress_rate_limit_max_rate_in_bitps',
        'ingress_rate_limit_max_rate_in_bitps_gt': 'ingress_rate_limit_max_rate_in_bitps_gt',
        'ingress_rate_limit_max_rate_in_bitps_gte': 'ingress_rate_limit_max_rate_in_bitps_gte',
        'ingress_rate_limit_max_rate_in_bitps_in': 'ingress_rate_limit_max_rate_in_bitps_in',
        'ingress_rate_limit_max_rate_in_bitps_lt': 'ingress_rate_limit_max_rate_in_bitps_lt',
        'ingress_rate_limit_max_rate_in_bitps_lte': 'ingress_rate_limit_max_rate_in_bitps_lte',
        'ingress_rate_limit_max_rate_in_bitps_not': 'ingress_rate_limit_max_rate_in_bitps_not',
        'ingress_rate_limit_max_rate_in_bitps_not_in': 'ingress_rate_limit_max_rate_in_bitps_not_in',
        'interface_id': 'interface_id',
        'interface_id_contains': 'interface_id_contains',
        'interface_id_ends_with': 'interface_id_ends_with',
        'interface_id_gt': 'interface_id_gt',
        'interface_id_gte': 'interface_id_gte',
        'interface_id_in': 'interface_id_in',
        'interface_id_lt': 'interface_id_lt',
        'interface_id_lte': 'interface_id_lte',
        'interface_id_not': 'interface_id_not',
        'interface_id_not_contains': 'interface_id_not_contains',
        'interface_id_not_ends_with': 'interface_id_not_ends_with',
        'interface_id_not_in': 'interface_id_not_in',
        'interface_id_not_starts_with': 'interface_id_not_starts_with',
        'interface_id_starts_with': 'interface_id_starts_with',
        'ip_address': 'ip_address',
        'ip_address_contains': 'ip_address_contains',
        'ip_address_ends_with': 'ip_address_ends_with',
        'ip_address_gt': 'ip_address_gt',
        'ip_address_gte': 'ip_address_gte',
        'ip_address_in': 'ip_address_in',
        'ip_address_lt': 'ip_address_lt',
        'ip_address_lte': 'ip_address_lte',
        'ip_address_not': 'ip_address_not',
        'ip_address_not_contains': 'ip_address_not_contains',
        'ip_address_not_ends_with': 'ip_address_not_ends_with',
        'ip_address_not_in': 'ip_address_not_in',
        'ip_address_not_starts_with': 'ip_address_not_starts_with',
        'ip_address_starts_with': 'ip_address_starts_with',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'mac_address': 'mac_address',
        'mac_address_contains': 'mac_address_contains',
        'mac_address_ends_with': 'mac_address_ends_with',
        'mac_address_gt': 'mac_address_gt',
        'mac_address_gte': 'mac_address_gte',
        'mac_address_in': 'mac_address_in',
        'mac_address_lt': 'mac_address_lt',
        'mac_address_lte': 'mac_address_lte',
        'mac_address_not': 'mac_address_not',
        'mac_address_not_contains': 'mac_address_not_contains',
        'mac_address_not_ends_with': 'mac_address_not_ends_with',
        'mac_address_not_in': 'mac_address_not_in',
        'mac_address_not_starts_with': 'mac_address_not_starts_with',
        'mac_address_starts_with': 'mac_address_starts_with',
        'mirror': 'mirror',
        'mirror_not': 'mirror_not',
        'model': 'model',
        'model_in': 'model_in',
        'model_not': 'model_not',
        'model_not_in': 'model_not_in',
        'nic': 'nic',
        'order': 'order',
        'order_gt': 'order_gt',
        'order_gte': 'order_gte',
        'order_in': 'order_in',
        'order_lt': 'order_lt',
        'order_lte': 'order_lte',
        'order_not': 'order_not',
        'order_not_in': 'order_not_in',
        'subnet_mask': 'subnet_mask',
        'subnet_mask_contains': 'subnet_mask_contains',
        'subnet_mask_ends_with': 'subnet_mask_ends_with',
        'subnet_mask_gt': 'subnet_mask_gt',
        'subnet_mask_gte': 'subnet_mask_gte',
        'subnet_mask_in': 'subnet_mask_in',
        'subnet_mask_lt': 'subnet_mask_lt',
        'subnet_mask_lte': 'subnet_mask_lte',
        'subnet_mask_not': 'subnet_mask_not',
        'subnet_mask_not_contains': 'subnet_mask_not_contains',
        'subnet_mask_not_ends_with': 'subnet_mask_not_ends_with',
        'subnet_mask_not_in': 'subnet_mask_not_in',
        'subnet_mask_not_starts_with': 'subnet_mask_not_starts_with',
        'subnet_mask_starts_with': 'subnet_mask_starts_with',
        'type': 'type',
        'type_in': 'type_in',
        'type_not': 'type_not',
        'type_not_in': 'type_not_in',
        'vlan': 'vlan',
        'vm': 'vm',
        'vpc_nic': 'vpc_nic'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """VmNicWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._egress_rate_limit_burst_in_bit = None
        self._egress_rate_limit_burst_in_bit_gt = None
        self._egress_rate_limit_burst_in_bit_gte = None
        self._egress_rate_limit_burst_in_bit_in = None
        self._egress_rate_limit_burst_in_bit_lt = None
        self._egress_rate_limit_burst_in_bit_lte = None
        self._egress_rate_limit_burst_in_bit_not = None
        self._egress_rate_limit_burst_in_bit_not_in = None
        self._egress_rate_limit_enabled = None
        self._egress_rate_limit_enabled_not = None
        self._egress_rate_limit_max_rate_in_bitps = None
        self._egress_rate_limit_max_rate_in_bitps_gt = None
        self._egress_rate_limit_max_rate_in_bitps_gte = None
        self._egress_rate_limit_max_rate_in_bitps_in = None
        self._egress_rate_limit_max_rate_in_bitps_lt = None
        self._egress_rate_limit_max_rate_in_bitps_lte = None
        self._egress_rate_limit_max_rate_in_bitps_not = None
        self._egress_rate_limit_max_rate_in_bitps_not_in = None
        self._enabled = None
        self._enabled_not = None
        self._gateway = None
        self._gateway_contains = None
        self._gateway_ends_with = None
        self._gateway_gt = None
        self._gateway_gte = None
        self._gateway_in = None
        self._gateway_lt = None
        self._gateway_lte = None
        self._gateway_not = None
        self._gateway_not_contains = None
        self._gateway_not_ends_with = None
        self._gateway_not_in = None
        self._gateway_not_starts_with = None
        self._gateway_starts_with = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._ingress_rate_limit_burst_in_bit = None
        self._ingress_rate_limit_burst_in_bit_gt = None
        self._ingress_rate_limit_burst_in_bit_gte = None
        self._ingress_rate_limit_burst_in_bit_in = None
        self._ingress_rate_limit_burst_in_bit_lt = None
        self._ingress_rate_limit_burst_in_bit_lte = None
        self._ingress_rate_limit_burst_in_bit_not = None
        self._ingress_rate_limit_burst_in_bit_not_in = None
        self._ingress_rate_limit_enabled = None
        self._ingress_rate_limit_enabled_not = None
        self._ingress_rate_limit_max_rate_in_bitps = None
        self._ingress_rate_limit_max_rate_in_bitps_gt = None
        self._ingress_rate_limit_max_rate_in_bitps_gte = None
        self._ingress_rate_limit_max_rate_in_bitps_in = None
        self._ingress_rate_limit_max_rate_in_bitps_lt = None
        self._ingress_rate_limit_max_rate_in_bitps_lte = None
        self._ingress_rate_limit_max_rate_in_bitps_not = None
        self._ingress_rate_limit_max_rate_in_bitps_not_in = None
        self._interface_id = None
        self._interface_id_contains = None
        self._interface_id_ends_with = None
        self._interface_id_gt = None
        self._interface_id_gte = None
        self._interface_id_in = None
        self._interface_id_lt = None
        self._interface_id_lte = None
        self._interface_id_not = None
        self._interface_id_not_contains = None
        self._interface_id_not_ends_with = None
        self._interface_id_not_in = None
        self._interface_id_not_starts_with = None
        self._interface_id_starts_with = None
        self._ip_address = None
        self._ip_address_contains = None
        self._ip_address_ends_with = None
        self._ip_address_gt = None
        self._ip_address_gte = None
        self._ip_address_in = None
        self._ip_address_lt = None
        self._ip_address_lte = None
        self._ip_address_not = None
        self._ip_address_not_contains = None
        self._ip_address_not_ends_with = None
        self._ip_address_not_in = None
        self._ip_address_not_starts_with = None
        self._ip_address_starts_with = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._mac_address = None
        self._mac_address_contains = None
        self._mac_address_ends_with = None
        self._mac_address_gt = None
        self._mac_address_gte = None
        self._mac_address_in = None
        self._mac_address_lt = None
        self._mac_address_lte = None
        self._mac_address_not = None
        self._mac_address_not_contains = None
        self._mac_address_not_ends_with = None
        self._mac_address_not_in = None
        self._mac_address_not_starts_with = None
        self._mac_address_starts_with = None
        self._mirror = None
        self._mirror_not = None
        self._model = None
        self._model_in = None
        self._model_not = None
        self._model_not_in = None
        self._nic = None
        self._order = None
        self._order_gt = None
        self._order_gte = None
        self._order_in = None
        self._order_lt = None
        self._order_lte = None
        self._order_not = None
        self._order_not_in = None
        self._subnet_mask = None
        self._subnet_mask_contains = None
        self._subnet_mask_ends_with = None
        self._subnet_mask_gt = None
        self._subnet_mask_gte = None
        self._subnet_mask_in = None
        self._subnet_mask_lt = None
        self._subnet_mask_lte = None
        self._subnet_mask_not = None
        self._subnet_mask_not_contains = None
        self._subnet_mask_not_ends_with = None
        self._subnet_mask_not_in = None
        self._subnet_mask_not_starts_with = None
        self._subnet_mask_starts_with = None
        self._type = None
        self._type_in = None
        self._type_not = None
        self._type_not_in = None
        self._vlan = None
        self._vm = None
        self._vpc_nic = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.egress_rate_limit_burst_in_bit = kwargs.get("egress_rate_limit_burst_in_bit", None)
        self.egress_rate_limit_burst_in_bit_gt = kwargs.get("egress_rate_limit_burst_in_bit_gt", None)
        self.egress_rate_limit_burst_in_bit_gte = kwargs.get("egress_rate_limit_burst_in_bit_gte", None)
        self.egress_rate_limit_burst_in_bit_in = kwargs.get("egress_rate_limit_burst_in_bit_in", None)
        self.egress_rate_limit_burst_in_bit_lt = kwargs.get("egress_rate_limit_burst_in_bit_lt", None)
        self.egress_rate_limit_burst_in_bit_lte = kwargs.get("egress_rate_limit_burst_in_bit_lte", None)
        self.egress_rate_limit_burst_in_bit_not = kwargs.get("egress_rate_limit_burst_in_bit_not", None)
        self.egress_rate_limit_burst_in_bit_not_in = kwargs.get("egress_rate_limit_burst_in_bit_not_in", None)
        self.egress_rate_limit_enabled = kwargs.get("egress_rate_limit_enabled", None)
        self.egress_rate_limit_enabled_not = kwargs.get("egress_rate_limit_enabled_not", None)
        self.egress_rate_limit_max_rate_in_bitps = kwargs.get("egress_rate_limit_max_rate_in_bitps", None)
        self.egress_rate_limit_max_rate_in_bitps_gt = kwargs.get("egress_rate_limit_max_rate_in_bitps_gt", None)
        self.egress_rate_limit_max_rate_in_bitps_gte = kwargs.get("egress_rate_limit_max_rate_in_bitps_gte", None)
        self.egress_rate_limit_max_rate_in_bitps_in = kwargs.get("egress_rate_limit_max_rate_in_bitps_in", None)
        self.egress_rate_limit_max_rate_in_bitps_lt = kwargs.get("egress_rate_limit_max_rate_in_bitps_lt", None)
        self.egress_rate_limit_max_rate_in_bitps_lte = kwargs.get("egress_rate_limit_max_rate_in_bitps_lte", None)
        self.egress_rate_limit_max_rate_in_bitps_not = kwargs.get("egress_rate_limit_max_rate_in_bitps_not", None)
        self.egress_rate_limit_max_rate_in_bitps_not_in = kwargs.get("egress_rate_limit_max_rate_in_bitps_not_in", None)
        self.enabled = kwargs.get("enabled", None)
        self.enabled_not = kwargs.get("enabled_not", None)
        self.gateway = kwargs.get("gateway", None)
        self.gateway_contains = kwargs.get("gateway_contains", None)
        self.gateway_ends_with = kwargs.get("gateway_ends_with", None)
        self.gateway_gt = kwargs.get("gateway_gt", None)
        self.gateway_gte = kwargs.get("gateway_gte", None)
        self.gateway_in = kwargs.get("gateway_in", None)
        self.gateway_lt = kwargs.get("gateway_lt", None)
        self.gateway_lte = kwargs.get("gateway_lte", None)
        self.gateway_not = kwargs.get("gateway_not", None)
        self.gateway_not_contains = kwargs.get("gateway_not_contains", None)
        self.gateway_not_ends_with = kwargs.get("gateway_not_ends_with", None)
        self.gateway_not_in = kwargs.get("gateway_not_in", None)
        self.gateway_not_starts_with = kwargs.get("gateway_not_starts_with", None)
        self.gateway_starts_with = kwargs.get("gateway_starts_with", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.ingress_rate_limit_burst_in_bit = kwargs.get("ingress_rate_limit_burst_in_bit", None)
        self.ingress_rate_limit_burst_in_bit_gt = kwargs.get("ingress_rate_limit_burst_in_bit_gt", None)
        self.ingress_rate_limit_burst_in_bit_gte = kwargs.get("ingress_rate_limit_burst_in_bit_gte", None)
        self.ingress_rate_limit_burst_in_bit_in = kwargs.get("ingress_rate_limit_burst_in_bit_in", None)
        self.ingress_rate_limit_burst_in_bit_lt = kwargs.get("ingress_rate_limit_burst_in_bit_lt", None)
        self.ingress_rate_limit_burst_in_bit_lte = kwargs.get("ingress_rate_limit_burst_in_bit_lte", None)
        self.ingress_rate_limit_burst_in_bit_not = kwargs.get("ingress_rate_limit_burst_in_bit_not", None)
        self.ingress_rate_limit_burst_in_bit_not_in = kwargs.get("ingress_rate_limit_burst_in_bit_not_in", None)
        self.ingress_rate_limit_enabled = kwargs.get("ingress_rate_limit_enabled", None)
        self.ingress_rate_limit_enabled_not = kwargs.get("ingress_rate_limit_enabled_not", None)
        self.ingress_rate_limit_max_rate_in_bitps = kwargs.get("ingress_rate_limit_max_rate_in_bitps", None)
        self.ingress_rate_limit_max_rate_in_bitps_gt = kwargs.get("ingress_rate_limit_max_rate_in_bitps_gt", None)
        self.ingress_rate_limit_max_rate_in_bitps_gte = kwargs.get("ingress_rate_limit_max_rate_in_bitps_gte", None)
        self.ingress_rate_limit_max_rate_in_bitps_in = kwargs.get("ingress_rate_limit_max_rate_in_bitps_in", None)
        self.ingress_rate_limit_max_rate_in_bitps_lt = kwargs.get("ingress_rate_limit_max_rate_in_bitps_lt", None)
        self.ingress_rate_limit_max_rate_in_bitps_lte = kwargs.get("ingress_rate_limit_max_rate_in_bitps_lte", None)
        self.ingress_rate_limit_max_rate_in_bitps_not = kwargs.get("ingress_rate_limit_max_rate_in_bitps_not", None)
        self.ingress_rate_limit_max_rate_in_bitps_not_in = kwargs.get("ingress_rate_limit_max_rate_in_bitps_not_in", None)
        self.interface_id = kwargs.get("interface_id", None)
        self.interface_id_contains = kwargs.get("interface_id_contains", None)
        self.interface_id_ends_with = kwargs.get("interface_id_ends_with", None)
        self.interface_id_gt = kwargs.get("interface_id_gt", None)
        self.interface_id_gte = kwargs.get("interface_id_gte", None)
        self.interface_id_in = kwargs.get("interface_id_in", None)
        self.interface_id_lt = kwargs.get("interface_id_lt", None)
        self.interface_id_lte = kwargs.get("interface_id_lte", None)
        self.interface_id_not = kwargs.get("interface_id_not", None)
        self.interface_id_not_contains = kwargs.get("interface_id_not_contains", None)
        self.interface_id_not_ends_with = kwargs.get("interface_id_not_ends_with", None)
        self.interface_id_not_in = kwargs.get("interface_id_not_in", None)
        self.interface_id_not_starts_with = kwargs.get("interface_id_not_starts_with", None)
        self.interface_id_starts_with = kwargs.get("interface_id_starts_with", None)
        self.ip_address = kwargs.get("ip_address", None)
        self.ip_address_contains = kwargs.get("ip_address_contains", None)
        self.ip_address_ends_with = kwargs.get("ip_address_ends_with", None)
        self.ip_address_gt = kwargs.get("ip_address_gt", None)
        self.ip_address_gte = kwargs.get("ip_address_gte", None)
        self.ip_address_in = kwargs.get("ip_address_in", None)
        self.ip_address_lt = kwargs.get("ip_address_lt", None)
        self.ip_address_lte = kwargs.get("ip_address_lte", None)
        self.ip_address_not = kwargs.get("ip_address_not", None)
        self.ip_address_not_contains = kwargs.get("ip_address_not_contains", None)
        self.ip_address_not_ends_with = kwargs.get("ip_address_not_ends_with", None)
        self.ip_address_not_in = kwargs.get("ip_address_not_in", None)
        self.ip_address_not_starts_with = kwargs.get("ip_address_not_starts_with", None)
        self.ip_address_starts_with = kwargs.get("ip_address_starts_with", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.mac_address = kwargs.get("mac_address", None)
        self.mac_address_contains = kwargs.get("mac_address_contains", None)
        self.mac_address_ends_with = kwargs.get("mac_address_ends_with", None)
        self.mac_address_gt = kwargs.get("mac_address_gt", None)
        self.mac_address_gte = kwargs.get("mac_address_gte", None)
        self.mac_address_in = kwargs.get("mac_address_in", None)
        self.mac_address_lt = kwargs.get("mac_address_lt", None)
        self.mac_address_lte = kwargs.get("mac_address_lte", None)
        self.mac_address_not = kwargs.get("mac_address_not", None)
        self.mac_address_not_contains = kwargs.get("mac_address_not_contains", None)
        self.mac_address_not_ends_with = kwargs.get("mac_address_not_ends_with", None)
        self.mac_address_not_in = kwargs.get("mac_address_not_in", None)
        self.mac_address_not_starts_with = kwargs.get("mac_address_not_starts_with", None)
        self.mac_address_starts_with = kwargs.get("mac_address_starts_with", None)
        self.mirror = kwargs.get("mirror", None)
        self.mirror_not = kwargs.get("mirror_not", None)
        self.model = kwargs.get("model", None)
        self.model_in = kwargs.get("model_in", None)
        self.model_not = kwargs.get("model_not", None)
        self.model_not_in = kwargs.get("model_not_in", None)
        self.nic = kwargs.get("nic", None)
        self.order = kwargs.get("order", None)
        self.order_gt = kwargs.get("order_gt", None)
        self.order_gte = kwargs.get("order_gte", None)
        self.order_in = kwargs.get("order_in", None)
        self.order_lt = kwargs.get("order_lt", None)
        self.order_lte = kwargs.get("order_lte", None)
        self.order_not = kwargs.get("order_not", None)
        self.order_not_in = kwargs.get("order_not_in", None)
        self.subnet_mask = kwargs.get("subnet_mask", None)
        self.subnet_mask_contains = kwargs.get("subnet_mask_contains", None)
        self.subnet_mask_ends_with = kwargs.get("subnet_mask_ends_with", None)
        self.subnet_mask_gt = kwargs.get("subnet_mask_gt", None)
        self.subnet_mask_gte = kwargs.get("subnet_mask_gte", None)
        self.subnet_mask_in = kwargs.get("subnet_mask_in", None)
        self.subnet_mask_lt = kwargs.get("subnet_mask_lt", None)
        self.subnet_mask_lte = kwargs.get("subnet_mask_lte", None)
        self.subnet_mask_not = kwargs.get("subnet_mask_not", None)
        self.subnet_mask_not_contains = kwargs.get("subnet_mask_not_contains", None)
        self.subnet_mask_not_ends_with = kwargs.get("subnet_mask_not_ends_with", None)
        self.subnet_mask_not_in = kwargs.get("subnet_mask_not_in", None)
        self.subnet_mask_not_starts_with = kwargs.get("subnet_mask_not_starts_with", None)
        self.subnet_mask_starts_with = kwargs.get("subnet_mask_starts_with", None)
        self.type = kwargs.get("type", None)
        self.type_in = kwargs.get("type_in", None)
        self.type_not = kwargs.get("type_not", None)
        self.type_not_in = kwargs.get("type_not_in", None)
        self.vlan = kwargs.get("vlan", None)
        self.vm = kwargs.get("vm", None)
        self.vpc_nic = kwargs.get("vpc_nic", None)

    @property
    def _and(self):
        """Gets the _and of this VmNicWhereInput.  # noqa: E501


        :return: The _and of this VmNicWhereInput.  # noqa: E501
        :rtype: list[VmNicWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this VmNicWhereInput.


        :param _and: The _and of this VmNicWhereInput.  # noqa: E501
        :type _and: list[VmNicWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this VmNicWhereInput.  # noqa: E501


        :return: The _not of this VmNicWhereInput.  # noqa: E501
        :rtype: list[VmNicWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this VmNicWhereInput.


        :param _not: The _not of this VmNicWhereInput.  # noqa: E501
        :type _not: list[VmNicWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this VmNicWhereInput.  # noqa: E501


        :return: The _or of this VmNicWhereInput.  # noqa: E501
        :rtype: list[VmNicWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this VmNicWhereInput.


        :param _or: The _or of this VmNicWhereInput.  # noqa: E501
        :type _or: list[VmNicWhereInput]
        """

        self.__or = _or

    @property
    def egress_rate_limit_burst_in_bit(self):
        """Gets the egress_rate_limit_burst_in_bit of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_burst_in_bit

    @egress_rate_limit_burst_in_bit.setter
    def egress_rate_limit_burst_in_bit(self, egress_rate_limit_burst_in_bit):
        """Sets the egress_rate_limit_burst_in_bit of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit: The egress_rate_limit_burst_in_bit of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit: float
        """

        self._egress_rate_limit_burst_in_bit = egress_rate_limit_burst_in_bit

    @property
    def egress_rate_limit_burst_in_bit_gt(self):
        """Gets the egress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_burst_in_bit_gt

    @egress_rate_limit_burst_in_bit_gt.setter
    def egress_rate_limit_burst_in_bit_gt(self, egress_rate_limit_burst_in_bit_gt):
        """Sets the egress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit_gt: The egress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit_gt: float
        """

        self._egress_rate_limit_burst_in_bit_gt = egress_rate_limit_burst_in_bit_gt

    @property
    def egress_rate_limit_burst_in_bit_gte(self):
        """Gets the egress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_burst_in_bit_gte

    @egress_rate_limit_burst_in_bit_gte.setter
    def egress_rate_limit_burst_in_bit_gte(self, egress_rate_limit_burst_in_bit_gte):
        """Sets the egress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit_gte: The egress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit_gte: float
        """

        self._egress_rate_limit_burst_in_bit_gte = egress_rate_limit_burst_in_bit_gte

    @property
    def egress_rate_limit_burst_in_bit_in(self):
        """Gets the egress_rate_limit_burst_in_bit_in of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._egress_rate_limit_burst_in_bit_in

    @egress_rate_limit_burst_in_bit_in.setter
    def egress_rate_limit_burst_in_bit_in(self, egress_rate_limit_burst_in_bit_in):
        """Sets the egress_rate_limit_burst_in_bit_in of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit_in: The egress_rate_limit_burst_in_bit_in of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit_in: list[float]
        """

        self._egress_rate_limit_burst_in_bit_in = egress_rate_limit_burst_in_bit_in

    @property
    def egress_rate_limit_burst_in_bit_lt(self):
        """Gets the egress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_burst_in_bit_lt

    @egress_rate_limit_burst_in_bit_lt.setter
    def egress_rate_limit_burst_in_bit_lt(self, egress_rate_limit_burst_in_bit_lt):
        """Sets the egress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit_lt: The egress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit_lt: float
        """

        self._egress_rate_limit_burst_in_bit_lt = egress_rate_limit_burst_in_bit_lt

    @property
    def egress_rate_limit_burst_in_bit_lte(self):
        """Gets the egress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_burst_in_bit_lte

    @egress_rate_limit_burst_in_bit_lte.setter
    def egress_rate_limit_burst_in_bit_lte(self, egress_rate_limit_burst_in_bit_lte):
        """Sets the egress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit_lte: The egress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit_lte: float
        """

        self._egress_rate_limit_burst_in_bit_lte = egress_rate_limit_burst_in_bit_lte

    @property
    def egress_rate_limit_burst_in_bit_not(self):
        """Gets the egress_rate_limit_burst_in_bit_not of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit_not of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_burst_in_bit_not

    @egress_rate_limit_burst_in_bit_not.setter
    def egress_rate_limit_burst_in_bit_not(self, egress_rate_limit_burst_in_bit_not):
        """Sets the egress_rate_limit_burst_in_bit_not of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit_not: The egress_rate_limit_burst_in_bit_not of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit_not: float
        """

        self._egress_rate_limit_burst_in_bit_not = egress_rate_limit_burst_in_bit_not

    @property
    def egress_rate_limit_burst_in_bit_not_in(self):
        """Gets the egress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._egress_rate_limit_burst_in_bit_not_in

    @egress_rate_limit_burst_in_bit_not_in.setter
    def egress_rate_limit_burst_in_bit_not_in(self, egress_rate_limit_burst_in_bit_not_in):
        """Sets the egress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.


        :param egress_rate_limit_burst_in_bit_not_in: The egress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_burst_in_bit_not_in: list[float]
        """

        self._egress_rate_limit_burst_in_bit_not_in = egress_rate_limit_burst_in_bit_not_in

    @property
    def egress_rate_limit_enabled(self):
        """Gets the egress_rate_limit_enabled of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_enabled of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._egress_rate_limit_enabled

    @egress_rate_limit_enabled.setter
    def egress_rate_limit_enabled(self, egress_rate_limit_enabled):
        """Sets the egress_rate_limit_enabled of this VmNicWhereInput.


        :param egress_rate_limit_enabled: The egress_rate_limit_enabled of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_enabled: bool
        """

        self._egress_rate_limit_enabled = egress_rate_limit_enabled

    @property
    def egress_rate_limit_enabled_not(self):
        """Gets the egress_rate_limit_enabled_not of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_enabled_not of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._egress_rate_limit_enabled_not

    @egress_rate_limit_enabled_not.setter
    def egress_rate_limit_enabled_not(self, egress_rate_limit_enabled_not):
        """Sets the egress_rate_limit_enabled_not of this VmNicWhereInput.


        :param egress_rate_limit_enabled_not: The egress_rate_limit_enabled_not of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_enabled_not: bool
        """

        self._egress_rate_limit_enabled_not = egress_rate_limit_enabled_not

    @property
    def egress_rate_limit_max_rate_in_bitps(self):
        """Gets the egress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_max_rate_in_bitps

    @egress_rate_limit_max_rate_in_bitps.setter
    def egress_rate_limit_max_rate_in_bitps(self, egress_rate_limit_max_rate_in_bitps):
        """Sets the egress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps: The egress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps: float
        """

        self._egress_rate_limit_max_rate_in_bitps = egress_rate_limit_max_rate_in_bitps

    @property
    def egress_rate_limit_max_rate_in_bitps_gt(self):
        """Gets the egress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_max_rate_in_bitps_gt

    @egress_rate_limit_max_rate_in_bitps_gt.setter
    def egress_rate_limit_max_rate_in_bitps_gt(self, egress_rate_limit_max_rate_in_bitps_gt):
        """Sets the egress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps_gt: The egress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps_gt: float
        """

        self._egress_rate_limit_max_rate_in_bitps_gt = egress_rate_limit_max_rate_in_bitps_gt

    @property
    def egress_rate_limit_max_rate_in_bitps_gte(self):
        """Gets the egress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_max_rate_in_bitps_gte

    @egress_rate_limit_max_rate_in_bitps_gte.setter
    def egress_rate_limit_max_rate_in_bitps_gte(self, egress_rate_limit_max_rate_in_bitps_gte):
        """Sets the egress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps_gte: The egress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps_gte: float
        """

        self._egress_rate_limit_max_rate_in_bitps_gte = egress_rate_limit_max_rate_in_bitps_gte

    @property
    def egress_rate_limit_max_rate_in_bitps_in(self):
        """Gets the egress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._egress_rate_limit_max_rate_in_bitps_in

    @egress_rate_limit_max_rate_in_bitps_in.setter
    def egress_rate_limit_max_rate_in_bitps_in(self, egress_rate_limit_max_rate_in_bitps_in):
        """Sets the egress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps_in: The egress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps_in: list[float]
        """

        self._egress_rate_limit_max_rate_in_bitps_in = egress_rate_limit_max_rate_in_bitps_in

    @property
    def egress_rate_limit_max_rate_in_bitps_lt(self):
        """Gets the egress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_max_rate_in_bitps_lt

    @egress_rate_limit_max_rate_in_bitps_lt.setter
    def egress_rate_limit_max_rate_in_bitps_lt(self, egress_rate_limit_max_rate_in_bitps_lt):
        """Sets the egress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps_lt: The egress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps_lt: float
        """

        self._egress_rate_limit_max_rate_in_bitps_lt = egress_rate_limit_max_rate_in_bitps_lt

    @property
    def egress_rate_limit_max_rate_in_bitps_lte(self):
        """Gets the egress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_max_rate_in_bitps_lte

    @egress_rate_limit_max_rate_in_bitps_lte.setter
    def egress_rate_limit_max_rate_in_bitps_lte(self, egress_rate_limit_max_rate_in_bitps_lte):
        """Sets the egress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps_lte: The egress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps_lte: float
        """

        self._egress_rate_limit_max_rate_in_bitps_lte = egress_rate_limit_max_rate_in_bitps_lte

    @property
    def egress_rate_limit_max_rate_in_bitps_not(self):
        """Gets the egress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._egress_rate_limit_max_rate_in_bitps_not

    @egress_rate_limit_max_rate_in_bitps_not.setter
    def egress_rate_limit_max_rate_in_bitps_not(self, egress_rate_limit_max_rate_in_bitps_not):
        """Sets the egress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps_not: The egress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps_not: float
        """

        self._egress_rate_limit_max_rate_in_bitps_not = egress_rate_limit_max_rate_in_bitps_not

    @property
    def egress_rate_limit_max_rate_in_bitps_not_in(self):
        """Gets the egress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The egress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._egress_rate_limit_max_rate_in_bitps_not_in

    @egress_rate_limit_max_rate_in_bitps_not_in.setter
    def egress_rate_limit_max_rate_in_bitps_not_in(self, egress_rate_limit_max_rate_in_bitps_not_in):
        """Sets the egress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.


        :param egress_rate_limit_max_rate_in_bitps_not_in: The egress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.  # noqa: E501
        :type egress_rate_limit_max_rate_in_bitps_not_in: list[float]
        """

        self._egress_rate_limit_max_rate_in_bitps_not_in = egress_rate_limit_max_rate_in_bitps_not_in

    @property
    def enabled(self):
        """Gets the enabled of this VmNicWhereInput.  # noqa: E501


        :return: The enabled of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this VmNicWhereInput.


        :param enabled: The enabled of this VmNicWhereInput.  # noqa: E501
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def enabled_not(self):
        """Gets the enabled_not of this VmNicWhereInput.  # noqa: E501


        :return: The enabled_not of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._enabled_not

    @enabled_not.setter
    def enabled_not(self, enabled_not):
        """Sets the enabled_not of this VmNicWhereInput.


        :param enabled_not: The enabled_not of this VmNicWhereInput.  # noqa: E501
        :type enabled_not: bool
        """

        self._enabled_not = enabled_not

    @property
    def gateway(self):
        """Gets the gateway of this VmNicWhereInput.  # noqa: E501


        :return: The gateway of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this VmNicWhereInput.


        :param gateway: The gateway of this VmNicWhereInput.  # noqa: E501
        :type gateway: str
        """

        self._gateway = gateway

    @property
    def gateway_contains(self):
        """Gets the gateway_contains of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_contains

    @gateway_contains.setter
    def gateway_contains(self, gateway_contains):
        """Sets the gateway_contains of this VmNicWhereInput.


        :param gateway_contains: The gateway_contains of this VmNicWhereInput.  # noqa: E501
        :type gateway_contains: str
        """

        self._gateway_contains = gateway_contains

    @property
    def gateway_ends_with(self):
        """Gets the gateway_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ends_with

    @gateway_ends_with.setter
    def gateway_ends_with(self, gateway_ends_with):
        """Sets the gateway_ends_with of this VmNicWhereInput.


        :param gateway_ends_with: The gateway_ends_with of this VmNicWhereInput.  # noqa: E501
        :type gateway_ends_with: str
        """

        self._gateway_ends_with = gateway_ends_with

    @property
    def gateway_gt(self):
        """Gets the gateway_gt of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_gt

    @gateway_gt.setter
    def gateway_gt(self, gateway_gt):
        """Sets the gateway_gt of this VmNicWhereInput.


        :param gateway_gt: The gateway_gt of this VmNicWhereInput.  # noqa: E501
        :type gateway_gt: str
        """

        self._gateway_gt = gateway_gt

    @property
    def gateway_gte(self):
        """Gets the gateway_gte of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_gte

    @gateway_gte.setter
    def gateway_gte(self, gateway_gte):
        """Sets the gateway_gte of this VmNicWhereInput.


        :param gateway_gte: The gateway_gte of this VmNicWhereInput.  # noqa: E501
        :type gateway_gte: str
        """

        self._gateway_gte = gateway_gte

    @property
    def gateway_in(self):
        """Gets the gateway_in of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._gateway_in

    @gateway_in.setter
    def gateway_in(self, gateway_in):
        """Sets the gateway_in of this VmNicWhereInput.


        :param gateway_in: The gateway_in of this VmNicWhereInput.  # noqa: E501
        :type gateway_in: list[str]
        """

        self._gateway_in = gateway_in

    @property
    def gateway_lt(self):
        """Gets the gateway_lt of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_lt

    @gateway_lt.setter
    def gateway_lt(self, gateway_lt):
        """Sets the gateway_lt of this VmNicWhereInput.


        :param gateway_lt: The gateway_lt of this VmNicWhereInput.  # noqa: E501
        :type gateway_lt: str
        """

        self._gateway_lt = gateway_lt

    @property
    def gateway_lte(self):
        """Gets the gateway_lte of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_lte

    @gateway_lte.setter
    def gateway_lte(self, gateway_lte):
        """Sets the gateway_lte of this VmNicWhereInput.


        :param gateway_lte: The gateway_lte of this VmNicWhereInput.  # noqa: E501
        :type gateway_lte: str
        """

        self._gateway_lte = gateway_lte

    @property
    def gateway_not(self):
        """Gets the gateway_not of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_not of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not

    @gateway_not.setter
    def gateway_not(self, gateway_not):
        """Sets the gateway_not of this VmNicWhereInput.


        :param gateway_not: The gateway_not of this VmNicWhereInput.  # noqa: E501
        :type gateway_not: str
        """

        self._gateway_not = gateway_not

    @property
    def gateway_not_contains(self):
        """Gets the gateway_not_contains of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_not_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not_contains

    @gateway_not_contains.setter
    def gateway_not_contains(self, gateway_not_contains):
        """Sets the gateway_not_contains of this VmNicWhereInput.


        :param gateway_not_contains: The gateway_not_contains of this VmNicWhereInput.  # noqa: E501
        :type gateway_not_contains: str
        """

        self._gateway_not_contains = gateway_not_contains

    @property
    def gateway_not_ends_with(self):
        """Gets the gateway_not_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not_ends_with

    @gateway_not_ends_with.setter
    def gateway_not_ends_with(self, gateway_not_ends_with):
        """Sets the gateway_not_ends_with of this VmNicWhereInput.


        :param gateway_not_ends_with: The gateway_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :type gateway_not_ends_with: str
        """

        self._gateway_not_ends_with = gateway_not_ends_with

    @property
    def gateway_not_in(self):
        """Gets the gateway_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._gateway_not_in

    @gateway_not_in.setter
    def gateway_not_in(self, gateway_not_in):
        """Sets the gateway_not_in of this VmNicWhereInput.


        :param gateway_not_in: The gateway_not_in of this VmNicWhereInput.  # noqa: E501
        :type gateway_not_in: list[str]
        """

        self._gateway_not_in = gateway_not_in

    @property
    def gateway_not_starts_with(self):
        """Gets the gateway_not_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not_starts_with

    @gateway_not_starts_with.setter
    def gateway_not_starts_with(self, gateway_not_starts_with):
        """Sets the gateway_not_starts_with of this VmNicWhereInput.


        :param gateway_not_starts_with: The gateway_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :type gateway_not_starts_with: str
        """

        self._gateway_not_starts_with = gateway_not_starts_with

    @property
    def gateway_starts_with(self):
        """Gets the gateway_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The gateway_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_starts_with

    @gateway_starts_with.setter
    def gateway_starts_with(self, gateway_starts_with):
        """Sets the gateway_starts_with of this VmNicWhereInput.


        :param gateway_starts_with: The gateway_starts_with of this VmNicWhereInput.  # noqa: E501
        :type gateway_starts_with: str
        """

        self._gateway_starts_with = gateway_starts_with

    @property
    def id(self):
        """Gets the id of this VmNicWhereInput.  # noqa: E501


        :return: The id of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VmNicWhereInput.


        :param id: The id of this VmNicWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this VmNicWhereInput.  # noqa: E501


        :return: The id_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this VmNicWhereInput.


        :param id_contains: The id_contains of this VmNicWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The id_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this VmNicWhereInput.


        :param id_ends_with: The id_ends_with of this VmNicWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this VmNicWhereInput.  # noqa: E501


        :return: The id_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this VmNicWhereInput.


        :param id_gt: The id_gt of this VmNicWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this VmNicWhereInput.  # noqa: E501


        :return: The id_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this VmNicWhereInput.


        :param id_gte: The id_gte of this VmNicWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this VmNicWhereInput.  # noqa: E501


        :return: The id_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this VmNicWhereInput.


        :param id_in: The id_in of this VmNicWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this VmNicWhereInput.  # noqa: E501


        :return: The id_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this VmNicWhereInput.


        :param id_lt: The id_lt of this VmNicWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this VmNicWhereInput.  # noqa: E501


        :return: The id_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this VmNicWhereInput.


        :param id_lte: The id_lte of this VmNicWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this VmNicWhereInput.  # noqa: E501


        :return: The id_not of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this VmNicWhereInput.


        :param id_not: The id_not of this VmNicWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this VmNicWhereInput.  # noqa: E501


        :return: The id_not_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this VmNicWhereInput.


        :param id_not_contains: The id_not_contains of this VmNicWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this VmNicWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The id_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this VmNicWhereInput.


        :param id_not_in: The id_not_in of this VmNicWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this VmNicWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The id_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this VmNicWhereInput.


        :param id_starts_with: The id_starts_with of this VmNicWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def ingress_rate_limit_burst_in_bit(self):
        """Gets the ingress_rate_limit_burst_in_bit of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_burst_in_bit

    @ingress_rate_limit_burst_in_bit.setter
    def ingress_rate_limit_burst_in_bit(self, ingress_rate_limit_burst_in_bit):
        """Sets the ingress_rate_limit_burst_in_bit of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit: The ingress_rate_limit_burst_in_bit of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit: float
        """

        self._ingress_rate_limit_burst_in_bit = ingress_rate_limit_burst_in_bit

    @property
    def ingress_rate_limit_burst_in_bit_gt(self):
        """Gets the ingress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_burst_in_bit_gt

    @ingress_rate_limit_burst_in_bit_gt.setter
    def ingress_rate_limit_burst_in_bit_gt(self, ingress_rate_limit_burst_in_bit_gt):
        """Sets the ingress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit_gt: The ingress_rate_limit_burst_in_bit_gt of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit_gt: float
        """

        self._ingress_rate_limit_burst_in_bit_gt = ingress_rate_limit_burst_in_bit_gt

    @property
    def ingress_rate_limit_burst_in_bit_gte(self):
        """Gets the ingress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_burst_in_bit_gte

    @ingress_rate_limit_burst_in_bit_gte.setter
    def ingress_rate_limit_burst_in_bit_gte(self, ingress_rate_limit_burst_in_bit_gte):
        """Sets the ingress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit_gte: The ingress_rate_limit_burst_in_bit_gte of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit_gte: float
        """

        self._ingress_rate_limit_burst_in_bit_gte = ingress_rate_limit_burst_in_bit_gte

    @property
    def ingress_rate_limit_burst_in_bit_in(self):
        """Gets the ingress_rate_limit_burst_in_bit_in of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._ingress_rate_limit_burst_in_bit_in

    @ingress_rate_limit_burst_in_bit_in.setter
    def ingress_rate_limit_burst_in_bit_in(self, ingress_rate_limit_burst_in_bit_in):
        """Sets the ingress_rate_limit_burst_in_bit_in of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit_in: The ingress_rate_limit_burst_in_bit_in of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit_in: list[float]
        """

        self._ingress_rate_limit_burst_in_bit_in = ingress_rate_limit_burst_in_bit_in

    @property
    def ingress_rate_limit_burst_in_bit_lt(self):
        """Gets the ingress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_burst_in_bit_lt

    @ingress_rate_limit_burst_in_bit_lt.setter
    def ingress_rate_limit_burst_in_bit_lt(self, ingress_rate_limit_burst_in_bit_lt):
        """Sets the ingress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit_lt: The ingress_rate_limit_burst_in_bit_lt of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit_lt: float
        """

        self._ingress_rate_limit_burst_in_bit_lt = ingress_rate_limit_burst_in_bit_lt

    @property
    def ingress_rate_limit_burst_in_bit_lte(self):
        """Gets the ingress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_burst_in_bit_lte

    @ingress_rate_limit_burst_in_bit_lte.setter
    def ingress_rate_limit_burst_in_bit_lte(self, ingress_rate_limit_burst_in_bit_lte):
        """Sets the ingress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit_lte: The ingress_rate_limit_burst_in_bit_lte of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit_lte: float
        """

        self._ingress_rate_limit_burst_in_bit_lte = ingress_rate_limit_burst_in_bit_lte

    @property
    def ingress_rate_limit_burst_in_bit_not(self):
        """Gets the ingress_rate_limit_burst_in_bit_not of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit_not of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_burst_in_bit_not

    @ingress_rate_limit_burst_in_bit_not.setter
    def ingress_rate_limit_burst_in_bit_not(self, ingress_rate_limit_burst_in_bit_not):
        """Sets the ingress_rate_limit_burst_in_bit_not of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit_not: The ingress_rate_limit_burst_in_bit_not of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit_not: float
        """

        self._ingress_rate_limit_burst_in_bit_not = ingress_rate_limit_burst_in_bit_not

    @property
    def ingress_rate_limit_burst_in_bit_not_in(self):
        """Gets the ingress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._ingress_rate_limit_burst_in_bit_not_in

    @ingress_rate_limit_burst_in_bit_not_in.setter
    def ingress_rate_limit_burst_in_bit_not_in(self, ingress_rate_limit_burst_in_bit_not_in):
        """Sets the ingress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.


        :param ingress_rate_limit_burst_in_bit_not_in: The ingress_rate_limit_burst_in_bit_not_in of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_burst_in_bit_not_in: list[float]
        """

        self._ingress_rate_limit_burst_in_bit_not_in = ingress_rate_limit_burst_in_bit_not_in

    @property
    def ingress_rate_limit_enabled(self):
        """Gets the ingress_rate_limit_enabled of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_enabled of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._ingress_rate_limit_enabled

    @ingress_rate_limit_enabled.setter
    def ingress_rate_limit_enabled(self, ingress_rate_limit_enabled):
        """Sets the ingress_rate_limit_enabled of this VmNicWhereInput.


        :param ingress_rate_limit_enabled: The ingress_rate_limit_enabled of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_enabled: bool
        """

        self._ingress_rate_limit_enabled = ingress_rate_limit_enabled

    @property
    def ingress_rate_limit_enabled_not(self):
        """Gets the ingress_rate_limit_enabled_not of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_enabled_not of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._ingress_rate_limit_enabled_not

    @ingress_rate_limit_enabled_not.setter
    def ingress_rate_limit_enabled_not(self, ingress_rate_limit_enabled_not):
        """Sets the ingress_rate_limit_enabled_not of this VmNicWhereInput.


        :param ingress_rate_limit_enabled_not: The ingress_rate_limit_enabled_not of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_enabled_not: bool
        """

        self._ingress_rate_limit_enabled_not = ingress_rate_limit_enabled_not

    @property
    def ingress_rate_limit_max_rate_in_bitps(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_max_rate_in_bitps

    @ingress_rate_limit_max_rate_in_bitps.setter
    def ingress_rate_limit_max_rate_in_bitps(self, ingress_rate_limit_max_rate_in_bitps):
        """Sets the ingress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps: The ingress_rate_limit_max_rate_in_bitps of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps: float
        """

        self._ingress_rate_limit_max_rate_in_bitps = ingress_rate_limit_max_rate_in_bitps

    @property
    def ingress_rate_limit_max_rate_in_bitps_gt(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_max_rate_in_bitps_gt

    @ingress_rate_limit_max_rate_in_bitps_gt.setter
    def ingress_rate_limit_max_rate_in_bitps_gt(self, ingress_rate_limit_max_rate_in_bitps_gt):
        """Sets the ingress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps_gt: The ingress_rate_limit_max_rate_in_bitps_gt of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps_gt: float
        """

        self._ingress_rate_limit_max_rate_in_bitps_gt = ingress_rate_limit_max_rate_in_bitps_gt

    @property
    def ingress_rate_limit_max_rate_in_bitps_gte(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_max_rate_in_bitps_gte

    @ingress_rate_limit_max_rate_in_bitps_gte.setter
    def ingress_rate_limit_max_rate_in_bitps_gte(self, ingress_rate_limit_max_rate_in_bitps_gte):
        """Sets the ingress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps_gte: The ingress_rate_limit_max_rate_in_bitps_gte of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps_gte: float
        """

        self._ingress_rate_limit_max_rate_in_bitps_gte = ingress_rate_limit_max_rate_in_bitps_gte

    @property
    def ingress_rate_limit_max_rate_in_bitps_in(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._ingress_rate_limit_max_rate_in_bitps_in

    @ingress_rate_limit_max_rate_in_bitps_in.setter
    def ingress_rate_limit_max_rate_in_bitps_in(self, ingress_rate_limit_max_rate_in_bitps_in):
        """Sets the ingress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps_in: The ingress_rate_limit_max_rate_in_bitps_in of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps_in: list[float]
        """

        self._ingress_rate_limit_max_rate_in_bitps_in = ingress_rate_limit_max_rate_in_bitps_in

    @property
    def ingress_rate_limit_max_rate_in_bitps_lt(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_max_rate_in_bitps_lt

    @ingress_rate_limit_max_rate_in_bitps_lt.setter
    def ingress_rate_limit_max_rate_in_bitps_lt(self, ingress_rate_limit_max_rate_in_bitps_lt):
        """Sets the ingress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps_lt: The ingress_rate_limit_max_rate_in_bitps_lt of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps_lt: float
        """

        self._ingress_rate_limit_max_rate_in_bitps_lt = ingress_rate_limit_max_rate_in_bitps_lt

    @property
    def ingress_rate_limit_max_rate_in_bitps_lte(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_max_rate_in_bitps_lte

    @ingress_rate_limit_max_rate_in_bitps_lte.setter
    def ingress_rate_limit_max_rate_in_bitps_lte(self, ingress_rate_limit_max_rate_in_bitps_lte):
        """Sets the ingress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps_lte: The ingress_rate_limit_max_rate_in_bitps_lte of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps_lte: float
        """

        self._ingress_rate_limit_max_rate_in_bitps_lte = ingress_rate_limit_max_rate_in_bitps_lte

    @property
    def ingress_rate_limit_max_rate_in_bitps_not(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._ingress_rate_limit_max_rate_in_bitps_not

    @ingress_rate_limit_max_rate_in_bitps_not.setter
    def ingress_rate_limit_max_rate_in_bitps_not(self, ingress_rate_limit_max_rate_in_bitps_not):
        """Sets the ingress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps_not: The ingress_rate_limit_max_rate_in_bitps_not of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps_not: float
        """

        self._ingress_rate_limit_max_rate_in_bitps_not = ingress_rate_limit_max_rate_in_bitps_not

    @property
    def ingress_rate_limit_max_rate_in_bitps_not_in(self):
        """Gets the ingress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The ingress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._ingress_rate_limit_max_rate_in_bitps_not_in

    @ingress_rate_limit_max_rate_in_bitps_not_in.setter
    def ingress_rate_limit_max_rate_in_bitps_not_in(self, ingress_rate_limit_max_rate_in_bitps_not_in):
        """Sets the ingress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.


        :param ingress_rate_limit_max_rate_in_bitps_not_in: The ingress_rate_limit_max_rate_in_bitps_not_in of this VmNicWhereInput.  # noqa: E501
        :type ingress_rate_limit_max_rate_in_bitps_not_in: list[float]
        """

        self._ingress_rate_limit_max_rate_in_bitps_not_in = ingress_rate_limit_max_rate_in_bitps_not_in

    @property
    def interface_id(self):
        """Gets the interface_id of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id

    @interface_id.setter
    def interface_id(self, interface_id):
        """Sets the interface_id of this VmNicWhereInput.


        :param interface_id: The interface_id of this VmNicWhereInput.  # noqa: E501
        :type interface_id: str
        """

        self._interface_id = interface_id

    @property
    def interface_id_contains(self):
        """Gets the interface_id_contains of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_contains

    @interface_id_contains.setter
    def interface_id_contains(self, interface_id_contains):
        """Sets the interface_id_contains of this VmNicWhereInput.


        :param interface_id_contains: The interface_id_contains of this VmNicWhereInput.  # noqa: E501
        :type interface_id_contains: str
        """

        self._interface_id_contains = interface_id_contains

    @property
    def interface_id_ends_with(self):
        """Gets the interface_id_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_ends_with

    @interface_id_ends_with.setter
    def interface_id_ends_with(self, interface_id_ends_with):
        """Sets the interface_id_ends_with of this VmNicWhereInput.


        :param interface_id_ends_with: The interface_id_ends_with of this VmNicWhereInput.  # noqa: E501
        :type interface_id_ends_with: str
        """

        self._interface_id_ends_with = interface_id_ends_with

    @property
    def interface_id_gt(self):
        """Gets the interface_id_gt of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_gt

    @interface_id_gt.setter
    def interface_id_gt(self, interface_id_gt):
        """Sets the interface_id_gt of this VmNicWhereInput.


        :param interface_id_gt: The interface_id_gt of this VmNicWhereInput.  # noqa: E501
        :type interface_id_gt: str
        """

        self._interface_id_gt = interface_id_gt

    @property
    def interface_id_gte(self):
        """Gets the interface_id_gte of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_gte

    @interface_id_gte.setter
    def interface_id_gte(self, interface_id_gte):
        """Sets the interface_id_gte of this VmNicWhereInput.


        :param interface_id_gte: The interface_id_gte of this VmNicWhereInput.  # noqa: E501
        :type interface_id_gte: str
        """

        self._interface_id_gte = interface_id_gte

    @property
    def interface_id_in(self):
        """Gets the interface_id_in of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._interface_id_in

    @interface_id_in.setter
    def interface_id_in(self, interface_id_in):
        """Sets the interface_id_in of this VmNicWhereInput.


        :param interface_id_in: The interface_id_in of this VmNicWhereInput.  # noqa: E501
        :type interface_id_in: list[str]
        """

        self._interface_id_in = interface_id_in

    @property
    def interface_id_lt(self):
        """Gets the interface_id_lt of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_lt

    @interface_id_lt.setter
    def interface_id_lt(self, interface_id_lt):
        """Sets the interface_id_lt of this VmNicWhereInput.


        :param interface_id_lt: The interface_id_lt of this VmNicWhereInput.  # noqa: E501
        :type interface_id_lt: str
        """

        self._interface_id_lt = interface_id_lt

    @property
    def interface_id_lte(self):
        """Gets the interface_id_lte of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_lte

    @interface_id_lte.setter
    def interface_id_lte(self, interface_id_lte):
        """Sets the interface_id_lte of this VmNicWhereInput.


        :param interface_id_lte: The interface_id_lte of this VmNicWhereInput.  # noqa: E501
        :type interface_id_lte: str
        """

        self._interface_id_lte = interface_id_lte

    @property
    def interface_id_not(self):
        """Gets the interface_id_not of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_not of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_not

    @interface_id_not.setter
    def interface_id_not(self, interface_id_not):
        """Sets the interface_id_not of this VmNicWhereInput.


        :param interface_id_not: The interface_id_not of this VmNicWhereInput.  # noqa: E501
        :type interface_id_not: str
        """

        self._interface_id_not = interface_id_not

    @property
    def interface_id_not_contains(self):
        """Gets the interface_id_not_contains of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_not_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_not_contains

    @interface_id_not_contains.setter
    def interface_id_not_contains(self, interface_id_not_contains):
        """Sets the interface_id_not_contains of this VmNicWhereInput.


        :param interface_id_not_contains: The interface_id_not_contains of this VmNicWhereInput.  # noqa: E501
        :type interface_id_not_contains: str
        """

        self._interface_id_not_contains = interface_id_not_contains

    @property
    def interface_id_not_ends_with(self):
        """Gets the interface_id_not_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_not_ends_with

    @interface_id_not_ends_with.setter
    def interface_id_not_ends_with(self, interface_id_not_ends_with):
        """Sets the interface_id_not_ends_with of this VmNicWhereInput.


        :param interface_id_not_ends_with: The interface_id_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :type interface_id_not_ends_with: str
        """

        self._interface_id_not_ends_with = interface_id_not_ends_with

    @property
    def interface_id_not_in(self):
        """Gets the interface_id_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._interface_id_not_in

    @interface_id_not_in.setter
    def interface_id_not_in(self, interface_id_not_in):
        """Sets the interface_id_not_in of this VmNicWhereInput.


        :param interface_id_not_in: The interface_id_not_in of this VmNicWhereInput.  # noqa: E501
        :type interface_id_not_in: list[str]
        """

        self._interface_id_not_in = interface_id_not_in

    @property
    def interface_id_not_starts_with(self):
        """Gets the interface_id_not_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_not_starts_with

    @interface_id_not_starts_with.setter
    def interface_id_not_starts_with(self, interface_id_not_starts_with):
        """Sets the interface_id_not_starts_with of this VmNicWhereInput.


        :param interface_id_not_starts_with: The interface_id_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :type interface_id_not_starts_with: str
        """

        self._interface_id_not_starts_with = interface_id_not_starts_with

    @property
    def interface_id_starts_with(self):
        """Gets the interface_id_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The interface_id_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._interface_id_starts_with

    @interface_id_starts_with.setter
    def interface_id_starts_with(self, interface_id_starts_with):
        """Sets the interface_id_starts_with of this VmNicWhereInput.


        :param interface_id_starts_with: The interface_id_starts_with of this VmNicWhereInput.  # noqa: E501
        :type interface_id_starts_with: str
        """

        self._interface_id_starts_with = interface_id_starts_with

    @property
    def ip_address(self):
        """Gets the ip_address of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this VmNicWhereInput.


        :param ip_address: The ip_address of this VmNicWhereInput.  # noqa: E501
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def ip_address_contains(self):
        """Gets the ip_address_contains of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_contains

    @ip_address_contains.setter
    def ip_address_contains(self, ip_address_contains):
        """Sets the ip_address_contains of this VmNicWhereInput.


        :param ip_address_contains: The ip_address_contains of this VmNicWhereInput.  # noqa: E501
        :type ip_address_contains: str
        """

        self._ip_address_contains = ip_address_contains

    @property
    def ip_address_ends_with(self):
        """Gets the ip_address_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_ends_with

    @ip_address_ends_with.setter
    def ip_address_ends_with(self, ip_address_ends_with):
        """Sets the ip_address_ends_with of this VmNicWhereInput.


        :param ip_address_ends_with: The ip_address_ends_with of this VmNicWhereInput.  # noqa: E501
        :type ip_address_ends_with: str
        """

        self._ip_address_ends_with = ip_address_ends_with

    @property
    def ip_address_gt(self):
        """Gets the ip_address_gt of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_gt

    @ip_address_gt.setter
    def ip_address_gt(self, ip_address_gt):
        """Sets the ip_address_gt of this VmNicWhereInput.


        :param ip_address_gt: The ip_address_gt of this VmNicWhereInput.  # noqa: E501
        :type ip_address_gt: str
        """

        self._ip_address_gt = ip_address_gt

    @property
    def ip_address_gte(self):
        """Gets the ip_address_gte of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_gte

    @ip_address_gte.setter
    def ip_address_gte(self, ip_address_gte):
        """Sets the ip_address_gte of this VmNicWhereInput.


        :param ip_address_gte: The ip_address_gte of this VmNicWhereInput.  # noqa: E501
        :type ip_address_gte: str
        """

        self._ip_address_gte = ip_address_gte

    @property
    def ip_address_in(self):
        """Gets the ip_address_in of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_address_in

    @ip_address_in.setter
    def ip_address_in(self, ip_address_in):
        """Sets the ip_address_in of this VmNicWhereInput.


        :param ip_address_in: The ip_address_in of this VmNicWhereInput.  # noqa: E501
        :type ip_address_in: list[str]
        """

        self._ip_address_in = ip_address_in

    @property
    def ip_address_lt(self):
        """Gets the ip_address_lt of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_lt

    @ip_address_lt.setter
    def ip_address_lt(self, ip_address_lt):
        """Sets the ip_address_lt of this VmNicWhereInput.


        :param ip_address_lt: The ip_address_lt of this VmNicWhereInput.  # noqa: E501
        :type ip_address_lt: str
        """

        self._ip_address_lt = ip_address_lt

    @property
    def ip_address_lte(self):
        """Gets the ip_address_lte of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_lte

    @ip_address_lte.setter
    def ip_address_lte(self, ip_address_lte):
        """Sets the ip_address_lte of this VmNicWhereInput.


        :param ip_address_lte: The ip_address_lte of this VmNicWhereInput.  # noqa: E501
        :type ip_address_lte: str
        """

        self._ip_address_lte = ip_address_lte

    @property
    def ip_address_not(self):
        """Gets the ip_address_not of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_not of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not

    @ip_address_not.setter
    def ip_address_not(self, ip_address_not):
        """Sets the ip_address_not of this VmNicWhereInput.


        :param ip_address_not: The ip_address_not of this VmNicWhereInput.  # noqa: E501
        :type ip_address_not: str
        """

        self._ip_address_not = ip_address_not

    @property
    def ip_address_not_contains(self):
        """Gets the ip_address_not_contains of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_not_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_contains

    @ip_address_not_contains.setter
    def ip_address_not_contains(self, ip_address_not_contains):
        """Sets the ip_address_not_contains of this VmNicWhereInput.


        :param ip_address_not_contains: The ip_address_not_contains of this VmNicWhereInput.  # noqa: E501
        :type ip_address_not_contains: str
        """

        self._ip_address_not_contains = ip_address_not_contains

    @property
    def ip_address_not_ends_with(self):
        """Gets the ip_address_not_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_ends_with

    @ip_address_not_ends_with.setter
    def ip_address_not_ends_with(self, ip_address_not_ends_with):
        """Sets the ip_address_not_ends_with of this VmNicWhereInput.


        :param ip_address_not_ends_with: The ip_address_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :type ip_address_not_ends_with: str
        """

        self._ip_address_not_ends_with = ip_address_not_ends_with

    @property
    def ip_address_not_in(self):
        """Gets the ip_address_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_address_not_in

    @ip_address_not_in.setter
    def ip_address_not_in(self, ip_address_not_in):
        """Sets the ip_address_not_in of this VmNicWhereInput.


        :param ip_address_not_in: The ip_address_not_in of this VmNicWhereInput.  # noqa: E501
        :type ip_address_not_in: list[str]
        """

        self._ip_address_not_in = ip_address_not_in

    @property
    def ip_address_not_starts_with(self):
        """Gets the ip_address_not_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_starts_with

    @ip_address_not_starts_with.setter
    def ip_address_not_starts_with(self, ip_address_not_starts_with):
        """Sets the ip_address_not_starts_with of this VmNicWhereInput.


        :param ip_address_not_starts_with: The ip_address_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :type ip_address_not_starts_with: str
        """

        self._ip_address_not_starts_with = ip_address_not_starts_with

    @property
    def ip_address_starts_with(self):
        """Gets the ip_address_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The ip_address_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_starts_with

    @ip_address_starts_with.setter
    def ip_address_starts_with(self, ip_address_starts_with):
        """Sets the ip_address_starts_with of this VmNicWhereInput.


        :param ip_address_starts_with: The ip_address_starts_with of this VmNicWhereInput.  # noqa: E501
        :type ip_address_starts_with: str
        """

        self._ip_address_starts_with = ip_address_starts_with

    @property
    def local_id(self):
        """Gets the local_id of this VmNicWhereInput.  # noqa: E501


        :return: The local_id of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this VmNicWhereInput.


        :param local_id: The local_id of this VmNicWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this VmNicWhereInput.


        :param local_id_contains: The local_id_contains of this VmNicWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this VmNicWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this VmNicWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this VmNicWhereInput.


        :param local_id_gt: The local_id_gt of this VmNicWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this VmNicWhereInput.


        :param local_id_gte: The local_id_gte of this VmNicWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this VmNicWhereInput.


        :param local_id_in: The local_id_in of this VmNicWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this VmNicWhereInput.


        :param local_id_lt: The local_id_lt of this VmNicWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this VmNicWhereInput.


        :param local_id_lte: The local_id_lte of this VmNicWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_not of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this VmNicWhereInput.


        :param local_id_not: The local_id_not of this VmNicWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this VmNicWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this VmNicWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this VmNicWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this VmNicWhereInput.


        :param local_id_not_in: The local_id_not_in of this VmNicWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this VmNicWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this VmNicWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this VmNicWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def mac_address(self):
        """Gets the mac_address of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this VmNicWhereInput.


        :param mac_address: The mac_address of this VmNicWhereInput.  # noqa: E501
        :type mac_address: str
        """

        self._mac_address = mac_address

    @property
    def mac_address_contains(self):
        """Gets the mac_address_contains of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_contains

    @mac_address_contains.setter
    def mac_address_contains(self, mac_address_contains):
        """Sets the mac_address_contains of this VmNicWhereInput.


        :param mac_address_contains: The mac_address_contains of this VmNicWhereInput.  # noqa: E501
        :type mac_address_contains: str
        """

        self._mac_address_contains = mac_address_contains

    @property
    def mac_address_ends_with(self):
        """Gets the mac_address_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_ends_with

    @mac_address_ends_with.setter
    def mac_address_ends_with(self, mac_address_ends_with):
        """Sets the mac_address_ends_with of this VmNicWhereInput.


        :param mac_address_ends_with: The mac_address_ends_with of this VmNicWhereInput.  # noqa: E501
        :type mac_address_ends_with: str
        """

        self._mac_address_ends_with = mac_address_ends_with

    @property
    def mac_address_gt(self):
        """Gets the mac_address_gt of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_gt

    @mac_address_gt.setter
    def mac_address_gt(self, mac_address_gt):
        """Sets the mac_address_gt of this VmNicWhereInput.


        :param mac_address_gt: The mac_address_gt of this VmNicWhereInput.  # noqa: E501
        :type mac_address_gt: str
        """

        self._mac_address_gt = mac_address_gt

    @property
    def mac_address_gte(self):
        """Gets the mac_address_gte of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_gte

    @mac_address_gte.setter
    def mac_address_gte(self, mac_address_gte):
        """Sets the mac_address_gte of this VmNicWhereInput.


        :param mac_address_gte: The mac_address_gte of this VmNicWhereInput.  # noqa: E501
        :type mac_address_gte: str
        """

        self._mac_address_gte = mac_address_gte

    @property
    def mac_address_in(self):
        """Gets the mac_address_in of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._mac_address_in

    @mac_address_in.setter
    def mac_address_in(self, mac_address_in):
        """Sets the mac_address_in of this VmNicWhereInput.


        :param mac_address_in: The mac_address_in of this VmNicWhereInput.  # noqa: E501
        :type mac_address_in: list[str]
        """

        self._mac_address_in = mac_address_in

    @property
    def mac_address_lt(self):
        """Gets the mac_address_lt of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_lt

    @mac_address_lt.setter
    def mac_address_lt(self, mac_address_lt):
        """Sets the mac_address_lt of this VmNicWhereInput.


        :param mac_address_lt: The mac_address_lt of this VmNicWhereInput.  # noqa: E501
        :type mac_address_lt: str
        """

        self._mac_address_lt = mac_address_lt

    @property
    def mac_address_lte(self):
        """Gets the mac_address_lte of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_lte

    @mac_address_lte.setter
    def mac_address_lte(self, mac_address_lte):
        """Sets the mac_address_lte of this VmNicWhereInput.


        :param mac_address_lte: The mac_address_lte of this VmNicWhereInput.  # noqa: E501
        :type mac_address_lte: str
        """

        self._mac_address_lte = mac_address_lte

    @property
    def mac_address_not(self):
        """Gets the mac_address_not of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_not of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not

    @mac_address_not.setter
    def mac_address_not(self, mac_address_not):
        """Sets the mac_address_not of this VmNicWhereInput.


        :param mac_address_not: The mac_address_not of this VmNicWhereInput.  # noqa: E501
        :type mac_address_not: str
        """

        self._mac_address_not = mac_address_not

    @property
    def mac_address_not_contains(self):
        """Gets the mac_address_not_contains of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_not_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not_contains

    @mac_address_not_contains.setter
    def mac_address_not_contains(self, mac_address_not_contains):
        """Sets the mac_address_not_contains of this VmNicWhereInput.


        :param mac_address_not_contains: The mac_address_not_contains of this VmNicWhereInput.  # noqa: E501
        :type mac_address_not_contains: str
        """

        self._mac_address_not_contains = mac_address_not_contains

    @property
    def mac_address_not_ends_with(self):
        """Gets the mac_address_not_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not_ends_with

    @mac_address_not_ends_with.setter
    def mac_address_not_ends_with(self, mac_address_not_ends_with):
        """Sets the mac_address_not_ends_with of this VmNicWhereInput.


        :param mac_address_not_ends_with: The mac_address_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :type mac_address_not_ends_with: str
        """

        self._mac_address_not_ends_with = mac_address_not_ends_with

    @property
    def mac_address_not_in(self):
        """Gets the mac_address_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._mac_address_not_in

    @mac_address_not_in.setter
    def mac_address_not_in(self, mac_address_not_in):
        """Sets the mac_address_not_in of this VmNicWhereInput.


        :param mac_address_not_in: The mac_address_not_in of this VmNicWhereInput.  # noqa: E501
        :type mac_address_not_in: list[str]
        """

        self._mac_address_not_in = mac_address_not_in

    @property
    def mac_address_not_starts_with(self):
        """Gets the mac_address_not_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_not_starts_with

    @mac_address_not_starts_with.setter
    def mac_address_not_starts_with(self, mac_address_not_starts_with):
        """Sets the mac_address_not_starts_with of this VmNicWhereInput.


        :param mac_address_not_starts_with: The mac_address_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :type mac_address_not_starts_with: str
        """

        self._mac_address_not_starts_with = mac_address_not_starts_with

    @property
    def mac_address_starts_with(self):
        """Gets the mac_address_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The mac_address_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._mac_address_starts_with

    @mac_address_starts_with.setter
    def mac_address_starts_with(self, mac_address_starts_with):
        """Sets the mac_address_starts_with of this VmNicWhereInput.


        :param mac_address_starts_with: The mac_address_starts_with of this VmNicWhereInput.  # noqa: E501
        :type mac_address_starts_with: str
        """

        self._mac_address_starts_with = mac_address_starts_with

    @property
    def mirror(self):
        """Gets the mirror of this VmNicWhereInput.  # noqa: E501


        :return: The mirror of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._mirror

    @mirror.setter
    def mirror(self, mirror):
        """Sets the mirror of this VmNicWhereInput.


        :param mirror: The mirror of this VmNicWhereInput.  # noqa: E501
        :type mirror: bool
        """

        self._mirror = mirror

    @property
    def mirror_not(self):
        """Gets the mirror_not of this VmNicWhereInput.  # noqa: E501


        :return: The mirror_not of this VmNicWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._mirror_not

    @mirror_not.setter
    def mirror_not(self, mirror_not):
        """Sets the mirror_not of this VmNicWhereInput.


        :param mirror_not: The mirror_not of this VmNicWhereInput.  # noqa: E501
        :type mirror_not: bool
        """

        self._mirror_not = mirror_not

    @property
    def model(self):
        """Gets the model of this VmNicWhereInput.  # noqa: E501


        :return: The model of this VmNicWhereInput.  # noqa: E501
        :rtype: VmNicModel
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this VmNicWhereInput.


        :param model: The model of this VmNicWhereInput.  # noqa: E501
        :type model: VmNicModel
        """

        self._model = model

    @property
    def model_in(self):
        """Gets the model_in of this VmNicWhereInput.  # noqa: E501


        :return: The model_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[VmNicModel]
        """
        return self._model_in

    @model_in.setter
    def model_in(self, model_in):
        """Sets the model_in of this VmNicWhereInput.


        :param model_in: The model_in of this VmNicWhereInput.  # noqa: E501
        :type model_in: list[VmNicModel]
        """

        self._model_in = model_in

    @property
    def model_not(self):
        """Gets the model_not of this VmNicWhereInput.  # noqa: E501


        :return: The model_not of this VmNicWhereInput.  # noqa: E501
        :rtype: VmNicModel
        """
        return self._model_not

    @model_not.setter
    def model_not(self, model_not):
        """Sets the model_not of this VmNicWhereInput.


        :param model_not: The model_not of this VmNicWhereInput.  # noqa: E501
        :type model_not: VmNicModel
        """

        self._model_not = model_not

    @property
    def model_not_in(self):
        """Gets the model_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The model_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[VmNicModel]
        """
        return self._model_not_in

    @model_not_in.setter
    def model_not_in(self, model_not_in):
        """Sets the model_not_in of this VmNicWhereInput.


        :param model_not_in: The model_not_in of this VmNicWhereInput.  # noqa: E501
        :type model_not_in: list[VmNicModel]
        """

        self._model_not_in = model_not_in

    @property
    def nic(self):
        """Gets the nic of this VmNicWhereInput.  # noqa: E501


        :return: The nic of this VmNicWhereInput.  # noqa: E501
        :rtype: NicWhereInput
        """
        return self._nic

    @nic.setter
    def nic(self, nic):
        """Sets the nic of this VmNicWhereInput.


        :param nic: The nic of this VmNicWhereInput.  # noqa: E501
        :type nic: NicWhereInput
        """

        self._nic = nic

    @property
    def order(self):
        """Gets the order of this VmNicWhereInput.  # noqa: E501


        :return: The order of this VmNicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this VmNicWhereInput.


        :param order: The order of this VmNicWhereInput.  # noqa: E501
        :type order: int
        """

        self._order = order

    @property
    def order_gt(self):
        """Gets the order_gt of this VmNicWhereInput.  # noqa: E501


        :return: The order_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._order_gt

    @order_gt.setter
    def order_gt(self, order_gt):
        """Sets the order_gt of this VmNicWhereInput.


        :param order_gt: The order_gt of this VmNicWhereInput.  # noqa: E501
        :type order_gt: int
        """

        self._order_gt = order_gt

    @property
    def order_gte(self):
        """Gets the order_gte of this VmNicWhereInput.  # noqa: E501


        :return: The order_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._order_gte

    @order_gte.setter
    def order_gte(self, order_gte):
        """Sets the order_gte of this VmNicWhereInput.


        :param order_gte: The order_gte of this VmNicWhereInput.  # noqa: E501
        :type order_gte: int
        """

        self._order_gte = order_gte

    @property
    def order_in(self):
        """Gets the order_in of this VmNicWhereInput.  # noqa: E501


        :return: The order_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._order_in

    @order_in.setter
    def order_in(self, order_in):
        """Sets the order_in of this VmNicWhereInput.


        :param order_in: The order_in of this VmNicWhereInput.  # noqa: E501
        :type order_in: list[int]
        """

        self._order_in = order_in

    @property
    def order_lt(self):
        """Gets the order_lt of this VmNicWhereInput.  # noqa: E501


        :return: The order_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._order_lt

    @order_lt.setter
    def order_lt(self, order_lt):
        """Sets the order_lt of this VmNicWhereInput.


        :param order_lt: The order_lt of this VmNicWhereInput.  # noqa: E501
        :type order_lt: int
        """

        self._order_lt = order_lt

    @property
    def order_lte(self):
        """Gets the order_lte of this VmNicWhereInput.  # noqa: E501


        :return: The order_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._order_lte

    @order_lte.setter
    def order_lte(self, order_lte):
        """Sets the order_lte of this VmNicWhereInput.


        :param order_lte: The order_lte of this VmNicWhereInput.  # noqa: E501
        :type order_lte: int
        """

        self._order_lte = order_lte

    @property
    def order_not(self):
        """Gets the order_not of this VmNicWhereInput.  # noqa: E501


        :return: The order_not of this VmNicWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._order_not

    @order_not.setter
    def order_not(self, order_not):
        """Sets the order_not of this VmNicWhereInput.


        :param order_not: The order_not of this VmNicWhereInput.  # noqa: E501
        :type order_not: int
        """

        self._order_not = order_not

    @property
    def order_not_in(self):
        """Gets the order_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The order_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._order_not_in

    @order_not_in.setter
    def order_not_in(self, order_not_in):
        """Sets the order_not_in of this VmNicWhereInput.


        :param order_not_in: The order_not_in of this VmNicWhereInput.  # noqa: E501
        :type order_not_in: list[int]
        """

        self._order_not_in = order_not_in

    @property
    def subnet_mask(self):
        """Gets the subnet_mask of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask

    @subnet_mask.setter
    def subnet_mask(self, subnet_mask):
        """Sets the subnet_mask of this VmNicWhereInput.


        :param subnet_mask: The subnet_mask of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask: str
        """

        self._subnet_mask = subnet_mask

    @property
    def subnet_mask_contains(self):
        """Gets the subnet_mask_contains of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_contains

    @subnet_mask_contains.setter
    def subnet_mask_contains(self, subnet_mask_contains):
        """Sets the subnet_mask_contains of this VmNicWhereInput.


        :param subnet_mask_contains: The subnet_mask_contains of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_contains: str
        """

        self._subnet_mask_contains = subnet_mask_contains

    @property
    def subnet_mask_ends_with(self):
        """Gets the subnet_mask_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_ends_with

    @subnet_mask_ends_with.setter
    def subnet_mask_ends_with(self, subnet_mask_ends_with):
        """Sets the subnet_mask_ends_with of this VmNicWhereInput.


        :param subnet_mask_ends_with: The subnet_mask_ends_with of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_ends_with: str
        """

        self._subnet_mask_ends_with = subnet_mask_ends_with

    @property
    def subnet_mask_gt(self):
        """Gets the subnet_mask_gt of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_gt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_gt

    @subnet_mask_gt.setter
    def subnet_mask_gt(self, subnet_mask_gt):
        """Sets the subnet_mask_gt of this VmNicWhereInput.


        :param subnet_mask_gt: The subnet_mask_gt of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_gt: str
        """

        self._subnet_mask_gt = subnet_mask_gt

    @property
    def subnet_mask_gte(self):
        """Gets the subnet_mask_gte of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_gte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_gte

    @subnet_mask_gte.setter
    def subnet_mask_gte(self, subnet_mask_gte):
        """Sets the subnet_mask_gte of this VmNicWhereInput.


        :param subnet_mask_gte: The subnet_mask_gte of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_gte: str
        """

        self._subnet_mask_gte = subnet_mask_gte

    @property
    def subnet_mask_in(self):
        """Gets the subnet_mask_in of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_mask_in

    @subnet_mask_in.setter
    def subnet_mask_in(self, subnet_mask_in):
        """Sets the subnet_mask_in of this VmNicWhereInput.


        :param subnet_mask_in: The subnet_mask_in of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_in: list[str]
        """

        self._subnet_mask_in = subnet_mask_in

    @property
    def subnet_mask_lt(self):
        """Gets the subnet_mask_lt of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_lt of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_lt

    @subnet_mask_lt.setter
    def subnet_mask_lt(self, subnet_mask_lt):
        """Sets the subnet_mask_lt of this VmNicWhereInput.


        :param subnet_mask_lt: The subnet_mask_lt of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_lt: str
        """

        self._subnet_mask_lt = subnet_mask_lt

    @property
    def subnet_mask_lte(self):
        """Gets the subnet_mask_lte of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_lte of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_lte

    @subnet_mask_lte.setter
    def subnet_mask_lte(self, subnet_mask_lte):
        """Sets the subnet_mask_lte of this VmNicWhereInput.


        :param subnet_mask_lte: The subnet_mask_lte of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_lte: str
        """

        self._subnet_mask_lte = subnet_mask_lte

    @property
    def subnet_mask_not(self):
        """Gets the subnet_mask_not of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_not of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not

    @subnet_mask_not.setter
    def subnet_mask_not(self, subnet_mask_not):
        """Sets the subnet_mask_not of this VmNicWhereInput.


        :param subnet_mask_not: The subnet_mask_not of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_not: str
        """

        self._subnet_mask_not = subnet_mask_not

    @property
    def subnet_mask_not_contains(self):
        """Gets the subnet_mask_not_contains of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_contains of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_contains

    @subnet_mask_not_contains.setter
    def subnet_mask_not_contains(self, subnet_mask_not_contains):
        """Sets the subnet_mask_not_contains of this VmNicWhereInput.


        :param subnet_mask_not_contains: The subnet_mask_not_contains of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_not_contains: str
        """

        self._subnet_mask_not_contains = subnet_mask_not_contains

    @property
    def subnet_mask_not_ends_with(self):
        """Gets the subnet_mask_not_ends_with of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_ends_with

    @subnet_mask_not_ends_with.setter
    def subnet_mask_not_ends_with(self, subnet_mask_not_ends_with):
        """Sets the subnet_mask_not_ends_with of this VmNicWhereInput.


        :param subnet_mask_not_ends_with: The subnet_mask_not_ends_with of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_not_ends_with: str
        """

        self._subnet_mask_not_ends_with = subnet_mask_not_ends_with

    @property
    def subnet_mask_not_in(self):
        """Gets the subnet_mask_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_mask_not_in

    @subnet_mask_not_in.setter
    def subnet_mask_not_in(self, subnet_mask_not_in):
        """Sets the subnet_mask_not_in of this VmNicWhereInput.


        :param subnet_mask_not_in: The subnet_mask_not_in of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_not_in: list[str]
        """

        self._subnet_mask_not_in = subnet_mask_not_in

    @property
    def subnet_mask_not_starts_with(self):
        """Gets the subnet_mask_not_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_starts_with

    @subnet_mask_not_starts_with.setter
    def subnet_mask_not_starts_with(self, subnet_mask_not_starts_with):
        """Sets the subnet_mask_not_starts_with of this VmNicWhereInput.


        :param subnet_mask_not_starts_with: The subnet_mask_not_starts_with of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_not_starts_with: str
        """

        self._subnet_mask_not_starts_with = subnet_mask_not_starts_with

    @property
    def subnet_mask_starts_with(self):
        """Gets the subnet_mask_starts_with of this VmNicWhereInput.  # noqa: E501


        :return: The subnet_mask_starts_with of this VmNicWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_starts_with

    @subnet_mask_starts_with.setter
    def subnet_mask_starts_with(self, subnet_mask_starts_with):
        """Sets the subnet_mask_starts_with of this VmNicWhereInput.


        :param subnet_mask_starts_with: The subnet_mask_starts_with of this VmNicWhereInput.  # noqa: E501
        :type subnet_mask_starts_with: str
        """

        self._subnet_mask_starts_with = subnet_mask_starts_with

    @property
    def type(self):
        """Gets the type of this VmNicWhereInput.  # noqa: E501


        :return: The type of this VmNicWhereInput.  # noqa: E501
        :rtype: VmNicType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VmNicWhereInput.


        :param type: The type of this VmNicWhereInput.  # noqa: E501
        :type type: VmNicType
        """

        self._type = type

    @property
    def type_in(self):
        """Gets the type_in of this VmNicWhereInput.  # noqa: E501


        :return: The type_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[VmNicType]
        """
        return self._type_in

    @type_in.setter
    def type_in(self, type_in):
        """Sets the type_in of this VmNicWhereInput.


        :param type_in: The type_in of this VmNicWhereInput.  # noqa: E501
        :type type_in: list[VmNicType]
        """

        self._type_in = type_in

    @property
    def type_not(self):
        """Gets the type_not of this VmNicWhereInput.  # noqa: E501


        :return: The type_not of this VmNicWhereInput.  # noqa: E501
        :rtype: VmNicType
        """
        return self._type_not

    @type_not.setter
    def type_not(self, type_not):
        """Sets the type_not of this VmNicWhereInput.


        :param type_not: The type_not of this VmNicWhereInput.  # noqa: E501
        :type type_not: VmNicType
        """

        self._type_not = type_not

    @property
    def type_not_in(self):
        """Gets the type_not_in of this VmNicWhereInput.  # noqa: E501


        :return: The type_not_in of this VmNicWhereInput.  # noqa: E501
        :rtype: list[VmNicType]
        """
        return self._type_not_in

    @type_not_in.setter
    def type_not_in(self, type_not_in):
        """Sets the type_not_in of this VmNicWhereInput.


        :param type_not_in: The type_not_in of this VmNicWhereInput.  # noqa: E501
        :type type_not_in: list[VmNicType]
        """

        self._type_not_in = type_not_in

    @property
    def vlan(self):
        """Gets the vlan of this VmNicWhereInput.  # noqa: E501


        :return: The vlan of this VmNicWhereInput.  # noqa: E501
        :rtype: VlanWhereInput
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this VmNicWhereInput.


        :param vlan: The vlan of this VmNicWhereInput.  # noqa: E501
        :type vlan: VlanWhereInput
        """

        self._vlan = vlan

    @property
    def vm(self):
        """Gets the vm of this VmNicWhereInput.  # noqa: E501


        :return: The vm of this VmNicWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._vm

    @vm.setter
    def vm(self, vm):
        """Sets the vm of this VmNicWhereInput.


        :param vm: The vm of this VmNicWhereInput.  # noqa: E501
        :type vm: VmWhereInput
        """

        self._vm = vm

    @property
    def vpc_nic(self):
        """Gets the vpc_nic of this VmNicWhereInput.  # noqa: E501


        :return: The vpc_nic of this VmNicWhereInput.  # noqa: E501
        :rtype: VirtualPrivateCloudNicWhereInput
        """
        return self._vpc_nic

    @vpc_nic.setter
    def vpc_nic(self, vpc_nic):
        """Sets the vpc_nic of this VmNicWhereInput.


        :param vpc_nic: The vpc_nic of this VmNicWhereInput.  # noqa: E501
        :type vpc_nic: VirtualPrivateCloudNicWhereInput
        """

        self._vpc_nic = vpc_nic

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VmNicWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VmNicWhereInput):
            return True

        return self.to_dict() != other.to_dict()

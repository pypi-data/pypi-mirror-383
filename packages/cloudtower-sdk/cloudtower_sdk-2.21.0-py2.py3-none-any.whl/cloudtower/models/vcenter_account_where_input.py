# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class VcenterAccountWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[VcenterAccountWhereInput]',
        '_not': 'list[VcenterAccountWhereInput]',
        '_or': 'list[VcenterAccountWhereInput]',
        'cluster': 'ClusterWhereInput',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'ip': 'str',
        'ip_contains': 'str',
        'ip_ends_with': 'str',
        'ip_gt': 'str',
        'ip_gte': 'str',
        'ip_in': 'list[str]',
        'ip_lt': 'str',
        'ip_lte': 'str',
        'ip_not': 'str',
        'ip_not_contains': 'str',
        'ip_not_ends_with': 'str',
        'ip_not_in': 'list[str]',
        'ip_not_starts_with': 'str',
        'ip_starts_with': 'str',
        'is_valid': 'bool',
        'is_valid_not': 'bool',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'port': 'int',
        'port_gt': 'int',
        'port_gte': 'int',
        'port_in': 'list[int]',
        'port_lt': 'int',
        'port_lte': 'int',
        'port_not': 'int',
        'port_not_in': 'list[int]',
        'username': 'str',
        'username_contains': 'str',
        'username_ends_with': 'str',
        'username_gt': 'str',
        'username_gte': 'str',
        'username_in': 'list[str]',
        'username_lt': 'str',
        'username_lte': 'str',
        'username_not': 'str',
        'username_not_contains': 'str',
        'username_not_ends_with': 'str',
        'username_not_in': 'list[str]',
        'username_not_starts_with': 'str',
        'username_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'cluster': 'cluster',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'ip': 'ip',
        'ip_contains': 'ip_contains',
        'ip_ends_with': 'ip_ends_with',
        'ip_gt': 'ip_gt',
        'ip_gte': 'ip_gte',
        'ip_in': 'ip_in',
        'ip_lt': 'ip_lt',
        'ip_lte': 'ip_lte',
        'ip_not': 'ip_not',
        'ip_not_contains': 'ip_not_contains',
        'ip_not_ends_with': 'ip_not_ends_with',
        'ip_not_in': 'ip_not_in',
        'ip_not_starts_with': 'ip_not_starts_with',
        'ip_starts_with': 'ip_starts_with',
        'is_valid': 'is_valid',
        'is_valid_not': 'is_valid_not',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'port': 'port',
        'port_gt': 'port_gt',
        'port_gte': 'port_gte',
        'port_in': 'port_in',
        'port_lt': 'port_lt',
        'port_lte': 'port_lte',
        'port_not': 'port_not',
        'port_not_in': 'port_not_in',
        'username': 'username',
        'username_contains': 'username_contains',
        'username_ends_with': 'username_ends_with',
        'username_gt': 'username_gt',
        'username_gte': 'username_gte',
        'username_in': 'username_in',
        'username_lt': 'username_lt',
        'username_lte': 'username_lte',
        'username_not': 'username_not',
        'username_not_contains': 'username_not_contains',
        'username_not_ends_with': 'username_not_ends_with',
        'username_not_in': 'username_not_in',
        'username_not_starts_with': 'username_not_starts_with',
        'username_starts_with': 'username_starts_with'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """VcenterAccountWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._cluster = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._ip = None
        self._ip_contains = None
        self._ip_ends_with = None
        self._ip_gt = None
        self._ip_gte = None
        self._ip_in = None
        self._ip_lt = None
        self._ip_lte = None
        self._ip_not = None
        self._ip_not_contains = None
        self._ip_not_ends_with = None
        self._ip_not_in = None
        self._ip_not_starts_with = None
        self._ip_starts_with = None
        self._is_valid = None
        self._is_valid_not = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._port = None
        self._port_gt = None
        self._port_gte = None
        self._port_in = None
        self._port_lt = None
        self._port_lte = None
        self._port_not = None
        self._port_not_in = None
        self._username = None
        self._username_contains = None
        self._username_ends_with = None
        self._username_gt = None
        self._username_gte = None
        self._username_in = None
        self._username_lt = None
        self._username_lte = None
        self._username_not = None
        self._username_not_contains = None
        self._username_not_ends_with = None
        self._username_not_in = None
        self._username_not_starts_with = None
        self._username_starts_with = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.cluster = kwargs.get("cluster", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.ip = kwargs.get("ip", None)
        self.ip_contains = kwargs.get("ip_contains", None)
        self.ip_ends_with = kwargs.get("ip_ends_with", None)
        self.ip_gt = kwargs.get("ip_gt", None)
        self.ip_gte = kwargs.get("ip_gte", None)
        self.ip_in = kwargs.get("ip_in", None)
        self.ip_lt = kwargs.get("ip_lt", None)
        self.ip_lte = kwargs.get("ip_lte", None)
        self.ip_not = kwargs.get("ip_not", None)
        self.ip_not_contains = kwargs.get("ip_not_contains", None)
        self.ip_not_ends_with = kwargs.get("ip_not_ends_with", None)
        self.ip_not_in = kwargs.get("ip_not_in", None)
        self.ip_not_starts_with = kwargs.get("ip_not_starts_with", None)
        self.ip_starts_with = kwargs.get("ip_starts_with", None)
        self.is_valid = kwargs.get("is_valid", None)
        self.is_valid_not = kwargs.get("is_valid_not", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.port = kwargs.get("port", None)
        self.port_gt = kwargs.get("port_gt", None)
        self.port_gte = kwargs.get("port_gte", None)
        self.port_in = kwargs.get("port_in", None)
        self.port_lt = kwargs.get("port_lt", None)
        self.port_lte = kwargs.get("port_lte", None)
        self.port_not = kwargs.get("port_not", None)
        self.port_not_in = kwargs.get("port_not_in", None)
        self.username = kwargs.get("username", None)
        self.username_contains = kwargs.get("username_contains", None)
        self.username_ends_with = kwargs.get("username_ends_with", None)
        self.username_gt = kwargs.get("username_gt", None)
        self.username_gte = kwargs.get("username_gte", None)
        self.username_in = kwargs.get("username_in", None)
        self.username_lt = kwargs.get("username_lt", None)
        self.username_lte = kwargs.get("username_lte", None)
        self.username_not = kwargs.get("username_not", None)
        self.username_not_contains = kwargs.get("username_not_contains", None)
        self.username_not_ends_with = kwargs.get("username_not_ends_with", None)
        self.username_not_in = kwargs.get("username_not_in", None)
        self.username_not_starts_with = kwargs.get("username_not_starts_with", None)
        self.username_starts_with = kwargs.get("username_starts_with", None)

    @property
    def _and(self):
        """Gets the _and of this VcenterAccountWhereInput.  # noqa: E501


        :return: The _and of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[VcenterAccountWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this VcenterAccountWhereInput.


        :param _and: The _and of this VcenterAccountWhereInput.  # noqa: E501
        :type _and: list[VcenterAccountWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this VcenterAccountWhereInput.  # noqa: E501


        :return: The _not of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[VcenterAccountWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this VcenterAccountWhereInput.


        :param _not: The _not of this VcenterAccountWhereInput.  # noqa: E501
        :type _not: list[VcenterAccountWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this VcenterAccountWhereInput.  # noqa: E501


        :return: The _or of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[VcenterAccountWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this VcenterAccountWhereInput.


        :param _or: The _or of this VcenterAccountWhereInput.  # noqa: E501
        :type _or: list[VcenterAccountWhereInput]
        """

        self.__or = _or

    @property
    def cluster(self):
        """Gets the cluster of this VcenterAccountWhereInput.  # noqa: E501


        :return: The cluster of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this VcenterAccountWhereInput.


        :param cluster: The cluster of this VcenterAccountWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def id(self):
        """Gets the id of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VcenterAccountWhereInput.


        :param id: The id of this VcenterAccountWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this VcenterAccountWhereInput.


        :param id_contains: The id_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this VcenterAccountWhereInput.


        :param id_ends_with: The id_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_gt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this VcenterAccountWhereInput.


        :param id_gt: The id_gt of this VcenterAccountWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_gte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this VcenterAccountWhereInput.


        :param id_gte: The id_gte of this VcenterAccountWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this VcenterAccountWhereInput.


        :param id_in: The id_in of this VcenterAccountWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_lt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this VcenterAccountWhereInput.


        :param id_lt: The id_lt of this VcenterAccountWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_lte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this VcenterAccountWhereInput.


        :param id_lte: The id_lte of this VcenterAccountWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_not of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this VcenterAccountWhereInput.


        :param id_not: The id_not of this VcenterAccountWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this VcenterAccountWhereInput.


        :param id_not_contains: The id_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this VcenterAccountWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this VcenterAccountWhereInput.


        :param id_not_in: The id_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this VcenterAccountWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The id_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this VcenterAccountWhereInput.


        :param id_starts_with: The id_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def ip(self):
        """Gets the ip of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this VcenterAccountWhereInput.


        :param ip: The ip of this VcenterAccountWhereInput.  # noqa: E501
        :type ip: str
        """

        self._ip = ip

    @property
    def ip_contains(self):
        """Gets the ip_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_contains

    @ip_contains.setter
    def ip_contains(self, ip_contains):
        """Sets the ip_contains of this VcenterAccountWhereInput.


        :param ip_contains: The ip_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_contains: str
        """

        self._ip_contains = ip_contains

    @property
    def ip_ends_with(self):
        """Gets the ip_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_ends_with

    @ip_ends_with.setter
    def ip_ends_with(self, ip_ends_with):
        """Sets the ip_ends_with of this VcenterAccountWhereInput.


        :param ip_ends_with: The ip_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_ends_with: str
        """

        self._ip_ends_with = ip_ends_with

    @property
    def ip_gt(self):
        """Gets the ip_gt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_gt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_gt

    @ip_gt.setter
    def ip_gt(self, ip_gt):
        """Sets the ip_gt of this VcenterAccountWhereInput.


        :param ip_gt: The ip_gt of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_gt: str
        """

        self._ip_gt = ip_gt

    @property
    def ip_gte(self):
        """Gets the ip_gte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_gte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_gte

    @ip_gte.setter
    def ip_gte(self, ip_gte):
        """Sets the ip_gte of this VcenterAccountWhereInput.


        :param ip_gte: The ip_gte of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_gte: str
        """

        self._ip_gte = ip_gte

    @property
    def ip_in(self):
        """Gets the ip_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_in

    @ip_in.setter
    def ip_in(self, ip_in):
        """Sets the ip_in of this VcenterAccountWhereInput.


        :param ip_in: The ip_in of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_in: list[str]
        """

        self._ip_in = ip_in

    @property
    def ip_lt(self):
        """Gets the ip_lt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_lt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_lt

    @ip_lt.setter
    def ip_lt(self, ip_lt):
        """Sets the ip_lt of this VcenterAccountWhereInput.


        :param ip_lt: The ip_lt of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_lt: str
        """

        self._ip_lt = ip_lt

    @property
    def ip_lte(self):
        """Gets the ip_lte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_lte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_lte

    @ip_lte.setter
    def ip_lte(self, ip_lte):
        """Sets the ip_lte of this VcenterAccountWhereInput.


        :param ip_lte: The ip_lte of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_lte: str
        """

        self._ip_lte = ip_lte

    @property
    def ip_not(self):
        """Gets the ip_not of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_not of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not

    @ip_not.setter
    def ip_not(self, ip_not):
        """Sets the ip_not of this VcenterAccountWhereInput.


        :param ip_not: The ip_not of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_not: str
        """

        self._ip_not = ip_not

    @property
    def ip_not_contains(self):
        """Gets the ip_not_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_contains

    @ip_not_contains.setter
    def ip_not_contains(self, ip_not_contains):
        """Sets the ip_not_contains of this VcenterAccountWhereInput.


        :param ip_not_contains: The ip_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_not_contains: str
        """

        self._ip_not_contains = ip_not_contains

    @property
    def ip_not_ends_with(self):
        """Gets the ip_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_ends_with

    @ip_not_ends_with.setter
    def ip_not_ends_with(self, ip_not_ends_with):
        """Sets the ip_not_ends_with of this VcenterAccountWhereInput.


        :param ip_not_ends_with: The ip_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_not_ends_with: str
        """

        self._ip_not_ends_with = ip_not_ends_with

    @property
    def ip_not_in(self):
        """Gets the ip_not_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_not_in

    @ip_not_in.setter
    def ip_not_in(self, ip_not_in):
        """Sets the ip_not_in of this VcenterAccountWhereInput.


        :param ip_not_in: The ip_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_not_in: list[str]
        """

        self._ip_not_in = ip_not_in

    @property
    def ip_not_starts_with(self):
        """Gets the ip_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_starts_with

    @ip_not_starts_with.setter
    def ip_not_starts_with(self, ip_not_starts_with):
        """Sets the ip_not_starts_with of this VcenterAccountWhereInput.


        :param ip_not_starts_with: The ip_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_not_starts_with: str
        """

        self._ip_not_starts_with = ip_not_starts_with

    @property
    def ip_starts_with(self):
        """Gets the ip_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The ip_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_starts_with

    @ip_starts_with.setter
    def ip_starts_with(self, ip_starts_with):
        """Sets the ip_starts_with of this VcenterAccountWhereInput.


        :param ip_starts_with: The ip_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type ip_starts_with: str
        """

        self._ip_starts_with = ip_starts_with

    @property
    def is_valid(self):
        """Gets the is_valid of this VcenterAccountWhereInput.  # noqa: E501


        :return: The is_valid of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._is_valid

    @is_valid.setter
    def is_valid(self, is_valid):
        """Sets the is_valid of this VcenterAccountWhereInput.


        :param is_valid: The is_valid of this VcenterAccountWhereInput.  # noqa: E501
        :type is_valid: bool
        """

        self._is_valid = is_valid

    @property
    def is_valid_not(self):
        """Gets the is_valid_not of this VcenterAccountWhereInput.  # noqa: E501


        :return: The is_valid_not of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._is_valid_not

    @is_valid_not.setter
    def is_valid_not(self, is_valid_not):
        """Sets the is_valid_not of this VcenterAccountWhereInput.


        :param is_valid_not: The is_valid_not of this VcenterAccountWhereInput.  # noqa: E501
        :type is_valid_not: bool
        """

        self._is_valid_not = is_valid_not

    @property
    def local_id(self):
        """Gets the local_id of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this VcenterAccountWhereInput.


        :param local_id: The local_id of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this VcenterAccountWhereInput.


        :param local_id_contains: The local_id_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this VcenterAccountWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_gt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this VcenterAccountWhereInput.


        :param local_id_gt: The local_id_gt of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_gte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this VcenterAccountWhereInput.


        :param local_id_gte: The local_id_gte of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this VcenterAccountWhereInput.


        :param local_id_in: The local_id_in of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_lt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this VcenterAccountWhereInput.


        :param local_id_lt: The local_id_lt of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_lte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this VcenterAccountWhereInput.


        :param local_id_lte: The local_id_lte of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_not of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this VcenterAccountWhereInput.


        :param local_id_not: The local_id_not of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this VcenterAccountWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this VcenterAccountWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this VcenterAccountWhereInput.


        :param local_id_not_in: The local_id_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this VcenterAccountWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this VcenterAccountWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def port(self):
        """Gets the port of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this VcenterAccountWhereInput.


        :param port: The port of this VcenterAccountWhereInput.  # noqa: E501
        :type port: int
        """

        self._port = port

    @property
    def port_gt(self):
        """Gets the port_gt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port_gt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_gt

    @port_gt.setter
    def port_gt(self, port_gt):
        """Sets the port_gt of this VcenterAccountWhereInput.


        :param port_gt: The port_gt of this VcenterAccountWhereInput.  # noqa: E501
        :type port_gt: int
        """

        self._port_gt = port_gt

    @property
    def port_gte(self):
        """Gets the port_gte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port_gte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_gte

    @port_gte.setter
    def port_gte(self, port_gte):
        """Sets the port_gte of this VcenterAccountWhereInput.


        :param port_gte: The port_gte of this VcenterAccountWhereInput.  # noqa: E501
        :type port_gte: int
        """

        self._port_gte = port_gte

    @property
    def port_in(self):
        """Gets the port_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._port_in

    @port_in.setter
    def port_in(self, port_in):
        """Sets the port_in of this VcenterAccountWhereInput.


        :param port_in: The port_in of this VcenterAccountWhereInput.  # noqa: E501
        :type port_in: list[int]
        """

        self._port_in = port_in

    @property
    def port_lt(self):
        """Gets the port_lt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port_lt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_lt

    @port_lt.setter
    def port_lt(self, port_lt):
        """Sets the port_lt of this VcenterAccountWhereInput.


        :param port_lt: The port_lt of this VcenterAccountWhereInput.  # noqa: E501
        :type port_lt: int
        """

        self._port_lt = port_lt

    @property
    def port_lte(self):
        """Gets the port_lte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port_lte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_lte

    @port_lte.setter
    def port_lte(self, port_lte):
        """Sets the port_lte of this VcenterAccountWhereInput.


        :param port_lte: The port_lte of this VcenterAccountWhereInput.  # noqa: E501
        :type port_lte: int
        """

        self._port_lte = port_lte

    @property
    def port_not(self):
        """Gets the port_not of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port_not of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_not

    @port_not.setter
    def port_not(self, port_not):
        """Sets the port_not of this VcenterAccountWhereInput.


        :param port_not: The port_not of this VcenterAccountWhereInput.  # noqa: E501
        :type port_not: int
        """

        self._port_not = port_not

    @property
    def port_not_in(self):
        """Gets the port_not_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The port_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._port_not_in

    @port_not_in.setter
    def port_not_in(self, port_not_in):
        """Sets the port_not_in of this VcenterAccountWhereInput.


        :param port_not_in: The port_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :type port_not_in: list[int]
        """

        self._port_not_in = port_not_in

    @property
    def username(self):
        """Gets the username of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this VcenterAccountWhereInput.


        :param username: The username of this VcenterAccountWhereInput.  # noqa: E501
        :type username: str
        """

        self._username = username

    @property
    def username_contains(self):
        """Gets the username_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_contains

    @username_contains.setter
    def username_contains(self, username_contains):
        """Sets the username_contains of this VcenterAccountWhereInput.


        :param username_contains: The username_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type username_contains: str
        """

        self._username_contains = username_contains

    @property
    def username_ends_with(self):
        """Gets the username_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_ends_with

    @username_ends_with.setter
    def username_ends_with(self, username_ends_with):
        """Sets the username_ends_with of this VcenterAccountWhereInput.


        :param username_ends_with: The username_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type username_ends_with: str
        """

        self._username_ends_with = username_ends_with

    @property
    def username_gt(self):
        """Gets the username_gt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_gt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gt

    @username_gt.setter
    def username_gt(self, username_gt):
        """Sets the username_gt of this VcenterAccountWhereInput.


        :param username_gt: The username_gt of this VcenterAccountWhereInput.  # noqa: E501
        :type username_gt: str
        """

        self._username_gt = username_gt

    @property
    def username_gte(self):
        """Gets the username_gte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_gte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gte

    @username_gte.setter
    def username_gte(self, username_gte):
        """Sets the username_gte of this VcenterAccountWhereInput.


        :param username_gte: The username_gte of this VcenterAccountWhereInput.  # noqa: E501
        :type username_gte: str
        """

        self._username_gte = username_gte

    @property
    def username_in(self):
        """Gets the username_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_in

    @username_in.setter
    def username_in(self, username_in):
        """Sets the username_in of this VcenterAccountWhereInput.


        :param username_in: The username_in of this VcenterAccountWhereInput.  # noqa: E501
        :type username_in: list[str]
        """

        self._username_in = username_in

    @property
    def username_lt(self):
        """Gets the username_lt of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_lt of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lt

    @username_lt.setter
    def username_lt(self, username_lt):
        """Sets the username_lt of this VcenterAccountWhereInput.


        :param username_lt: The username_lt of this VcenterAccountWhereInput.  # noqa: E501
        :type username_lt: str
        """

        self._username_lt = username_lt

    @property
    def username_lte(self):
        """Gets the username_lte of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_lte of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lte

    @username_lte.setter
    def username_lte(self, username_lte):
        """Sets the username_lte of this VcenterAccountWhereInput.


        :param username_lte: The username_lte of this VcenterAccountWhereInput.  # noqa: E501
        :type username_lte: str
        """

        self._username_lte = username_lte

    @property
    def username_not(self):
        """Gets the username_not of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_not of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not

    @username_not.setter
    def username_not(self, username_not):
        """Sets the username_not of this VcenterAccountWhereInput.


        :param username_not: The username_not of this VcenterAccountWhereInput.  # noqa: E501
        :type username_not: str
        """

        self._username_not = username_not

    @property
    def username_not_contains(self):
        """Gets the username_not_contains of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_contains

    @username_not_contains.setter
    def username_not_contains(self, username_not_contains):
        """Sets the username_not_contains of this VcenterAccountWhereInput.


        :param username_not_contains: The username_not_contains of this VcenterAccountWhereInput.  # noqa: E501
        :type username_not_contains: str
        """

        self._username_not_contains = username_not_contains

    @property
    def username_not_ends_with(self):
        """Gets the username_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_ends_with

    @username_not_ends_with.setter
    def username_not_ends_with(self, username_not_ends_with):
        """Sets the username_not_ends_with of this VcenterAccountWhereInput.


        :param username_not_ends_with: The username_not_ends_with of this VcenterAccountWhereInput.  # noqa: E501
        :type username_not_ends_with: str
        """

        self._username_not_ends_with = username_not_ends_with

    @property
    def username_not_in(self):
        """Gets the username_not_in of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_not_in

    @username_not_in.setter
    def username_not_in(self, username_not_in):
        """Sets the username_not_in of this VcenterAccountWhereInput.


        :param username_not_in: The username_not_in of this VcenterAccountWhereInput.  # noqa: E501
        :type username_not_in: list[str]
        """

        self._username_not_in = username_not_in

    @property
    def username_not_starts_with(self):
        """Gets the username_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_starts_with

    @username_not_starts_with.setter
    def username_not_starts_with(self, username_not_starts_with):
        """Sets the username_not_starts_with of this VcenterAccountWhereInput.


        :param username_not_starts_with: The username_not_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type username_not_starts_with: str
        """

        self._username_not_starts_with = username_not_starts_with

    @property
    def username_starts_with(self):
        """Gets the username_starts_with of this VcenterAccountWhereInput.  # noqa: E501


        :return: The username_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_starts_with

    @username_starts_with.setter
    def username_starts_with(self, username_starts_with):
        """Sets the username_starts_with of this VcenterAccountWhereInput.


        :param username_starts_with: The username_starts_with of this VcenterAccountWhereInput.  # noqa: E501
        :type username_starts_with: str
        """

        self._username_starts_with = username_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VcenterAccountWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VcenterAccountWhereInput):
            return True

        return self.to_dict() != other.to_dict()

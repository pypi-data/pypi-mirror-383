# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class UserAuditLogWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[UserAuditLogWhereInput]',
        '_not': 'list[UserAuditLogWhereInput]',
        '_or': 'list[UserAuditLogWhereInput]',
        'action': 'str',
        'action_contains': 'str',
        'action_ends_with': 'str',
        'action_gt': 'str',
        'action_gte': 'str',
        'action_in': 'list[str]',
        'action_lt': 'str',
        'action_lte': 'str',
        'action_not': 'str',
        'action_not_contains': 'str',
        'action_not_ends_with': 'str',
        'action_not_in': 'list[str]',
        'action_not_starts_with': 'str',
        'action_starts_with': 'str',
        'auth_type': 'str',
        'auth_type_contains': 'str',
        'auth_type_ends_with': 'str',
        'auth_type_gt': 'str',
        'auth_type_gte': 'str',
        'auth_type_in': 'list[str]',
        'auth_type_lt': 'str',
        'auth_type_lte': 'str',
        'auth_type_not': 'str',
        'auth_type_not_contains': 'str',
        'auth_type_not_ends_with': 'str',
        'auth_type_not_in': 'list[str]',
        'auth_type_not_starts_with': 'str',
        'auth_type_starts_with': 'str',
        'cluster': 'ClusterWhereInput',
        'created_at': 'str',
        'created_at_gt': 'str',
        'created_at_gte': 'str',
        'created_at_in': 'list[str]',
        'created_at_lt': 'str',
        'created_at_lte': 'str',
        'created_at_not': 'str',
        'created_at_not_in': 'list[str]',
        'finished_at': 'str',
        'finished_at_gt': 'str',
        'finished_at_gte': 'str',
        'finished_at_in': 'list[str]',
        'finished_at_lt': 'str',
        'finished_at_lte': 'str',
        'finished_at_not': 'str',
        'finished_at_not_in': 'list[str]',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'ip_address': 'str',
        'ip_address_contains': 'str',
        'ip_address_ends_with': 'str',
        'ip_address_gt': 'str',
        'ip_address_gte': 'str',
        'ip_address_in': 'list[str]',
        'ip_address_lt': 'str',
        'ip_address_lte': 'str',
        'ip_address_not': 'str',
        'ip_address_not_contains': 'str',
        'ip_address_not_ends_with': 'str',
        'ip_address_not_in': 'list[str]',
        'ip_address_not_starts_with': 'str',
        'ip_address_starts_with': 'str',
        'message': 'str',
        'message_contains': 'str',
        'message_ends_with': 'str',
        'message_gt': 'str',
        'message_gte': 'str',
        'message_in': 'list[str]',
        'message_lt': 'str',
        'message_lte': 'str',
        'message_not': 'str',
        'message_not_contains': 'str',
        'message_not_ends_with': 'str',
        'message_not_in': 'list[str]',
        'message_not_starts_with': 'str',
        'message_starts_with': 'str',
        'resource_id': 'str',
        'resource_id_contains': 'str',
        'resource_id_ends_with': 'str',
        'resource_id_gt': 'str',
        'resource_id_gte': 'str',
        'resource_id_in': 'list[str]',
        'resource_id_lt': 'str',
        'resource_id_lte': 'str',
        'resource_id_not': 'str',
        'resource_id_not_contains': 'str',
        'resource_id_not_ends_with': 'str',
        'resource_id_not_in': 'list[str]',
        'resource_id_not_starts_with': 'str',
        'resource_id_starts_with': 'str',
        'resource_type': 'str',
        'resource_type_contains': 'str',
        'resource_type_ends_with': 'str',
        'resource_type_gt': 'str',
        'resource_type_gte': 'str',
        'resource_type_in': 'list[str]',
        'resource_type_lt': 'str',
        'resource_type_lte': 'str',
        'resource_type_not': 'str',
        'resource_type_not_contains': 'str',
        'resource_type_not_ends_with': 'str',
        'resource_type_not_in': 'list[str]',
        'resource_type_not_starts_with': 'str',
        'resource_type_starts_with': 'str',
        'started_at': 'str',
        'started_at_gt': 'str',
        'started_at_gte': 'str',
        'started_at_in': 'list[str]',
        'started_at_lt': 'str',
        'started_at_lte': 'str',
        'started_at_not': 'str',
        'started_at_not_in': 'list[str]',
        'status': 'UserAuditLogStatus',
        'status_in': 'list[UserAuditLogStatus]',
        'status_not': 'UserAuditLogStatus',
        'status_not_in': 'list[UserAuditLogStatus]',
        'user': 'UserWhereInput',
        'username': 'str',
        'username_contains': 'str',
        'username_ends_with': 'str',
        'username_gt': 'str',
        'username_gte': 'str',
        'username_in': 'list[str]',
        'username_lt': 'str',
        'username_lte': 'str',
        'username_not': 'str',
        'username_not_contains': 'str',
        'username_not_ends_with': 'str',
        'username_not_in': 'list[str]',
        'username_not_starts_with': 'str',
        'username_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'action': 'action',
        'action_contains': 'action_contains',
        'action_ends_with': 'action_ends_with',
        'action_gt': 'action_gt',
        'action_gte': 'action_gte',
        'action_in': 'action_in',
        'action_lt': 'action_lt',
        'action_lte': 'action_lte',
        'action_not': 'action_not',
        'action_not_contains': 'action_not_contains',
        'action_not_ends_with': 'action_not_ends_with',
        'action_not_in': 'action_not_in',
        'action_not_starts_with': 'action_not_starts_with',
        'action_starts_with': 'action_starts_with',
        'auth_type': 'auth_type',
        'auth_type_contains': 'auth_type_contains',
        'auth_type_ends_with': 'auth_type_ends_with',
        'auth_type_gt': 'auth_type_gt',
        'auth_type_gte': 'auth_type_gte',
        'auth_type_in': 'auth_type_in',
        'auth_type_lt': 'auth_type_lt',
        'auth_type_lte': 'auth_type_lte',
        'auth_type_not': 'auth_type_not',
        'auth_type_not_contains': 'auth_type_not_contains',
        'auth_type_not_ends_with': 'auth_type_not_ends_with',
        'auth_type_not_in': 'auth_type_not_in',
        'auth_type_not_starts_with': 'auth_type_not_starts_with',
        'auth_type_starts_with': 'auth_type_starts_with',
        'cluster': 'cluster',
        'created_at': 'createdAt',
        'created_at_gt': 'createdAt_gt',
        'created_at_gte': 'createdAt_gte',
        'created_at_in': 'createdAt_in',
        'created_at_lt': 'createdAt_lt',
        'created_at_lte': 'createdAt_lte',
        'created_at_not': 'createdAt_not',
        'created_at_not_in': 'createdAt_not_in',
        'finished_at': 'finished_at',
        'finished_at_gt': 'finished_at_gt',
        'finished_at_gte': 'finished_at_gte',
        'finished_at_in': 'finished_at_in',
        'finished_at_lt': 'finished_at_lt',
        'finished_at_lte': 'finished_at_lte',
        'finished_at_not': 'finished_at_not',
        'finished_at_not_in': 'finished_at_not_in',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'ip_address': 'ip_address',
        'ip_address_contains': 'ip_address_contains',
        'ip_address_ends_with': 'ip_address_ends_with',
        'ip_address_gt': 'ip_address_gt',
        'ip_address_gte': 'ip_address_gte',
        'ip_address_in': 'ip_address_in',
        'ip_address_lt': 'ip_address_lt',
        'ip_address_lte': 'ip_address_lte',
        'ip_address_not': 'ip_address_not',
        'ip_address_not_contains': 'ip_address_not_contains',
        'ip_address_not_ends_with': 'ip_address_not_ends_with',
        'ip_address_not_in': 'ip_address_not_in',
        'ip_address_not_starts_with': 'ip_address_not_starts_with',
        'ip_address_starts_with': 'ip_address_starts_with',
        'message': 'message',
        'message_contains': 'message_contains',
        'message_ends_with': 'message_ends_with',
        'message_gt': 'message_gt',
        'message_gte': 'message_gte',
        'message_in': 'message_in',
        'message_lt': 'message_lt',
        'message_lte': 'message_lte',
        'message_not': 'message_not',
        'message_not_contains': 'message_not_contains',
        'message_not_ends_with': 'message_not_ends_with',
        'message_not_in': 'message_not_in',
        'message_not_starts_with': 'message_not_starts_with',
        'message_starts_with': 'message_starts_with',
        'resource_id': 'resource_id',
        'resource_id_contains': 'resource_id_contains',
        'resource_id_ends_with': 'resource_id_ends_with',
        'resource_id_gt': 'resource_id_gt',
        'resource_id_gte': 'resource_id_gte',
        'resource_id_in': 'resource_id_in',
        'resource_id_lt': 'resource_id_lt',
        'resource_id_lte': 'resource_id_lte',
        'resource_id_not': 'resource_id_not',
        'resource_id_not_contains': 'resource_id_not_contains',
        'resource_id_not_ends_with': 'resource_id_not_ends_with',
        'resource_id_not_in': 'resource_id_not_in',
        'resource_id_not_starts_with': 'resource_id_not_starts_with',
        'resource_id_starts_with': 'resource_id_starts_with',
        'resource_type': 'resource_type',
        'resource_type_contains': 'resource_type_contains',
        'resource_type_ends_with': 'resource_type_ends_with',
        'resource_type_gt': 'resource_type_gt',
        'resource_type_gte': 'resource_type_gte',
        'resource_type_in': 'resource_type_in',
        'resource_type_lt': 'resource_type_lt',
        'resource_type_lte': 'resource_type_lte',
        'resource_type_not': 'resource_type_not',
        'resource_type_not_contains': 'resource_type_not_contains',
        'resource_type_not_ends_with': 'resource_type_not_ends_with',
        'resource_type_not_in': 'resource_type_not_in',
        'resource_type_not_starts_with': 'resource_type_not_starts_with',
        'resource_type_starts_with': 'resource_type_starts_with',
        'started_at': 'started_at',
        'started_at_gt': 'started_at_gt',
        'started_at_gte': 'started_at_gte',
        'started_at_in': 'started_at_in',
        'started_at_lt': 'started_at_lt',
        'started_at_lte': 'started_at_lte',
        'started_at_not': 'started_at_not',
        'started_at_not_in': 'started_at_not_in',
        'status': 'status',
        'status_in': 'status_in',
        'status_not': 'status_not',
        'status_not_in': 'status_not_in',
        'user': 'user',
        'username': 'username',
        'username_contains': 'username_contains',
        'username_ends_with': 'username_ends_with',
        'username_gt': 'username_gt',
        'username_gte': 'username_gte',
        'username_in': 'username_in',
        'username_lt': 'username_lt',
        'username_lte': 'username_lte',
        'username_not': 'username_not',
        'username_not_contains': 'username_not_contains',
        'username_not_ends_with': 'username_not_ends_with',
        'username_not_in': 'username_not_in',
        'username_not_starts_with': 'username_not_starts_with',
        'username_starts_with': 'username_starts_with'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """UserAuditLogWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._action = None
        self._action_contains = None
        self._action_ends_with = None
        self._action_gt = None
        self._action_gte = None
        self._action_in = None
        self._action_lt = None
        self._action_lte = None
        self._action_not = None
        self._action_not_contains = None
        self._action_not_ends_with = None
        self._action_not_in = None
        self._action_not_starts_with = None
        self._action_starts_with = None
        self._auth_type = None
        self._auth_type_contains = None
        self._auth_type_ends_with = None
        self._auth_type_gt = None
        self._auth_type_gte = None
        self._auth_type_in = None
        self._auth_type_lt = None
        self._auth_type_lte = None
        self._auth_type_not = None
        self._auth_type_not_contains = None
        self._auth_type_not_ends_with = None
        self._auth_type_not_in = None
        self._auth_type_not_starts_with = None
        self._auth_type_starts_with = None
        self._cluster = None
        self._created_at = None
        self._created_at_gt = None
        self._created_at_gte = None
        self._created_at_in = None
        self._created_at_lt = None
        self._created_at_lte = None
        self._created_at_not = None
        self._created_at_not_in = None
        self._finished_at = None
        self._finished_at_gt = None
        self._finished_at_gte = None
        self._finished_at_in = None
        self._finished_at_lt = None
        self._finished_at_lte = None
        self._finished_at_not = None
        self._finished_at_not_in = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._ip_address = None
        self._ip_address_contains = None
        self._ip_address_ends_with = None
        self._ip_address_gt = None
        self._ip_address_gte = None
        self._ip_address_in = None
        self._ip_address_lt = None
        self._ip_address_lte = None
        self._ip_address_not = None
        self._ip_address_not_contains = None
        self._ip_address_not_ends_with = None
        self._ip_address_not_in = None
        self._ip_address_not_starts_with = None
        self._ip_address_starts_with = None
        self._message = None
        self._message_contains = None
        self._message_ends_with = None
        self._message_gt = None
        self._message_gte = None
        self._message_in = None
        self._message_lt = None
        self._message_lte = None
        self._message_not = None
        self._message_not_contains = None
        self._message_not_ends_with = None
        self._message_not_in = None
        self._message_not_starts_with = None
        self._message_starts_with = None
        self._resource_id = None
        self._resource_id_contains = None
        self._resource_id_ends_with = None
        self._resource_id_gt = None
        self._resource_id_gte = None
        self._resource_id_in = None
        self._resource_id_lt = None
        self._resource_id_lte = None
        self._resource_id_not = None
        self._resource_id_not_contains = None
        self._resource_id_not_ends_with = None
        self._resource_id_not_in = None
        self._resource_id_not_starts_with = None
        self._resource_id_starts_with = None
        self._resource_type = None
        self._resource_type_contains = None
        self._resource_type_ends_with = None
        self._resource_type_gt = None
        self._resource_type_gte = None
        self._resource_type_in = None
        self._resource_type_lt = None
        self._resource_type_lte = None
        self._resource_type_not = None
        self._resource_type_not_contains = None
        self._resource_type_not_ends_with = None
        self._resource_type_not_in = None
        self._resource_type_not_starts_with = None
        self._resource_type_starts_with = None
        self._started_at = None
        self._started_at_gt = None
        self._started_at_gte = None
        self._started_at_in = None
        self._started_at_lt = None
        self._started_at_lte = None
        self._started_at_not = None
        self._started_at_not_in = None
        self._status = None
        self._status_in = None
        self._status_not = None
        self._status_not_in = None
        self._user = None
        self._username = None
        self._username_contains = None
        self._username_ends_with = None
        self._username_gt = None
        self._username_gte = None
        self._username_in = None
        self._username_lt = None
        self._username_lte = None
        self._username_not = None
        self._username_not_contains = None
        self._username_not_ends_with = None
        self._username_not_in = None
        self._username_not_starts_with = None
        self._username_starts_with = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.action = kwargs.get("action", None)
        self.action_contains = kwargs.get("action_contains", None)
        self.action_ends_with = kwargs.get("action_ends_with", None)
        self.action_gt = kwargs.get("action_gt", None)
        self.action_gte = kwargs.get("action_gte", None)
        self.action_in = kwargs.get("action_in", None)
        self.action_lt = kwargs.get("action_lt", None)
        self.action_lte = kwargs.get("action_lte", None)
        self.action_not = kwargs.get("action_not", None)
        self.action_not_contains = kwargs.get("action_not_contains", None)
        self.action_not_ends_with = kwargs.get("action_not_ends_with", None)
        self.action_not_in = kwargs.get("action_not_in", None)
        self.action_not_starts_with = kwargs.get("action_not_starts_with", None)
        self.action_starts_with = kwargs.get("action_starts_with", None)
        self.auth_type = kwargs.get("auth_type", None)
        self.auth_type_contains = kwargs.get("auth_type_contains", None)
        self.auth_type_ends_with = kwargs.get("auth_type_ends_with", None)
        self.auth_type_gt = kwargs.get("auth_type_gt", None)
        self.auth_type_gte = kwargs.get("auth_type_gte", None)
        self.auth_type_in = kwargs.get("auth_type_in", None)
        self.auth_type_lt = kwargs.get("auth_type_lt", None)
        self.auth_type_lte = kwargs.get("auth_type_lte", None)
        self.auth_type_not = kwargs.get("auth_type_not", None)
        self.auth_type_not_contains = kwargs.get("auth_type_not_contains", None)
        self.auth_type_not_ends_with = kwargs.get("auth_type_not_ends_with", None)
        self.auth_type_not_in = kwargs.get("auth_type_not_in", None)
        self.auth_type_not_starts_with = kwargs.get("auth_type_not_starts_with", None)
        self.auth_type_starts_with = kwargs.get("auth_type_starts_with", None)
        self.cluster = kwargs.get("cluster", None)
        self.created_at = kwargs.get("created_at", None)
        self.created_at_gt = kwargs.get("created_at_gt", None)
        self.created_at_gte = kwargs.get("created_at_gte", None)
        self.created_at_in = kwargs.get("created_at_in", None)
        self.created_at_lt = kwargs.get("created_at_lt", None)
        self.created_at_lte = kwargs.get("created_at_lte", None)
        self.created_at_not = kwargs.get("created_at_not", None)
        self.created_at_not_in = kwargs.get("created_at_not_in", None)
        self.finished_at = kwargs.get("finished_at", None)
        self.finished_at_gt = kwargs.get("finished_at_gt", None)
        self.finished_at_gte = kwargs.get("finished_at_gte", None)
        self.finished_at_in = kwargs.get("finished_at_in", None)
        self.finished_at_lt = kwargs.get("finished_at_lt", None)
        self.finished_at_lte = kwargs.get("finished_at_lte", None)
        self.finished_at_not = kwargs.get("finished_at_not", None)
        self.finished_at_not_in = kwargs.get("finished_at_not_in", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.ip_address = kwargs.get("ip_address", None)
        self.ip_address_contains = kwargs.get("ip_address_contains", None)
        self.ip_address_ends_with = kwargs.get("ip_address_ends_with", None)
        self.ip_address_gt = kwargs.get("ip_address_gt", None)
        self.ip_address_gte = kwargs.get("ip_address_gte", None)
        self.ip_address_in = kwargs.get("ip_address_in", None)
        self.ip_address_lt = kwargs.get("ip_address_lt", None)
        self.ip_address_lte = kwargs.get("ip_address_lte", None)
        self.ip_address_not = kwargs.get("ip_address_not", None)
        self.ip_address_not_contains = kwargs.get("ip_address_not_contains", None)
        self.ip_address_not_ends_with = kwargs.get("ip_address_not_ends_with", None)
        self.ip_address_not_in = kwargs.get("ip_address_not_in", None)
        self.ip_address_not_starts_with = kwargs.get("ip_address_not_starts_with", None)
        self.ip_address_starts_with = kwargs.get("ip_address_starts_with", None)
        self.message = kwargs.get("message", None)
        self.message_contains = kwargs.get("message_contains", None)
        self.message_ends_with = kwargs.get("message_ends_with", None)
        self.message_gt = kwargs.get("message_gt", None)
        self.message_gte = kwargs.get("message_gte", None)
        self.message_in = kwargs.get("message_in", None)
        self.message_lt = kwargs.get("message_lt", None)
        self.message_lte = kwargs.get("message_lte", None)
        self.message_not = kwargs.get("message_not", None)
        self.message_not_contains = kwargs.get("message_not_contains", None)
        self.message_not_ends_with = kwargs.get("message_not_ends_with", None)
        self.message_not_in = kwargs.get("message_not_in", None)
        self.message_not_starts_with = kwargs.get("message_not_starts_with", None)
        self.message_starts_with = kwargs.get("message_starts_with", None)
        self.resource_id = kwargs.get("resource_id", None)
        self.resource_id_contains = kwargs.get("resource_id_contains", None)
        self.resource_id_ends_with = kwargs.get("resource_id_ends_with", None)
        self.resource_id_gt = kwargs.get("resource_id_gt", None)
        self.resource_id_gte = kwargs.get("resource_id_gte", None)
        self.resource_id_in = kwargs.get("resource_id_in", None)
        self.resource_id_lt = kwargs.get("resource_id_lt", None)
        self.resource_id_lte = kwargs.get("resource_id_lte", None)
        self.resource_id_not = kwargs.get("resource_id_not", None)
        self.resource_id_not_contains = kwargs.get("resource_id_not_contains", None)
        self.resource_id_not_ends_with = kwargs.get("resource_id_not_ends_with", None)
        self.resource_id_not_in = kwargs.get("resource_id_not_in", None)
        self.resource_id_not_starts_with = kwargs.get("resource_id_not_starts_with", None)
        self.resource_id_starts_with = kwargs.get("resource_id_starts_with", None)
        self.resource_type = kwargs.get("resource_type", None)
        self.resource_type_contains = kwargs.get("resource_type_contains", None)
        self.resource_type_ends_with = kwargs.get("resource_type_ends_with", None)
        self.resource_type_gt = kwargs.get("resource_type_gt", None)
        self.resource_type_gte = kwargs.get("resource_type_gte", None)
        self.resource_type_in = kwargs.get("resource_type_in", None)
        self.resource_type_lt = kwargs.get("resource_type_lt", None)
        self.resource_type_lte = kwargs.get("resource_type_lte", None)
        self.resource_type_not = kwargs.get("resource_type_not", None)
        self.resource_type_not_contains = kwargs.get("resource_type_not_contains", None)
        self.resource_type_not_ends_with = kwargs.get("resource_type_not_ends_with", None)
        self.resource_type_not_in = kwargs.get("resource_type_not_in", None)
        self.resource_type_not_starts_with = kwargs.get("resource_type_not_starts_with", None)
        self.resource_type_starts_with = kwargs.get("resource_type_starts_with", None)
        self.started_at = kwargs.get("started_at", None)
        self.started_at_gt = kwargs.get("started_at_gt", None)
        self.started_at_gte = kwargs.get("started_at_gte", None)
        self.started_at_in = kwargs.get("started_at_in", None)
        self.started_at_lt = kwargs.get("started_at_lt", None)
        self.started_at_lte = kwargs.get("started_at_lte", None)
        self.started_at_not = kwargs.get("started_at_not", None)
        self.started_at_not_in = kwargs.get("started_at_not_in", None)
        self.status = kwargs.get("status", None)
        self.status_in = kwargs.get("status_in", None)
        self.status_not = kwargs.get("status_not", None)
        self.status_not_in = kwargs.get("status_not_in", None)
        self.user = kwargs.get("user", None)
        self.username = kwargs.get("username", None)
        self.username_contains = kwargs.get("username_contains", None)
        self.username_ends_with = kwargs.get("username_ends_with", None)
        self.username_gt = kwargs.get("username_gt", None)
        self.username_gte = kwargs.get("username_gte", None)
        self.username_in = kwargs.get("username_in", None)
        self.username_lt = kwargs.get("username_lt", None)
        self.username_lte = kwargs.get("username_lte", None)
        self.username_not = kwargs.get("username_not", None)
        self.username_not_contains = kwargs.get("username_not_contains", None)
        self.username_not_ends_with = kwargs.get("username_not_ends_with", None)
        self.username_not_in = kwargs.get("username_not_in", None)
        self.username_not_starts_with = kwargs.get("username_not_starts_with", None)
        self.username_starts_with = kwargs.get("username_starts_with", None)

    @property
    def _and(self):
        """Gets the _and of this UserAuditLogWhereInput.  # noqa: E501


        :return: The _and of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[UserAuditLogWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this UserAuditLogWhereInput.


        :param _and: The _and of this UserAuditLogWhereInput.  # noqa: E501
        :type _and: list[UserAuditLogWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The _not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[UserAuditLogWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this UserAuditLogWhereInput.


        :param _not: The _not of this UserAuditLogWhereInput.  # noqa: E501
        :type _not: list[UserAuditLogWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this UserAuditLogWhereInput.  # noqa: E501


        :return: The _or of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[UserAuditLogWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this UserAuditLogWhereInput.


        :param _or: The _or of this UserAuditLogWhereInput.  # noqa: E501
        :type _or: list[UserAuditLogWhereInput]
        """

        self.__or = _or

    @property
    def action(self):
        """Gets the action of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this UserAuditLogWhereInput.


        :param action: The action of this UserAuditLogWhereInput.  # noqa: E501
        :type action: str
        """

        self._action = action

    @property
    def action_contains(self):
        """Gets the action_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_contains

    @action_contains.setter
    def action_contains(self, action_contains):
        """Sets the action_contains of this UserAuditLogWhereInput.


        :param action_contains: The action_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type action_contains: str
        """

        self._action_contains = action_contains

    @property
    def action_ends_with(self):
        """Gets the action_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_ends_with

    @action_ends_with.setter
    def action_ends_with(self, action_ends_with):
        """Sets the action_ends_with of this UserAuditLogWhereInput.


        :param action_ends_with: The action_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type action_ends_with: str
        """

        self._action_ends_with = action_ends_with

    @property
    def action_gt(self):
        """Gets the action_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_gt

    @action_gt.setter
    def action_gt(self, action_gt):
        """Sets the action_gt of this UserAuditLogWhereInput.


        :param action_gt: The action_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type action_gt: str
        """

        self._action_gt = action_gt

    @property
    def action_gte(self):
        """Gets the action_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_gte

    @action_gte.setter
    def action_gte(self, action_gte):
        """Sets the action_gte of this UserAuditLogWhereInput.


        :param action_gte: The action_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type action_gte: str
        """

        self._action_gte = action_gte

    @property
    def action_in(self):
        """Gets the action_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._action_in

    @action_in.setter
    def action_in(self, action_in):
        """Sets the action_in of this UserAuditLogWhereInput.


        :param action_in: The action_in of this UserAuditLogWhereInput.  # noqa: E501
        :type action_in: list[str]
        """

        self._action_in = action_in

    @property
    def action_lt(self):
        """Gets the action_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_lt

    @action_lt.setter
    def action_lt(self, action_lt):
        """Sets the action_lt of this UserAuditLogWhereInput.


        :param action_lt: The action_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type action_lt: str
        """

        self._action_lt = action_lt

    @property
    def action_lte(self):
        """Gets the action_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_lte

    @action_lte.setter
    def action_lte(self, action_lte):
        """Sets the action_lte of this UserAuditLogWhereInput.


        :param action_lte: The action_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type action_lte: str
        """

        self._action_lte = action_lte

    @property
    def action_not(self):
        """Gets the action_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_not

    @action_not.setter
    def action_not(self, action_not):
        """Sets the action_not of this UserAuditLogWhereInput.


        :param action_not: The action_not of this UserAuditLogWhereInput.  # noqa: E501
        :type action_not: str
        """

        self._action_not = action_not

    @property
    def action_not_contains(self):
        """Gets the action_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_not_contains

    @action_not_contains.setter
    def action_not_contains(self, action_not_contains):
        """Sets the action_not_contains of this UserAuditLogWhereInput.


        :param action_not_contains: The action_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type action_not_contains: str
        """

        self._action_not_contains = action_not_contains

    @property
    def action_not_ends_with(self):
        """Gets the action_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_not_ends_with

    @action_not_ends_with.setter
    def action_not_ends_with(self, action_not_ends_with):
        """Sets the action_not_ends_with of this UserAuditLogWhereInput.


        :param action_not_ends_with: The action_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type action_not_ends_with: str
        """

        self._action_not_ends_with = action_not_ends_with

    @property
    def action_not_in(self):
        """Gets the action_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._action_not_in

    @action_not_in.setter
    def action_not_in(self, action_not_in):
        """Sets the action_not_in of this UserAuditLogWhereInput.


        :param action_not_in: The action_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type action_not_in: list[str]
        """

        self._action_not_in = action_not_in

    @property
    def action_not_starts_with(self):
        """Gets the action_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_not_starts_with

    @action_not_starts_with.setter
    def action_not_starts_with(self, action_not_starts_with):
        """Sets the action_not_starts_with of this UserAuditLogWhereInput.


        :param action_not_starts_with: The action_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type action_not_starts_with: str
        """

        self._action_not_starts_with = action_not_starts_with

    @property
    def action_starts_with(self):
        """Gets the action_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The action_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._action_starts_with

    @action_starts_with.setter
    def action_starts_with(self, action_starts_with):
        """Sets the action_starts_with of this UserAuditLogWhereInput.


        :param action_starts_with: The action_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type action_starts_with: str
        """

        self._action_starts_with = action_starts_with

    @property
    def auth_type(self):
        """Gets the auth_type of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type):
        """Sets the auth_type of this UserAuditLogWhereInput.


        :param auth_type: The auth_type of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type: str
        """

        self._auth_type = auth_type

    @property
    def auth_type_contains(self):
        """Gets the auth_type_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_contains

    @auth_type_contains.setter
    def auth_type_contains(self, auth_type_contains):
        """Sets the auth_type_contains of this UserAuditLogWhereInput.


        :param auth_type_contains: The auth_type_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_contains: str
        """

        self._auth_type_contains = auth_type_contains

    @property
    def auth_type_ends_with(self):
        """Gets the auth_type_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_ends_with

    @auth_type_ends_with.setter
    def auth_type_ends_with(self, auth_type_ends_with):
        """Sets the auth_type_ends_with of this UserAuditLogWhereInput.


        :param auth_type_ends_with: The auth_type_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_ends_with: str
        """

        self._auth_type_ends_with = auth_type_ends_with

    @property
    def auth_type_gt(self):
        """Gets the auth_type_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_gt

    @auth_type_gt.setter
    def auth_type_gt(self, auth_type_gt):
        """Sets the auth_type_gt of this UserAuditLogWhereInput.


        :param auth_type_gt: The auth_type_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_gt: str
        """

        self._auth_type_gt = auth_type_gt

    @property
    def auth_type_gte(self):
        """Gets the auth_type_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_gte

    @auth_type_gte.setter
    def auth_type_gte(self, auth_type_gte):
        """Sets the auth_type_gte of this UserAuditLogWhereInput.


        :param auth_type_gte: The auth_type_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_gte: str
        """

        self._auth_type_gte = auth_type_gte

    @property
    def auth_type_in(self):
        """Gets the auth_type_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._auth_type_in

    @auth_type_in.setter
    def auth_type_in(self, auth_type_in):
        """Sets the auth_type_in of this UserAuditLogWhereInput.


        :param auth_type_in: The auth_type_in of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_in: list[str]
        """

        self._auth_type_in = auth_type_in

    @property
    def auth_type_lt(self):
        """Gets the auth_type_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_lt

    @auth_type_lt.setter
    def auth_type_lt(self, auth_type_lt):
        """Sets the auth_type_lt of this UserAuditLogWhereInput.


        :param auth_type_lt: The auth_type_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_lt: str
        """

        self._auth_type_lt = auth_type_lt

    @property
    def auth_type_lte(self):
        """Gets the auth_type_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_lte

    @auth_type_lte.setter
    def auth_type_lte(self, auth_type_lte):
        """Sets the auth_type_lte of this UserAuditLogWhereInput.


        :param auth_type_lte: The auth_type_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_lte: str
        """

        self._auth_type_lte = auth_type_lte

    @property
    def auth_type_not(self):
        """Gets the auth_type_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_not

    @auth_type_not.setter
    def auth_type_not(self, auth_type_not):
        """Sets the auth_type_not of this UserAuditLogWhereInput.


        :param auth_type_not: The auth_type_not of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_not: str
        """

        self._auth_type_not = auth_type_not

    @property
    def auth_type_not_contains(self):
        """Gets the auth_type_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_not_contains

    @auth_type_not_contains.setter
    def auth_type_not_contains(self, auth_type_not_contains):
        """Sets the auth_type_not_contains of this UserAuditLogWhereInput.


        :param auth_type_not_contains: The auth_type_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_not_contains: str
        """

        self._auth_type_not_contains = auth_type_not_contains

    @property
    def auth_type_not_ends_with(self):
        """Gets the auth_type_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_not_ends_with

    @auth_type_not_ends_with.setter
    def auth_type_not_ends_with(self, auth_type_not_ends_with):
        """Sets the auth_type_not_ends_with of this UserAuditLogWhereInput.


        :param auth_type_not_ends_with: The auth_type_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_not_ends_with: str
        """

        self._auth_type_not_ends_with = auth_type_not_ends_with

    @property
    def auth_type_not_in(self):
        """Gets the auth_type_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._auth_type_not_in

    @auth_type_not_in.setter
    def auth_type_not_in(self, auth_type_not_in):
        """Sets the auth_type_not_in of this UserAuditLogWhereInput.


        :param auth_type_not_in: The auth_type_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_not_in: list[str]
        """

        self._auth_type_not_in = auth_type_not_in

    @property
    def auth_type_not_starts_with(self):
        """Gets the auth_type_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_not_starts_with

    @auth_type_not_starts_with.setter
    def auth_type_not_starts_with(self, auth_type_not_starts_with):
        """Sets the auth_type_not_starts_with of this UserAuditLogWhereInput.


        :param auth_type_not_starts_with: The auth_type_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_not_starts_with: str
        """

        self._auth_type_not_starts_with = auth_type_not_starts_with

    @property
    def auth_type_starts_with(self):
        """Gets the auth_type_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The auth_type_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._auth_type_starts_with

    @auth_type_starts_with.setter
    def auth_type_starts_with(self, auth_type_starts_with):
        """Sets the auth_type_starts_with of this UserAuditLogWhereInput.


        :param auth_type_starts_with: The auth_type_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type auth_type_starts_with: str
        """

        self._auth_type_starts_with = auth_type_starts_with

    @property
    def cluster(self):
        """Gets the cluster of this UserAuditLogWhereInput.  # noqa: E501


        :return: The cluster of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this UserAuditLogWhereInput.


        :param cluster: The cluster of this UserAuditLogWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def created_at(self):
        """Gets the created_at of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this UserAuditLogWhereInput.


        :param created_at: The created_at of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def created_at_gt(self):
        """Gets the created_at_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gt

    @created_at_gt.setter
    def created_at_gt(self, created_at_gt):
        """Sets the created_at_gt of this UserAuditLogWhereInput.


        :param created_at_gt: The created_at_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at_gt: str
        """

        self._created_at_gt = created_at_gt

    @property
    def created_at_gte(self):
        """Gets the created_at_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gte

    @created_at_gte.setter
    def created_at_gte(self, created_at_gte):
        """Sets the created_at_gte of this UserAuditLogWhereInput.


        :param created_at_gte: The created_at_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at_gte: str
        """

        self._created_at_gte = created_at_gte

    @property
    def created_at_in(self):
        """Gets the created_at_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_in

    @created_at_in.setter
    def created_at_in(self, created_at_in):
        """Sets the created_at_in of this UserAuditLogWhereInput.


        :param created_at_in: The created_at_in of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at_in: list[str]
        """

        self._created_at_in = created_at_in

    @property
    def created_at_lt(self):
        """Gets the created_at_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lt

    @created_at_lt.setter
    def created_at_lt(self, created_at_lt):
        """Sets the created_at_lt of this UserAuditLogWhereInput.


        :param created_at_lt: The created_at_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at_lt: str
        """

        self._created_at_lt = created_at_lt

    @property
    def created_at_lte(self):
        """Gets the created_at_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lte

    @created_at_lte.setter
    def created_at_lte(self, created_at_lte):
        """Sets the created_at_lte of this UserAuditLogWhereInput.


        :param created_at_lte: The created_at_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at_lte: str
        """

        self._created_at_lte = created_at_lte

    @property
    def created_at_not(self):
        """Gets the created_at_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_not

    @created_at_not.setter
    def created_at_not(self, created_at_not):
        """Sets the created_at_not of this UserAuditLogWhereInput.


        :param created_at_not: The created_at_not of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at_not: str
        """

        self._created_at_not = created_at_not

    @property
    def created_at_not_in(self):
        """Gets the created_at_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The created_at_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_not_in

    @created_at_not_in.setter
    def created_at_not_in(self, created_at_not_in):
        """Sets the created_at_not_in of this UserAuditLogWhereInput.


        :param created_at_not_in: The created_at_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type created_at_not_in: list[str]
        """

        self._created_at_not_in = created_at_not_in

    @property
    def finished_at(self):
        """Gets the finished_at of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at

    @finished_at.setter
    def finished_at(self, finished_at):
        """Sets the finished_at of this UserAuditLogWhereInput.


        :param finished_at: The finished_at of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at: str
        """

        self._finished_at = finished_at

    @property
    def finished_at_gt(self):
        """Gets the finished_at_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_gt

    @finished_at_gt.setter
    def finished_at_gt(self, finished_at_gt):
        """Sets the finished_at_gt of this UserAuditLogWhereInput.


        :param finished_at_gt: The finished_at_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at_gt: str
        """

        self._finished_at_gt = finished_at_gt

    @property
    def finished_at_gte(self):
        """Gets the finished_at_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_gte

    @finished_at_gte.setter
    def finished_at_gte(self, finished_at_gte):
        """Sets the finished_at_gte of this UserAuditLogWhereInput.


        :param finished_at_gte: The finished_at_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at_gte: str
        """

        self._finished_at_gte = finished_at_gte

    @property
    def finished_at_in(self):
        """Gets the finished_at_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._finished_at_in

    @finished_at_in.setter
    def finished_at_in(self, finished_at_in):
        """Sets the finished_at_in of this UserAuditLogWhereInput.


        :param finished_at_in: The finished_at_in of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at_in: list[str]
        """

        self._finished_at_in = finished_at_in

    @property
    def finished_at_lt(self):
        """Gets the finished_at_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_lt

    @finished_at_lt.setter
    def finished_at_lt(self, finished_at_lt):
        """Sets the finished_at_lt of this UserAuditLogWhereInput.


        :param finished_at_lt: The finished_at_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at_lt: str
        """

        self._finished_at_lt = finished_at_lt

    @property
    def finished_at_lte(self):
        """Gets the finished_at_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_lte

    @finished_at_lte.setter
    def finished_at_lte(self, finished_at_lte):
        """Sets the finished_at_lte of this UserAuditLogWhereInput.


        :param finished_at_lte: The finished_at_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at_lte: str
        """

        self._finished_at_lte = finished_at_lte

    @property
    def finished_at_not(self):
        """Gets the finished_at_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._finished_at_not

    @finished_at_not.setter
    def finished_at_not(self, finished_at_not):
        """Sets the finished_at_not of this UserAuditLogWhereInput.


        :param finished_at_not: The finished_at_not of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at_not: str
        """

        self._finished_at_not = finished_at_not

    @property
    def finished_at_not_in(self):
        """Gets the finished_at_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The finished_at_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._finished_at_not_in

    @finished_at_not_in.setter
    def finished_at_not_in(self, finished_at_not_in):
        """Sets the finished_at_not_in of this UserAuditLogWhereInput.


        :param finished_at_not_in: The finished_at_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type finished_at_not_in: list[str]
        """

        self._finished_at_not_in = finished_at_not_in

    @property
    def id(self):
        """Gets the id of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserAuditLogWhereInput.


        :param id: The id of this UserAuditLogWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this UserAuditLogWhereInput.


        :param id_contains: The id_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this UserAuditLogWhereInput.


        :param id_ends_with: The id_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this UserAuditLogWhereInput.


        :param id_gt: The id_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this UserAuditLogWhereInput.


        :param id_gte: The id_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this UserAuditLogWhereInput.


        :param id_in: The id_in of this UserAuditLogWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this UserAuditLogWhereInput.


        :param id_lt: The id_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this UserAuditLogWhereInput.


        :param id_lte: The id_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this UserAuditLogWhereInput.


        :param id_not: The id_not of this UserAuditLogWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this UserAuditLogWhereInput.


        :param id_not_contains: The id_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this UserAuditLogWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this UserAuditLogWhereInput.


        :param id_not_in: The id_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this UserAuditLogWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The id_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this UserAuditLogWhereInput.


        :param id_starts_with: The id_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def ip_address(self):
        """Gets the ip_address of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this UserAuditLogWhereInput.


        :param ip_address: The ip_address of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def ip_address_contains(self):
        """Gets the ip_address_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_contains

    @ip_address_contains.setter
    def ip_address_contains(self, ip_address_contains):
        """Sets the ip_address_contains of this UserAuditLogWhereInput.


        :param ip_address_contains: The ip_address_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_contains: str
        """

        self._ip_address_contains = ip_address_contains

    @property
    def ip_address_ends_with(self):
        """Gets the ip_address_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_ends_with

    @ip_address_ends_with.setter
    def ip_address_ends_with(self, ip_address_ends_with):
        """Sets the ip_address_ends_with of this UserAuditLogWhereInput.


        :param ip_address_ends_with: The ip_address_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_ends_with: str
        """

        self._ip_address_ends_with = ip_address_ends_with

    @property
    def ip_address_gt(self):
        """Gets the ip_address_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_gt

    @ip_address_gt.setter
    def ip_address_gt(self, ip_address_gt):
        """Sets the ip_address_gt of this UserAuditLogWhereInput.


        :param ip_address_gt: The ip_address_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_gt: str
        """

        self._ip_address_gt = ip_address_gt

    @property
    def ip_address_gte(self):
        """Gets the ip_address_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_gte

    @ip_address_gte.setter
    def ip_address_gte(self, ip_address_gte):
        """Sets the ip_address_gte of this UserAuditLogWhereInput.


        :param ip_address_gte: The ip_address_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_gte: str
        """

        self._ip_address_gte = ip_address_gte

    @property
    def ip_address_in(self):
        """Gets the ip_address_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_address_in

    @ip_address_in.setter
    def ip_address_in(self, ip_address_in):
        """Sets the ip_address_in of this UserAuditLogWhereInput.


        :param ip_address_in: The ip_address_in of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_in: list[str]
        """

        self._ip_address_in = ip_address_in

    @property
    def ip_address_lt(self):
        """Gets the ip_address_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_lt

    @ip_address_lt.setter
    def ip_address_lt(self, ip_address_lt):
        """Sets the ip_address_lt of this UserAuditLogWhereInput.


        :param ip_address_lt: The ip_address_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_lt: str
        """

        self._ip_address_lt = ip_address_lt

    @property
    def ip_address_lte(self):
        """Gets the ip_address_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_lte

    @ip_address_lte.setter
    def ip_address_lte(self, ip_address_lte):
        """Sets the ip_address_lte of this UserAuditLogWhereInput.


        :param ip_address_lte: The ip_address_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_lte: str
        """

        self._ip_address_lte = ip_address_lte

    @property
    def ip_address_not(self):
        """Gets the ip_address_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not

    @ip_address_not.setter
    def ip_address_not(self, ip_address_not):
        """Sets the ip_address_not of this UserAuditLogWhereInput.


        :param ip_address_not: The ip_address_not of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_not: str
        """

        self._ip_address_not = ip_address_not

    @property
    def ip_address_not_contains(self):
        """Gets the ip_address_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_contains

    @ip_address_not_contains.setter
    def ip_address_not_contains(self, ip_address_not_contains):
        """Sets the ip_address_not_contains of this UserAuditLogWhereInput.


        :param ip_address_not_contains: The ip_address_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_not_contains: str
        """

        self._ip_address_not_contains = ip_address_not_contains

    @property
    def ip_address_not_ends_with(self):
        """Gets the ip_address_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_ends_with

    @ip_address_not_ends_with.setter
    def ip_address_not_ends_with(self, ip_address_not_ends_with):
        """Sets the ip_address_not_ends_with of this UserAuditLogWhereInput.


        :param ip_address_not_ends_with: The ip_address_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_not_ends_with: str
        """

        self._ip_address_not_ends_with = ip_address_not_ends_with

    @property
    def ip_address_not_in(self):
        """Gets the ip_address_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_address_not_in

    @ip_address_not_in.setter
    def ip_address_not_in(self, ip_address_not_in):
        """Sets the ip_address_not_in of this UserAuditLogWhereInput.


        :param ip_address_not_in: The ip_address_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_not_in: list[str]
        """

        self._ip_address_not_in = ip_address_not_in

    @property
    def ip_address_not_starts_with(self):
        """Gets the ip_address_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_not_starts_with

    @ip_address_not_starts_with.setter
    def ip_address_not_starts_with(self, ip_address_not_starts_with):
        """Sets the ip_address_not_starts_with of this UserAuditLogWhereInput.


        :param ip_address_not_starts_with: The ip_address_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_not_starts_with: str
        """

        self._ip_address_not_starts_with = ip_address_not_starts_with

    @property
    def ip_address_starts_with(self):
        """Gets the ip_address_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The ip_address_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_starts_with

    @ip_address_starts_with.setter
    def ip_address_starts_with(self, ip_address_starts_with):
        """Sets the ip_address_starts_with of this UserAuditLogWhereInput.


        :param ip_address_starts_with: The ip_address_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type ip_address_starts_with: str
        """

        self._ip_address_starts_with = ip_address_starts_with

    @property
    def message(self):
        """Gets the message of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this UserAuditLogWhereInput.


        :param message: The message of this UserAuditLogWhereInput.  # noqa: E501
        :type message: str
        """

        self._message = message

    @property
    def message_contains(self):
        """Gets the message_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_contains

    @message_contains.setter
    def message_contains(self, message_contains):
        """Sets the message_contains of this UserAuditLogWhereInput.


        :param message_contains: The message_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type message_contains: str
        """

        self._message_contains = message_contains

    @property
    def message_ends_with(self):
        """Gets the message_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_ends_with

    @message_ends_with.setter
    def message_ends_with(self, message_ends_with):
        """Sets the message_ends_with of this UserAuditLogWhereInput.


        :param message_ends_with: The message_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type message_ends_with: str
        """

        self._message_ends_with = message_ends_with

    @property
    def message_gt(self):
        """Gets the message_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_gt

    @message_gt.setter
    def message_gt(self, message_gt):
        """Sets the message_gt of this UserAuditLogWhereInput.


        :param message_gt: The message_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type message_gt: str
        """

        self._message_gt = message_gt

    @property
    def message_gte(self):
        """Gets the message_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_gte

    @message_gte.setter
    def message_gte(self, message_gte):
        """Sets the message_gte of this UserAuditLogWhereInput.


        :param message_gte: The message_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type message_gte: str
        """

        self._message_gte = message_gte

    @property
    def message_in(self):
        """Gets the message_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._message_in

    @message_in.setter
    def message_in(self, message_in):
        """Sets the message_in of this UserAuditLogWhereInput.


        :param message_in: The message_in of this UserAuditLogWhereInput.  # noqa: E501
        :type message_in: list[str]
        """

        self._message_in = message_in

    @property
    def message_lt(self):
        """Gets the message_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_lt

    @message_lt.setter
    def message_lt(self, message_lt):
        """Sets the message_lt of this UserAuditLogWhereInput.


        :param message_lt: The message_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type message_lt: str
        """

        self._message_lt = message_lt

    @property
    def message_lte(self):
        """Gets the message_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_lte

    @message_lte.setter
    def message_lte(self, message_lte):
        """Sets the message_lte of this UserAuditLogWhereInput.


        :param message_lte: The message_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type message_lte: str
        """

        self._message_lte = message_lte

    @property
    def message_not(self):
        """Gets the message_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not

    @message_not.setter
    def message_not(self, message_not):
        """Sets the message_not of this UserAuditLogWhereInput.


        :param message_not: The message_not of this UserAuditLogWhereInput.  # noqa: E501
        :type message_not: str
        """

        self._message_not = message_not

    @property
    def message_not_contains(self):
        """Gets the message_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not_contains

    @message_not_contains.setter
    def message_not_contains(self, message_not_contains):
        """Sets the message_not_contains of this UserAuditLogWhereInput.


        :param message_not_contains: The message_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type message_not_contains: str
        """

        self._message_not_contains = message_not_contains

    @property
    def message_not_ends_with(self):
        """Gets the message_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not_ends_with

    @message_not_ends_with.setter
    def message_not_ends_with(self, message_not_ends_with):
        """Sets the message_not_ends_with of this UserAuditLogWhereInput.


        :param message_not_ends_with: The message_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type message_not_ends_with: str
        """

        self._message_not_ends_with = message_not_ends_with

    @property
    def message_not_in(self):
        """Gets the message_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._message_not_in

    @message_not_in.setter
    def message_not_in(self, message_not_in):
        """Sets the message_not_in of this UserAuditLogWhereInput.


        :param message_not_in: The message_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type message_not_in: list[str]
        """

        self._message_not_in = message_not_in

    @property
    def message_not_starts_with(self):
        """Gets the message_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not_starts_with

    @message_not_starts_with.setter
    def message_not_starts_with(self, message_not_starts_with):
        """Sets the message_not_starts_with of this UserAuditLogWhereInput.


        :param message_not_starts_with: The message_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type message_not_starts_with: str
        """

        self._message_not_starts_with = message_not_starts_with

    @property
    def message_starts_with(self):
        """Gets the message_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The message_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_starts_with

    @message_starts_with.setter
    def message_starts_with(self, message_starts_with):
        """Sets the message_starts_with of this UserAuditLogWhereInput.


        :param message_starts_with: The message_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type message_starts_with: str
        """

        self._message_starts_with = message_starts_with

    @property
    def resource_id(self):
        """Gets the resource_id of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this UserAuditLogWhereInput.


        :param resource_id: The resource_id of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_id_contains(self):
        """Gets the resource_id_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_contains

    @resource_id_contains.setter
    def resource_id_contains(self, resource_id_contains):
        """Sets the resource_id_contains of this UserAuditLogWhereInput.


        :param resource_id_contains: The resource_id_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_contains: str
        """

        self._resource_id_contains = resource_id_contains

    @property
    def resource_id_ends_with(self):
        """Gets the resource_id_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_ends_with

    @resource_id_ends_with.setter
    def resource_id_ends_with(self, resource_id_ends_with):
        """Sets the resource_id_ends_with of this UserAuditLogWhereInput.


        :param resource_id_ends_with: The resource_id_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_ends_with: str
        """

        self._resource_id_ends_with = resource_id_ends_with

    @property
    def resource_id_gt(self):
        """Gets the resource_id_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_gt

    @resource_id_gt.setter
    def resource_id_gt(self, resource_id_gt):
        """Sets the resource_id_gt of this UserAuditLogWhereInput.


        :param resource_id_gt: The resource_id_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_gt: str
        """

        self._resource_id_gt = resource_id_gt

    @property
    def resource_id_gte(self):
        """Gets the resource_id_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_gte

    @resource_id_gte.setter
    def resource_id_gte(self, resource_id_gte):
        """Sets the resource_id_gte of this UserAuditLogWhereInput.


        :param resource_id_gte: The resource_id_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_gte: str
        """

        self._resource_id_gte = resource_id_gte

    @property
    def resource_id_in(self):
        """Gets the resource_id_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_id_in

    @resource_id_in.setter
    def resource_id_in(self, resource_id_in):
        """Sets the resource_id_in of this UserAuditLogWhereInput.


        :param resource_id_in: The resource_id_in of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_in: list[str]
        """

        self._resource_id_in = resource_id_in

    @property
    def resource_id_lt(self):
        """Gets the resource_id_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_lt

    @resource_id_lt.setter
    def resource_id_lt(self, resource_id_lt):
        """Sets the resource_id_lt of this UserAuditLogWhereInput.


        :param resource_id_lt: The resource_id_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_lt: str
        """

        self._resource_id_lt = resource_id_lt

    @property
    def resource_id_lte(self):
        """Gets the resource_id_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_lte

    @resource_id_lte.setter
    def resource_id_lte(self, resource_id_lte):
        """Sets the resource_id_lte of this UserAuditLogWhereInput.


        :param resource_id_lte: The resource_id_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_lte: str
        """

        self._resource_id_lte = resource_id_lte

    @property
    def resource_id_not(self):
        """Gets the resource_id_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not

    @resource_id_not.setter
    def resource_id_not(self, resource_id_not):
        """Sets the resource_id_not of this UserAuditLogWhereInput.


        :param resource_id_not: The resource_id_not of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_not: str
        """

        self._resource_id_not = resource_id_not

    @property
    def resource_id_not_contains(self):
        """Gets the resource_id_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not_contains

    @resource_id_not_contains.setter
    def resource_id_not_contains(self, resource_id_not_contains):
        """Sets the resource_id_not_contains of this UserAuditLogWhereInput.


        :param resource_id_not_contains: The resource_id_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_not_contains: str
        """

        self._resource_id_not_contains = resource_id_not_contains

    @property
    def resource_id_not_ends_with(self):
        """Gets the resource_id_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not_ends_with

    @resource_id_not_ends_with.setter
    def resource_id_not_ends_with(self, resource_id_not_ends_with):
        """Sets the resource_id_not_ends_with of this UserAuditLogWhereInput.


        :param resource_id_not_ends_with: The resource_id_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_not_ends_with: str
        """

        self._resource_id_not_ends_with = resource_id_not_ends_with

    @property
    def resource_id_not_in(self):
        """Gets the resource_id_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_id_not_in

    @resource_id_not_in.setter
    def resource_id_not_in(self, resource_id_not_in):
        """Sets the resource_id_not_in of this UserAuditLogWhereInput.


        :param resource_id_not_in: The resource_id_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_not_in: list[str]
        """

        self._resource_id_not_in = resource_id_not_in

    @property
    def resource_id_not_starts_with(self):
        """Gets the resource_id_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_not_starts_with

    @resource_id_not_starts_with.setter
    def resource_id_not_starts_with(self, resource_id_not_starts_with):
        """Sets the resource_id_not_starts_with of this UserAuditLogWhereInput.


        :param resource_id_not_starts_with: The resource_id_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_not_starts_with: str
        """

        self._resource_id_not_starts_with = resource_id_not_starts_with

    @property
    def resource_id_starts_with(self):
        """Gets the resource_id_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_id_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id_starts_with

    @resource_id_starts_with.setter
    def resource_id_starts_with(self, resource_id_starts_with):
        """Sets the resource_id_starts_with of this UserAuditLogWhereInput.


        :param resource_id_starts_with: The resource_id_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_id_starts_with: str
        """

        self._resource_id_starts_with = resource_id_starts_with

    @property
    def resource_type(self):
        """Gets the resource_type of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this UserAuditLogWhereInput.


        :param resource_type: The resource_type of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_type_contains(self):
        """Gets the resource_type_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_contains

    @resource_type_contains.setter
    def resource_type_contains(self, resource_type_contains):
        """Sets the resource_type_contains of this UserAuditLogWhereInput.


        :param resource_type_contains: The resource_type_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_contains: str
        """

        self._resource_type_contains = resource_type_contains

    @property
    def resource_type_ends_with(self):
        """Gets the resource_type_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_ends_with

    @resource_type_ends_with.setter
    def resource_type_ends_with(self, resource_type_ends_with):
        """Sets the resource_type_ends_with of this UserAuditLogWhereInput.


        :param resource_type_ends_with: The resource_type_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_ends_with: str
        """

        self._resource_type_ends_with = resource_type_ends_with

    @property
    def resource_type_gt(self):
        """Gets the resource_type_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_gt

    @resource_type_gt.setter
    def resource_type_gt(self, resource_type_gt):
        """Sets the resource_type_gt of this UserAuditLogWhereInput.


        :param resource_type_gt: The resource_type_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_gt: str
        """

        self._resource_type_gt = resource_type_gt

    @property
    def resource_type_gte(self):
        """Gets the resource_type_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_gte

    @resource_type_gte.setter
    def resource_type_gte(self, resource_type_gte):
        """Sets the resource_type_gte of this UserAuditLogWhereInput.


        :param resource_type_gte: The resource_type_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_gte: str
        """

        self._resource_type_gte = resource_type_gte

    @property
    def resource_type_in(self):
        """Gets the resource_type_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_type_in

    @resource_type_in.setter
    def resource_type_in(self, resource_type_in):
        """Sets the resource_type_in of this UserAuditLogWhereInput.


        :param resource_type_in: The resource_type_in of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_in: list[str]
        """

        self._resource_type_in = resource_type_in

    @property
    def resource_type_lt(self):
        """Gets the resource_type_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_lt

    @resource_type_lt.setter
    def resource_type_lt(self, resource_type_lt):
        """Sets the resource_type_lt of this UserAuditLogWhereInput.


        :param resource_type_lt: The resource_type_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_lt: str
        """

        self._resource_type_lt = resource_type_lt

    @property
    def resource_type_lte(self):
        """Gets the resource_type_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_lte

    @resource_type_lte.setter
    def resource_type_lte(self, resource_type_lte):
        """Sets the resource_type_lte of this UserAuditLogWhereInput.


        :param resource_type_lte: The resource_type_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_lte: str
        """

        self._resource_type_lte = resource_type_lte

    @property
    def resource_type_not(self):
        """Gets the resource_type_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not

    @resource_type_not.setter
    def resource_type_not(self, resource_type_not):
        """Sets the resource_type_not of this UserAuditLogWhereInput.


        :param resource_type_not: The resource_type_not of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_not: str
        """

        self._resource_type_not = resource_type_not

    @property
    def resource_type_not_contains(self):
        """Gets the resource_type_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not_contains

    @resource_type_not_contains.setter
    def resource_type_not_contains(self, resource_type_not_contains):
        """Sets the resource_type_not_contains of this UserAuditLogWhereInput.


        :param resource_type_not_contains: The resource_type_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_not_contains: str
        """

        self._resource_type_not_contains = resource_type_not_contains

    @property
    def resource_type_not_ends_with(self):
        """Gets the resource_type_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not_ends_with

    @resource_type_not_ends_with.setter
    def resource_type_not_ends_with(self, resource_type_not_ends_with):
        """Sets the resource_type_not_ends_with of this UserAuditLogWhereInput.


        :param resource_type_not_ends_with: The resource_type_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_not_ends_with: str
        """

        self._resource_type_not_ends_with = resource_type_not_ends_with

    @property
    def resource_type_not_in(self):
        """Gets the resource_type_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._resource_type_not_in

    @resource_type_not_in.setter
    def resource_type_not_in(self, resource_type_not_in):
        """Sets the resource_type_not_in of this UserAuditLogWhereInput.


        :param resource_type_not_in: The resource_type_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_not_in: list[str]
        """

        self._resource_type_not_in = resource_type_not_in

    @property
    def resource_type_not_starts_with(self):
        """Gets the resource_type_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_not_starts_with

    @resource_type_not_starts_with.setter
    def resource_type_not_starts_with(self, resource_type_not_starts_with):
        """Sets the resource_type_not_starts_with of this UserAuditLogWhereInput.


        :param resource_type_not_starts_with: The resource_type_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_not_starts_with: str
        """

        self._resource_type_not_starts_with = resource_type_not_starts_with

    @property
    def resource_type_starts_with(self):
        """Gets the resource_type_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The resource_type_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_starts_with

    @resource_type_starts_with.setter
    def resource_type_starts_with(self, resource_type_starts_with):
        """Sets the resource_type_starts_with of this UserAuditLogWhereInput.


        :param resource_type_starts_with: The resource_type_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type resource_type_starts_with: str
        """

        self._resource_type_starts_with = resource_type_starts_with

    @property
    def started_at(self):
        """Gets the started_at of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this UserAuditLogWhereInput.


        :param started_at: The started_at of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at: str
        """

        self._started_at = started_at

    @property
    def started_at_gt(self):
        """Gets the started_at_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_gt

    @started_at_gt.setter
    def started_at_gt(self, started_at_gt):
        """Sets the started_at_gt of this UserAuditLogWhereInput.


        :param started_at_gt: The started_at_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at_gt: str
        """

        self._started_at_gt = started_at_gt

    @property
    def started_at_gte(self):
        """Gets the started_at_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_gte

    @started_at_gte.setter
    def started_at_gte(self, started_at_gte):
        """Sets the started_at_gte of this UserAuditLogWhereInput.


        :param started_at_gte: The started_at_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at_gte: str
        """

        self._started_at_gte = started_at_gte

    @property
    def started_at_in(self):
        """Gets the started_at_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._started_at_in

    @started_at_in.setter
    def started_at_in(self, started_at_in):
        """Sets the started_at_in of this UserAuditLogWhereInput.


        :param started_at_in: The started_at_in of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at_in: list[str]
        """

        self._started_at_in = started_at_in

    @property
    def started_at_lt(self):
        """Gets the started_at_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_lt

    @started_at_lt.setter
    def started_at_lt(self, started_at_lt):
        """Sets the started_at_lt of this UserAuditLogWhereInput.


        :param started_at_lt: The started_at_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at_lt: str
        """

        self._started_at_lt = started_at_lt

    @property
    def started_at_lte(self):
        """Gets the started_at_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_lte

    @started_at_lte.setter
    def started_at_lte(self, started_at_lte):
        """Sets the started_at_lte of this UserAuditLogWhereInput.


        :param started_at_lte: The started_at_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at_lte: str
        """

        self._started_at_lte = started_at_lte

    @property
    def started_at_not(self):
        """Gets the started_at_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._started_at_not

    @started_at_not.setter
    def started_at_not(self, started_at_not):
        """Sets the started_at_not of this UserAuditLogWhereInput.


        :param started_at_not: The started_at_not of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at_not: str
        """

        self._started_at_not = started_at_not

    @property
    def started_at_not_in(self):
        """Gets the started_at_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The started_at_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._started_at_not_in

    @started_at_not_in.setter
    def started_at_not_in(self, started_at_not_in):
        """Sets the started_at_not_in of this UserAuditLogWhereInput.


        :param started_at_not_in: The started_at_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type started_at_not_in: list[str]
        """

        self._started_at_not_in = started_at_not_in

    @property
    def status(self):
        """Gets the status of this UserAuditLogWhereInput.  # noqa: E501


        :return: The status of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: UserAuditLogStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UserAuditLogWhereInput.


        :param status: The status of this UserAuditLogWhereInput.  # noqa: E501
        :type status: UserAuditLogStatus
        """

        self._status = status

    @property
    def status_in(self):
        """Gets the status_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The status_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[UserAuditLogStatus]
        """
        return self._status_in

    @status_in.setter
    def status_in(self, status_in):
        """Sets the status_in of this UserAuditLogWhereInput.


        :param status_in: The status_in of this UserAuditLogWhereInput.  # noqa: E501
        :type status_in: list[UserAuditLogStatus]
        """

        self._status_in = status_in

    @property
    def status_not(self):
        """Gets the status_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The status_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: UserAuditLogStatus
        """
        return self._status_not

    @status_not.setter
    def status_not(self, status_not):
        """Sets the status_not of this UserAuditLogWhereInput.


        :param status_not: The status_not of this UserAuditLogWhereInput.  # noqa: E501
        :type status_not: UserAuditLogStatus
        """

        self._status_not = status_not

    @property
    def status_not_in(self):
        """Gets the status_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The status_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[UserAuditLogStatus]
        """
        return self._status_not_in

    @status_not_in.setter
    def status_not_in(self, status_not_in):
        """Sets the status_not_in of this UserAuditLogWhereInput.


        :param status_not_in: The status_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type status_not_in: list[UserAuditLogStatus]
        """

        self._status_not_in = status_not_in

    @property
    def user(self):
        """Gets the user of this UserAuditLogWhereInput.  # noqa: E501


        :return: The user of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: UserWhereInput
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this UserAuditLogWhereInput.


        :param user: The user of this UserAuditLogWhereInput.  # noqa: E501
        :type user: UserWhereInput
        """

        self._user = user

    @property
    def username(self):
        """Gets the username of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserAuditLogWhereInput.


        :param username: The username of this UserAuditLogWhereInput.  # noqa: E501
        :type username: str
        """

        self._username = username

    @property
    def username_contains(self):
        """Gets the username_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_contains

    @username_contains.setter
    def username_contains(self, username_contains):
        """Sets the username_contains of this UserAuditLogWhereInput.


        :param username_contains: The username_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type username_contains: str
        """

        self._username_contains = username_contains

    @property
    def username_ends_with(self):
        """Gets the username_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_ends_with

    @username_ends_with.setter
    def username_ends_with(self, username_ends_with):
        """Sets the username_ends_with of this UserAuditLogWhereInput.


        :param username_ends_with: The username_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type username_ends_with: str
        """

        self._username_ends_with = username_ends_with

    @property
    def username_gt(self):
        """Gets the username_gt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_gt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gt

    @username_gt.setter
    def username_gt(self, username_gt):
        """Sets the username_gt of this UserAuditLogWhereInput.


        :param username_gt: The username_gt of this UserAuditLogWhereInput.  # noqa: E501
        :type username_gt: str
        """

        self._username_gt = username_gt

    @property
    def username_gte(self):
        """Gets the username_gte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_gte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gte

    @username_gte.setter
    def username_gte(self, username_gte):
        """Sets the username_gte of this UserAuditLogWhereInput.


        :param username_gte: The username_gte of this UserAuditLogWhereInput.  # noqa: E501
        :type username_gte: str
        """

        self._username_gte = username_gte

    @property
    def username_in(self):
        """Gets the username_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_in

    @username_in.setter
    def username_in(self, username_in):
        """Sets the username_in of this UserAuditLogWhereInput.


        :param username_in: The username_in of this UserAuditLogWhereInput.  # noqa: E501
        :type username_in: list[str]
        """

        self._username_in = username_in

    @property
    def username_lt(self):
        """Gets the username_lt of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_lt of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lt

    @username_lt.setter
    def username_lt(self, username_lt):
        """Sets the username_lt of this UserAuditLogWhereInput.


        :param username_lt: The username_lt of this UserAuditLogWhereInput.  # noqa: E501
        :type username_lt: str
        """

        self._username_lt = username_lt

    @property
    def username_lte(self):
        """Gets the username_lte of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_lte of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lte

    @username_lte.setter
    def username_lte(self, username_lte):
        """Sets the username_lte of this UserAuditLogWhereInput.


        :param username_lte: The username_lte of this UserAuditLogWhereInput.  # noqa: E501
        :type username_lte: str
        """

        self._username_lte = username_lte

    @property
    def username_not(self):
        """Gets the username_not of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_not of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not

    @username_not.setter
    def username_not(self, username_not):
        """Sets the username_not of this UserAuditLogWhereInput.


        :param username_not: The username_not of this UserAuditLogWhereInput.  # noqa: E501
        :type username_not: str
        """

        self._username_not = username_not

    @property
    def username_not_contains(self):
        """Gets the username_not_contains of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_contains

    @username_not_contains.setter
    def username_not_contains(self, username_not_contains):
        """Sets the username_not_contains of this UserAuditLogWhereInput.


        :param username_not_contains: The username_not_contains of this UserAuditLogWhereInput.  # noqa: E501
        :type username_not_contains: str
        """

        self._username_not_contains = username_not_contains

    @property
    def username_not_ends_with(self):
        """Gets the username_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_ends_with

    @username_not_ends_with.setter
    def username_not_ends_with(self, username_not_ends_with):
        """Sets the username_not_ends_with of this UserAuditLogWhereInput.


        :param username_not_ends_with: The username_not_ends_with of this UserAuditLogWhereInput.  # noqa: E501
        :type username_not_ends_with: str
        """

        self._username_not_ends_with = username_not_ends_with

    @property
    def username_not_in(self):
        """Gets the username_not_in of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_not_in

    @username_not_in.setter
    def username_not_in(self, username_not_in):
        """Sets the username_not_in of this UserAuditLogWhereInput.


        :param username_not_in: The username_not_in of this UserAuditLogWhereInput.  # noqa: E501
        :type username_not_in: list[str]
        """

        self._username_not_in = username_not_in

    @property
    def username_not_starts_with(self):
        """Gets the username_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_starts_with

    @username_not_starts_with.setter
    def username_not_starts_with(self, username_not_starts_with):
        """Sets the username_not_starts_with of this UserAuditLogWhereInput.


        :param username_not_starts_with: The username_not_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type username_not_starts_with: str
        """

        self._username_not_starts_with = username_not_starts_with

    @property
    def username_starts_with(self):
        """Gets the username_starts_with of this UserAuditLogWhereInput.  # noqa: E501


        :return: The username_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_starts_with

    @username_starts_with.setter
    def username_starts_with(self, username_starts_with):
        """Sets the username_starts_with of this UserAuditLogWhereInput.


        :param username_starts_with: The username_starts_with of this UserAuditLogWhereInput.  # noqa: E501
        :type username_starts_with: str
        """

        self._username_starts_with = username_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UserAuditLogWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, UserAuditLogWhereInput):
            return True

        return self.to_dict() != other.to_dict()

name: Build and Test
on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      matplotlib-version:
        required: true
        type: string

env:
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8

jobs:
  build-ultraplot:
    name: Test Python ${{ inputs.python-version }} with ${{ inputs.matplotlib-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v2.0.7
        with:
          environment-file: ./environment.yml
          init-shell: bash
          create-args: >-
            --verbose
            python=${{ inputs.python-version }}
            matplotlib=${{ inputs.matplotlib-version }}
          cache-environment: true
          cache-downloads: false

      - name: Build Ultraplot
        run: |
          pip install --no-build-isolation --no-deps .

      - name: Test Ultraplot
        run: |
          pytest --cov=ultraplot --cov-branch --cov-report term-missing --cov-report=xml ultraplot

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Ultraplot/ultraplot

  compare-baseline:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v5

      - uses: mamba-org/setup-micromamba@v2.0.7
        with:
          environment-file: ./environment.yml
          init-shell: bash
          create-args: >-
            --verbose
            python=${{ inputs.python-version }}
            matplotlib=${{ inputs.matplotlib-version }}
          cache-environment: true
          cache-downloads: false

      - name: Generate baseline from main
        run: |
          mkdir -p baseline
          git fetch origin ${{ github.event.pull_request.base.sha }}
          git checkout ${{ github.event.pull_request.base.sha }}
          python -c "import ultraplot as plt; plt.config.Configurator()._save_yaml('ultraplot.yml')"
          pytest -W ignore --mpl-generate-path=baseline --mpl-default-style="./ultraplot.yml"
          git checkout ${{ github.sha }}  # Return to PR branch

      - name: Image Comparison Ultraplot
        run: |
          mkdir -p results
          python -c "import ultraplot as plt; plt.config.Configurator()._save_yaml('ultraplot.yml')"
          pytest -W ignore --mpl --mpl-baseline-path=baseline --mpl-generate-summary=html --mpl-results-path=./results/ --mpl-default-style="./ultraplot.yml" --store-failed-only ultraplot/tests

      # Return the html output of the comparison even if failed
      - name: Upload comparison failures
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: failed-comparisons-${{ inputs.python-version }}-${{ inputs.matplotlib-version }}-${{ github.sha }}
          path: results/*

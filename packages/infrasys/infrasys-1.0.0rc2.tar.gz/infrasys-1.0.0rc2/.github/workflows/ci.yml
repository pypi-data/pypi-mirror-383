name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  DEFAULT_PYTHON: "3.13"
  DEFAULT_OS: ubuntu-latest

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --dev

      - name: Run pytest with coverage
        run: |
          uv run pytest -v --cov --cov-report=xml

      - name: codecov
        uses: codecov/codecov-action@v4.2.0
        if: ${{ matrix.os == env.DEFAULT_OS && matrix.python-version == env.DEFAULT_PYTHON  }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: infrasys-tests
          fail_ci_if_error: false
          verbose: true
  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Installing dependencies
        run: uv sync --dev

      - name: Run mypy
        run: |
          uv run mypy --config-file=pyproject.toml --ignore-missing-imports src/
  ruff:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Installing dependencies
        run: uv sync --dev

      - name: Run Ruff
        run: uv run ruff check --output-format=github src/

# tox.ini â€” streamlined for tox v4

[tox]
minversion = 4.6
requires = tox>=4.6
envlist = py310

# ----------------------------
# Tests
# ----------------------------
[testenv]
description = Run unit tests
package = editable              # fast: install your package in editable mode
extras = testing                # uses [project.optional-dependencies].testing
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    HOME
commands =
    python -m pytest {posargs}

# ----------------------------
# Docs
# ----------------------------
[testenv:docs]
description = Build Sphinx docs
package = skip
deps =
    sphinx>=7
    furo
    # myst-parser  # uncomment if you want Markdown in Sphinx
commands =
    python -m sphinx -b html -d "{toxworkdir}/_doctrees" "docs" "{toxworkdir}/_build/html" {posargs}

[testenv:doctests]
description = Run Sphinx doctests
package = skip
deps =
    sphinx>=7
commands =
    python -m sphinx -b doctest -d "{toxworkdir}/_doctrees" "docs" "{toxworkdir}/_build/doctest" {posargs}

# ----------------------------
# Build / Clean
# ----------------------------
[testenv:clean]
description = Remove build artifacts
package = skip
skip_install = true
commands =
    python -c "from shutil import rmtree; [rmtree(p, True) for p in ('build','dist','docs/_build')]"

[testenv:build]
description = Build sdist and wheel
package = skip
skip_install = true
deps = build[virtualenv]
commands =
    python -m build .

# ----------------------------
# Publish
# ----------------------------
[testenv:publish]
description = Check and upload distribution archives
package = skip
skip_install = true
deps = twine
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*

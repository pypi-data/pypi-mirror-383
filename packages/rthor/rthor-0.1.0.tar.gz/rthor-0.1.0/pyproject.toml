[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "setuptools-scm"]

[dependency-groups]
dev = [
    "build>=1.3.0",
    "prek>=0.2.3",
    "ruff>=0.13.3",
    "tox>=4.30.3",
    "twine>=6.2.0",
    "ty>=0.0.1a21",
    {include-group = "docs"},
    {include-group = "test"},
]
docs = [
    "mkdocs-api-autonav>=0.4.0",
    "mkdocs-include-markdown-plugin>=7.2.0",
    "mkdocs-jupyter>=0.25.0",
    "mkdocs-material>=9.6.21",
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.30.1",
]
test = ["pytest-cov>=7.0.0", "pytest>=8.4.2", "xdoctest>=1.3.0"]

[project]
authors = [
    {email = "andrew.mitchell.research@gmail.com", name = "Andrew Mitchell"},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = ["numpy>=1.24.0", "pandas>=2.0.0"]
description = "Python implementation of RTHOR (Randomization test of hypothesized order relations)"
dynamic = ["version"]
keywords = []
license = "MIT"
license-files = ["LICENSE.md"]
name = "rthor"
readme = "README.md"
requires-python = ">=3.11"
urls.homepage = "https://github.com/MitchellAcoustics/rthor"

[tool.coverage]
report = {sort = "cover"}
run = {branch = true, parallel = true, source = ["rthor"]}
paths.source = ["src", ".tox*/*/lib/python*/site-packages"]

[tool.pytest.ini_options]
addopts = ["--color=yes", "--import-mode=importlib", "--verbose"]
testpaths = ["tests"]

[tool.ruff]
fix = true
force-exclude = true
lint.ignore = [
    "COM812", # trailing commas (ruff-format recommended)
    "D417", # argument description in docstring (unreliable)
    "ISC001", # simplify implicit str concatenation (ruff-format recommended)
    "NPY002", # legacy np.random (required for R parity)
    "PERF401", # list.extend suggestion (readability over micro-optimization)
    "PLR0912", # too many branches (acceptable for RTHOR algorithm complexity)
    "PLR0913", # too many arguments (acceptable for algorithm functions)
    "PLR2004", # magic value comparison (acceptable for algorithm constants)
    "TC002", # type checking blocks (would break runtime imports)
    "TC003", # type checking blocks (would break runtime imports)
]
lint.select = ["ALL"]
lint.isort.known-first-party = ["rthor"]
lint.mccabe.max-complexity = 18
lint.pep8-naming.classmethod-decorators = ["classmethod"]
lint.per-file-ignores."docs/examples/*" = [
    "B018",
    "D100",
    "E501",
    "ERA001",
    "INP001",
    "RUF003",
]
lint.per-file-ignores."tests*" = ["ERA001", "INP001", "PLR2004", "S101"]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/rthor/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
overrides."tool.tox.env.docs.commands".inline_arrays = false
overrides."tool.tox.env_run_base.commands".inline_arrays = false

[tool.tox]
env_list = ["py311", "py312", "py313"]
env_run_base = {commands = [
    [
        "pytest",
        "--cov",
        "--cov-report=xml",
    ],
], dependency_groups = [
    "test",
]}
env.docs = {commands = [
    [
        "mkdocs",
        "build",
    ],
], dependency_groups = [
    "docs",
]}
gh.python."3.11" = ["py311"]
gh.python."3.12" = ["py312"]
gh.python."3.13" = ["py313"]

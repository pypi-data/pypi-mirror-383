name: Python package

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        # os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        # python-version: ['3.10', '3.11', '3.12']
        os: ['ubuntu-latest']
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Cache Download
        id: cache-trialblazer-base_model
        uses: actions/cache@v4
        with:
          path: ~/.trialblazer/models/base_model
          key: trialblazer-base-model
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .
          python -m pip install .[dev,publishing]
      - name: Files download
        if: steps.cache-trialblazer.outputs.cache-hit != 'true'
        run: |
          trialblazer-download
      - name: Run unit tests
        run: python -m pytest -v
      - name: Run CLI
        run: |
          trialblazer --input_file=tests/data/test_input.csv
          
      - name: Verify that we can build the package
        run: python -m build
  # lint:
  #   name: Linting build
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python 3.9
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.9
  #     - name: Python info
  #       shell: bash -e {0}
  #       run: |
  #         which python
  #         python --version
  #     - name: Upgrade pip and install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools
  #         python -m pip install .[dev,publishing]
  #     - name: Check style against standards using ruff
  #       run: |
  #         ruff check
  #         ruff format --check

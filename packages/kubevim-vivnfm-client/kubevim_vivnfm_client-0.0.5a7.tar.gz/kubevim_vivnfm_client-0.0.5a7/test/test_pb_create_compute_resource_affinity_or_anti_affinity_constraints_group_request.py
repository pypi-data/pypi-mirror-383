# coding: utf-8

"""
    vivnfm/vi-vnfm.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kubevim_vivnfm_client.models.pb_create_compute_resource_affinity_or_anti_affinity_constraints_group_request import PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest

class TestPbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest(unittest.TestCase):
    """PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest:
        """Test PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest`
        """
        model = PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest()
        if include_optional:
            return PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest(
                group_name = '',
                type = 'AFFINITY',
                scope = 'NFVI_NODE'
            )
        else:
            return PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest(
                group_name = '',
                type = 'AFFINITY',
        )
        """

    def testPbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest(self):
        """Test PbCreateComputeResourceAffinityOrAntiAffinityConstraintsGroupRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

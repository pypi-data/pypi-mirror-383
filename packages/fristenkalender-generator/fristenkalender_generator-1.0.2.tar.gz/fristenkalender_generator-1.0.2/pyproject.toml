# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

# Build system information and other project-specific configuration below.

[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[project]
name = "fristenkalender_generator"
description = "A Python package that generates the raw data for the 'Hochfrequenz Fristenkalender'"
license = { text = "MIT" }
requires-python = ">=3.9"
authors = [
    { name = "Konstantin Klein", email = "konstantin.klein@hochfrequenz.de" },
]
keywords = ["fristenkalender", "bdew", "hochfrequenz"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dependencies = [
    "bdew_datetimes>=0.9.1", # because 0.8.0 contains 24hLFW Sonderfeiertag on 2025-06-06
    "holidays>=0.78",
    "icalendar",
    # add everything you add in requirements.in here
]
dynamic = ["readme", "version"]

[project.optional-dependencies]
tests = [
    "pytest==8.4.2",
    "syrupy==4.9.1"
]
linting = [
    "pylint==3.3.9"
]
type_check = [
    "mypy==1.18.2"
]
spell_check = [
    "codespell==2.4.1"
]
coverage = [
    "coverage==7.10.7"
]
formatting = [
    "black==25.9.0",
    "isort==6.1.0"
]
packaging = [
    "build==1.3.0",
    "twine==6.2.0"
]
dev = [
    "pip-tools"
]

[project.urls]
Changelog = "https://github.com/Hochfrequenz/fristenkalender_generator/releases"
Homepage = "https://github.com/Hochfrequenz/fristenkalender_generator"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
fragments = [{ path = "README.md" }]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/_fristenkalender_generator_version.py"
template = '''
version = "{version}"
'''

[tool.hatch.build.targets.sdist]
exclude = ["/unittests"]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]


[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"

[tool.pylint."MESSAGES CONTROL"]
max-line-length = 120
disable = "fixme"

[tool.pytest.ini_options]
# When the mode is auto, all discovered async tests are considered asyncio-driven
# even if they have no @pytest.mark.asyncio marker.
# https://github.com/pytest-dev/pytest-asyncio#auto-mode
asyncio_mode = "auto"
markers = ["datafiles", "snapshot: mark a test as a snapshot test"]
# write the logs captured during tests into pytest.log file (which is gitignored)
log_file = "pytest.log" # more options: https://docs.pytest.org/en/6.2.x/logging.html#live-logs
pythonpath = ["."]

[tool.mypy]

[tool.hatchling]
package-data = [
    "src/py.typed", # marks package as type-hinter compatible
]

[tool.coverage.run]
omit = [".tox/*", "unittests/*"]

# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
envlist = fetch-libs, lint, static, unit
isolated_build=true

[vars]
src_path = {toxinidir}/src/
lib_path = {toxinidir}/lib/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}
uv_flags = --frozen --isolated

[testenv]
skip_install = True  # skip building the package; none of the tox envs needs it
allowlist_externals = uv
basepython = python3
setenv =
  PYTHONPATH = {[vars]src_path}
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH

[testenv:lock]
description = Update uv.lock with the latest deps
commands =
  uv lock --upgrade --no-cache

[testenv:fetch-libs]
allowlist_externals = charmcraft
commands =
    # fetch all charm libs required by the coordinated_workers package
    charmcraft fetch-lib charms.data_platform_libs.v0.s3
    charmcraft fetch-lib charms.grafana_k8s.v0.grafana_dashboard
    charmcraft fetch-lib charms.prometheus_k8s.v0.prometheus_scrape
    charmcraft fetch-lib charms.loki_k8s.v1.loki_push_api
    charmcraft fetch-lib charms.tempo_coordinator_k8s.v0.tracing
    charmcraft fetch-lib charms.observability_libs.v0.kubernetes_compute_resources_patch
    charmcraft fetch-lib charms.tls_certificates_interface.v4.tls_certificates
    charmcraft fetch-lib charms.catalogue_k8s.v1.catalogue
    
[testenv:fmt]
description = "Format and lint the code"
commands =
    uv run {[vars]uv_flags} --all-extras ruff format
    uv run {[vars]uv_flags} --all-extras ruff check --fix-only

[testenv:lint]
description = Lint the code
commands =
    uv run {[vars]uv_flags} --all-extras ruff check

[testenv:static]
description = Static code checking
allowlist_externals =
  {[testenv]allowlist_externals}
commands =
    uv run {[vars]uv_flags} --all-extras pyright {[vars]src_path}

[testenv:unit]
description = Run unit tests
setenv =
    PYTHONPATH = {[vars]src_path}:{[vars]lib_path}
commands =
    uv run {[vars]uv_flags} --all-extras coverage run --source={[vars]src_path} -m pytest \
        {[vars]tst_path}unit {posargs}
    uv run {[vars]uv_flags} --all-extras coverage combine
    uv run {[vars]uv_flags} --all-extras coverage report

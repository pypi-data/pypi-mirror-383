name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.1
        with:
          version-command: |
            uv version --short

      - name: Bump version for developmental release
        if: ${{ ! steps.check-version.outputs.tag }}
        run: |
          uv version --bump patch
          current_version=$(uv version --short)
          dev_version="${current_version}.dev$(date +%s)"
          uv version $dev_version
          echo "VERSION=$dev_version" >> $GITHUB_ENV

      - name: Install dependencies
        run: uv sync

      - name: Build package
        run: uv build

      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        run: uv publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}

      - name: Publish package on TestPyPI
        if: ${{! steps.check-version.outputs.tag }}
        run: uv publish --index testpypi
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}

      - name: Add package link to job summary (PyPI)
        if: steps.check-version.outputs.tag
        run: |
          echo "### ðŸ“¦ Package Published to PyPI" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Version: \`${{ steps.check-version.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— [View on PyPI](https://pypi.org/project/pynenc-rabbitmq/${{ steps.check-version.outputs.tag }}/)" >> $GITHUB_STEP_SUMMARY

      - name: Add package link to job summary (TestPyPI)
        if: ${{! steps.check-version.outputs.tag }}
        run: |
          echo "### ðŸ“¦ Package Published to TestPyPI" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Version: \`${{ env.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— [View on TestPyPI](https://test.pypi.org/project/pynenc-rabbitmq/${{ env.VERSION }}/)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Install command:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "pip install --index-url https://test.pypi.org/simple/ pynenc-rabbitmq==${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v5.23.0
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

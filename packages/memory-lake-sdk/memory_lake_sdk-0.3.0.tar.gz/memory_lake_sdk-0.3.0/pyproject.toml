[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "memory-lake-sdk"
dynamic = ["version"]
description = "简化开发者对 Claude Memory Tool 使用的 Python SDK"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Memory Lake Team", email = "team@memorylake.ai"}
]
maintainers = [
    {name = "Memory Lake Team", email = "team@memorylake.ai"}
]
keywords = [
    "claude",
    "anthropic",
    "ai",
    "memory",
    "sdk",
    "chatbot",
    "conversation",
    "context",
    "python"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.8"
dependencies = [
    "anthropic>=0.39.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
]

[project.scripts]
claude-memory-chat = "memory_lake_sdk.examples.basic_chat:main"
claude-memory-manage = "memory_lake_sdk.examples.manage_memory:main"
memory-lake-chat = "memory_lake_sdk.examples.basic_chat:main"
memory-lake-manage = "memory_lake_sdk.examples.manage_memory:main"

[project.urls]
Homepage = "https://github.com/memorylake/memory-lake-sdk"
Documentation = "https://github.com/memorylake/memory-lake-sdk/docs"
Repository = "https://github.com/memorylake/memory-lake-sdk"
"Bug Tracker" = "https://github.com/memorylake/memory-lake-sdk/issues"
"Changelog" = "https://github.com/memorylake/memory-lake-sdk/blob/main/CHANGELOG.md"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.package-data]
memory_lake_sdk = ["examples/*.py", "examples/*.md"]

[tool.setuptools.dynamic]
version = {attr = "memory_lake_sdk.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["memory_lake_sdk*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["memory_lake_sdk"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "memory_lake_sdk/tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["memory_lake_sdk"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ErrorMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ErrorMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsErrorMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ErrorMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ErrorMessage
    def Uuid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ErrorMessage
    def Message(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ErrorMessageStart(builder):
    builder.StartObject(2)

def Start(builder):
    ErrorMessageStart(builder)

def ErrorMessageAddUuid(builder, uuid):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(uuid), 0)

def AddUuid(builder, uuid):
    ErrorMessageAddUuid(builder, uuid)

def ErrorMessageAddMessage(builder, message):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(message), 0)

def AddMessage(builder, message):
    ErrorMessageAddMessage(builder, message)

def ErrorMessageEnd(builder):
    return builder.EndObject()

def End(builder):
    return ErrorMessageEnd(builder)

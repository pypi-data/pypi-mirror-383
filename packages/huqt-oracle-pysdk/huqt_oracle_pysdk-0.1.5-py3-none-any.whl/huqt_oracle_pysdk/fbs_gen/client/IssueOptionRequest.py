# automatically generated by the FlatBuffers compiler, do not modify

# namespace: client

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class IssueOptionRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IssueOptionRequest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsIssueOptionRequest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # IssueOptionRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IssueOptionRequest
    def Domain(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # IssueOptionRequest
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # IssueOptionRequest
    def Amount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def IssueOptionRequestStart(builder):
    builder.StartObject(3)

def Start(builder):
    IssueOptionRequestStart(builder)

def IssueOptionRequestAddDomain(builder, domain):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(domain), 0)

def AddDomain(builder, domain):
    IssueOptionRequestAddDomain(builder, domain)

def IssueOptionRequestAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    IssueOptionRequestAddName(builder, name)

def IssueOptionRequestAddAmount(builder, amount):
    builder.PrependInt64Slot(2, amount, 0)

def AddAmount(builder, amount):
    IssueOptionRequestAddAmount(builder, amount)

def IssueOptionRequestEnd(builder):
    return builder.EndObject()

def End(builder):
    return IssueOptionRequestEnd(builder)

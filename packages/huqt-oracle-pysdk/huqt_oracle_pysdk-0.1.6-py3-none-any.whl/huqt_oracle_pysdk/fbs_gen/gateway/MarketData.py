# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MarketData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MarketData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMarketData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MarketData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MarketData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MarketData
    def BestBid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return None

    # MarketData
    def BestOffer(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return None

    # MarketData
    def MarkPx(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return None

    # MarketData
    def Vol(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MarketData
    def NtnlVol(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def MarketDataStart(builder):
    builder.StartObject(6)

def Start(builder):
    MarketDataStart(builder)

def MarketDataAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    MarketDataAddName(builder, name)

def MarketDataAddBestBid(builder, bestBid):
    builder.PrependInt64Slot(1, bestBid, None)

def AddBestBid(builder, bestBid):
    MarketDataAddBestBid(builder, bestBid)

def MarketDataAddBestOffer(builder, bestOffer):
    builder.PrependInt64Slot(2, bestOffer, None)

def AddBestOffer(builder, bestOffer):
    MarketDataAddBestOffer(builder, bestOffer)

def MarketDataAddMarkPx(builder, markPx):
    builder.PrependInt64Slot(3, markPx, None)

def AddMarkPx(builder, markPx):
    MarketDataAddMarkPx(builder, markPx)

def MarketDataAddVol(builder, vol):
    builder.PrependInt64Slot(4, vol, 0)

def AddVol(builder, vol):
    MarketDataAddVol(builder, vol)

def MarketDataAddNtnlVol(builder, ntnlVol):
    builder.PrependInt64Slot(5, ntnlVol, 0)

def AddNtnlVol(builder, ntnlVol):
    MarketDataAddNtnlVol(builder, ntnlVol)

def MarketDataEnd(builder):
    return builder.EndObject()

def End(builder):
    return MarketDataEnd(builder)

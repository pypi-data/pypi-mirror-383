# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ServerResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ServerResponse()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsServerResponse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ServerResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ServerResponse
    def ResponseType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ServerResponse
    def Response(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def ServerResponseStart(builder):
    builder.StartObject(2)

def Start(builder):
    ServerResponseStart(builder)

def ServerResponseAddResponseType(builder, responseType):
    builder.PrependUint8Slot(0, responseType, 0)

def AddResponseType(builder, responseType):
    ServerResponseAddResponseType(builder, responseType)

def ServerResponseAddResponse(builder, response):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(response), 0)

def AddResponse(builder, response):
    ServerResponseAddResponse(builder, response)

def ServerResponseEnd(builder):
    return builder.EndObject()

def End(builder):
    return ServerResponseEnd(builder)

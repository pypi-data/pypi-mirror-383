# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TwoSidedMeta(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TwoSidedMeta()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTwoSidedMeta(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TwoSidedMeta
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TwoSidedMeta
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TwoSidedMeta
    def Base(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TwoSidedMeta
    def Quote(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TwoSidedMeta
    def FlatFee(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def TwoSidedMetaStart(builder):
    builder.StartObject(4)

def Start(builder):
    TwoSidedMetaStart(builder)

def TwoSidedMetaAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    TwoSidedMetaAddName(builder, name)

def TwoSidedMetaAddBase(builder, base):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(base), 0)

def AddBase(builder, base):
    TwoSidedMetaAddBase(builder, base)

def TwoSidedMetaAddQuote(builder, quote):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(quote), 0)

def AddQuote(builder, quote):
    TwoSidedMetaAddQuote(builder, quote)

def TwoSidedMetaAddFlatFee(builder, flatFee):
    builder.PrependInt64Slot(3, flatFee, 0)

def AddFlatFee(builder, flatFee):
    TwoSidedMetaAddFlatFee(builder, flatFee)

def TwoSidedMetaEnd(builder):
    return builder.EndObject()

def End(builder):
    return TwoSidedMetaEnd(builder)

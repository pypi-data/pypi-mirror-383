# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Order(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Order()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOrder(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Order
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Order
    def Market(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Order
    def Oid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Order
    def Px(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Order
    def Side(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Order
    def Sz(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def OrderStart(builder):
    builder.StartObject(5)

def Start(builder):
    OrderStart(builder)

def OrderAddMarket(builder, market):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(market), 0)

def AddMarket(builder, market):
    OrderAddMarket(builder, market)

def OrderAddOid(builder, oid):
    builder.PrependInt64Slot(1, oid, 0)

def AddOid(builder, oid):
    OrderAddOid(builder, oid)

def OrderAddPx(builder, px):
    builder.PrependInt64Slot(2, px, 0)

def AddPx(builder, px):
    OrderAddPx(builder, px)

def OrderAddSide(builder, side):
    builder.PrependInt8Slot(3, side, 0)

def AddSide(builder, side):
    OrderAddSide(builder, side)

def OrderAddSz(builder, sz):
    builder.PrependInt64Slot(4, sz, 0)

def AddSz(builder, sz):
    OrderAddSz(builder, sz)

def OrderEnd(builder):
    return builder.EndObject()

def End(builder):
    return OrderEnd(builder)

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: client

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AddOrderRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AddOrderRequest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAddOrderRequest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AddOrderRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AddOrderRequest
    def Domain(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AddOrderRequest
    def Market(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AddOrderRequest
    def Side(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AddOrderRequest
    def Px(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AddOrderRequest
    def Sz(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AddOrderRequest
    def Collateral(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AddOrderRequest
    def OrderType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AddOrderRequest
    def Tif(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def AddOrderRequestStart(builder):
    builder.StartObject(8)

def Start(builder):
    AddOrderRequestStart(builder)

def AddOrderRequestAddDomain(builder, domain):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(domain), 0)

def AddDomain(builder, domain):
    AddOrderRequestAddDomain(builder, domain)

def AddOrderRequestAddMarket(builder, market):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(market), 0)

def AddMarket(builder, market):
    AddOrderRequestAddMarket(builder, market)

def AddOrderRequestAddSide(builder, side):
    builder.PrependInt8Slot(2, side, 0)

def AddSide(builder, side):
    AddOrderRequestAddSide(builder, side)

def AddOrderRequestAddPx(builder, px):
    builder.PrependInt64Slot(3, px, 0)

def AddPx(builder, px):
    AddOrderRequestAddPx(builder, px)

def AddOrderRequestAddSz(builder, sz):
    builder.PrependInt64Slot(4, sz, 0)

def AddSz(builder, sz):
    AddOrderRequestAddSz(builder, sz)

def AddOrderRequestAddCollateral(builder, collateral):
    builder.PrependInt64Slot(5, collateral, 0)

def AddCollateral(builder, collateral):
    AddOrderRequestAddCollateral(builder, collateral)

def AddOrderRequestAddOrderType(builder, orderType):
    builder.PrependInt8Slot(6, orderType, 0)

def AddOrderType(builder, orderType):
    AddOrderRequestAddOrderType(builder, orderType)

def AddOrderRequestAddTif(builder, tif):
    builder.PrependInt8Slot(7, tif, 0)

def AddTif(builder, tif):
    AddOrderRequestAddTif(builder, tif)

def AddOrderRequestEnd(builder):
    return builder.EndObject()

def End(builder):
    return AddOrderRequestEnd(builder)

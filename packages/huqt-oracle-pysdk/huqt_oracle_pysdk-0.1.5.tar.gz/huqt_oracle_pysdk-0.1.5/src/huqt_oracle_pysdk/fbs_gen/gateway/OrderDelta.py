# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class OrderDelta(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OrderDelta()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOrderDelta(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # OrderDelta
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OrderDelta
    def Ts(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OrderDelta
    def Oid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OrderDelta
    def Market(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OrderDelta
    def IsAdd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # OrderDelta
    def IsRemove(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # OrderDelta
    def Px(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OrderDelta
    def NewSz(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OrderDelta
    def Side(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def OrderDeltaStart(builder):
    builder.StartObject(8)

def Start(builder):
    OrderDeltaStart(builder)

def OrderDeltaAddTs(builder, ts):
    builder.PrependInt64Slot(0, ts, 0)

def AddTs(builder, ts):
    OrderDeltaAddTs(builder, ts)

def OrderDeltaAddOid(builder, oid):
    builder.PrependInt64Slot(1, oid, 0)

def AddOid(builder, oid):
    OrderDeltaAddOid(builder, oid)

def OrderDeltaAddMarket(builder, market):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(market), 0)

def AddMarket(builder, market):
    OrderDeltaAddMarket(builder, market)

def OrderDeltaAddIsAdd(builder, isAdd):
    builder.PrependBoolSlot(3, isAdd, 0)

def AddIsAdd(builder, isAdd):
    OrderDeltaAddIsAdd(builder, isAdd)

def OrderDeltaAddIsRemove(builder, isRemove):
    builder.PrependBoolSlot(4, isRemove, 0)

def AddIsRemove(builder, isRemove):
    OrderDeltaAddIsRemove(builder, isRemove)

def OrderDeltaAddPx(builder, px):
    builder.PrependInt64Slot(5, px, 0)

def AddPx(builder, px):
    OrderDeltaAddPx(builder, px)

def OrderDeltaAddNewSz(builder, newSz):
    builder.PrependInt64Slot(6, newSz, 0)

def AddNewSz(builder, newSz):
    OrderDeltaAddNewSz(builder, newSz)

def OrderDeltaAddSide(builder, side):
    builder.PrependInt8Slot(7, side, 0)

def AddSide(builder, side):
    OrderDeltaAddSide(builder, side)

def OrderDeltaEnd(builder):
    return builder.EndObject()

def End(builder):
    return OrderDeltaEnd(builder)

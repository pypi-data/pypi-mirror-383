# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AccountPosition(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AccountPosition()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAccountPosition(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AccountPosition
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AccountPosition
    def AccountType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AccountPosition
    def Symbol(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AccountPosition
    def Position(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AccountPosition
    def Movable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def AccountPositionStart(builder):
    builder.StartObject(4)

def Start(builder):
    AccountPositionStart(builder)

def AccountPositionAddAccountType(builder, accountType):
    builder.PrependInt8Slot(0, accountType, 0)

def AddAccountType(builder, accountType):
    AccountPositionAddAccountType(builder, accountType)

def AccountPositionAddSymbol(builder, symbol):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(symbol), 0)

def AddSymbol(builder, symbol):
    AccountPositionAddSymbol(builder, symbol)

def AccountPositionAddPosition(builder, position):
    builder.PrependInt64Slot(2, position, 0)

def AddPosition(builder, position):
    AccountPositionAddPosition(builder, position)

def AccountPositionAddMovable(builder, movable):
    builder.PrependBoolSlot(3, movable, 0)

def AddMovable(builder, movable):
    AccountPositionAddMovable(builder, movable)

def AccountPositionEnd(builder):
    return builder.EndObject()

def End(builder):
    return AccountPositionEnd(builder)

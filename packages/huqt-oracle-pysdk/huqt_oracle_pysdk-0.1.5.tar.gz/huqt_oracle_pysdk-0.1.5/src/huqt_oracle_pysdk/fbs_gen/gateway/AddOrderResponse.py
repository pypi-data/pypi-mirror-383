# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gateway

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AddOrderResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AddOrderResponse()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAddOrderResponse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AddOrderResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AddOrderResponse
    def Uuid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AddOrderResponse
    def OrderId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AddOrderResponse
    def Side(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # AddOrderResponse
    def Base(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AddOrderResponse
    def Quote(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AddOrderResponse
    def Msg(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AddOrderResponse
    def Market(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def AddOrderResponseStart(builder):
    builder.StartObject(7)

def Start(builder):
    AddOrderResponseStart(builder)

def AddOrderResponseAddUuid(builder, uuid):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(uuid), 0)

def AddUuid(builder, uuid):
    AddOrderResponseAddUuid(builder, uuid)

def AddOrderResponseAddOrderId(builder, orderId):
    builder.PrependInt64Slot(1, orderId, 0)

def AddOrderId(builder, orderId):
    AddOrderResponseAddOrderId(builder, orderId)

def AddOrderResponseAddSide(builder, side):
    builder.PrependInt8Slot(2, side, 0)

def AddSide(builder, side):
    AddOrderResponseAddSide(builder, side)

def AddOrderResponseAddBase(builder, base):
    builder.PrependInt64Slot(3, base, 0)

def AddBase(builder, base):
    AddOrderResponseAddBase(builder, base)

def AddOrderResponseAddQuote(builder, quote):
    builder.PrependInt64Slot(4, quote, 0)

def AddQuote(builder, quote):
    AddOrderResponseAddQuote(builder, quote)

def AddOrderResponseAddMsg(builder, msg):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(msg), 0)

def AddMsg(builder, msg):
    AddOrderResponseAddMsg(builder, msg)

def AddOrderResponseAddMarket(builder, market):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(market), 0)

def AddMarket(builder, market):
    AddOrderResponseAddMarket(builder, market)

def AddOrderResponseEnd(builder):
    return builder.EndObject()

def End(builder):
    return AddOrderResponseEnd(builder)

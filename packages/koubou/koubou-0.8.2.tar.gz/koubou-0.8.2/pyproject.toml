[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "koubou"
dynamic = ["version"]
description = "ðŸŽ¯ Koubou (å·¥æˆ¿) - The artisan workshop for App Store screenshots"
authors = [
    {name = "David Collado", email = "your-email@example.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Build Tools",
]
keywords = ["screenshot", "app-store", "graphics", "automation", "artisan", "koubou"]

dependencies = [
    "Pillow>=10.0.0",
    "PyYAML>=6.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",  # For beautiful CLI output
    "typer>=0.9.0",  # Modern CLI framework
    "watchdog>=3.0.0",  # File system monitoring for live editing
    "pyjwt>=2.8.0",  # JWT token generation for App Store Connect API
    "cryptography>=41.0.0",  # ES256 signing for JWT tokens
    "httpx>=0.25.0",  # HTTP client for App Store Connect API
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "responses>=0.24.0",  # HTTP mocking for App Store Connect API tests
    "pytest-httpx>=0.26.0",  # HTTPX testing utilities
]

[project.urls]
Homepage = "https://github.com/bitomule/koubou"
Repository = "https://github.com/bitomule/koubou"
Documentation = "https://koubou.readthedocs.io"
Issues = "https://github.com/bitomule/koubou/issues"

[tool.setuptools_scm]
# Automatically gets version from git tags

[project.scripts]
kou = "koubou.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.package-data]
koubou = [
    "frames/*.png",
    "frames/*.json"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel twine
        
    - name: Build package
      run: python -m build
        
    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        
    - name: Extract changelog for version
      id: changelog
      run: |
        VERSION="${GITHUB_REF#refs/tags/}"
        # Extract changelog section for this version from CHANGELOG.md
        if [ -f "CHANGELOG.md" ]; then
          # Get content between version header and next version header or end
          CHANGELOG=$(awk "/^## \[${VERSION#v}\]/,/^## \[/" CHANGELOG.md | sed '1d;$d' | sed '/^$/d')
          if [ -z "$CHANGELOG" ]; then
            # Fallback if version not found in CHANGELOG
            CHANGELOG="See [CHANGELOG.md](https://github.com/bitomule/koubou/blob/main/CHANGELOG.md) for details."
          fi
        else
          CHANGELOG="See release notes for changes."
        fi
        # Use delimiter to handle multiline content
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        body: |
          ðŸŽ¯ **Koubou (å·¥æˆ¿)** - The artisan workshop for App Store screenshots
          
          Transform YAML into handcrafted App Store screenshots. 
          Koubou is your professional workshop where every screenshot 
          is carefully crafted with artisan quality.
          
          å·¥æˆ¿ (koubou) means "artisan's workshop" in Japanese - 
          where masters create their finest work.
          
          ## What's Changed
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ### PyPI (Recommended)
          ```bash
          pip install koubou
          ```
          
          ### Homebrew (macOS/Linux)
          ```bash
          brew install bitomule/tap/koubou
          ```
          
          ### Manual Download
          Download the wheel or source distribution from the assets below.
          
          ## Quick Start
          ```bash
          kou create-config my-screenshots.yaml    # Create sample config
          kou generate my-screenshots.yaml         # Generate screenshots
          kou list-frames                          # List available device frames
          ```
          
          ## Features
          - ðŸŽ¨ **100+ Device Frames**: iPhone, iPad, Mac, Watch, and more
          - ðŸŒˆ **Professional Backgrounds**: Linear, radial, conic gradients
          - âœ¨ **Rich Typography**: Advanced text overlays with stroke, alignment
          - ðŸ“± **YAML Configuration**: Elegant, declarative screenshot definitions
          - ðŸš€ **Batch Processing**: Generate multiple screenshots efficiently
          
          **Full Changelog**: https://github.com/bitomule/koubou/commits/${{ steps.tag.outputs.tag }}
        files: dist/*
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*.tar.gz dist/*.whl
      continue-on-error: true
        
    - name: Update Homebrew formula
      uses: dawidd6/action-homebrew-bump-formula@v4
      with:
        token: ${{ secrets.COMMITTER_TOKEN }}
        tap: bitomule/homebrew-tap
        formula: koubou
        tag: ${{ steps.tag.outputs.tag }}
        revision: ${{ github.sha }}
        no_fork: true
      continue-on-error: true
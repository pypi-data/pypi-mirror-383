Metadata-Version: 2.4
Name: ocpi-pydantic
Version: 0.9.0
Summary: OCPI Pydantic models
Keywords: OCPI,Pydantic
Author: Leon
License-Expression: MIT
License-File: LICENSE
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Framework :: Pydantic :: 2
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Classifier: Programming Language :: Python :: 3.15
Classifier: Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Project-URL: homepage, https://github.com/OCPI-Python/ocpi-pydantic
Project-URL: source, https://github.com/OCPI-Python/ocpi-pydantic.git
Project-URL: issues, https://github.com/OCPI-Python/ocpi-pydantic/issues
Project-URL: changelog, https://github.com/OCPI-Python/ocpi-pydantic/blob/master/CHANGELOG.md
Project-URL: funding, https://github.com/OCPI-Python/ocpi-pydantic
Requires-Python: >=3.10
Requires-Dist: pydantic<3,>=2.12
Description-Content-Type: text/markdown

# OCPI Pydantic

Pydantic models for the [Open Charge Point Interface (OCPI)](https://evroaming.org/ocpi/), currently supporting OCPI 2.2.1.

This library provides a set of Pydantic models to build OCPI applications in Python, ensuring data validation and type hints.

## Installation

You can install `ocpi-pydantic` using pip:

```bash
pip install ocpi-pydantic
```

## Usage

Here is a quick example of how to use the models to create an OCPI `Location` object.

```python
from ocpi_pydantic.v221.locations.location import OcpiLocation, OcpiGeoLocation


location = OcpiLocation(
    country_code='TW',
    party_id='WNC',
    id='LOC1',
    publish=True,
    time_zone='Asia/Taipei',
    coordinates=OcpiGeoLocation(latitude='21.234', longitude='124.567'),
    postal_code='325',
    country='TWN',
    city='桃園市',
    address='龍潭區百年路一號',
    evses=[],
    last_updated=datetime.datetime.now(datetime.UTC),
)
```

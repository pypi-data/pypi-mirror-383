[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "graph_datasets"
version = "1.0.2"
authors = [{ name = "galo.gm", email = "galo.gm.work@gmail.com" }]
keywords = ["graph", "datasets"]
description = "Load graph datasets."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "torch>=1.12",
    "torch_sparse",
    "torch-scatter",
    "torch-geometric>=2.0",
    "torchaudio>=0.10.2",
    "torchvision>=0.11.3",
    "dgl>=1.1.0",
    "dglgo>=0.0.2",
    "gdown>=4.7",
    "wget>=3.2",
    "texttable>=1.6",
    "pandas>=2.0.3",
]

[project.urls]
"Homepage" = "https://github.com/galogm/graph_datasets"
"Bug Tracker" = "https://github.com/galogm/graph_datasets/issues"


[tool.yapf]
based_on_style = "facebook"
indent_width = 4
split_before_first_argument = true
split_arguments_when_comma_terminated = true
indent_dictionary_value = true
column_limit = 100

[tool.yapfignore]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"


[tool.semantic_release]
# assets = []
# build_command_env = []
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "graph_datasets/__init__.py:__version__",
    "docs/conf.py:release",
]
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
# commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = false
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "update"
# insertion_flag = "<!-- version list -->"
# template_dir = "templates"

# [tool.semantic_release.changelog.default_templates]
# changelog_file = "CHANGELOG.md"
# output_format = "md"
# mask_initial_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

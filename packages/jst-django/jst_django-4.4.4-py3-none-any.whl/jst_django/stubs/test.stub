import pytest
from django.urls import reverse
from rest_framework.test import APIClient
from {{ model_import_path }} import {{ name_cap }}Model


@pytest.fixture
def api_client():
    client = APIClient()
    # client.force_authenticate(user=None)
    return client


@pytest.fixture
def instance(db):
    return {{ name_cap }}Model._create_fake()


@pytest.fixture
def urls(instance):
    return {
        "list": reverse("{{ name }}-list"),
        "retrieve": reverse("{{ name }}-detail", kwargs={"pk": instance.pk}),
        "retrieve-not-found": reverse("{{ name }}-detail", kwargs={"pk": 1000}),
    }


def test_create():
    assert True


def test_update():
    assert True


def test_partial_update():
    assert True


def test_destroy():
    assert True


def test_list(api_client, urls):
    response = api_client.get(urls["list"])
    data = response.json()
    assert response.status_code == 200
    assert data["status"] is True


def test_retrieve(api_client, urls):
    response = api_client.get(urls["retrieve"])
    data = response.json()
    assert response.status_code == 200
    assert data["status"] is True


def test_retrieve_not_found(api_client, urls):
    response = api_client.get(urls["retrieve-not-found"])
    data = response.json()
    assert response.status_code == 404
    assert data["status"] is False

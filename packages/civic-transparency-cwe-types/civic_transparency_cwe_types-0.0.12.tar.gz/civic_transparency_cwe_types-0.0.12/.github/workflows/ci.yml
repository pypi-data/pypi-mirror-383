# .github/workflows/ci.yml
name: CWE Types CI (Build, Lint, Test, Coverage)
#
# DESIGN PRINCIPLES:
# - CI VALIDATES, never generates - all types are already committed
# - Scope naming (Assemble/Baseline/Coverage/Deploy) reinforces CI/CD patterns
# - Compatibility matrix tests multiple Python versions
# - Fail fast design - catch issues before they reach release
#
# DEVELOPER WORKFLOW:
# 1. uv pip install -e ".[dev,docs]" --upgrade
# 2. uv run ruff check . --fix
# 3. uv run ruff format .
# 4. uv run pre-commit run --all-files
# 5. uv run -m pytest -q
# 6. Push - CI validates everything works correctly
#
# CI PHASES:
# - Assemble: Install dependencies, verify environment setup
# - Baseline: Core validation (types exist, lint passes, tests pass)
# - Coverage: Generate reports and upload artifacts
# - Deploy: Build package and docs (sanity checks for release readiness)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  workflow_call:

env:
  PYTHONUNBUFFERED: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  compatibility-matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Setup Python ${{ matrix.python-version }}
        run: |
          uv python install ${{ matrix.python-version }}
          uv venv .venv --python ${{ matrix.python-version }}

      - name: Assemble. Install dependencies with uv sync
        run: uv sync --extra dev --extra docs

      - name: Baseline. Verify types exist (basic check)
        run: |
          if [ ! -d "src/ci/transparency/cwe/types" ] || [ -z "$(find src/ci/transparency/cwe/types -name '*.py' -not -name '__*')" ]; then
            echo 'ERROR: CWE type files are missing!'
            echo 'Expected Python files in src/ci/transparency/cwe/types/'
            find src/ci/transparency/cwe/types -name '*.py' || echo 'Directory not found'
            exit 1
          fi
          echo "Found CWE types: $(find src/ci/transparency/cwe/types -name '*.py' -not -name '__*' | wc -l) files"

      - name: Baseline. Verify types import
        run: uv run python .github/scripts/verify_types.py

  # Main CI Pipeline
  ci:
    runs-on: ubuntu-latest
    needs: compatibility-matrix
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Setup Python ${{ matrix.python-version }}
        run: |
          uv python install ${{ matrix.python-version }}
          uv venv .venv --python ${{ matrix.python-version }}

      - name: Assemble. Install dependencies with uv sync
        run: uv sync --extra dev --extra docs

      - name: Baseline. Verify types exist and are importable
        run: |
          # Check directory exists and has Python files
          if [ ! -d "src/ci/transparency/cwe/types" ]; then
            echo 'ERROR: CWE types directory missing!'
            exit 1
          fi

          type_count=$(find src/ci/transparency/cwe/types -name '*.py' -not -name '__*' | wc -l)
          if [ "$type_count" -eq 0 ]; then
            echo 'ERROR: No CWE type files found!'
            exit 1
          fi

          echo "Found $type_count CWE type files"

      - name: Baseline. Verify types import correctly
        run: uv run python .github/scripts/verify_types.py

      - name: Baseline. Ruff lint (check only, no fixes in CI)
        run: uv run ruff check .

      - name: Baseline. Run tests with coverage
        run: uv run pytest -q

      - name: Coverage. Generate summary
        run: uv run python .github/scripts/coverage_summary.py

      - name: Coverage. Build HTML coverage report
        run: uv run coverage html

      - name: Coverage. Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
          overwrite: true

      - name: Deploy. Build package (sanity check)
        run: uv run python -m build

      - name: Deploy. Build docs (sanity check)
        run: uv run mkdocs build --strict

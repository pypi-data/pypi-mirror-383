# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Release Python Package

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'

permissions:
  contents: read

jobs:
  build-wheel:
    name: Build Wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"
      - name: Build Python Package
        run: |
          python -m pip install build twine
          python -m build -o dist
          python -m twine check dist/*
      - name: Upload Python Package Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-dist
          path: dist

  test-pypi-publish:
    name: Publish to Test PyPi
    runs-on: ubuntu-latest
    needs:
      - build-wheel
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    environment:
      name: testpypi
      url: https://test.pypi.org/p/apbuilder/
    steps:
      - name: Retrieve release artifacts
        uses: actions/download-artifact@v5
        with:
          name: python-package-dist
          path: dist
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist

  pypi-publish:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    needs:
      - build-wheel
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')  # only publish to PyPI on tag pushes
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/apbuilder/
    steps:
      - name: Retrieve release artifacts
        uses: actions/download-artifact@v5
        with:
          name: python-package-dist
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist

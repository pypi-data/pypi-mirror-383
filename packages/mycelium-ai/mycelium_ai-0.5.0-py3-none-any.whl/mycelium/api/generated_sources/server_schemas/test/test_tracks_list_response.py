# coding: utf-8

"""
    Mycelium API

    Plex music collection and recommendation system using CLAP embeddings

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from mycelium.api.generated_sources.server_schemas.models.tracks_list_response import TracksListResponse  # noqa: E501

class TestTracksListResponse(unittest.TestCase):
    """TracksListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TracksListResponse:
        """Test TracksListResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TracksListResponse`
        """
        model = TracksListResponse()  # noqa: E501
        if include_optional:
            return TracksListResponse(
                tracks = [
                    mycelium.api.generated_sources.server_schemas.models.track_response.TrackResponse(
                        artist = '', 
                        album = '', 
                        title = '', 
                        filepath = '', 
                        media_server_rating_key = '', 
                        media_server_type = '', )
                    ],
                total_count = 56,
                page = 56,
                limit = 56
            )
        else:
            return TracksListResponse(
                tracks = [
                    mycelium.api.generated_sources.server_schemas.models.track_response.TrackResponse(
                        artist = '', 
                        album = '', 
                        title = '', 
                        filepath = '', 
                        media_server_rating_key = '', 
                        media_server_type = '', )
                    ],
                total_count = 56,
                page = 56,
                limit = 56,
        )
        """

    def testTracksListResponse(self):
        """Test TracksListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

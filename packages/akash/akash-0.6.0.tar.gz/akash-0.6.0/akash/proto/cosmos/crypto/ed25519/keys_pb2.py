# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/crypto/ed25519/keys.proto
# Protobuf Python Version: 4.25.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from akash.proto.gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n cosmos/crypto/ed25519/keys.proto\x12\x15\x63osmos.crypto.ed25519\x1a\x14gogoproto/gogo.proto\"9\n\x06PubKey\x12)\n\x03key\x18\x01 \x01(\x0c\x42\x1c\xfa\xde\x1f\x18\x63rypto/ed25519.PublicKey:\x04\x98\xa0\x1f\x00\"5\n\x07PrivKey\x12*\n\x03key\x18\x01 \x01(\x0c\x42\x1d\xfa\xde\x1f\x19\x63rypto/ed25519.PrivateKeyB2Z0github.com/cosmos/cosmos-sdk/crypto/keys/ed25519b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cosmos.crypto.ed25519.keys_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z0github.com/cosmos/cosmos-sdk/crypto/keys/ed25519'
  _globals['_PUBKEY'].fields_by_name['key']._options = None
  _globals['_PUBKEY'].fields_by_name['key']._serialized_options = b'\372\336\037\030crypto/ed25519.PublicKey'
  _globals['_PUBKEY']._options = None
  _globals['_PUBKEY']._serialized_options = b'\230\240\037\000'
  _globals['_PRIVKEY'].fields_by_name['key']._options = None
  _globals['_PRIVKEY'].fields_by_name['key']._serialized_options = b'\372\336\037\031crypto/ed25519.PrivateKey'
  _globals['_PUBKEY']._serialized_start=81
  _globals['_PUBKEY']._serialized_end=138
  _globals['_PRIVKEY']._serialized_start=140
  _globals['_PRIVKEY']._serialized_end=193
# @@protoc_insertion_point(module_scope)

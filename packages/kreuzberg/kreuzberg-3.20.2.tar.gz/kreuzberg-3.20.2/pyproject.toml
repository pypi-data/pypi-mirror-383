[build-system]
build-backend = "uv_build"
requires = [ "uv-build" ]

[project]
name = "kreuzberg"
version = "3.20.2"
description = "Document intelligence framework for Python - Extract text, metadata, and structured data from diverse file formats"
readme = "README.md"
keywords = [
  "async",
  "document-analysis",
  "document-classification",
  "document-intelligence",
  "document-processing",
  "extensible",
  "information-extraction",
  "mcp",
  "metadata-extraction",
  "model-context-protocol",
  "ocr",
  "pandoc",
  "pdf-extraction",
  "pdfium",
  "plugin-architecture",
  "rag",
  "retrieval-augmented-generation",
  "structured-data",
  "table-extraction",
  "tesseract",
  "text-extraction",
]
license = { text = "MIT" }
authors = [ { name = "Na'aman Hirschfeld", email = "nhirschfed@gmail.com" } ]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Database",
  "Topic :: Multimedia :: Graphics :: Capture :: Scanners",
  "Topic :: Office/Business :: Office Suites",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: General",
  "Typing :: Typed",
]

dependencies = [
  "anyio>=4.11.0",
  "chardetng-py>=0.3.5",
  "exceptiongroup>=1.2.2; python_version<'3.11'",
  "html-to-markdown>=2.1.2",
  "langcodes>=3.5.0",
  "mcp>=1.17.0",
  "msgspec>=0.18.0",
  "numpy>=2.0.0",
  "playa-pdf>=0.7.0",
  "polars>=1.34.0",
  "psutil>=7.1.0",
  "pypdfium2==4.30.0",                                # pinned due to bug in 4.30.1, until v5 is stable
  "python-calamine>=0.5.3",
  "python-pptx>=1.0.2",
  "transformers>=4.55.0",
  "typing-extensions>=4.15.0; python_version<'3.12'",
]

optional-dependencies.additional-extensions = [
  "mailparse>=1.0.15",
  "tomli>=2.0.0; python_version<'3.11'",
]
optional-dependencies.all = [
  "kreuzberg[additional-extensions,api,chunking,cli,crypto,document-classification,easyocr,entity-extraction,gmft,langdetect,paddleocr]",
]
optional-dependencies.api = [
  "litestar[opentelemetry,standard,structlog]>=2.18.0",
]
optional-dependencies.chunking = [ "semantic-text-splitter>=0.28.0" ]
optional-dependencies.cli = [
  "click>=8.3.0",
  "rich>=14.2.0",
  "tomli>=2.0.0; python_version<'3.11'",
]
optional-dependencies.crypto = [ "playa-pdf[crypto]>=0.7.0" ]
optional-dependencies.document-classification = [ "deep-translator>=1.11.4" ]
optional-dependencies.easyocr = [ "easyocr>=1.7.2; python_version<'3.14'" ]
optional-dependencies.entity-extraction = [ "keybert>=0.9.0", "spacy>=3.8.7; python_version<'3.14'" ]
optional-dependencies.gmft = [ "gmft>=0.4.2", "transformers>=4.57.0" ]
optional-dependencies.langdetect = [ "fast-langdetect>=1.0.0" ]
optional-dependencies.paddleocr = [
  "paddleocr>=3.2.0; python_version<'3.14'",
  "paddlepaddle>=3.2.0; python_version<'3.14'",
  "setuptools>=80.9.0",
]
urls.documentation = "https://kreuzberg.dev"

urls.homepage = "https://github.com/Goldziher/kreuzberg"
scripts.kreuzberg = "kreuzberg.cli:cli"
scripts.kreuzberg-mcp = "kreuzberg._mcp.server:main"

[dependency-groups]
dev = [
  "covdefaults>=2.3.0",
  "mypy>=1.18.2",
  "pytest>=8.4.2",
  "pytest-benchmark>=5.1.0",
  "pytest-cov>=7.0.0",
  "pytest-mock>=3.15.1",
  "pytest-rerunfailures>=16.1",
  "pytest-timeout>=2.4.0",
  "rich>=14.2.0",
  "ruff>=0.14.0",
  "tabulate>=0.9.0",
  "trio>=0.31.0",
  "types-pyyaml>=6.0.12.20250915",
  "uv-bump",
]
doc = [
  "mkdocs>=1.6.1",
  "mkdocs-git-revision-date-localized-plugin>=1.4.5",
  "mkdocs-material[imaging]>=9.6.9",
  "mkdocs-minify-plugin>=0.8.0",
  "mkdocstrings[python]>=0.29.0",
]

[tool.uv.build-backend]
module-root = ""

[tool.uv.workspace]
members = [ ".", "comparative-benchmarks" ]

[tool.uv.sources]
uv-bump = { git = "https://github.com/Goldziher/uv-bump" }

[tool.ruff]
target-version = "py310"
line-length = 120
src = [ "kreuzberg", "tests" ]
format.docstring-code-line-length = 120
format.docstring-code-format = true
lint.select = [ "ALL" ]
lint.ignore = [
  "ANN401",  # Dynamically typed ANY for kwargs
  "COM812",  # Conflicts with formatter
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D107",    # Missing docstring in __init__
  "D205",    # 1 blank line required between summary line and description
  "E501",    # Line too long, handled by ruff format
  "EM",      # Exception messages,
  "FBT",     # Boolean-typed positional argument in function definition
  "FIX",     # We allow todo and fixme comments
  "ISC001",  # Conflicts with formatter
  "PLR2004", # Magic value used in comparison
  "PLW0603", # Using global statement is discouraged
  "S110",    # try-except-pass detected
  "S603",    # subprocess-without-shell-equals-true
  "TD",      # We allow todo and fixme comments
  "TRY",     # Try except block, rules are too strict
]
lint.per-file-ignores."**/tests/**/*.*" = [
  "A005",    # Module shadows standard library
  "ANN",     # Disable all annotation rules for tests
  "ARG001",
  "ARG002",  # Unused method argument
  "BLE001",  # Disable blind exception catching for tests
  "D",
  "N806",    # Variable naming in tests
  "N815",
  "PD",
  "PGH003",
  "PLC",     # Disable all PLC rules for tests
  "PLR0915",
  "PLR2004",
  "PT006",
  "PT007",
  "PT013",
  "PT017",   # Assertion on exception in except block
  "PT031",   # pytest.warns block should contain single statement
  "RUF012",
  "S",
  "SIM117",  # Combine with statements
  "SLF001",
]
lint.per-file-ignores."benchmarks/**/*.*" = [
  "BLE001",  # Allow broad exception catching in benchmarks
  "C901",    # Allow complex functions in benchmarks
  "D",
  "PERF203",
  "PLC0415", # Allow imports not at top level for conditional/lazy loading
  "PLR0912", # Allow many branches in benchmarks
  "PLR0915", # Allow many statements in benchmarks
  "S101",
  "SLF001",
]
lint.per-file-ignores."tests/e2e/*_test.py" = [
  "T201", # print statements are needed for test output
]
lint.isort.known-first-party = [ "kreuzberg", "tests" ]
lint.mccabe.max-complexity = 15
lint.pydocstyle.convention = "google"
lint.pylint.max-args = 10
lint.pylint.max-branches = 15
lint.pylint.max-returns = 10

[tool.codespell]
ignore-words-list = "addin,inh,te,tha,vie,mis,ment,bu,ned"
skip = "kreuzberg/_token_reduction/stopwords/*"

[tool.pyproject-fmt]
keep_full_version = true
max_supported_python = "3.13"

[tool.pytest.ini_options]
timeout = 300
testpaths = [ "tests" ]
norecursedirs = [
  "dist",
  "build",
  "*.egg",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
filterwarnings = [
  "ignore:Exception ignored in:pytest.PytestUnraisableExceptionWarning",
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
  "ignore:ast.Num is deprecated and will be removed in Python 3.14:DeprecationWarning",
  "ignore:datetime.datetime.utcfromtimestamp() is deprecated:DeprecationWarning",
  "ignore:Deprecated call to `pkg_resources.declare_namespace('google')`:DeprecationWarning",
]

[tool.coverage.run]
branch = true
omit = [
  "tests/*",
  "scripts/*",
  "benchmarks/*",
]
plugins = [ "covdefaults" ]
source = [ "kreuzberg" ]

[tool.coverage.report]
fail_under = 85
exclude_lines = [
  'if TYPE_CHECKING:',
  "except ImportError:",
  "pragma: no cover",
  "if sys.version_info",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "def __repr__",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[tool.mypy]
packages = [ "kreuzberg", "tests" ]
exclude = [ "comparative-benchmarks" ]
python_version = "3.10"
implicit_reexport = false
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = [
  "easyocr",
  "paddleocr",
  "deep_translator",
  "pypdfium2",
  "chardetng_py",
  "fast_langdetect",
  "mailparse",
  "keybert",
  "html_to_markdown._html_to_markdown",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "scripts.*"
ignore_missing_imports = true
disallow_untyped_calls = false

[project]
name = "kagura-ai"
version = "2.3.0"
description = "Python-First AI Agent Framework with Code Execution"
authors = [
    { name = "JFK", email = "fumikazu.kiyota@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "pydantic>=2.10",
    "click>=8.1",
    "litellm>=1.0",
    "jinja2>=3.1",
    "rich>=13.0",
    "python-dotenv>=1.0",
    "prompt-toolkit>=3.0.52",
    "pygments>=2.19.2",
    "python-frontmatter>=1.0.0",
]

[project.scripts]
kagura = "kagura.cli.main:cli"

[project.entry-points.pytest11]
kagura_testing = "kagura.testing.plugin"

[project.optional-dependencies]
dev = [
    "pytest>=8.3",
    "pytest-asyncio>=0.25",
    "pytest-cov>=6.0",
    "pytest-timeout>=2.3",
    "ruff>=0.8",
    "pyright>=1.1",
]
docs = [
    "mkdocs>=1.6",
    "mkdocs-material>=9.5",
    "pymdown-extensions>=10.0",
]
mcp = [
    "mcp>=1.0.0",
    "jsonschema>=4.20.0",
]
routing = [
    "semantic-router>=0.1.11",
]
memory = [
    "chromadb>=0.4.0",
]
multimodal = [
    "google-generativeai>=0.8.0",
    "pillow>=10.0.0",
    "proto-plus<2.0.0dev",
    "protobuf>=4.25.0,<6.0.0",
]
testing = [
    "langdetect>=1.0.9",
]
web = [
    "httpx>=0.25.0",
    "duckduckgo-search>=4.1.0",
    "beautifulsoup4>=4.12.0",
]

[build-system]
requires = ["setuptools>=42.0.0,<69.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["kagura*"]

[tool.pyright]
include = ["src/kagura", "tests"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []
per-file-ignores = { "__init__.py" = ["F401"] }

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
# Exclude legacy test directories
norecursedirs = [".*", "build", "dist", "*_legacy"]
asyncio_default_fixture_loop_scope = "function"
markers = [
    "integration: Integration tests (deselect with '-m \"not integration\"')",
    "unit: Unit tests",
    "slow: Slow tests",
    "agent: Agent tests (for agent-specific testing)",
    "benchmark: Performance benchmarks",
]

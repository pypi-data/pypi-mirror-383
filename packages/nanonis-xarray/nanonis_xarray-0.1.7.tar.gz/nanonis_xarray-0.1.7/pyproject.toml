[project]
name = "nanonis-xarray"
description = "Read a Nanonis spectroscopy .dat file into a xarray Dataset"
authors = [{ name = "Angelo Peronio" }]
license = "MIT"
keywords = [
    "Nanonis",
    "Mimea",
    "SPECS",
    "xarray",
    "Scanning Tunnelling Microscopy",
    "STM",
    "Inelastic Electron Tunnelling Spectroscopy",
    "STM-IETS",
    "Scanning Tunnelling Spectroscopy",
    "STS",
    "Scanning Probe Spectroscopy",
    "SPS",
    "Atomic Force Microscopy",
    "AFM",
]
dynamic = ["version"]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    # Wait for NumPy and pandas to publish their compiled wheels
    # for a new Python version before supporting it.
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: File Formats",
    "Topic :: Scientific/Engineering :: Physics",
    "Typing :: Typed",
]
# Scientific Python recommendation on versions to support:
# <https://scientific-python.org/specs/spec-0000/>
requires-python = ">= 3.11"
# Before attempting stunts here, consider the fragile logic
# for oldest_deps in noxfile.py.
dependencies = ["numpy >= 2.0.0", "xarray >= 2024.3.0", "pint-xarray >= 0.5"]

[dependency-groups]
dev = [
    "bump-my-version",
    "cffconvert",
    "mypy",
    "pre-commit-uv",
    "nox",
    "ruff",
    { include-group = "test" },
    { include-group = "docs" },
]
test = ["pytest", "pytest-cov"]
docs = ["ipykernel", "ipympl", "seaborn"]

[project.urls]
Repository = "https://github.com/angelo-peronio/nanonis-xarray"
Issues = "https://github.com/angelo-peronio/nanonis-xarray/issues"

[project.entry-points."xarray.backends"]
nanonis_dat = "nanonis_xarray.nanonis_dat_backend_entrypoint:NanonisDatBackendEntrypoint"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch]
build.targets.sdist.exclude = ["/.**", "/scripts", "development.md", "uv.lock"]
version.source = "vcs"

[tool.hatch.version.raw-options]
# Version tag pattern: v[major].[minor].[patch]
# https://setuptools-scm.readthedocs.io/en/latest/config/#setuptools_scm._config.DEFAULT_TAG_REGEX
# Single quote --> literal string, https://toml.io/en/v1.0.0#string
tag_regex = '^(?P<version>v?\d+\.\d+\.\d+)$'
# To be able to publish dev versions to TestPyPI.
# https://github.com/ofek/hatch-vcs/discussions/12
local_scheme = "no-local-version"

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--doctest-glob=README.md",
    "--import-mode=importlib",
    "--strict-config",
    "--strict-markers",
]
filterwarnings = ["error"]
log_cli_level = "DEBUG"
minversion = "7"
testpaths = ["README.md", "tests"]
xfail_strict = true

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
    "ANN",    # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "RET504", # https://docs.astral.sh/ruff/rules/unnecessary-assign/
]
extend-per-file-ignores."tests/*.py" = [
    "S101",    # https://docs.astral.sh/ruff/rules/assert/
    "PLR2004", # https://docs.astral.sh/ruff/rules/magic-value-comparison/
]
pydocstyle.convention = "numpy"

[tool.mypy]
files = ["src", "tests", "noxfile.py"]
strict = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.bumpversion]
tag = true
tag_name = "v{new_version}"
tag_message = "Version v{new_version}"
commit = true

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = 'version: {current_version}'
replace = 'version: {new_version}'

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = 'date-released: "\d{{4}}-\d{{2}}-\d{{2}}"'
replace = 'date-released: "{utcnow:%Y-%m-%d}"'
regex = true

Metadata-Version: 2.4
Name: database_wrapper_redis
Version: 0.2.9
Summary: database_wrapper for Redis database
Author-email: Gints Murans <gm@gm.lv>
License: GNU General Public License v3.0 (GPL-3.0)
Project-URL: Homepage, https://github.com/gintsmurans/py_database_wrapper
Project-URL: Documentation, https://github.com/gintsmurans/py_database_wrapper
Project-URL: Changes, https://github.com/gintsmurans/py_database_wrapper
Project-URL: Code, https://github.com/gintsmurans/py_database_wrapper
Project-URL: Issue Tracker, https://github.com/gintsmurans/py_database_wrapper/issues
Project-URL: Download, https://pypi.org/project/database_wrapper/
Keywords: database,wrapper,python,redis
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Database
Classifier: Topic :: Database :: Front-Ends
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: database_wrapper==0.2.9
Requires-Dist: redis

# database_wrapper_redis

_Part of the `database_wrapper` package._

This python package is a database wrapper for [Redis](https://redis.io/).

## Installation

```bash
pip install database_wrapper[redis]
```

## Usage

```python
from database_wrapper_redis import RedisDBWithPoolAsync, RedisDB

db = RedisDBWithPoolAsync({
    "hostname": "localhost",
    "port": 3306,
    "username": "root",
    "password": "your_password",
    "database": 0
})
await db.open()
try:
    async with db as redis_con:
        await redis_con.set("key", "value")
        value = await redis_con.get("key")
        print(value)  # Output: b'value'

finally:
    await db.close()
```

### Notes
No wrapper at this time, as redis is just a key-value store.

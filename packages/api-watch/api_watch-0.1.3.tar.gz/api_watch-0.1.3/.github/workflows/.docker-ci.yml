name: Docker CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for version determination

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Determine version
        id: versioning
        run: |
          # Get current date in YY.MM.DD format
          YEAR=$(date +%y)   # 2-digit year (25 for 2025)
          MONTH=$(date +%m)  # 2-digit month (06 for June)
          DAY=$(date +%d)    # 2-digit day (05 for 5th)
          
          BASE_VERSION="v${YEAR}.${MONTH}.${DAY}"
          
          # Check if a tag with today's date already exists
          EXISTING_TAGS=$(git tag -l "${BASE_VERSION}*" | sort -V)
          
          if [ -z "$EXISTING_TAGS" ]; then
            # No tag for today, use base version
            NEW_VERSION="$BASE_VERSION"
          else
            # Tags exist for today, find the highest increment
            LATEST_TODAY=$(echo "$EXISTING_TAGS" | tail -n 1)
            
            # Check if it has an increment (e.g., v25.06.05.2)
            if [[ "$LATEST_TODAY" =~ ^v[0-9]{2}\.[0-9]{2}\.[0-9]{2}\.([0-9]+)$ ]]; then
              # Extract the increment number and add 1
              INCREMENT=$(echo "$LATEST_TODAY" | sed 's/.*\.\([0-9]\+\)$/\1/')
              INCREMENT=$((INCREMENT + 1))
              NEW_VERSION="${BASE_VERSION}.${INCREMENT}"
            else
              # First increment for today
              NEW_VERSION="${BASE_VERSION}.2"
            fi
          fi
          
          echo "New version: $NEW_VERSION"
          echo "Existing tags for today: $EXISTING_TAGS"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKER_REGISTRY }}/${{ github.event.repository.name }}:${{ steps.versioning.outputs.version }}
          
      # - name: Create Git tag
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git tag -a ${{ steps.versioning.outputs.version }} -m "Release ${{ steps.versioning.outputs.version }} - $(date '+%Y-%m-%d %H:%M:%S')"
      #     git push origin ${{ steps.versioning.outputs.version }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

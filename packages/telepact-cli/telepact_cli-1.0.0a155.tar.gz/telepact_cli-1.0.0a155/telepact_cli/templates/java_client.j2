package {{ package }};

import io.github.telepact.Message;
import io.github.telepact.Client;
import java.util.Map;

public class ClientInterface_ {

    private final Client client;

    public ClientInterface_(Client client) {
        this.client = client;
    }

    {%- for fn in functions %}
    {%- set function_name = fn | replace('fn.', '') %}
    public TypedMessage_<{{ function_name }}.Output> {{ function_name }}(Map<String, Object> headers, {{ function_name }}.Input input) {
        var message = this.client.request(new Message(headers, input.pseudoJson));
        return new TypedMessage_<>(message.headers, new {{ function_name }}.Output(message.body));
    }
    {%- endfor %}
}
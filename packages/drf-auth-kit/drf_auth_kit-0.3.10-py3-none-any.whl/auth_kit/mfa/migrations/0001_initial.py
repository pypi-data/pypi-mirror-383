# Generated by Django 5.2.3 on 2025-07-04 11:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MFAMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("secret", models.CharField(max_length=255, verbose_name="secret")),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="is primary"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="is active"),
                ),
                (
                    "_backup_codes",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="backup codes"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mfa_methods",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "MFA Method",
                "verbose_name_plural": "MFA Methods",
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"], name="user_is_active_idx"
                    ),
                    models.Index(
                        fields=["user", "is_primary"], name="user_is_primary_idx"
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("user", "name"), name="unique_user_method_name"
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("is_primary", True)),
                        fields=("user",),
                        name="unique_user_is_primary",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(("is_primary", True), ("is_active", True)),
                            ("is_primary", False),
                            _connector="OR",
                        ),
                        name="primary_is_active",
                    ),
                ],
            },
        ),
    ]

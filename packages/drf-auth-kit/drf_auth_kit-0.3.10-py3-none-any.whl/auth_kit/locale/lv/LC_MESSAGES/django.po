# Latvian translation for DRF Auth Kit
# Copyright (C) 2025 DRF Auth Kit Contributors
# This file is distributed under the same license as the DRF Auth Kit package.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DRF Auth Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-09 09:49+0000\n"
"PO-Revision-Date: 2025-07-08 06:02+0000\n"
"Last-Translator: DRF Auth Kit Team\n"
"Language-Team: Latvian\n"
"Language: lv\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : "
"2);\n"

#: auth_kit/api_descriptions.py:29
msgid ""
"Returns user details along with JWT access and refresh tokens with "
"expiration times."
msgstr ""
"Atgriež lietotāja datus kopā ar JWT piekļuves un atjaunošanas žetoniem ar "
"beigu termiņiem."

#: auth_kit/api_descriptions.py:33
msgid ""
"Returns user details along with a DRF authentication token for API access."
msgstr ""
"Atgriež lietotāja datus kopā ar DRF autentifikācijas žetonu API piekļuvei."

#: auth_kit/api_descriptions.py:36
msgid "Returns user details along with custom authentication tokens."
msgstr "Atgriež lietotāja datus kopā ar pielāgotiem autentifikācijas žetoniem."

#: auth_kit/api_descriptions.py:42
msgid "JWT access and refresh tokens"
msgstr "JWT piekļuves un atjaunošanas žetoni"

#: auth_kit/api_descriptions.py:44
msgid "DRF authentication token"
msgstr "DRF autentifikācijas žetons"

#: auth_kit/api_descriptions.py:46
msgid "custom authentication tokens"
msgstr "pielāgoti autentifikācijas žetoni"

#: auth_kit/api_descriptions.py:53
msgid "Authentication cookies are set automatically for secure token storage."
msgstr ""
"Autentifikācijas sīkdatnes tiek iestatītas automātiski drošai žetonu "
"glabāšanai."

#: auth_kit/api_descriptions.py:61
msgid "Blacklists JWT refresh tokens to prevent further use."
msgstr ""
"Iekļauj JWT atjaunošanas žetonus melnajā sarakstā, lai novērstu turpmāku "
"izmantošanu."

#: auth_kit/api_descriptions.py:63
msgid "Deletes the DRF authentication token from the database."
msgstr "Dzēš DRF autentifikācijas žetonu no datu bāzes."

#: auth_kit/api_descriptions.py:65
msgid "Invalidates custom authentication tokens."
msgstr "Padara nederīgus pielāgotos autentifikācijas žetonus."

#: auth_kit/api_descriptions.py:71
msgid "Clears authentication cookies from the browser."
msgstr "Notīra autentifikācijas sīkdatnes no pārlūkprogrammas."

#: auth_kit/api_descriptions.py:77
msgid "Authenticate with username/email and password to obtain access tokens."
msgstr ""
"Autentificēties ar lietotājvārdu/e-pastu un paroli, lai iegūtu piekļuves "
"žetonus."

#: auth_kit/api_descriptions.py:89
msgid "Logout user and invalidate authentication tokens."
msgstr "Atteikt lietotāju un paddarīt nederīgus autentifikācijas žetonus."

#: auth_kit/api_descriptions.py:93
msgid ""
"Requires authentication to ensure only valid sessions can be logged out."
msgstr ""
"Nepieciešama autentifikācija, lai nodrošinātu, ka tikai derīgās sesijas var "
"tikt atteiktas."

#: auth_kit/api_descriptions.py:104
msgid "Generate new JWT access tokens using refresh tokens."
msgstr "Ģenerēt jaunus JWT piekļuves žetonus, izmantojot atjaunošanas žetonus."

#: auth_kit/api_descriptions.py:108
msgid ""
"Refresh tokens can be provided in request data or extracted automatically "
"from HTTP cookies."
msgstr ""
"Atjaunošanas žetoni var tikt nodrošināti pieprasījuma datos vai automātiski "
"izvilkti no HTTP sīkdatnēm."

#: auth_kit/api_descriptions.py:110 auth_kit/api_descriptions.py:120
msgid "Returns new access tokens with updated expiration times."
msgstr "Atgriež jaunus piekļuves žetonus ar atjaunotiem beigu termiņiem."

#: auth_kit/api_descriptions.py:112
msgid "New tokens are automatically set in HTTP cookies for secure storage."
msgstr ""
"Jauni žetoni tiek automātiski iestatīti HTTP sīkdatnēs drošai glabāšanai."

#: auth_kit/api_descriptions.py:119
msgid "Refresh tokens must be provided in the request data."
msgstr "Atjaunošanas žetoni jānodrošina pieprasījuma datos."

#: auth_kit/api_descriptions.py:127
msgid "Register a new user account."
msgstr "Reģistrēt jaunu lietotāja kontu."

#: auth_kit/api_descriptions.py:134
msgid ""
"Users must verify their email address before the account is fully activated."
msgstr ""
"Lietotājiem ir jāapstiprina sava e-pasta adrese, pirms konts tiek pilnībā "
"aktivizēts."

#: auth_kit/api_descriptions.py:143
msgid ""
"Send password reset instructions to the provided email address. If the email "
"is registered, a secure reset link will be sent. The link expires after a "
"limited time for security."
msgstr ""
"Sūtīt paroles atiestatīšanas instrukcijas uz norādīto e-pasta adresi. Ja e-"
"pasts ir reģistrēts, tiks nosūtīta droša atiestatīšanas saite. Saite beidzas "
"pēc ierobežota laika drošības nolūkos."

#: auth_kit/api_descriptions.py:149
msgid ""
"Complete the password reset process using the token from the reset email. "
"Requires the UID and token from the email along with the new password. The "
"token is single-use and expires for security."
msgstr ""
"Pabeigt paroles atiestatīšanas procesu, izmantojot žetonu no atiestatīšanas "
"e-pasta. Nepieciešams UID un žetons no e-pasta kopā ar jauno paroli. Žetons "
"ir vienreizējs un beidzas drošības nolūkos."

#: auth_kit/api_descriptions.py:155
msgid "Change the current user's password. Requires authentication. "
msgstr "Mainīt pašreizējā lietotāja paroli. Nepieciešama autentifikācija. "

#: auth_kit/api_descriptions.py:159
msgid ""
"Confirm email address using the verification key sent via email. This "
"activates the user account and allows login access."
msgstr ""
"Apstiprināt e-pasta adresi, izmantojot verifikācijas atslēgu, kas nosūtīta "
"pa e-pastu. Tas aktivizē lietotāja kontu un ļauj pieteikties."

#: auth_kit/api_descriptions.py:164
msgid ""
"Send a new email verification message to unverified email addresses. Only "
"works for email addresses that are registered but not yet verified."
msgstr ""
"Sūtīt jaunu e-pasta verifikācijas ziņojumu uz neapstiprinātām e-pasta "
"adresēm. Darbojas tikai e-pasta adresēm, kas ir reģistrētas, bet vēl nav "
"apstiprinātas."

#: auth_kit/api_descriptions.py:169
msgid ""
"Retrieve the authenticated user's profile information including username, "
"email, first name, and last name. Password fields are excluded."
msgstr ""
"Iegūt autentificētā lietotāja profila informāciju, ieskaitot lietotājvārdu, "
"e-pastu, vārdu un uzvārdu. Paroles lauki nav iekļauti."

#: auth_kit/api_descriptions.py:174
msgid ""
"Update the authenticated user's profile information. Allows modification of "
"username, first name, and last name. Email field is read-only for security."
msgstr ""
"Atjaunot autentificētā lietotāja profila informāciju. Ļauj modificēt "
"lietotājvārdu, vārdu un uzvārdu. E-pasta lauks ir tikai lasāms drošības "
"nolūkos."

#: auth_kit/api_descriptions.py:180
msgid ""
"Partially update the authenticated user's profile information. Only provided "
"fields will be updated. Email field is read-only."
msgstr ""
"Daļēji atjaunot autentificētā lietotāja profila informāciju. Tikai norādītie "
"lauki tiks atjaunoti. E-pasta lauks ir tikai lasāms."

#: auth_kit/forms.py:78
msgid "The email address is not assigned to any user account."
msgstr "E-pasta adrese nav piešķirta nevienam lietotāja kontam."

#: auth_kit/mfa/exceptions.py:27
msgid "Requested MFA method does not exist."
msgstr "Pieprasītā MFA metode neeksistē."

#: auth_kit/mfa/handlers/email.py:29
msgid "Email message with MFA code has been sent."
msgstr "E-pasta ziņojums ar MFA kodu ir nosūtīts."

#: auth_kit/mfa/mfa_api_descriptions.py:28
#, python-format
msgid "MFA code expires in %(seconds)s seconds."
msgstr "MFA kods beidzas pēc %(seconds)s sekundēm."

#: auth_kit/mfa/mfa_api_descriptions.py:36
msgid ""
"First step of MFA-enabled authentication. Validates credentials and "
"initiates MFA flow."
msgstr ""
"Pirmais MFA-iespējotās autentifikācijas solis. Validē akreditācijas datus un "
"uzsāk MFA plūsmu."

#: auth_kit/mfa/mfa_api_descriptions.py:41
#, python-format
msgid ""
"Returns ephemeral token for MFA verification or complete %(auth_tokens)s if "
"MFA is disabled."
msgstr ""
"Atgriež īslaicīgu žetonu MFA verifikācijai vai pilnu %(auth_tokens)s, ja MFA "
"ir atspējots."

#: auth_kit/mfa/mfa_api_descriptions.py:51
msgid ""
"Complete MFA authentication using verification code and ephemeral token."
msgstr ""
"Pabeigt MFA autentifikāciju, izmantojot verifikācijas kodu un īslaicīgu "
"žetonu."

#: auth_kit/mfa/mfa_api_descriptions.py:56
msgid "Supports both TOTP codes and backup codes for verification."
msgstr "Atbalsta gan TOTP kodus, gan rezerves kodus verifikācijai."

#: auth_kit/mfa/mfa_api_descriptions.py:68
msgid "Switch to a different MFA method during authentication flow."
msgstr "Pārslēgties uz citu MFA metodi autentifikācijas plūsmas laikā."

#: auth_kit/mfa/mfa_api_descriptions.py:70
msgid "Requires valid ephemeral token from first step authentication."
msgstr "Nepieciešams derīgs īslaicīgs žetons no pirmā soļa autentifikācijas."

#: auth_kit/mfa/mfa_api_descriptions.py:72
#: auth_kit/mfa/mfa_api_descriptions.py:87
#, python-format
msgid "New ephemeral token expires in %(seconds)s seconds."
msgstr "Jaunais īslaicīgais žetons beidzas pēc %(seconds)s sekundēm."

#: auth_kit/mfa/mfa_api_descriptions.py:81
msgid "Resend MFA verification code using existing ephemeral token."
msgstr ""
"Atkārtoti nosūtīt MFA verifikācijas kodu, izmantojot esošu īslaicīgu žetonu."

#: auth_kit/mfa/mfa_api_descriptions.py:84
msgid "Only applicable for methods that require code dispatch (e.g., email)."
msgstr ""
"Attiecas tikai uz metodēm, kas prasa koda nosūtīšanu (piemēram, e-pasts)."

#: auth_kit/mfa/mfa_api_descriptions.py:96
msgid ""
"List all available MFA methods with their setup and activation status. Shows "
"which methods are configured, active, and set as primary."
msgstr ""
"Saraksts ar visām pieejamām MFA metodēm ar to iestatīšanas un aktivizēšanas "
"statusu. Rāda, kuras metodes ir konfigurētas, aktīvas un iestatītas kā "
"primārās."

#: auth_kit/mfa/mfa_api_descriptions.py:101
msgid ""
"Initialize a new MFA method setup. Creates the method with backup codes and "
"returns setup instructions (e.g., QR code for authenticator apps). Method "
"must be confirmed before activation."
msgstr ""
"Inicializēt jaunu MFA metodes iestatīšanu. Izveido metodi ar rezerves kodiem "
"un atgriež iestatīšanas instrukcijas (piemēram, QR kodu autentificētāju "
"lietotnēm). Metode jāapstiprina pirms aktivizēšanas."

#: auth_kit/mfa/mfa_api_descriptions.py:107
msgid ""
"Confirm and activate a newly created MFA method using verification code. "
"Automatically sets as primary method if no other primary method exists. "
"Required before the method can be used for authentication."
msgstr ""
"Apstiprināt un aktivizēt jaunu MFA metodi, izmantojot verifikācijas kodu. "
"Automātiski iestata kā primāro metodi, ja neeksistē cita primārā metode. "
"Nepieciešams pirms metodes var izmantot autentifikācijai."

#: auth_kit/mfa/mfa_api_descriptions.py:113
msgid ""
"Deactivate an active MFA method. Requires verification code from the method "
"itself. Cannot deactivate primary methods - set another method as primary "
"first."
msgstr ""
"Deaktivizēt aktīvu MFA metodi. Nepieciešams verifikācijas kods no pašas "
"metodes. Nevar deaktivizēt primārās metodes - vispirms iestatiet citu metodi "
"kā primāro."

#: auth_kit/mfa/mfa_api_descriptions.py:121
msgid ""
"Set an active MFA method as the primary authentication method. Primary "
"method is used by default during login flow."
msgstr ""
"Iestatīt aktīvu MFA metodi kā primāro autentifikācijas metodi. Primārā "
"metode tiek izmantota pēc noklusējuma pieteikšanās plūsmas laikā."

#: auth_kit/mfa/mfa_api_descriptions.py:125
msgid "Only one method can be primary at a time."
msgstr "Tikai viena metode var būt primārā vienlaicīgi."

#: auth_kit/mfa/mfa_api_descriptions.py:128
msgid "Requires verification code from current primary method."
msgstr "Nepieciešams verifikācijas kods no pašreizējās primārās metodes."

#: auth_kit/mfa/mfa_api_descriptions.py:135
msgid ""
"Send verification code for methods that support code dispatch. Useful for "
"testing method configuration or manual code requests."
msgstr ""
"Sūtīt verifikācijas kodu metodēm, kas atbalsta koda nosūtīšanu. Noderīgi "
"metodes konfigurācijas testēšanai vai manuāliem koda pieprasījumiem."

#: auth_kit/mfa/mfa_api_descriptions.py:142
msgid "Permanently delete an MFA method."
msgstr "Neatgriezeniski dzēst MFA metodi."

#: auth_kit/mfa/mfa_api_descriptions.py:143
msgid "This action cannot be undone."
msgstr "Šo darbību nevar atsaukt."

#: auth_kit/mfa/mfa_api_descriptions.py:148
msgid "Cannot delete active methods."
msgstr "Nevar dzēst aktīvas metodes."

#: auth_kit/mfa/mfa_api_descriptions.py:151
msgid "Cannot delete primary methods."
msgstr "Nevar dzēst primārās metodes."

#: auth_kit/mfa/mfa_api_descriptions.py:154
msgid "Requires verification code for active methods."
msgstr "Nepieciešams verifikācijas kods aktīvām metodēm."

#: auth_kit/mfa/models.py:149
msgid "user"
msgstr "lietotājs"

#: auth_kit/mfa/models.py:151
msgid "User who owns this MFA method"
msgstr "Lietotājs, kuram pieder šī MFA metode"

#: auth_kit/mfa/models.py:154
msgid "name"
msgstr "nosaukums"

#: auth_kit/mfa/models.py:156
msgid "MFA method name (e.g., 'app', 'email')"
msgstr "MFA metodes nosaukums (piem., 'app', 'email')"

#: auth_kit/mfa/models.py:159
msgid "secret"
msgstr "noslēpums"

#: auth_kit/mfa/models.py:161
msgid "TOTP secret key for generating verification codes"
msgstr "TOTP slepenais atslēga verifīkācijas kodu ģenerēšanai"

#: auth_kit/mfa/models.py:164
msgid "is primary"
msgstr "ir primārs"

#: auth_kit/mfa/models.py:166
msgid "Whether this is the user's primary MFA method"
msgstr "Vai šī ir lietotāja primārā MFA metode"

#: auth_kit/mfa/models.py:169
msgid "is active"
msgstr "ir aktīvs"

#: auth_kit/mfa/models.py:171
msgid "Whether this method is active and can be used"
msgstr "Vai šī metode ir aktīva un var tikt izmantota"

#: auth_kit/mfa/models.py:174
msgid "backup codes"
msgstr "rezerves kodi"

#: auth_kit/mfa/models.py:177
msgid "JSON field storing backup codes for account recovery"
msgstr "JSON lauks, kas glabā rezerves kodus konta atjaunošanai"

#: auth_kit/mfa/models.py:183
msgid "MFA Method"
msgstr "MFA metode"

#: auth_kit/mfa/models.py:184
msgid "MFA Methods"
msgstr "MFA metodes"

#: auth_kit/mfa/serializers/login_factors.py:153
msgid "Invalid code"
msgstr "Nederīgs kods"

#: auth_kit/mfa/serializers/login_factors.py:172
#: auth_kit/mfa/serializers/login_factors.py:226
#: auth_kit/mfa/serializers/login_factors.py:272
msgid "Invalid token"
msgstr "Nederīgs žetons"

#: auth_kit/mfa/serializers/login_factors.py:230
msgid "Please select a new method"
msgstr "Lūdzu, izvēlieties jaunu metodi"

#: auth_kit/mfa/serializers/mfa.py:76
msgid "This method is already exists"
msgstr "Šī metode jau eksistē"

#: auth_kit/mfa/serializers/mfa.py:145 auth_kit/mfa/serializers/mfa.py:200
#: auth_kit/mfa/serializers/mfa.py:345
msgid "Invalid OTP code"
msgstr "Nederīgs OTP kods"

#: auth_kit/mfa/serializers/mfa.py:155
msgid "Activated MFA method"
msgstr "Aktivizēta MFA metode"

#: auth_kit/mfa/serializers/mfa.py:194
msgid "You can only deactivate non-primary MFA method."
msgstr "Jūs varat deaktivizēt tikai ne-primāro MFA metodi."

#: auth_kit/mfa/serializers/mfa.py:206
msgid "Deactivated MFA method"
msgstr "Deaktivizēta MFA metode"

#: auth_kit/mfa/serializers/mfa.py:262
msgid "Invalid primary method code"
msgstr "Nederīgs primārās metodes kods"

#: auth_kit/mfa/serializers/mfa.py:275
msgid "Updated primary MFA method"
msgstr "Atjaunota primārā MFA metode"

#: auth_kit/mfa/serializers/mfa.py:330
msgid "Cannot delete active MFA method"
msgstr "Nevar dzēst aktīvu MFA metodi"

#: auth_kit/mfa/serializers/mfa.py:336
msgid "Cannot delete primary MFA method"
msgstr "Nevar dzēst primāro MFA metodi"

#: auth_kit/mfa/serializers/mfa.py:350
msgid "Method does not exist"
msgstr "Metode neeksistē"

#: auth_kit/mfa/serializers/mfa.py:352
msgid "Deleted MFA method"
msgstr "Dzēsta MFA metode"

#: auth_kit/mfa/serializers/mfa.py:392
msgid "MFA code sent"
msgstr "MFA kods nosūtīts"

#: auth_kit/serializers/jwt.py:33
msgid "Will override cookie."
msgstr "Pārrakstīs sīkdatni."

#: auth_kit/serializers/jwt.py:70
msgid "No valid refresh token found."
msgstr "Nav atrasts derīgs atjaunošanas žetons."

#: auth_kit/serializers/login_factors.py:124
msgid "E-mail is not verified."
msgstr "E-pasts nav apstiprināts."

#: auth_kit/serializers/login_factors.py:146
msgid "Unable to log in with provided credentials."
msgstr "Nevar pieteikties ar norādītajiem akreditācijas datiem."

#: auth_kit/serializers/password.py:137 auth_kit/serializers/password.py:140
msgid "Invalid value"
msgstr "Nederīga vērtība"

#: auth_kit/serializers/password.py:222
msgid "Your old password was entered incorrectly. Please enter it again."
msgstr "Jūsu vecā parole tika ievadīta nepareizi. Lūdzu, ievadiet to vēlreiz."

#: auth_kit/serializers/registration.py:98
msgid "A user is already registered with this e-mail address."
msgstr "Lietotājs jau ir reģistrēts ar šo e-pasta adresi."

#: auth_kit/serializers/registration.py:129
msgid "The two password fields didn't match."
msgstr "Abi paroles lauki neatbilst."

#: auth_kit/social/serializers/connect.py:55
msgid "Social account email must match your current account email."
msgstr "Sociālā konta e-pastam jāatbilst jūsu pašreizējā konta e-pastam."

#: auth_kit/social/serializers/connect.py:98
msgid "Connected"
msgstr "Savienots"

#: auth_kit/social/serializers/login.py:82
msgid "Failed to complete OAuth flow"
msgstr "Neizdevās pabeigt OAuth plūsmu"

#: auth_kit/social/serializers/login.py:117
msgid "User is already registered with this e-mail address."
msgstr "Lietotājs jau ir reģistrēts ar šo e-pasta adresi."

#: auth_kit/social/serializers/login.py:296
msgid "Failed to exchange code for access token"
msgstr "Neizdevās apmainīt kodu pret piekļuves žetonu"

#: auth_kit/social/social_api_descriptions.py:31
#, python-format
msgid ""
"Authenticate with %(provider)s using OAuth2/OpenID Connect authorization "
"code to obtain access tokens."
msgstr ""
"Autentificēties ar %(provider)s, izmantojot OAuth2/OpenID Connect "
"autorizācijas kodu, lai iegūtu piekļuves žetonus."

#: auth_kit/social/social_api_descriptions.py:53
#, python-format
msgid ""
"Connect a %(provider)s account to the current user's account. This allows "
"the user to login using their existing %(provider)s account in the future."
msgstr ""
"Savienot %(provider)s kontu ar pašreizējā lietotāja kontu. Tas ļauj "
"lietotājam turpmāk pieteikties, izmantojot savu esošo %(provider)s kontu."

#: auth_kit/social/social_api_descriptions.py:58
#, python-format
msgid ""
"Requires authentication and a valid OAuth2/OpenID Connect authorization code "
"from %(provider)s."
msgstr ""
"Nepieciešama autentifikācija un derīgs OAuth2/OpenID Connect autorizācijas "
"kods no %(provider)s."

#: auth_kit/social/social_api_descriptions.py:62
#, python-format
msgid ""
"On success, the %(provider)s account is linked and can be used for future "
"logins."
msgstr ""
"Veiksmīgas darbības gadījumā %(provider)s konts tiek saistīts un to var "
"izmantot turpmākajām pieteikšanās reizēm."

#: auth_kit/social/social_api_descriptions.py:85
msgid ""
"List all social accounts connected to the current user. Shows account "
"details including provider, UID, and connection dates."
msgstr ""
"Uzskaita visus sociālos kontus, kas savienoti ar pašreizējo lietotāju. Rāda "
"konta detaļas, ieskaitot nodrošinātāju, UID un savienojuma datumus."

#: auth_kit/social/social_api_descriptions.py:90
msgid ""
"Disconnect a social account from the current user. Removes the social "
"account connection and prevents future logins via that provider. Requires "
"authentication and the account must belong to the current user."
msgstr ""
"Atvienot sociālo kontu no pašreizējā lietotāja. Noņem sociālā konta "
"savienojumu un novērš turpmāko pieteikšanos caur šo nodrošinātāju. "
"Nepieciešama autentifikācija un kontam jāpieder pašreizējam lietotājam."

#: auth_kit/social/views/login.py:58
msgid "adapter_class is not defined"
msgstr "adapter_class nav definēts"

#: auth_kit/views/logout.py:111
msgid "Refresh token was not included in cookie data."
msgstr "Atjaunošanas žetons nebija iekļauts sīkdatņu datos."

#: auth_kit/views/logout.py:121
msgid "Refresh token was not included in request data."
msgstr "Atjaunošanas žetons nebija iekļauts pieprasījuma datos."

#: auth_kit/views/logout.py:132
msgid "An error has occurred."
msgstr "Radusies kļūda."

#: auth_kit/views/logout.py:149
msgid "Successfully logged out."
msgstr "Sekmīgi atteikts."

#: auth_kit/views/password.py:64
msgid "Password reset e-mail has been sent."
msgstr "Paroles atiestatīšanas e-pasts ir nosūtīts."

#: auth_kit/views/password.py:111
msgid "Password has been reset with the new password."
msgstr "Parole ir atiestatīta ar jauno paroli."

#: auth_kit/views/password.py:156
msgid "New password has been saved."
msgstr "Jaunā parole ir saglabāta."

#: auth_kit/views/registration.py:143
msgid "Verification e-mail sent."
msgstr "Verifikācijas e-pasts nosūtīts."

#: auth_kit/views/registration.py:144
msgid "Successfully registered."
msgstr "Sekmīgi reģistrēts."

#: auth_kit/views/registration.py:224 auth_kit/views/registration.py:269
msgid "ok"
msgstr "labi"

#: sandbox_extras/custom_username/accounts/admin.py:11
#: sandbox_extras/email_user/accounts/admin.py:11
msgid "Personal info"
msgstr "Personīgā informācija"

#: sandbox_extras/custom_username/accounts/admin.py:13
#: sandbox_extras/email_user/accounts/admin.py:13
msgid "Permissions"
msgstr "Atļaujas"

#: sandbox_extras/custom_username/accounts/admin.py:24
#: sandbox_extras/email_user/accounts/admin.py:24
msgid "Important dates"
msgstr "Svarīgi datumi"

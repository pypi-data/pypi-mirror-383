[project]
name = "fileglancer-central"
version = "1.0.0"
readme = "README.md"
authors = [
    { name = "Allison Truhlar", email = "truhlara@janelia.hhmi.org" },
    { name = "Jody Clements", email = "clementsj@janelia.hhmi.org" },
    { name = "Cristian Goina", email = "goinac@janelia.hhmi.org" },
    { name = "Konrad Rokicki", email = "rokickik@janelia.hhmi.org" }
]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.12"
dependencies = [
    "fastapi >=0.115",
    "uvicorn >=0.34",
    "sqlalchemy >=2.0",
    "aiosqlite >=0.21.0",
    "alembic >=1.13.0",
    "pandas >=2.2.3",
    "pydantic >=2.10",
    "pydantic-settings >=2.8",
    "pydantic-settings[yaml]",
    "loguru >=0.7.2",
    "atlassian-python-api >=3.41",
    "lxml >=5.3.1",
    "x2s3 >=0.9.1",
    "psycopg2-binary >=2.9.9,<3",
    "cachetools >=5.0.0"
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-html",
    "httpx >=0.28"
]
release = [
    "build",
    "twine"
]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.setuptools.package-data]
fileglancer_central = ["alembic.ini", "alembic/**/*"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "osx-64", "linux-64"]

[tool.pixi.tasks]
dev-install = "pip install -e ."
dev-launch = "pixi run uvicorn fileglancer_central.app:app --port 7878 --reload"
dev-launch-remote = "pixi run uvicorn fileglancer_central.app:app --host 0.0.0.0 --port 7878 --reload --ssl-keyfile /opt/certs/cert.key --ssl-certfile /opt/certs/cert.crt"
migrate = "alembic upgrade head"
migrate-create = "alembic revision --autogenerate"
stamp-db = "python -m fileglancer_central.stamp_db"

[tool.pixi.feature.test.tasks]
test-install = "pip install -e ."
test = { cmd = "pytest", depends-on = ["test-install"] }

[tool.pixi.feature.release.tasks]
pypi-build = "python -m build"
pypi-upload = "twine upload dist/*"

[tool.pixi.environments]
default = {features = [], solve-group = "default"}
test = {features = ["test"], solve-group = "default"}
release = {features = ["release"], solve-group = "default"}

[tool.pixi.dependencies]
python = "3.12.*"
pip = ">=25.0.1,<26"
ipykernel = "*"

[tool.poetry]
name = "boulder-opal"
version = "5.0.2"
description = "Boulder Opal Client"
license = "https://q-ctrl.com/terms"
authors = ["Q-CTRL <support@q-ctrl.com>"]
maintainers = ["Q-CTRL <support@q-ctrl.com>"]
readme = "README.md"
homepage = "https://q-ctrl.com"
documentation = "https://docs.q-ctrl.com/boulder-opal"
keywords = [
    "black opal",
    "boulder opal",
    "fire opal",
    "nisq",
    "open controls",
    "q control",
    "q ctrl",
    "q-control",
    "q-ctrl",
    "qcontrol",
    "qctrl",
    "quantum",
    "quantum algorithms",
    "quantum circuits",
    "quantum coding",
    "quantum coding software",
    "quantum computing",
    "quantum control",
    "quantum control software",
    "quantum control theory",
    "quantum engineering",
    "quantum error correction",
    "quantum firmware",
    "quantum fundamentals",
    "quantum sensing",
    "qubit",
    "qudit"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: System :: Distributed Computing"
]
packages = [
    { include = "boulderopal" },
]
include = ["boulderopal/py.typed"]

[tool.poetry.urls]
LinkedIn = "https://www.linkedin.com/company/q-ctrl/"
Facebook = "https://www.facebook.com/qctrl"
X = "https://x.com/qctrlHQ"
YouTube = "https://www.youtube.com/qctrl"
GitHub = "https://github.com/qctrl"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = 'Artifactory'
url = 'https://qctrl.jfrog.io/artifactory/api/pypi/qctrl/simple/'
priority = "supplemental"

[tool.poetry.dependencies]
python = ">=3.10, <3.13"
numpy = "^2.0.2"
pydantic = { version = ">=2.6.4,<2.12", source = "PyPI" }
rich = "^14.1.0"
typing-extensions = "^4.8.0"
qctrl-commons = { version = "^25.0.0", source = "PyPI" }
qctrl-workflow-client = { version = "^7.1.0", source = "PyPI" }

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
isort = "^5.12.0"
lemminflect = "^0.2.3"
mypy = "^1.6.1"
numpydoc = "^1.5.0"
pre-commit = "^3.4.0"
pylint = "^3.0.2"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
pytest-xdist = "^3.3.1"
sphinx = "5.3.0"
tomli = "^2.0.1"
types-requests= "^2.31.0"
boulder-opal-core = "^51.0.6"
qctrl-core-workflow-manager = "^4.0.0"
qctrl-client = "^13.1.0"
sphinx-markdown-builder = "^0.6.7"

[tool.isort]
profile = "black"
force_grid_wrap = "2"

[tool.mypy]
files = ["boulderopal/**/*.py", "tests/**/*.py"]
check_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_unused_ignores = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["tests/*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
addopts = "--cov=boulderopal --cov-fail-under=90 --cov-report=term-missing:skip-covered"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[build-system]
requires = ["hatchling", "hatch-nodejs-version", "hatch-deps-selector"]
build-backend = "hatchling.build"

[project]
name = "mystmd"
dynamic = ["version", "description", "authors", "urls", "keywords", "license"]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: JavaScript",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]

[project.optional-dependencies]
execute = [
  "ipykernel",
  "jupyter-server",
]

[project.scripts]
myst = "mystmd_py.main:main"

[tool.hatch.version]
source = "nodejs"
path = "_package.json"		

[tool.hatch.build.hooks.selector]
default-variant = "pypi"
# Name of the env-var that controls which `selector.variants` entry 
# is used
env-var = "MYSTMD_PACKAGE_VARIANT"

# Ensure that we only bring in nodeenv for PyPI
[tool.hatch.build.hooks.selector.variants.pypi]
dependencies = [
  "platformdirs~=4.2.2",
  "nodeenv~=1.9.1"
]

# Conda-forge has no additional dependencies to the `project.dependencies`
# This section is not needed (the env-var can be set to "")
# But this makes it more explicit
[tool.hatch.build.hooks.selector.variants.conda-forge]
dependencies = []

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors", "urls", "keywords", "license"]
path = "_package.json"

[tool.hatch.build.targets.sdist]
artifacts = [
    "/_package.json",
    "/src/mystmd_py/myst.cjs"
]

[tool.hatch.build.targets.wheel]
packages = ["src/mystmd_py"]
artifacts = [
    "/src/mystmd_py/myst.cjs"
]

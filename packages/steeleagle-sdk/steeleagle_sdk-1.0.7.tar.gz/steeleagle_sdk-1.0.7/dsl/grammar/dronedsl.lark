// ===== Top level =====
start: _NL* data_block? actions_block events_block? mission_block _NL*

// ===== Data =====
data_block: DATA COLON _NL data_section
data_section: (datum_decl | _NL)+
datum_decl: NAME NAME datum_body?
datum_body: LPAREN [attr (COMMA attr)*] RPAREN

// ===== Actions =====
actions_block: ACTIONS COLON _NL actions_section
actions_section: (action_decl | _NL)+
action_decl: NAME NAME action_body? _NL
action_body: LPAREN [attr (COMMA attr)*] RPAREN

// ===== Events =====
events_block: EVENTS COLON _NL events_section
events_section: (event_decl | _NL)+
event_decl: NAME NAME event_body? _NL
event_body: LPAREN [attr (COMMA attr)*] RPAREN

// ===== Mission =====
mission_block: MISSION COLON _NL mission_start during_block*
mission_start: START NAME _NL
during_block: DURING NAME COLON _NL transition_body
transition_body: (transition_rule | _NL)+
transition_rule: NAME ARROW NAME _NL

// ===== Attr =====
attr:    NAME (COLON|EQUAL) value
value: datum_inline
    | NUMBER 
    | NAME 
    | array
    | NONE

array: LBRACK [value (COMMA value)*] RBRACK
datum_inline: NAME LPAREN [datum_args] RPAREN
datum_args: value (COMMA value)*

// ===== Tokens =====
DATA : "Data"
ACTIONS : "Actions"
EVENTS : "Events"
MISSION : "Mission"
START : "Start"
DURING : "During"
LPAREN: "("
RPAREN: ")"
COMMA:  ","
COLON:  ":"
EQUAL:  "="
ARROW:  "->"
LBRACK: "["
RBRACK: "]"
NONE: "_"

%import common.NEWLINE        -> NL
%import common.SIGNED_NUMBER  -> NUMBER
%import common.WS_INLINE

NAME: /[A-Za-z_][A-Za-z0-9_]*/

// ===== Comments & whitespace =====
COMMENT: /#[^\n]*/
%ignore COMMENT
%ignore WS_INLINE
_NL: NL+

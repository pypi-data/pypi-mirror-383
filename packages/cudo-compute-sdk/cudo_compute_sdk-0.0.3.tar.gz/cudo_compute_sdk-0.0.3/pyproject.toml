[project]
name = "cudo-compute-sdk"
version = "0.0.3"
description = "The Python SDK for Cudo Compute distributed compute platform."
authors = [
    {name = "jamesbeedy", email = "james@vantagecompute.ai"}
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1",
    "pydantic>=2.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["cudo_compute_sdk"]
exclude = [
    "scripts",
    "docusaurus",
    "git-cliff-*",
    "justfile",
    "docs",
    "tests",
]

[tool.hatch.build.targets.sdist]
exclude = [
    ".gitignore",
    ".github",
    "scripts",
    "docusaurus",
    "git-cliff-*",
    "justfile",
    "docs",
    "tests",
]

[tool.hatch.metadata]
allow-direct-references = true

[project.optional-dependencies]
dev = [
    # Linting
    "black",
    "ruff",
    "codespell",
    "pyright",
    # Testing
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "coverage[toml] ~= 7.8",

]


[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.coverage.paths]
source = ["cudo_compute_sdk"]

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
filterwarnings = [
    "ignore::DeprecationWarning:juju.client.connection",
    "ignore::DeprecationWarning:websockets.legacy",
]

# Spell checking tools configuration
[tool.codespell]
skip = ".venv,venv,icon.svg,.tox,.git,.mypy_cache,.ruff_cache,.pytest_cache,.vscode,.coverage,.venv,cover"
ignore-words-list = "aks"

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py312"]

# Linting tools configuration
[tool.ruff]
line-length = 99
lint.select = ["E", "W", "F", "C", "N", "D", "I001"]
lint.extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]
lint.ignore = ["E501", "D107"]
lint.per-file-ignores = { "**/tests/*" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
] }
extend-exclude = ["__pycache__", "*.egg_info"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest-cov>=7.0.0",
]

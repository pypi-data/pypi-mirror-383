[project]
name = "XER_Technologies_metadata_extractor"
version = "0.6.1"
description = "Internal data extraction utilities"
authors = [{ name = "Jakob Wiren", email = "jakob.wiren@xer-tech.com" }]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "pandas>=2.0.0",
    "scipy>=1.11.0",
    "boto3>=1.34.0",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.290",
    "types-boto3>=1.0.2",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["XER_Technologies_metadata_extractor*"]

[tool.setuptools.package-dir]
"" = "src"
"XER_Technologies_metadata_extractor.postprocessing" = "src/XER_Technologies_metadata_extractor/postprocessing"

[tool.setuptools.package-data]
"XER_Technologies_metadata_extractor" = ["DA120/*.csv", "reference_data/*.csv"]

[tool.setuptools.exclude-package-data]      
"XER_Technologies_metadata_extractor" = ["tests/*"]

[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E203", "E501"]

[tool.ruff.lint.isort]
known-first-party = ["XER_Technologies_metadata_extractor"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=XER_Technologies_metadata_extractor --cov-report=term-missing --cov-report=html"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .graphqlbulkjobretrievalresponse import (
    GraphQLBulkJobRetrievalResponse,
    GraphQLBulkJobRetrievalResponseTypedDict,
)
from .httpmetadata import HTTPMetadata, HTTPMetadataTypedDict
import pydantic
from ttd_workflows.types import BaseModel
from ttd_workflows.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetGraphQlBulkJobStatusRequestTypedDict(TypedDict):
    id: str


class GetGraphQlBulkJobStatusRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class GetGraphQlBulkJobStatusResponseTypedDict(TypedDict):
    http_meta: HTTPMetadataTypedDict
    graph_ql_bulk_job_retrieval_response: NotRequired[
        GraphQLBulkJobRetrievalResponseTypedDict
    ]
    r"""OK"""


class GetGraphQlBulkJobStatusResponse(BaseModel):
    http_meta: Annotated[Optional[HTTPMetadata], pydantic.Field(exclude=True)] = None

    graph_ql_bulk_job_retrieval_response: Optional[GraphQLBulkJobRetrievalResponse] = (
        None
    )
    r"""OK"""

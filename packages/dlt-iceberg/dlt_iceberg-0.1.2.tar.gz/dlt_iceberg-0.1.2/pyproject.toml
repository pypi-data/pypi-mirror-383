[project]
name = "dlt-iceberg"
version = "0.1.2"
description = "dlt destination for Apache Iceberg with atomic multi-file commits via REST catalogs"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Sidequery", email = "hello@sidequery.com"}
]
keywords = ["dlt", "iceberg", "data-engineering", "etl", "elt", "data-pipeline"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "boto3>=1.40.50",
    "dlt>=1.17.1",
    "pandas>=2.3.3",
    "pyarrow>=21.0.0",
    "pydantic<2.11",
    "pyiceberg[pyiceberg-core]>=0.10.0",
    "requests>=2.32.5",
    "s3fs>=0.4.2",
    "sqlalchemy>=2.0.44",
]

[project.urls]
Homepage = "https://github.com/sidequery/dlt-iceberg"
Repository = "https://github.com/sidequery/dlt-iceberg"
Issues = "https://github.com/sidequery/dlt-iceberg/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/dlt_iceberg"]

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-mock>=3.15.1",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests that require external services (docker compose)",
]
